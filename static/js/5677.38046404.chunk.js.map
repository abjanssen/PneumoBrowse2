{"version":3,"file":"static/js/5677.38046404.chunk.js","mappings":"qMASA,MAsBA,GAtB0CA,EAAAA,EAAAA,WAAS,UAAU,MAC3DC,IASA,MAAM,YAAEC,GAAgBD,GAClB,SAAEE,EAAQ,SAAEC,GAAaC,gBAAgBH,GAC/C,OACEI,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAC,SAAA,EACJC,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAAST,KAC5CM,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CAACC,MAAM,YAAYC,QAASR,KAC5CK,EAAAA,EAAAA,KAACI,EAAAA,eAAc,CAACF,MAAM,uBAAuBC,QAAST,KACtDM,EAAAA,EAAAA,KAACI,EAAAA,eAAc,CAACF,MAAM,uBAAuBC,QAASR,MAG5D,G","sources":["../../../plugins/breakpoint-split-view/src/BreakpointAlignmentsFeatureDetail/BreakpointAlignmentsFeatureDetail.tsx"],"sourcesContent":["import {\n  BaseAttributes,\n  BaseCoreDetails,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nconst BreakpointAlignmentsFeatureDetail = observer(function ({\n  model,\n}: {\n  model: {\n    featureData: {\n      feature1: SimpleFeatureSerialized\n      feature2: SimpleFeatureSerialized\n    }\n  }\n}) {\n  const { featureData } = model\n  const { feature1, feature2 } = structuredClone(featureData)\n  return (\n    <Paper>\n      <BaseCoreDetails title=\"Feature 1\" feature={feature1} />\n      <BaseCoreDetails title=\"Feature 2\" feature={feature2} />\n      <BaseAttributes title=\"Feature 1 attributes\" feature={feature1} />\n      <BaseAttributes title=\"Feature 2 attributes\" feature={feature2} />\n    </Paper>\n  )\n})\n\nexport default BreakpointAlignmentsFeatureDetail\n"],"names":["observer","model","featureData","feature1","feature2","structuredClone","_jsxs","Paper","children","_jsx","BaseCoreDetails","title","feature","BaseAttributes"],"sourceRoot":""}