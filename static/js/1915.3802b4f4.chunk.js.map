{"version":3,"file":"static/js/1915.3802b4f4.chunk.js","mappings":"4NAMA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCC,oBAAqB,CACnBC,QAASF,EAAMG,QAAQ,OAiC3B,GA7B4BC,EAAAA,EAAAA,UAAS,UAAU,YAC7CC,IAIA,MAAM,QAAEC,GAAYR,IAEpB,OACES,EAAAA,EAAAA,KAAA,OACEC,UAAWF,EAAQL,oBACnBQ,MAAO,CAAEC,OAAQL,EAAYM,8BAA+BC,UAE5DL,EAAAA,EAAAA,KAACM,EAAAA,EAAgB,CACfC,SACEP,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CACPC,QAASX,EAAYY,yCACrBC,SAAUC,IACRd,EAAYe,4CACVD,EAAEE,OAAOL,YAKjBM,MAAM,iCAId,GC/BMxB,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCuB,iBAAkB,CAChBC,WAAYxB,EAAMyB,QAAQC,OAAOC,SACjCC,MAAO,EACPC,UAAW,aACXC,UAAW,qBAEbC,kBAAmB,CACjBP,WAAYxB,EAAMyB,QAAQC,OAAOC,SACjCjB,OAAQ,EACRmB,UAAW,aACXC,UAAW,qBAEbE,aAAc,CACZC,OAAQ,GAEVC,eAAgB,CACdC,QAAS,QAEXC,UAAW,CACTC,SAAU,aAuDd,GAnDwBjC,EAAAA,EAAAA,UAAS,UAAU,MACzCkC,IAIA,MAAM,QAAEhC,GAAYR,KAEd,8BACJyC,EAA6B,2BAC7BC,EAA0B,iBAC1BC,GACEH,EAEJ,OACEI,EAAAA,EAAAA,MAAA,OAAKlC,UAAWF,EAAQ8B,UAAUxB,SAAA,EAChC8B,EAAAA,EAAAA,MAAA,OAAKlC,UAAWF,EAAQ4B,eAAetB,SAAA,EACrCL,EAAAA,EAAAA,KAAA,OACEE,MAAO,CACLmB,MAAOU,EAAMK,gBAAgBf,OAE/BpB,UAAWF,EAAQ8B,UAAUxB,UAE7BL,EAAAA,EAAAA,KAACgC,EAA6B,CAACD,MAAOA,EAAMK,oBAG7CF,GACCC,EAAAA,EAAAA,MAAAE,EAAAA,SAAA,CAAAhC,SAAA,EACEL,EAAAA,EAAAA,KAACsC,EAAAA,aAAY,CACXC,OAAQC,IACN,MAAMC,EAAOV,EAAMW,aAAaC,aAAaH,GAC7C,OAAOT,EAAMK,gBAAgBO,aAAaF,IAE5CG,UAAQ,EACRC,SAAO,EACP5C,UAAWF,EAAQiB,oBAErBmB,EAAAA,EAAAA,MAAA,OAAKjC,MAAO,CAAEmB,MAAOU,EAAMW,aAAarB,OAAQhB,SAAA,EAC9CL,EAAAA,EAAAA,KAAC8C,EAAmB,CAAChD,YAAaiC,KAClC/B,EAAAA,EAAAA,KAACiC,EAA0B,CAACF,MAAOA,EAAMW,qBAG3C,SAEN1C,EAAAA,EAAAA,KAACsC,EAAAA,aAAY,CACXC,OAAQR,EAAMgB,aACd9C,UAAWF,EAAQyB,sBAI3B,E","sources":["../../../plugins/sv-inspector/src/SvInspectorView/components/CircularViewOptions.tsx","../../../plugins/sv-inspector/src/SvInspectorView/components/SvInspectorView.tsx"],"sourcesContent":["import { Checkbox, FormControlLabel } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SvInspectorViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  circularViewOptions: {\n    padding: theme.spacing(1),\n  },\n}))\n\nconst CircularViewOptions = observer(function ({\n  svInspector,\n}: {\n  svInspector: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <div\n      className={classes.circularViewOptions}\n      style={{ height: svInspector.circularViewOptionsBarHeight }}\n    >\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={svInspector.onlyDisplayRelevantRegionsInCircularView}\n            onChange={e => {\n              svInspector.setOnlyDisplayRelevantRegionsInCircularView(\n                e.target.checked,\n              )\n            }}\n          />\n        }\n        label=\"show only regions with data\"\n      />\n    </div>\n  )\n})\n\nexport default CircularViewOptions\n","import { ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport CircularViewOptions from './CircularViewOptions'\n\nimport type { SvInspectorViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeHandleVert: {\n    background: theme.palette.action.selected,\n    width: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  resizeHandleHoriz: {\n    background: theme.palette.action.selected,\n    height: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  viewControls: {\n    margin: 0,\n  },\n  viewsContainer: {\n    display: 'flex',\n  },\n  container: {\n    overflow: 'hidden',\n  },\n}))\n\nconst SvInspectorView = observer(function ({\n  model,\n}: {\n  model: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  const {\n    SpreadsheetViewReactComponent,\n    CircularViewReactComponent,\n    showCircularView,\n  } = model\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.viewsContainer}>\n        <div\n          style={{\n            width: model.spreadsheetView.width,\n          }}\n          className={classes.container}\n        >\n          <SpreadsheetViewReactComponent model={model.spreadsheetView} />\n        </div>\n\n        {showCircularView ? (\n          <>\n            <ResizeHandle\n              onDrag={distance => {\n                const ret1 = model.circularView.resizeWidth(-distance)\n                return model.spreadsheetView.resizeWidth(-ret1)\n              }}\n              vertical\n              flexbox\n              className={classes.resizeHandleVert}\n            />\n            <div style={{ width: model.circularView.width }}>\n              <CircularViewOptions svInspector={model} />\n              <CircularViewReactComponent model={model.circularView} />\n            </div>\n          </>\n        ) : null}\n      </div>\n      <ResizeHandle\n        onDrag={model.resizeHeight}\n        className={classes.resizeHandleHoriz}\n      />\n    </div>\n  )\n})\n\nexport default SvInspectorView\n"],"names":["useStyles","makeStyles","theme","circularViewOptions","padding","spacing","observer","svInspector","classes","_jsx","className","style","height","circularViewOptionsBarHeight","children","FormControlLabel","control","Checkbox","checked","onlyDisplayRelevantRegionsInCircularView","onChange","e","setOnlyDisplayRelevantRegionsInCircularView","target","label","resizeHandleVert","background","palette","action","selected","width","boxSizing","borderTop","resizeHandleHoriz","viewControls","margin","viewsContainer","display","container","overflow","model","SpreadsheetViewReactComponent","CircularViewReactComponent","showCircularView","_jsxs","spreadsheetView","_Fragment","ResizeHandle","onDrag","distance","ret1","circularView","resizeWidth","vertical","flexbox","CircularViewOptions","resizeHeight"],"sourceRoot":""}