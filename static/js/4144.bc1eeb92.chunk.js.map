{"version":3,"file":"static/js/4144.bc1eeb92.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx"],"sourcesContent":["import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport Help from '@mui/icons-material/Help'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { LoadingEllipses } from '../../ui'\nimport { getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseFeatureWidgetModel } from '../stateModelFactory'\n\n// lazies\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\nconst HelpDialog = lazy(() => import('./dialogs/HelpDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = observer(function ({\n  model,\n  feature,\n}: {\n  model: BaseFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShown(!shown)\n          }}\n        >\n          {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n        </Button>\n      </FormControl>\n\n      <IconButton\n        onClick={() => {\n          getSession(model).queueDialog(handleClose => [\n            HelpDialog,\n            {\n              handleClose,\n            },\n          ])\n        }}\n      >\n        <Help />\n      </IconButton>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            key={feature.uniqueId}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default SequenceFeaturePanel\n","import { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { Divider, Typography } from '@mui/material'\n\nimport { generateTitle } from './util'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport Attributes from './Attributes'\nimport BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\nimport { ErrorMessage } from '../../ui'\nimport { getEnv, getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { Descriptors } from '../types'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport default function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Descriptors\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { maxDepth } = model\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  const m = mate as { start: number; end: number; refName: string } | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {m ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{\n              ...m,\n              start: m.start,\n              end: m.end,\n              refName: m.refName,\n              uniqueId: `${uniqueId}-mate`,\n            }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {depth < maxDepth && subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{\n                ...sub,\n                uniqueId: `${uniqueId}_${idx}`,\n              }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n"],"names":["Position","props","$","_c","feature","strand","strandMap","str","t0","assembleLocString","t1","_jsx","_Fragment","children","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","coreRenderedDetails","description","name","type","_jsxs","SimpleField","value","Object","entries","map","key","filter","_temp","_temp2","name_0","value_0","SequenceFeatureDetails","lazy","HelpDialog","useStyles","makeStyles","theme","formControl","margin","container","marginTop","spacing","marginBottom","observer","model","classes","shown","setShown","useState","className","FormControl","Button","variant","onClick","IconButton","getSession","queueDialog","handleClose","Help","Suspense","fallback","LoadingEllipses","uniqueId","coreDetails","FeatureDetails","omit","depth","t2","undefined","maxDepth","mate","t3","id","t4","t5","subfeatures","t6","pm","getEnv","pluginManager","session","evaluateExtensionPoint","ExtraPanel","m","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","generateTitle","Symbol","for","Typography","Divider","refName","Attributes","ErrorBoundary","FallbackComponent","BaseCard","title","Component","defaultExpanded","sub","idx","JSON","stringify","e","ErrorMessage","error","expansionPanelDetails","display","padding","icon","color","palette","tertiary","contrastText","ExpandMore","AccordionSummary","expandIcon","AccordionDetails","Accordion"],"sourceRoot":""}