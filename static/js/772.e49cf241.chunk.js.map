{"version":3,"file":"static/js/772.e49cf241.chunk.js","mappings":"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","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/dialogs/HighlightSettingsDialog.tsx","../../../node_modules/@mui/system/esm/Stack/createStack.js","../../../node_modules/@mui/material/esm/Stack/Stack.js"],"sourcesContent":["import { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Stack,\n  Switch,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { GridBookmarkModel } from '../../model'\n\nconst HighlightSettingsDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: GridBookmarkModel\n}) {\n  return (\n    <Dialog open onClose={onClose} title=\"Highlight bookmarks\">\n      <DialogContent>\n        <Typography variant=\"h6\">Highlight toggles</Typography>\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Switch\n            data-testid=\"toggle_highlight_all_switch\"\n            checked={model.areBookmarksHighlightedOnAllOpenViews}\n            onChange={() => {\n              model.setBookmarkHighlightsVisible(\n                !model.areBookmarksHighlightedOnAllOpenViews,\n              )\n            }}\n          />\n          <Typography>Toggle bookmark highlights on all open views</Typography>\n        </Stack>\n        <Stack direction=\"row\" alignItems=\"center\">\n          <Switch\n            data-testid=\"toggle_highlight_label_all_switch\"\n            checked={model.areBookmarksHighlightLabelsOnAllOpenViews}\n            onChange={() => {\n              model.setBookmarkLabelsVisible(\n                !model.areBookmarksHighlightLabelsOnAllOpenViews,\n              )\n            }}\n          />\n          <Typography>Toggle 'bookmark' icon on LGV tracks</Typography>\n        </Stack>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            onClose()\n          }}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default HighlightSettingsDialog\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;"],"names":["observer","onClose","model","_jsxs","Dialog","open","title","children","DialogContent","_jsx","Typography","variant","Stack","direction","alignItems","Switch","checked","areBookmarksHighlightedOnAllOpenViews","onChange","setBookmarkHighlightsVisible","areBookmarksHighlightLabelsOnAllOpenViews","setBookmarkLabelsVisible","DialogActions","Button","color","onClick","defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","useThemePropsDefault","props","useThemeProps","joinChildren","separator","childrenArray","toArray","filter","Boolean","reduce","output","child","index","push","length","key","style","ownerState","theme","styles","display","flexDirection","values","breakpoints","propValue","spacing","transformer","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","margin","row","column","deepmerge","options","createStyledComponent","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","classes","composeClasses","root","generateUtilityClass","as","clsx","createStack"],"sourceRoot":""}