{"version":3,"file":"static/js/4218.5372440c.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseAttributes.tsx","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/material/Badge/useBadge.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["import { isObject, max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name || id || ''}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  for (const elt of arr) {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  }\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2.Description === 'string'\n      ? obj2.Description\n      : undefined\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import { isValidElement } from 'react'\n\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SanitizedHTML } from '../../ui'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport Attributes from './Attributes'\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={`${JSON.stringify(val)}-${i}`}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, `${name}-${i}`]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={`${JSON.stringify(val)}-${i}`}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import { useState } from 'react'\n\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { makeStyles } from 'tss-react/mui'\n\nimport FieldName from './FieldName'\nimport { SanitizedHTML } from '../../ui'\nimport { getStr, measureGridWidth } from '../../util'\n\nimport type { GridColDef } from '@mui/x-data-grid'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    marginBottom: theme.spacing(4),\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]!).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const widths = colNames.map(e => measureGridWidth(rows.map(r => r[e])))\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <div className={classes.margin}>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => {\n                setChecked(event.target.checked)\n              }}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <DataGrid\n            disableRowSelectionOnClick\n            rows={rows}\n            rowHeight={20}\n            columnHeaderHeight={35}\n            hideFooter={rows.length < 25}\n            slots={{\n              toolbar: checked ? GridToolbar : null,\n            }}\n            slotProps={{\n              toolbar: {\n                printOptions: {\n                  disableToolbarButton: true,\n                },\n              },\n            }}\n            columns={colNames.map(\n              (val, index) =>\n                ({\n                  field: val,\n                  renderCell: params => {\n                    const value = params.value as string\n                    return (\n                      <div className={classes.cell}>\n                        <SanitizedHTML html={getStr(value || '')} />\n                      </div>\n                    )\n                  },\n                  width: widths[index],\n                }) satisfies GridColDef<(typeof rows)[0]>,\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href: string\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import ArrayValue from './ArrayValue'\nimport DataGridDetails from './DataGridDetails'\nimport SimpleField from './SimpleField'\nimport UriAttribute from './UriField'\nimport { accessNested, generateMaxWidth } from './util'\nimport { isObject, isUriLocation } from '../../util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                key={key}\n                {...rest}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","import { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    slots,\n    slotProps,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AccordionSummaryRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      focusRipple: false,\n      disableRipple: true,\n      disabled,\n      'aria-expanded': expanded,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onClick: event => {\n        handlers.onClick?.(event);\n        handleChange(event);\n      }\n    })\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AccordionSummaryContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ExpandIconWrapperSlot, expandIconWrapperSlotProps] = useSlot('expandIconWrapper', {\n    className: classes.expandIconWrapper,\n    elementType: AccordionSummaryExpandIconWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(ContentSlot, {\n      ...contentSlotProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(ExpandIconWrapperSlot, {\n      ...expandIconWrapperSlotProps,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    expandIconWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    content: PropTypes.elementType,\n    expandIconWrapper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import Attributes from './Attributes'\nimport BaseCard from './BaseCard'\n\nimport type { BaseCardProps, BaseProps } from '../types'\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nexport default function BaseAttributes(props: BaseProps) {\n  const { title = 'Attributes', feature } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["isEmpty","obj","Object","keys","length","generateTitle","name","id","type","ellipses","filter","f","join","generateMaxWidth","array","prefix","Math","ceil","max","map","key","measureText","accessNested","arr","obj2","elt","isObject","Description","undefined","d","ToolbarRoot","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","getAccordionSummaryUtilityClass","useStyles","makeStyles","fieldValue","wordBreak","maxHeight","fontSize","padding","overflow","BasicValue","value","isLink","exec","_jsx","children","isValidElement","Link","href","SanitizedHTML","html","JSON","stringify","String","field","flexWrap","SimpleField","description","width","_jsxs","FieldName","fieldSubvalue","border","palette","action","selected","boxSizing","ArrayValue","Attributes","attributes","every","val","_Fragment","i","margin","marginBottom","cell","whiteSpace","textOverflow","DataGridDetails","checked","setChecked","useState","sort","unionKeys","Set","rows","entries","k","rest","identifier","add","colNames","has","delete","widths","e","measureGridWidth","r","size","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","flexDirection","DataGrid","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","hideFooter","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","renderCell","params","getStr","UriField","uri","baseUri","URL","MAX_FIELD_NAME_WIDTH","globalOmit","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","v","Array","isArray","isUriLocation","UriAttribute","min","fieldDescription","background","mode","fieldName","minWidth","borderBottom","disabledBackground","marginRight","cx","Tooltip","title","placement","getBadgeUtilityClass","AccordionSummaryRoot","transition","duration","transitions","shortest","create","focusVisible","backgroundColor","vars","focus","disabled","opacity","disabledOpacity","cursor","expanded","AccordionSummaryContent","content","textAlign","flexGrow","AccordionSummaryExpandIconWrapper","expandIconWrapper","color","active","transform","expandIcon","focusVisibleClassName","onClick","toggle","A","externalForwardedProps","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","focusRipple","disableRipple","getSlotProps","handlers","handleChange","ContentSlot","contentSlotProps","ExpandIconWrapperSlot","expandIconWrapperSlotProps","AccordionDetailsRoot","BaseAttributes","feature","BaseCard","getAccordionDetailsUtilityClass","BadgeRoot","styled","verticalAlign","flexShrink","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","invisible","memoTheme","justifyContent","alignContent","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","easing","easeInOut","enteringScreen","createSimplePaletteValueFilter","main","contrastText","RADIUS_DOT","top","right","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","components","componentsProps","overlapProp","colorProp","invisibleProp","maxProp","badgeContent","badgeContentProp","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","composeClasses","Root","BadgeSlot","Badge","badgeSlotProps","rootProps","useSlotProps","externalSlotProps","clsx","badgeProps","expansionPanelDetails","icon","tertiary","defaultExpanded","Accordion","AccordionSummary","ExpandMore","AccordionDetails","getToolbarUtilityClass"],"sourceRoot":""}