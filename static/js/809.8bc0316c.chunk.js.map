{"version":3,"file":"static/js/809.8bc0316c.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/Toolbar/Toolbar.js","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetFilter.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedDataGrid.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.tsx","../../../node_modules/@mui/material/esm/Toolbar/toolbarClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { useState } from 'react'\n\nimport { coarseStripHTML } from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport {\n  FormControl,\n  IconButton,\n  Select,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// icon\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  facet: {\n    margin: 0,\n    marginLeft: theme.spacing(2),\n  },\n  select: {\n    marginBottom: theme.spacing(2),\n  },\n}))\n\nfunction ClearButton({ onClick }: { onClick: () => void }) {\n  return (\n    <Tooltip title=\"Clear selection on this facet filter\">\n      <IconButton\n        onClick={() => {\n          onClick()\n        }}\n        size=\"small\"\n      >\n        <ClearIcon />\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nfunction ExpandButton({\n  visible,\n  onClick,\n}: {\n  visible: boolean\n  onClick: () => void\n}) {\n  return (\n    <Tooltip title=\"Minimize/expand this facet filter\">\n      <IconButton\n        onClick={() => {\n          onClick()\n        }}\n        size=\"small\"\n      >\n        {visible ? <MinimizeIcon /> : <AddIcon />}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nconst FacetFilter = observer(function ({\n  column,\n  vals,\n  model,\n}: {\n  column: { field: string }\n  vals: [string, number][]\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const [visible, setVisible] = useState(true)\n  const { faceted } = model\n  const { filters } = faceted\n  const { field } = column\n  return (\n    <FormControl className={classes.facet} fullWidth>\n      <div>\n        <Typography component=\"span\">{field}</Typography>\n        <ClearButton\n          onClick={() => {\n            faceted.setFilter(field, [])\n          }}\n        />\n        <ExpandButton\n          visible={visible}\n          onClick={() => {\n            setVisible(!visible)\n          }}\n        />\n      </div>\n      {visible ? (\n        <Select\n          multiple\n          native\n          className={classes.select}\n          value={filters.get(column.field) || []}\n          onChange={event => {\n            faceted.setFilter(\n              column.field,\n              // @ts-expect-error\n              [...event.target.options]\n                .filter(opt => opt.selected)\n                .map(opt => opt.value),\n            )\n          }}\n        >\n          {vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (\n              <option key={name} value={name}>\n                {coarseStripHTML(name)} ({count})\n              </option>\n            ))}\n        </Select>\n      ) : null}\n    </FormControl>\n  )\n})\n\nexport default FacetFilter\n","import { observer } from 'mobx-react'\n\nimport FacetFilter from './FacetFilter'\nimport { getRowStr } from './util'\n\nimport type { Row } from './util'\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst FacetFilters = observer(function ({\n  rows,\n  columns,\n  model,\n}: {\n  rows: Row[]\n  columns: { field: string }[]\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { faceted } = model\n  const { filters } = faceted\n  const facets = columns.slice(1)\n  const facetFieldToCategoryCountMap = new Map(\n    columns.slice(1).map(f => [f.field, new Map<string, number>()] as const),\n  )\n\n  // 1. filterKeys: the title of the facets (right hand panel) that have been\n  // already filtered e.g. user clicked a facet on the right hand panel\n  const filterKeys = faceted.filters.keys()\n\n  // 2. facetKeys: the title of the facets (right hand panel), just the rest of\n  // them\n  const facetKeys = facets.map(f => f.field)\n\n  // these two loops add facet filters in the order that the user has selected\n  // them, which is the intuitive 'drilling down' behavior users want from\n  // faceted selections\n  const facetKeysPrioritizingUserSelections = new Set<string>()\n  for (const entry of filterKeys) {\n    // give non-empty filters priority\n    if (filters.get(entry)?.length) {\n      facetKeysPrioritizingUserSelections.add(entry)\n    }\n  }\n  for (const entry of facetKeys) {\n    facetKeysPrioritizingUserSelections.add(entry)\n  }\n\n  let currentRows = rows\n  for (const facetKey of facetKeysPrioritizingUserSelections) {\n    const categoryCountMap = facetFieldToCategoryCountMap.get(facetKey)\n    if (categoryCountMap) {\n      for (const row of currentRows) {\n        const key = getRowStr(facetKey, row)\n        const currentCount = categoryCountMap.get(key)\n        // we don't allow filtering on empty yet\n        if (key) {\n          if (currentCount === undefined) {\n            categoryCountMap.set(key, 1)\n          } else {\n            categoryCountMap.set(key, currentCount + 1)\n          }\n        }\n      }\n    }\n    const filter = filters.get(facetKey)?.length\n      ? new Set(filters.get(facetKey))\n      : undefined\n\n    currentRows = currentRows.filter(row =>\n      filter !== undefined ? filter.has(getRowStr(facetKey, row)) : true,\n    )\n  }\n\n  return (\n    <div>\n      {facets.map(c => (\n        <FacetFilter\n          key={c.field}\n          vals={[...facetFieldToCategoryCountMap.get(c.field)!]}\n          column={c}\n          model={model}\n        />\n      ))}\n    </div>\n  )\n})\nexport default FacetFilters\n","import { useState } from 'react'\n\nimport { getEnv, measureGridWidth } from '@jbrowse/core/util'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { GridColDef, GridRowId } from '@mui/x-data-grid'\n\nconst FacetedDataGrid = observer(function ({\n  model,\n  columns,\n  shownTrackIds,\n  selection,\n}: {\n  model: HierarchicalTrackSelectorModel\n  columns: GridColDef[]\n  shownTrackIds: Set<GridRowId>\n  selection: any[]\n}) {\n  const { pluginManager } = getEnv(model)\n  const { view, faceted } = model\n  const {\n    rows,\n    useShoppingCart,\n    showOptions,\n    filteredRows,\n    filteredNonMetadataKeys,\n    filteredMetadataKeys,\n    visible,\n  } = faceted\n\n  const [widths, setWidths] = useState<Record<string, number>>({\n    name:\n      measureGridWidth(\n        rows.map(r => r.name),\n        {\n          maxWidth: 500,\n          stripHTML: true,\n        },\n      ) + 15,\n    ...Object.fromEntries(\n      filteredNonMetadataKeys\n        .filter(f => visible[f])\n        .map(e => [\n          e,\n          measureGridWidth(\n            rows.map(r => r[e as keyof typeof r] as string),\n            {\n              maxWidth: 400,\n              stripHTML: true,\n            },\n          ),\n        ]),\n    ),\n    ...Object.fromEntries(\n      filteredMetadataKeys\n        .filter(f => visible[`metadata.${f}`])\n        .map(e => {\n          return [\n            `metadata.${e}`,\n            measureGridWidth(\n              rows.map(r => r.metadata[e]),\n              {\n                maxWidth: 400,\n                stripHTML: true,\n              },\n            ),\n          ]\n        }),\n    ),\n  })\n\n  return (\n    <DataGrid\n      rowHeight={25}\n      columnHeaderHeight={35}\n      checkboxSelection\n      keepNonExistentRowsSelected\n      rows={filteredRows}\n      columnVisibilityModel={visible}\n      showToolbar={showOptions}\n      onColumnWidthChange={arg => {\n        setWidths({\n          ...widths,\n          [arg.colDef.field]: arg.width,\n        })\n      }}\n      onColumnVisibilityModelChange={n => {\n        model.faceted.setVisible(n)\n      }}\n      onRowSelectionModelChange={userSelectedIds => {\n        if (!useShoppingCart) {\n          const a1 = shownTrackIds\n          const a2 = userSelectedIds.ids\n          // synchronize the user selection with the view\n          // see share https://stackoverflow.com/a/33034768/2129219\n          transaction(() => {\n            ;[...a1].filter(x => !a2.has(x)).map(t => view.hideTrack(t))\n            ;[...a2]\n              .filter(x => !a1.has(x))\n              .map(t => {\n                view.showTrack(t)\n                model.addToRecentlyUsed(t)\n              })\n          })\n        } else {\n          const root = getRoot(model)\n          const schema = pluginManager.pluggableConfigSchemaType('track')\n          model.setSelection(\n            [...userSelectedIds.ids].map(id =>\n              resolveIdentifier(schema, root, id),\n            ),\n          )\n        }\n      }}\n      rowSelectionModel={{\n        type: 'include',\n        ids: new Set(\n          useShoppingCart ? selection.map(s => s.trackId) : [...shownTrackIds],\n        ),\n      }}\n      columns={columns.map(\n        r =>\n          ({\n            ...r,\n            width: widths[r.field],\n          }) satisfies GridColDef<(typeof rows)[0]>,\n      )}\n    />\n  )\n})\n\nexport default FacetedDataGrid\n","import { useState } from 'react'\n\nimport { Menu } from '@jbrowse/core/ui'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material'\n\nimport ShoppingCart from '../ShoppingCart'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nexport default function FacetedHeader({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { faceted } = model\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  const { showOptions, showFilters, showSparse, useShoppingCart } = faceted\n\n  return (\n    <>\n      <Grid container spacing={4} alignItems=\"center\">\n        <TextField\n          label=\"Search...\"\n          value={faceted.filterText}\n          onChange={event => {\n            faceted.setFilterText(event.target.value)\n          }}\n          slotProps={{\n            input: {\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      faceted.setFilterText('')\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            },\n          }}\n        />\n        <IconButton\n          onClick={event => {\n            setAnchorEl(event.currentTarget)\n          }}\n        >\n          <MoreVert />\n        </IconButton>\n        <ShoppingCart model={model} />\n      </Grid>\n      <Menu\n        anchorEl={anchorEl}\n        open={!!anchorEl}\n        onClose={() => {\n          setAnchorEl(null)\n        }}\n        onMenuItemClick={(_event, callback) => {\n          callback()\n          setAnchorEl(null)\n        }}\n        menuItems={[\n          {\n            label: 'Add tracks to selection instead of turning them on/off',\n            onClick: () => {\n              faceted.setUseShoppingCart(!useShoppingCart)\n            },\n            type: 'checkbox',\n            checked: useShoppingCart,\n          },\n          {\n            label: 'Show sparse metadata columns',\n            onClick: () => {\n              faceted.setShowSparse(!showSparse)\n            },\n            checked: showSparse,\n            type: 'checkbox',\n          },\n          {\n            label: 'Show facet filters',\n            onClick: () => {\n              faceted.setShowFilters(!showFilters)\n            },\n            checked: showFilters,\n            type: 'checkbox',\n          },\n          {\n            label: 'Show extra table options',\n            onClick: () => {\n              faceted.setShowOptions(!showOptions)\n            },\n            checked: showOptions,\n            type: 'checkbox',\n          },\n        ]}\n      />\n    </>\n  )\n}\n","import { ResizeHandle } from '@jbrowse/core/ui'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport FacetFilters from './FacetFilters'\nimport FacetedDataGrid from './FacetedDataGrid'\nimport FacetedHeader from './FacetedHeader'\nimport TrackLabelMenu from '../tree/TrackLabelMenu'\n\nimport type { FacetedRow } from '../../facetedModel'\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { GridColDef } from '@mui/x-data-grid'\n\ntype T = GridColDef<FacetedRow>\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nconst useStyles = makeStyles()({\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  resizeHandle: {\n    marginLeft: 5,\n    background: 'grey',\n    width: 5,\n  },\n})\n\nconst frac = 0.75\n\nconst FacetedSelector = observer(function FacetedSelector({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { selection, shownTrackIds, faceted } = model\n  const {\n    rows,\n    panelWidth,\n    showFilters,\n    filteredNonMetadataKeys,\n    filteredMetadataKeys,\n  } = faceted\n\n  const columns: T[] = [\n    {\n      field: 'name',\n      hideable: false,\n      renderCell: params => {\n        const { value, row } = params\n        const { id, conf } = row\n        return (\n          <div className={classes.cell}>\n            <SanitizedHTML html={value as string} />\n            <TrackLabelMenu id={id} conf={conf} trackId={id} model={model} />\n          </div>\n        )\n      },\n    },\n    ...filteredNonMetadataKeys.map(e => {\n      return {\n        field: e,\n        renderCell: params => {\n          const val = params.value\n          return val ? (\n            <SanitizedHTML className={classes.cell} html={val} />\n          ) : (\n            ''\n          )\n        },\n      } satisfies T\n    }),\n    ...filteredMetadataKeys.map(e => {\n      return {\n        field: `metadata.${e}`,\n        headerName: ['name', ...filteredNonMetadataKeys].includes(e)\n          ? `${e} (from metadata)`\n          : e,\n        valueGetter: (_, row) => `${row.metadata[e] ?? ''}`,\n        renderCell: params => {\n          const val = params.value\n          return val ? (\n            <SanitizedHTML className={classes.cell} html={val} />\n          ) : (\n            ''\n          )\n        },\n      } satisfies T\n    }),\n  ]\n\n  return (\n    <>\n      <FacetedHeader model={model} />\n      <div\n        style={{\n          display: 'flex',\n          overflow: 'hidden',\n          height: window.innerHeight * frac,\n          width: window.innerWidth * frac,\n        }}\n      >\n        <div\n          style={{\n            height: window.innerHeight * frac,\n            width: window.innerWidth * frac - (showFilters ? panelWidth : 0),\n          }}\n        >\n          <FacetedDataGrid\n            model={model}\n            columns={columns}\n            shownTrackIds={shownTrackIds}\n            selection={selection}\n          />\n        </div>\n\n        {showFilters ? (\n          <>\n            <ResizeHandle\n              vertical\n              onDrag={dist => faceted.setPanelWidth(panelWidth - dist)}\n              className={classes.resizeHandle}\n            />\n            <div style={{ width: panelWidth, overflow: 'auto' }}>\n              <FacetFilters model={model} rows={rows} columns={columns} />\n            </div>\n          </>\n        ) : null}\n      </div>\n    </>\n  )\n})\n\nexport default FacetedSelector\n","import { Dialog } from '@jbrowse/core/ui'\nimport { DialogContent } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport FacetedSelector from './FacetedSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst FacetedTrackSelectorDialog = observer(function (props: {\n  handleClose: () => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { handleClose } = props\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"xl\"\n      title=\"Faceted track selector\"\n    >\n      <DialogContent>\n        <FacetedSelector {...props} />\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default FacetedTrackSelectorDialog\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["ToolbarRoot","name","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","useStyles","makeStyles","facet","margin","marginLeft","select","marginBottom","ClearButton","onClick","_jsx","Tooltip","title","children","IconButton","size","ClearIcon","ExpandButton","visible","MinimizeIcon","AddIcon","observer","column","vals","model","setVisible","useState","faceted","filters","field","_jsxs","FormControl","fullWidth","Typography","setFilter","Select","multiple","native","value","get","onChange","event","target","options","filter","opt","selected","map","sort","a","b","localeCompare","count","coarseStripHTML","rows","columns","facets","slice","facetFieldToCategoryCountMap","Map","f","filterKeys","keys","facetKeys","facetKeysPrioritizingUserSelections","Set","entry","length","add","currentRows","facetKey","categoryCountMap","row","key","getRowStr","currentCount","undefined","set","has","c","FacetFilter","shownTrackIds","selection","pluginManager","getEnv","view","useShoppingCart","showOptions","filteredRows","filteredNonMetadataKeys","filteredMetadataKeys","widths","setWidths","measureGridWidth","r","maxWidth","stripHTML","Object","fromEntries","e","metadata","DataGrid","rowHeight","columnHeaderHeight","checkboxSelection","keepNonExistentRowsSelected","columnVisibilityModel","showToolbar","onColumnWidthChange","arg","colDef","width","onColumnVisibilityModelChange","n","onRowSelectionModelChange","userSelectedIds","getRoot","schema","pluggableConfigSchemaType","setSelection","ids","id","resolveIdentifier","a1","a2","transaction","x","t","hideTrack","showTrack","addToRecentlyUsed","rowSelectionModel","type","s","trackId","FacetedHeader","anchorEl","setAnchorEl","showFilters","showSparse","_Fragment","Grid","container","TextField","label","filterText","setFilterText","slotProps","input","endAdornment","InputAdornment","currentTarget","MoreVert","ShoppingCart","Menu","open","onClose","onMenuItemClick","_event","callback","menuItems","setUseShoppingCart","checked","setShowSparse","setShowFilters","setShowOptions","cell","whiteSpace","overflow","textOverflow","resizeHandle","background","frac","panelWidth","hideable","renderCell","params","conf","SanitizedHTML","html","TrackLabelMenu","val","headerName","includes","valueGetter","_","height","window","innerHeight","innerWidth","FacetedDataGrid","ResizeHandle","vertical","onDrag","dist","setPanelWidth","FacetFilters","handleClose","Dialog","DialogContent","FacetedSelector","getToolbarUtilityClass"],"sourceRoot":""}