{"version":3,"file":"static/js/2249.7a401734.chunk.js","mappings":"iLAKe,MAAMA,UACXC,EAAAA,YAGR,uBAAMC,GACJ,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,4BAAZH,EAAIG,IACxB,MAAO,GAET,MAAMC,QAAgBC,EAAAA,EAAAA,cAAaL,EAAKC,KAAKK,eAAeC,SAAS,QAC/DC,EAAYP,KAAKC,QAAQ,iBACzBO,EAAsBR,KAAKC,QAAQ,2BACnCQ,EAAQN,EACXO,OACAC,MAAM,cACNC,OAAOC,KAAOA,GACXC,EAASL,EAAMG,OAAOC,GAAKA,EAAEE,WAAW,MACxCC,EACJR,GAAuBM,EAAOG,OAC1BH,EACGI,IAAI,GACJC,MAAM,GACNR,MAAM,MACNS,IAAIC,GAAKA,EAAEX,QACXY,QAAQd,GACXD,EACN,OAAOE,EACJG,OAAOC,IAAMA,EAAEE,WAAW,MAC1BK,IAAIG,IACH,MAAMC,EAAUD,EAAIZ,MAAM,MAE1B,MAAO,CACLc,QAFcD,EAAQR,GAGtBQ,QAASA,EAAQZ,OAAOC,KAAOA,EAAEH,UAGzC,E","sources":["../../../plugins/config/src/RefNameAliasAdapter/RefNameAliasAdapter.ts"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nimport type { BaseRefNameAliasAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport default class RefNameAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter\n{\n  async getRefNameAliases() {\n    const loc = this.getConf('location')\n    if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n      return []\n    }\n    const results = await openLocation(loc, this.pluginManager).readFile('utf8')\n    const refColumn = this.getConf('refNameColumn')\n    const refColumnHeaderName = this.getConf('refNameColumnHeaderName')\n    const lines = results\n      .trim()\n      .split(/\\n|\\r\\n|\\r/)\n      .filter(f => !!f)\n    const header = lines.filter(f => f.startsWith('#'))\n    const headerCol =\n      refColumnHeaderName && header.length\n        ? header\n            .at(-1)!\n            .slice(1)\n            .split('\\t')\n            .map(t => t.trim())\n            .indexOf(refColumnHeaderName)\n        : refColumn\n    return lines\n      .filter(f => !f.startsWith('#'))\n      .map(row => {\n        const aliases = row.split('\\t')\n        const refName = aliases[headerCol]\n        return {\n          refName: refName!,\n          aliases: aliases.filter(f => !!f.trim()),\n        }\n      })\n  }\n}\n"],"names":["RefNameAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","results","openLocation","pluginManager","readFile","refColumn","refColumnHeaderName","lines","trim","split","filter","f","header","startsWith","headerCol","length","at","slice","map","t","indexOf","row","aliases","refName"],"sourceRoot":""}