"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[5132],{51762:(e,t,a)=>{a.d(t,{b:()=>i,h:()=>r});var n=a(99546);function i(e,t){return t.tags?.[e]||t[e]}async function r(e,t){const a=(0,n.getSession)(t),{view:i}=t;try{if(!i)throw new Error("No view associated with this view anymore");await i.navToLocString(e)}catch(e){console.error(e),a.notify(`${e}`)}}},55132:(e,t,a)=>{a.r(t),a.d(t,{default:()=>k});var n=a(7552),i=a(84144),r=a(95054),o=a(68446),s=a(87083),l=a(32106),d=a(36866),c=a(7946),u=a(22762),m=a(75785),h=a(69500);const f=(0,m.n9)()({compact:{paddingRight:0,paddingTop:0,paddingBottom:0}}),p=["read paired","read mapped in proper pair","read unmapped","mate unmapped","read reverse strand","mate reverse strand","first in pair","second in pair","not primary alignment","read fails platform/vendor quality checks","read is PCR or optical duplicate","supplementary alignment"];function g(e){const{classes:t}=f(),{flags:a}=e;return(0,h.jsxs)(s.default,{...e,title:"Flags",children:[(0,h.jsx)(l.A,{name:"Flag",value:a}),(0,h.jsx)(d.A,{children:p.map(((e,n)=>{const i=a&1<<n,r=`${e}_${i}`;return(0,h.jsx)(c.A,{control:(0,h.jsx)(u.A,{className:t.compact,checked:Boolean(i),name:e,readOnly:!0}),label:e},r)}))})]})}var b=a(31409),y=a.n(b);function C({value:e}){const[t,a]=(0,n.useState)(!1),[i,r]=(0,n.useState)(!1),o=String(e);return o.length>100?(0,h.jsxs)(h.Fragment,{children:[(0,h.jsx)("button",{type:"button",onClick:()=>{y()(o),r(!0),setTimeout((()=>{r(!1)}),700)},children:i?"Copied to clipboard":"Copy"}),(0,h.jsx)("button",{type:"button",onClick:()=>{a((e=>!e))},children:t?"Show less":"Show more"}),(0,h.jsx)("div",{children:t?o:`${o.slice(0,100)}...`})]}):(0,h.jsx)("div",{children:o})}var x=a(65895),v=a(51762);function w({locString:e,model:t}){return(0,h.jsx)(x.A,{onClick:a=>{a.preventDefault(),(0,v.h)(e,t)},href:"#",children:e})}const q={AM:"The smallest template-independent mapping quality in the template",AS:"Alignment score generated by aligner",BC:"Barcode sequence identifying the sample",BQ:"Offset to base alignment quality (BAQ)",BZ:"Phred quality of the unique molecular barcode bases in the {OX} tag",CB:"Cell identifier",CC:"Reference name of the next hit",CM:"Edit distance between the color sequence and the color reference (see also {NM})",CO:"Free-text comments",CP:"Leftmost coordinate of the next hit",CQ:"Color read base qualities",CR:"Cellular barcode sequence bases (uncorrected)",CS:"Color read sequence",CT:"Complete read annotation tag, used for consensus annotation dummy features",CY:"Phred quality of the cellular barcode sequence in the {CR} tag",E2:"The 2nd most likely base calls",FI:"The index of segment in the template",FS:"Segment suffix",FZ:"Flow stopToken intensities",GC:"Reserved for backwards compatibility reasons",GQ:"Reserved for backwards compatibility reasons",GS:"Reserved for backwards compatibility reasons",H0:"Number of perfect hits",H1:"Number of 1-difference hits (see also {NM})",H2:"Number of 2-difference hits",HI:"Query hit index",IH:"Query hit total count",LB:"Library",MC:"CIGAR string for mate/next segment",MD:"String encoding mismatched and deleted reference bases",MF:"Reserved for backwards compatibility reasons",MI:"Molecular identifier; a string that uniquely identifies the molecule from which the record was derived",ML:"Base modification probabilities",MM:"Base modifications / methylation ",MQ:"Mapping quality of the mate/next segment",NH:"Number of reported alignments that contain the query in the current record",NM:"Edit distance to the reference",OA:"Original alignment",OC:"Original CIGAR (deprecated; use {OA} instead)",OP:"Original mapping position (deprecated; use {OA} instead)",OQ:"Original base quality",OX:"Original unique molecular barcode bases",PG:"Program",PQ:"Phred likelihood of the template",PT:"Read annotations for parts of the padded read sequence",PU:"Platform unit",Q2:"Phred quality of the mate/next segment sequence in the {R2} tag",QT:"Phred quality of the sample barcode sequence in the {BC} tag",QX:"Quality score of the unique molecular identifier in the {RX} tag",R2:"Sequence of the mate/next segment in the template",RG:"Read group",RT:"Reserved for backwards compatibility reasons",RX:"Sequence bases of the (possibly corrected) unique molecular identifier",S2:"Reserved for backwards compatibility reasons",SA:"Other canonical alignments in a chimeric alignment",SM:"Template-independent mapping quality",SQ:"Reserved for backwards compatibility reasons",TC:"The number of segments in the template",TS:"Transcript strand",U2:"Phred probability of the 2nd call being wrong conditional on the best being wrong",UQ:"Phred likelihood of the segment, conditional on the mapping being correct"},S=(0,n.lazy)((()=>a.e(5736).then(a.bind(a,15736)))),j=(0,n.lazy)((()=>a.e(9114).then(a.bind(a,9114)))),R=(0,o.observer)((function(e){const{model:t,feat:a}=e,n=a.flags,o=(0,v.b)("SA",a);return(0,h.jsxs)(r.A,{"data-testid":"alignment-side-drawer",children:[(0,h.jsx)(i.default,{...e,descriptions:{tags:q},feature:a,formatter:(e,a)=>"next_segment_position"===a?(0,h.jsx)(w,{model:t,locString:e}):(0,h.jsx)(C,{value:e})}),void 0!==o?(0,h.jsx)(S,{model:t,tag:o,feature:a}):null,null!=n?(0,h.jsxs)(h.Fragment,{children:[1&n?(0,h.jsx)(j,{model:t,feature:a}):null,(0,h.jsx)(g,{flags:n,...e})]}):null]})})),k=(0,o.observer)((function(e){const{model:t}=e,{featureData:a}=t,n=structuredClone(a);return n?(0,h.jsx)(R,{feat:n,...e}):(0,h.jsx)("div",{children:"No feature loaded, may not be available after page refresh because it was too large for localStorage"})}))}}]);
//# sourceMappingURL=5132.3464db08.chunk.js.map