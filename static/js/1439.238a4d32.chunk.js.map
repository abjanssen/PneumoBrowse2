{"version":3,"file":"static/js/1439.238a4d32.chunk.js","mappings":"4NAkBO,SAASA,EAA6BC,IAW3CC,EAAAA,EAAAA,aACED,GACAE,EAAAA,EAAAA,UAAQC,UACN,IACE,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,YAAWL,IAC5B,cAAEM,GAAkBN,EACpBO,GAAYC,EAAAA,EAAAA,iBAAgBR,GAC5BS,GAAOC,EAAAA,EAAAA,mBAAkBV,GAC/B,IAAKS,EAAKE,YACR,OAEF,MAAMC,QAAiBR,EAAWS,KAChCN,EACA,wBACA,CACEO,QAASL,EAAKM,aAAaC,cAC3BT,YACAD,mBAGAW,EAAAA,EAAAA,SAAQjB,IACVA,EAAKkB,WAAWN,EAEpB,CAAE,MAAOO,KACFC,EAAAA,EAAAA,kBAAiBD,KAAMF,EAAAA,EAAAA,SAAQjB,KAClCqB,QAAQC,MAAMH,IACdd,EAAAA,EAAAA,YAAWL,GAAMuB,YAAY,GAAGJ,IAAKA,GAEzC,KAGN,C","sources":["../../../plugins/wiggle/src/getMultiWiggleSourcesAutorun.ts"],"sourcesContent":["import { autorun } from 'mobx'\nimport { addDisposer, isAlive } from 'mobx-state-tree'\n// jbrowse\nimport {\n  getContainingView,\n  getSession,\n  isAbortException,\n} from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\n\nexport interface Source {\n  name: string\n  color?: string\n  group?: string\n}\n\nexport function getMultiWiggleSourcesAutorun(self: {\n  quantitativeStatsReady: boolean\n  configuration: AnyConfigurationModel\n  adapterConfig: AnyConfigurationModel\n  autoscaleType: string\n  adapterProps: () => Record<string, unknown>\n  setStatsLoading: (aborter: AbortController) => void\n  setError: (error: unknown) => void\n  setMessage: (str: string) => void\n  setSources: (sources: Source[]) => void\n}) {\n  addDisposer(\n    self,\n    autorun(async () => {\n      try {\n        const { rpcManager } = getSession(self)\n        const { adapterConfig } = self\n        const sessionId = getRpcSessionId(self)\n        const view = getContainingView(self) as LinearGenomeViewModel\n        if (!view.initialized) {\n          return\n        }\n        const sources = (await rpcManager.call(\n          sessionId,\n          'MultiWiggleGetSources',\n          {\n            regions: view.staticBlocks.contentBlocks,\n            sessionId,\n            adapterConfig,\n          },\n        )) as Source[]\n        if (isAlive(self)) {\n          self.setSources(sources)\n        }\n      } catch (e) {\n        if (!isAbortException(e) && isAlive(self)) {\n          console.error(e)\n          getSession(self).notifyError(`${e}`, e)\n        }\n      }\n    }),\n  )\n}\n"],"names":["getMultiWiggleSourcesAutorun","self","addDisposer","autorun","async","rpcManager","getSession","adapterConfig","sessionId","getRpcSessionId","view","getContainingView","initialized","sources","call","regions","staticBlocks","contentBlocks","isAlive","setSources","e","isAbortException","console","error","notifyError"],"sourceRoot":""}