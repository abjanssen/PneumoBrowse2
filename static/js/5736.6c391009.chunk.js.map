{"version":3,"file":"static/js/5736.6c391009.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/LaunchSupplementaryAlignmentBreakpointSplitViewPanel.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/getSAFeatures.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/SupplementaryAlignmentsLocStrings.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/SupplementaryAlignments.tsx"],"sourcesContent":["import { lazy, useEffect, useState } from 'react'\n\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { SimpleFeature, getSession, toLocale } from '@jbrowse/core/util'\nimport { Link, Typography } from '@mui/material'\n\nimport { getSAFeatures } from './getSAFeatures'\n\nimport type { ReducedFeature } from './getSAFeatures'\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nexport default function LaunchBreakpointSplitViewPanel({\n  model,\n  feature,\n}: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { view } = model\n  const [res, setRes] = useState<ReducedFeature[]>()\n  const [error, setError] = useState<unknown>()\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const feats = await getSAFeatures({\n          view,\n          feature: new SimpleFeature(feature),\n        })\n        setRes(feats)\n      } catch (e) {\n        setError(e)\n        console.error(e)\n      }\n    })()\n  }, [feature, view])\n\n  const ret = [] as [ReducedFeature, ReducedFeature][]\n  if (res) {\n    for (let i = 0; i < res.length - 1; i++) {\n      ret.push([res[i]!, res[i + 1]!] as const)\n    }\n  }\n  return ret.length ? (\n    <div>\n      <Typography>Launch split view</Typography>\n      {error ? <ErrorMessage error={error} /> : null}\n      <ul>\n        {ret.map((arg, index) => {\n          const [f1, f2] = arg\n          return (\n            <li key={`${JSON.stringify(arg)}-${index}`}>\n              {f1.refName}:{toLocale(f1.strand === 1 ? f1.end : f1.start)} -&gt;{' '}\n              {f2.refName}:{toLocale(f2.strand === 1 ? f2.start : f2.end)}{' '}\n              <TopBottomSplitViewLink model={model} f1={f1} f2={f2} />{' '}\n              <SideBySideViewLink model={model} f1={f1} f2={f2} />\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  ) : null\n}\n\nfunction TopBottomSplitViewLink({\n  model,\n  f1,\n  f2,\n}: {\n  model: AlignmentFeatureWidgetModel\n  f1: ReducedFeature\n  f2: ReducedFeature\n}) {\n  return (\n    <Link\n      href=\"#\"\n      onClick={event => {\n        event.preventDefault()\n        const session = getSession(model)\n        session.queueDialog(handleClose => [\n          BreakendMultiLevelOptionDialog,\n          {\n            handleClose,\n            session,\n            feature: new SimpleFeature({ ...f1, mate: f2 }),\n            view: model.view,\n            assemblyName: model.view.displayedRegions[0].assemblyName,\n          },\n        ])\n      }}\n    >\n      (top/bottom)\n    </Link>\n  )\n}\n\nfunction SideBySideViewLink({\n  model,\n  f1,\n  f2,\n}: {\n  model: AlignmentFeatureWidgetModel\n  f1: ReducedFeature\n  f2: ReducedFeature\n}) {\n  return (\n    <Link\n      href=\"#\"\n      onClick={event => {\n        event.preventDefault()\n        const session = getSession(model)\n        session.queueDialog(handleClose => [\n          BreakendSingleLevelOptionDialog,\n          {\n            handleClose,\n            session,\n            feature: new SimpleFeature({ ...f1, mate: f2 }),\n            view: model.view,\n            assemblyName: model.view.displayedRegions[0].assemblyName,\n          },\n        ])\n      }}\n    >\n      (single row)\n    </Link>\n  )\n}\n","import { getSession } from '@jbrowse/core/util'\n\nimport { featurizeSA, getClip, getLengthSansClipping } from '../MismatchParser'\n\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nexport interface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  strand: number\n  seqLength: number\n  syntenyId?: number\n  uniqueId: string\n  mate: {\n    refName: string\n    start: number\n    end: number\n    syntenyId?: number\n    uniqueId?: string\n  }\n}\n\nexport async function getSAFeatures({\n  view,\n  feature,\n}: {\n  view: LinearGenomeViewModel\n  feature: Feature\n}) {\n  const { assemblyManager } = getSession(view)\n  const cigar = feature.get('CIGAR') as string\n  const origStrand = feature.get('strand') as number\n  const SA = (feature.get('tags')?.SA as string) || ''\n  const readName = feature.get('name') as string\n  const clipPos = getClip(cigar, 1)\n\n  // get the canonical refname for the read because if the read.get('refName')\n  // is chr1 and the actual fasta refName is 1 then no tracks can be opened on\n  // the top panel of the linear read vs ref\n  const assembly = await assemblyManager.waitForAssembly(view.assemblyNames[0]!)\n  if (!assembly) {\n    throw new Error('assembly not found')\n  }\n\n  const suppAlns = featurizeSA(SA, feature.id(), origStrand, readName, true)\n\n  const feat = feature.toJSON()\n  feat.clipPos = clipPos\n  feat.strand = 1\n\n  feat.mate = {\n    refName: readName,\n    start: clipPos,\n    end: clipPos + getLengthSansClipping(cigar),\n  }\n  const features = [feat, ...suppAlns] as ReducedFeature[]\n\n  for (const [idx, f] of features.entries()) {\n    f.refName = assembly.getCanonicalRefName(f.refName) || f.refName\n    f.syntenyId = idx\n    f.mate.syntenyId = idx\n    f.mate.uniqueId = `${f.uniqueId}_mate`\n  }\n  features.sort((a, b) => a.clipPos - b.clipPos)\n  return features\n}\n","import { Link, Typography } from '@mui/material'\n\nimport { getLengthOnRef } from '../MismatchParser'\nimport { navToLoc } from './util'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\n\nexport default function SupplementaryAlignmentsLocStrings({\n  tag,\n  model,\n}: {\n  tag: string\n  model: AlignmentFeatureWidgetModel\n}) {\n  return (\n    <div>\n      <Typography>List of supplementary alignment locations</Typography>\n      <ul>\n        {tag\n          .split(';')\n          .filter(SA => !!SA)\n          .map((SA, idx) => {\n            const [saRef, saStart, saStrand, saCigar] = SA.split(',')\n            const saLength = getLengthOnRef(saCigar!)\n            const extra = Math.floor(saLength / 5)\n            const start = +saStart!\n            const end = +saStart! + saLength\n            const sp = start - extra\n            const ep = end + extra\n            const locString = `${saRef}:${Math.max(1, sp)}-${ep}`\n            const displayStart = start.toLocaleString('en-US')\n            const displayEnd = end.toLocaleString('en-US')\n            const displayString = `${saRef}:${displayStart}-${displayEnd} (${saStrand}) [${saLength}bp]`\n            return (\n              /* biome-ignore lint/suspicious/noArrayIndexKey: */\n              <li key={`${locString}-${idx}`}>\n                <Link\n                  href=\"#\"\n                  onClick={async event => {\n                    event.preventDefault()\n\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    navToLoc(locString, model)\n                  }}\n                >\n                  {displayString}\n                </Link>\n              </li>\n            )\n          })}\n      </ul>\n    </div>\n  )\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { getEnv, getSession } from '@jbrowse/core/util'\n\nimport LaunchBreakpointSplitViewPanel from './LaunchSupplementaryAlignmentBreakpointSplitViewPanel'\nimport SupplementaryAlignmentsLocStrings from './SupplementaryAlignmentsLocStrings'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nexport default function SupplementaryAlignments(props: {\n  tag: string\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, tag, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let hasBreakendSplitView = false\n\n  try {\n    hasBreakendSplitView = !!pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  return (\n    <BaseCard {...props} title=\"Supplementary alignments\">\n      <SupplementaryAlignmentsLocStrings model={model} tag={tag} />\n      {hasBreakendSplitView ? (\n        <LaunchBreakpointSplitViewPanel model={model} feature={feature} />\n      ) : null}\n    </BaseCard>\n  )\n}\n"],"names":["BreakendMultiLevelOptionDialog","lazy","BreakendSingleLevelOptionDialog","LaunchBreakpointSplitViewPanel","t0","$","_c","model","feature","view","res","setRes","useState","error","setError","t1","t2","t3","feats","async","assemblyManager","getSession","cigar","get","origStrand","SA","readName","clipPos","getClip","assembly","waitForAssembly","assemblyNames","Error","suppAlns","featurizeSA","id","feat","toJSON","strand","mate","refName","start","end","getLengthSansClipping","features","idx","f","entries","getCanonicalRefName","syntenyId","uniqueId","sort","a","b","getSAFeatures","SimpleFeature","e","console","useEffect","ret","i","length","push","_jsxs","children","_jsx","Typography","ErrorMessage","map","arg","index","f1","f2","toLocale","TopBottomSplitViewLink","SideBySideViewLink","JSON","stringify","Link","href","onClick","event","preventDefault","session","queueDialog","handleClose","assemblyName","displayedRegions","SupplementaryAlignmentsLocStrings","tag","Symbol","for","SA_0","saRef","saStart","saStrand","saCigar","split","saLength","getLengthOnRef","extra","Math","floor","sp","ep","locString","max","displayString","toLocaleString","navToLoc","filter","_temp","SupplementaryAlignments","props","hasBreakendSplitView","pluginManager","getEnv","getViewType","BaseCard","title"],"sourceRoot":""}