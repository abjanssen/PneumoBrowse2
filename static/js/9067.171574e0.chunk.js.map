{"version":3,"file":"static/js/9067.171574e0.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/TableCell/tableCellClasses.js","../../../node_modules/@mui/material/esm/TableHead/TableHead.js","../../../node_modules/@mui/material/esm/TableCell/TableCell.js","../../../node_modules/@mui/material/esm/Table/Table.js","../../../node_modules/@mui/material/esm/TableRow/TableRow.js","../../../node_modules/@mui/material/esm/TableRow/tableRowClasses.js","../../../node_modules/@mui/material/esm/TableContainer/TableContainer.js","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsTable.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsDialog.tsx","../../../node_modules/@mui/material/esm/TableBody/TableBody.js","../../../node_modules/@mui/material/esm/Table/tableClasses.js","../../../node_modules/@mui/material/esm/Table/Tablelvl2Context.js","../../../node_modules/@mui/material/esm/TableContainer/tableContainerClasses.js","../../../node_modules/@mui/material/esm/Table/TableContext.js","../../../node_modules/@mui/material/esm/TableBody/tableBodyClasses.js","../../../node_modules/@mui/material/esm/TableHead/tableHeadClasses.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableHeadUtilityClass } from \"./tableHeadClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root'\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from \"./TableContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableUtilityClass } from \"./tableClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': {\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      borderCollapse: 'separate'\n    }\n  }]\n})));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    padding,\n    size,\n    stickyHeader\n  };\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, {\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableRowClasses, { getTableRowUtilityClass } from \"./tableRowClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n})));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false,\n    ...other\n  } = props;\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const ownerState = {\n    ...props,\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Should be valid `<tr>` children such as `TableCell`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableContainerUtilityClass } from \"./tableContainerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root'\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, {\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import {\n  assembleLocString,\n  getEnv,\n  getSession,\n  parseLocString,\n} from '@jbrowse/core/util'\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\n\nimport type { LinearGenomeViewModel } from '../..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport default function SearchResultsTable({\n  searchResults,\n  assemblyName: optAssemblyName,\n  model,\n  handleClose,\n}: {\n  searchResults: BaseResult[]\n  assemblyName?: string\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const { assemblyManager } = session\n  const assemblyName =\n    optAssemblyName || model.displayedRegions[0]!.assemblyName\n\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n\n  function getTrackName(trackId: string | undefined) {\n    if (trackId) {\n      const schema = pluginManager.pluggableConfigSchemaType('track')\n      const configuration = resolveIdentifier(schema, getRoot(model), trackId)\n      return configuration?.name?.value || ''\n    }\n    return ''\n  }\n  async function handleClick(location: string) {\n    try {\n      const newRegion = assembly?.regions?.find(\n        region => location === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        await model.navToLocString(location, assemblyName)\n      }\n    } catch (e) {\n      console.warn(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Location</TableCell>\n            <TableCell align=\"right\">Track</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {searchResults.map(result => {\n            const locString = result.getLocation()\n            let loc\n            try {\n              loc = locString\n                ? parseLocString(locString, refName =>\n                    assembly.isValidRefName(refName),\n                  )\n                : undefined\n            } catch (e) {}\n            return (\n              <TableRow key={result.getId()}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {result.getLabel()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {loc\n                    ? assembleLocString({\n                        ...loc,\n                        refName:\n                          assembly.getCanonicalRefName(loc.refName) ||\n                          loc.refName,\n                      })\n                    : locString}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {getTrackName(result.getTrackId()) || 'N/A'}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={async () => {\n                      try {\n                        await handleClick(\n                          // label is used if it is a refName, it has no location\n                          result.getLocation() || result.getLabel(),\n                        )\n                        const resultTrackId = result.getTrackId()\n                        if (resultTrackId) {\n                          model.showTrack(resultTrackId)\n                        }\n                      } catch (e) {\n                        console.error(e)\n                        session.notifyError(`${e}`, e)\n                      }\n                      handleClose()\n                    }}\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Go\n                  </Button>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Divider,\n  Typography,\n} from '@mui/material'\n\nimport SearchResultsTable from './SearchResultsTable'\n\nimport type { LinearGenomeViewModel } from '../..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport default function SearchResultsDialog({\n  model,\n  assemblyName,\n  searchQuery,\n  searchResults,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  assemblyName?: string\n  searchQuery: string\n  searchResults?: BaseResult[]\n  handleClose: () => void\n}) {\n  return (\n    <Dialog open maxWidth=\"xl\" onClose={handleClose} title=\"Search results\">\n      <DialogContent>\n        {!searchResults?.length ? (\n          <Typography>\n            No results found for <b>{searchQuery}</b>\n          </Typography>\n        ) : (\n          <>\n            <Typography>\n              Showing results for <b>{searchQuery}</b>\n            </Typography>\n            <SearchResultsTable\n              model={model}\n              handleClose={handleClose}\n              assemblyName={assemblyName}\n              searchResults={searchResults}\n            />\n          </>\n        )}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableBodyUtilityClass } from \"./tableBodyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root'\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, {\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;"],"names":["getTableCellUtilityClass","slot","TableHeadRoot","name","display","tablelvl2","variant","defaultComponent","inProps","ref","props","className","component","other","ownerState","classes","root","useUtilityClasses","Provider","value","children","as","role","TableCellRoot","overridesResolver","styles","size","padding","align","stickyHeader","theme","typography","body2","verticalAlign","borderBottom","vars","palette","TableCell","border","mode","divider","textAlign","variants","style","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","secondary","fontSize","paddingCheckbox","width","flexDirection","position","top","zIndex","backgroundColor","background","default","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","variantProp","table","isHeadCell","undefined","slots","ariaSort","TableRoot","borderCollapse","borderSpacing","spacing","captionSide","TableRowRoot","head","footer","outline","hover","action","selected","mainChannel","selectedOpacity","main","hoverOpacity","getTableRowUtilityClass","TableContainerRoot","overflowX","SearchResultsTable","searchResults","assemblyName","optAssemblyName","model","handleClose","session","getSession","pluginManager","getEnv","assemblyManager","displayedRegions","assembly","get","Error","regions","getTrackName","trackId","schema","pluggableConfigSchemaType","configuration","resolveIdentifier","getRoot","_jsx","TableContainer","Paper","_jsxs","Table","TableHead","TableRow","TableBody","map","result","locString","getLocation","loc","parseLocString","refName","isValidRefName","e","getLabel","assembleLocString","getCanonicalRefName","getTrackId","Button","onClick","async","location","newRegion","find","region","setDisplayedRegions","showAllRegions","navToLocString","console","warn","notify","handleClick","resultTrackId","showTrack","error","notifyError","getId","SearchResultsDialog","t0","$","_c","searchQuery","t1","t2","t3","t4","DialogContent","length","_Fragment","Typography","Symbol","for","Divider","DialogActions","Dialog","open","maxWidth","title","TableBodyRoot","getTableUtilityClass","getTableContainerUtilityClass","getTableBodyUtilityClass","getTableHeadUtilityClass"],"sourceRoot":""}