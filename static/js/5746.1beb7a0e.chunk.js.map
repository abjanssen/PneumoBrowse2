{"version":3,"file":"static/js/5746.1beb7a0e.chunk.js","mappings":"mTAsBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,SAAU,CACRC,QAAS,OACTC,WAAY,SACZC,IAAK,OAEPC,UAAW,CACTH,QAAS,OACTI,SAAU,SACVF,IAAK,SAmET,GA/D8BG,EAAAA,EAAAA,UAAS,UAAU,MAC/CC,EAAK,QACLC,IAKA,MAAM,QAAEC,GAAYX,KACbY,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,QACnC,kBAAEC,GAAsBN,EACxBO,EAAyC,IAA7BD,EAAkBE,OACpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CACLC,MAAI,EACJV,QAASA,KACPA,KAEFW,MAAM,mBAAkBC,SAAA,EAExBJ,EAAAA,EAAAA,MAACK,EAAAA,EAAa,CAACC,UAAWb,EAAQL,UAAUgB,SAAA,EAC1CG,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,OAAML,SACnBN,GACCE,EAAAA,EAAAA,MAAAU,EAAAA,SAAA,CAAAN,SAAA,EACEG,EAAAA,EAAAA,KAAA,QAAAH,SAAM,qCACNG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAAH,SAAM,oEAKR,+CAGJJ,EAAAA,EAAAA,MAAA,OAAKM,UAAWb,EAAQT,SAASoB,SAAA,EAC/BG,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CAAAP,SAAC,yBACZJ,EAAAA,EAAAA,MAACY,EAAAA,EAAM,CACLC,KAAK,QACLC,MAAOpB,EACPqB,SAAUC,IACRrB,EAAYqB,EAAMC,OAAOH,QACzBV,SAAA,EAEFG,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACJ,MAAM,MAAKV,SAAC,SACtBG,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACJ,MAAM,MAAKV,SAAC,kBAI5BG,EAAAA,EAAAA,KAACY,EAAAA,EAAa,CAAAf,UACZG,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,WAAWhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,IACtBC,QAASA,MACPC,EAAAA,EAAAA,IAAqBhC,EAAUH,GAC/BC,KACAY,SACH,iBAMT,E","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/dialogs/ExportBookmarksDialog.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport {\n  Alert,\n  Button,\n  DialogActions,\n  DialogContent,\n  MenuItem,\n  Select,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// Icons\n\nimport { downloadBookmarkFile } from '../../utils'\n\nimport type { GridBookmarkModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  flexItem: {\n    display: 'flex',\n    alignItems: 'center',\n    gap: '5px',\n  },\n  container: {\n    display: 'flex',\n    flexFlow: 'column',\n    gap: '5px',\n  },\n})\n\nconst ExportBookmarksDialog = observer(function ({\n  model,\n  onClose,\n}: {\n  model: GridBookmarkModel\n  onClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [fileType, setFileType] = useState('BED')\n  const { selectedBookmarks } = model\n  const exportAll = selectedBookmarks.length === 0\n  return (\n    <Dialog\n      open\n      onClose={() => {\n        onClose()\n      }}\n      title=\"Export bookmarks\"\n    >\n      <DialogContent className={classes.container}>\n        <Alert severity=\"info\">\n          {exportAll ? (\n            <>\n              <span>All bookmarks will be exported.</span>\n              <br />\n              <span>\n                Use the checkboxes to select individual bookmarks to export.\n              </span>\n            </>\n          ) : (\n            'Only selected bookmarks will be exported.'\n          )}\n        </Alert>\n        <div className={classes.flexItem}>\n          <Typography>Format to download:</Typography>\n          <Select\n            size=\"small\"\n            value={fileType}\n            onChange={event => {\n              setFileType(event.target.value)\n            }}\n          >\n            <MenuItem value=\"BED\">BED</MenuItem>\n            <MenuItem value=\"TSV\">TSV</MenuItem>\n          </Select>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n          onClick={() => {\n            downloadBookmarkFile(fileType, model)\n            onClose()\n          }}\n        >\n          Download\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\nexport default ExportBookmarksDialog\n"],"names":["useStyles","makeStyles","flexItem","display","alignItems","gap","container","flexFlow","observer","model","onClose","classes","fileType","setFileType","useState","selectedBookmarks","exportAll","length","_jsxs","Dialog","open","title","children","DialogContent","className","_jsx","Alert","severity","_Fragment","Typography","Select","size","value","onChange","event","target","MenuItem","DialogActions","Button","variant","color","startIcon","GetAppIcon","onClick","downloadBookmarkFile"],"sourceRoot":""}