{"version":3,"file":"static/js/965.758c3433.chunk.js","mappings":"4TAYe,SAAAA,EAAAC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAAuB,OAAAC,GAAAH,GAKpCI,EAAAC,IAA0BC,EAAAA,EAAAA,aAC1BC,EAAAC,IAAwBF,EAAAA,EAAAA,YAAoB,IAAAG,EAAAR,EAAA,KAAAE,GAC5BM,GAAAC,EAAAA,EAAAA,YAAWP,GAAOF,EAAA,GAAAE,EAAAF,EAAA,GAAAQ,GAAAA,EAAAR,EAAA,GAAlC,MAAAU,EAAgBF,GACV,WAANG,GAAuBD,EAAO,IAAAE,EAAAC,EAgBNC,EAhBMd,EAAA,KAAAE,GAAAF,EAAA,KAAAW,GAEpBC,EAAAA,KAEP,eAEG,MAAAG,GAAsBC,EAAAA,EAAAA,gBAAed,EAAQ,WAC7Ce,QAAqBN,EAAUO,KAAMhB,EAAMiB,QAAU,cAAe,CAAFJ,kBAGlER,EAAQU,EAAmB,OAAAH,GACpBM,MAAAA,EAAAA,EACPC,QAAAlB,MAAciB,GACdhB,EAASgB,EAAE,GATd,IAYAP,EAAA,CAACX,EAAQS,GAAWX,EAAA,GAAAE,EAAAF,EAAA,GAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,GAAAa,IAAAD,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,KAdvBsB,EAAAA,EAAAA,WAAUV,EAcPC,GAAqBb,EAAA,KAAAM,GAGtBQ,EAAgB,iBAATR,EAAiB,CAAAiB,OAEV,QAAQjB,EAAIkB,WACN,IAAK,QAAOA,WACZ,IAAK,iBAErBlB,GAAQ,CAAC,EAACN,EAAA,GAAAM,EAAAN,EAAA,GAAAc,GAAAA,EAAAd,EAAA,GAPhB,MAAAyB,EACEX,EAMc,IAAAY,EAWH,OAXG1B,EAAA,KAAAyB,GAAAzB,EAAA,KAAAG,GAAAH,EAAA,MAAAM,GAGdoB,GAAAC,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAAOC,MAAA,YAAWC,SACxB3B,GACCwB,EAAAA,EAAAA,KAACI,EAAAA,aAAY,CAAQ5B,MAAAA,SACf6B,IAAJ1B,GACFqB,EAAAA,EAAAA,KAACM,EAAAA,gBAAe,CAASC,QAAA,uBAEzBP,EAAAA,EAAAA,KAACQ,EAAAA,QAAU,CAAaV,WAAAA,MAEjBzB,EAAA,GAAAyB,EAAAzB,EAAA,GAAAG,EAAAH,EAAA,IAAAM,EAAAN,EAAA,IAAA0B,GAAAA,EAAA1B,EAAA,IARX0B,CAQW,C,eC3Cf,MAEMU,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCC,UAAW,CACTC,SAAU,KAEZC,SAAU,CACRC,UAAW,IACXC,SAAU,OACVC,SAAU,EACVC,WAAYP,EAAMQ,QAAQD,WAAWE,YAuGzC,GAnG0BC,EAAAA,EAAAA,UAAS,UAAU,OAC3C9C,EAAM,QACN+C,IAKA,MAAM,QAAEC,GAAYd,KACbjC,EAAOC,IAAYC,EAAAA,EAAAA,aACnBoC,EAAUU,IAAe9C,EAAAA,EAAAA,aACzB+C,EAAQC,IAAahD,EAAAA,EAAAA,WAAS,IAC/B,WAAEM,IAAeF,EAAAA,EAAAA,YAAWP,IAElCoB,EAAAA,EAAAA,WAAU,KAEP,WACC,IACE,MAAMgC,QAAYC,QAAQC,IACxB,IAAI,IAAIC,KAAIC,EAAAA,EAAAA,sBAAqBxD,KAAUoD,IAAIK,UAC7C,MAAM5C,GAAgBC,EAAAA,EAAAA,gBAAed,EAAQ,WAC7C,MAAO,CACL0D,QACOjD,EAAWO,KAAKhB,EAAOiB,QAAS,kBAAmB,CACxDJ,gBAEA8C,QAAS,CACP,CACED,uBAOZT,EAAYW,OAAOC,YAAYT,GACjC,CAAE,MAAOlC,GACPC,QAAQlB,MAAMiB,GACdhB,EAASgB,EACX,CACD,EAxBA,IAyBA,CAAClB,EAAQS,IAEZ,MAAMqD,EAAQvB,EAAWqB,OAAOG,QAAQxB,GAAY,GAC9CxB,EAAS+C,EACZE,QAAQ,EAAEN,EAAcnB,KAChB,CACL,OAAOmB,WACJnB,EAAS0B,MAAM,EA7DJ,KA8Dd1B,EAAS2B,OA9DK,IA+DV,8CAA8CR,sDAC9C,KAGPS,OAAOC,KAAOA,GACdC,KAAK,MAER,OACE5C,EAAAA,EAAAA,KAAC6C,EAAAA,OAAM,CACLC,MAAI,EACJ5C,MAAM,yCACNoB,QAASA,EACTyB,SAAS,KAAI5C,UAEbH,EAAAA,EAAAA,KAACgD,EAAAA,EAAa,CAACC,UAAW1B,EAAQX,UAAUT,SACzC3B,GACCwB,EAAAA,EAAAA,KAACI,EAAAA,aAAY,CAAC5B,MAAOA,SACN6B,IAAbS,GACFd,EAAAA,EAAAA,KAACM,EAAAA,gBAAe,CAACC,QAAQ,sBAEzB2C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhD,SAAA,EACEH,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPC,IACElB,EACGE,QAAQ,EAAEN,EAAcnB,KAAc,CACrC,OAAOmB,WACJnB,IAEJ4B,OAAOC,KAAOA,GACdC,KAAK,OAEVlB,GAAU,GACV8B,WAAW,KACT9B,GAAU,IACT,MACHvB,SAEDsB,EAAS,uBAAyB,oBAGrCzB,EAAAA,EAAAA,KAAA,OAAKiD,UAAW1B,EAAQT,SAASX,SAAEb,UAM/C,GC5GMmB,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7B+C,QAAS,CACP5C,SAAU,KAEZ6C,OAAQ,CACNC,MAAO,WAIX,SAASC,EAAWC,EAA8BC,GAChD,IAAK,MAAMC,KAAQF,EACbE,IAASD,SACJD,EAAIE,GACmB,iBAAdF,EAAIE,IACpBH,EAAWC,EAAIE,GAAkCD,GAGrD,OAAOD,CACT,CAEA,MAmGA,GAnG4BxC,EAAAA,EAAAA,UAAS,UAAU,OAC7C9C,IAIA,MAAOkD,EAAQC,IAAahD,EAAAA,EAAAA,WAAS,GAC/BsF,GAAO3E,EAAAA,EAAAA,gBAAed,GACtBQ,GAAUD,EAAAA,EAAAA,YAAWP,IACrB,QAAEgD,GAAYd,KACbwD,EAAcC,IAAmBxF,EAAAA,EAAAA,WAAS,GAE3CyF,GACJC,EAAAA,EAAAA,SAAQrF,EAAS,CAAC,cAAe,eACjCM,EAAAA,EAAAA,gBAAed,EAAQ,CAAC,cAAe,cAEnC,cAAE8F,IAAkBC,EAAAA,EAAAA,QAAOvF,GAE3BwF,EAAcF,EAAcG,uBAChC,sBACA,CACEjG,OAAQ,IACHyF,MACAI,EAAAA,EAAAA,SAAQrF,EAAS,CAAC,cAAe,UAAW,CAAER,OAAQyF,QACtD3E,EAAAA,EAAAA,gBAAed,EAAQ,CAAC,cAAe,UAAW,CAAEA,OAAQyF,MAGnE,CAAEjF,UAASR,WAKPkG,EAAaJ,EAAcG,uBAC/B,uBACA,KACA,CAAEzF,UAASR,WAGb,OACE2E,EAAAA,EAAAA,MAAA,OAAKD,UAAW1B,EAAQkC,QAAQtD,SAAA,EAC9B+C,EAAAA,EAAAA,MAACjD,EAAAA,QAAQ,CAACC,MAAM,gBAAeC,SAAA,CAC3BgE,EAyBE,MAxBFjB,EAAAA,EAAAA,MAAA,QAAMD,UAAW1B,EAAQmC,OAAOvD,SAAA,EAC9BH,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLC,QAAQ,YACRqB,MAAM,YACNpB,QAASA,KACPY,GAAgB,IAChB/D,SACH,oBAGDH,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACP,MAAMqB,EAAOf,EAAWgB,gBAAgBZ,GAAO,WAC/CT,IAAKsB,KAAKC,UAAUH,EAAM,KAAM,IAChCjD,GAAU,GACV8B,WAAW,KACT9B,GAAU,IACT,MACHvB,SAEDsB,EAAS,uBAAyB,oBAIzCzB,EAAAA,EAAAA,KAACQ,EAAAA,QAAU,CACTuE,WAAYR,EAAYhG,OACxByG,KAAM,CAAC,WAAY,UAAW,WAAY,cAAe,YACzDb,SAAUA,OAGbI,EAAYhG,OAAO0G,UAClBjF,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,MAAM,WAAUC,UACxBH,EAAAA,EAAAA,KAACQ,EAAAA,QAAU,CACTuE,WAAYR,EAAYhG,OAAO0G,SAC/BD,KAAM,CAAC,WAAY,UAAW,WAAY,eAC1Cb,SAAUA,MAGZ,KACHM,GACCzE,EAAAA,EAAAA,KAACC,EAAAA,QAAQ,CAACC,MAAOuE,EAAWS,KAAK/E,UAC/BH,EAAAA,EAAAA,KAACyE,EAAWU,UAAS,CAAC5G,OAAQA,MAE9B,MACJyB,EAAAA,EAAAA,KAAC7B,EAAa,CAACI,OAAQA,IACtB0F,GACCjE,EAAAA,EAAAA,KAACoF,EAAiB,CAChB7G,OAAQA,EACR+C,QAASA,KACP4C,GAAgB,MAGlB,OAGV,GC7HO,SAAAmB,EAAAjH,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAAqB,OAAAC,EAAA,YAAA+G,GAAAlH,EAM3B,IAAAS,EAAA0G,EAAA,GAAAlH,EAAA,KAAAE,EAAE,CACD,MAAAQ,GAAgBD,EAAAA,EAAAA,YAAWP,GAC3BgH,GAAkBC,EAAAA,EAAAA,cAAajH,EAAQQ,GACvC,MAAM,cAANsF,IAA0BC,EAAAA,EAAAA,QAAOvF,GAEVF,EAAAwF,EAAaG,uBAClC,oBAAmBiB,EAAA,CAAA1G,UAAAR,WAGpBF,EAAA,GAAAE,EAAAF,EAAA,GAAAQ,EAAAR,EAAA,GAAAkH,CAAA,MAAA1G,EAAAR,EAAA,GAAAkH,EAAAlH,EAAA,GAJD,MAAAqH,EAAuB7G,EAIL,IAAAI,EAIoBC,EAC3B,OALOb,EAAA,KAAAqH,GAAArH,EAAA,KAAAE,GAIdU,GAAAe,EAAAA,EAAAA,KAAC0F,EAAc,CAASnH,OAAAA,IAAUF,EAAA,GAAAqH,EAAArH,EAAA,GAAAE,EAAAF,EAAA,GAAAY,GAAAA,EAAAZ,EAAA,GAAAA,EAAA,KAAAiH,GAAAjH,EAAA,KAAAY,GAAAZ,EAAA,KAAAkH,GADpCrG,GAAAc,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAACC,MAAI,EAAUwC,QAAAA,EAAoBC,MAAAA,EAAoBxC,SAAA,KAAI5C,SAChElB,IACOZ,EAAA,GAAAiH,EAAAjH,EAAA,GAAAY,EAAAZ,EAAA,GAAAkH,EAAAlH,EAAA,GAAAa,GAAAA,EAAAb,EAAA,GAFTa,CAES,C,2ICjBb,MAAMuB,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCgF,sBAAuB,CACrBC,QAAS,QACTC,QAASlF,EAAMmF,QAAQ,IAEzBC,KAAM,CACJrB,MAAO/D,EAAMQ,QAAQ6E,SAASC,cAAgB,WAInC,SAAAhG,EAAA7B,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAAkB,SAAA6B,EAAA,MAAAD,EAAAgG,gBAAArH,GAAAT,EAG/B8H,OAAsB7F,IAAtBxB,GAAAA,GAEM,QAAN0C,GAAoBd,IAAW,IAAAxB,EAG0CC,EAClBC,EAChCY,EAGAoG,EACT,OATiB9H,EAAA,KAAAkD,EAAAwE,MAGG9G,GAAAe,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAAYnD,UAAA1B,EAAOwE,OAAS1H,EAAA,GAAAkD,EAAAwE,KAAA1H,EAAA,GAAAY,GAAAA,EAAAZ,EAAA,GAAAA,EAAA,KAAA6B,GACnEhB,GAAAc,EAAAA,EAAAA,KAACqG,EAAAA,EAAU,CAAShD,QAAA,SAAQlD,SAAED,IAAmB7B,EAAA,GAAA6B,EAAA7B,EAAA,GAAAa,GAAAA,EAAAb,EAAA,GAAAA,EAAA,KAAAY,GAAAZ,EAAA,KAAAa,GADnDC,GAAAa,EAAAA,EAAAA,KAACsG,EAAAA,EAAgB,CAAaC,WAAAtH,EAAuCkB,SACnEjB,IACiBb,EAAA,GAAAY,EAAAZ,EAAA,GAAAa,EAAAb,EAAA,GAAAc,GAAAA,EAAAd,EAAA,GAAAA,EAAA,KAAA8B,GAAA9B,EAAA,KAAAkD,EAAAoE,uBACnB5F,GAAAC,EAAAA,EAAAA,KAACwG,EAAAA,EAAgB,CAAYvD,UAAA1B,EAAOoE,sBAAsBxF,SACvDA,IACgB9B,EAAA,GAAA8B,EAAA9B,EAAA,GAAAkD,EAAAoE,sBAAAtH,EAAA,GAAA0B,GAAAA,EAAA1B,EAAA,GAAAA,EAAA,MAAA6H,GAAA7H,EAAA,MAAAc,GAAAd,EAAA,MAAA0B,GANrBoG,GAAAjD,EAAAA,EAAAA,MAACuD,EAAAA,EAAS,CAAkBP,gBAAAA,EAAe/F,SAAA,CACzChB,EAGAY,KAGU1B,EAAA,IAAA6H,EAAA7H,EAAA,IAAAc,EAAAd,EAAA,IAAA0B,EAAA1B,EAAA,IAAA8H,GAAAA,EAAA9H,EAAA,IAPZ8H,CAOY,C","sources":["../../../packages/product-core/src/ui/FileInfoPanel.tsx","../../../packages/product-core/src/ui/RefNameInfoDialog.tsx","../../../packages/product-core/src/ui/AboutDialogContents.tsx","../../../packages/product-core/src/ui/AboutDialog.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes'\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ntype FileInfo = Record<string, unknown> | string\n\nexport default function FileInfoPanel({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [error, setError] = useState<unknown>()\n  const [info, setInfo] = useState<FileInfo>()\n  const session = getSession(config)\n  const { rpcManager } = session\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const adapterConfig = readConfObject(config, 'adapter')\n        const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n          adapterConfig,\n        })\n        setInfo(result as FileInfo)\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [config, rpcManager])\n\n  const details =\n    typeof info === 'string'\n      ? {\n          header: `<pre>${info\n            .replaceAll('<', '&lt;')\n            .replaceAll('>', '&gt;')}</pre>`,\n        }\n      : info || {}\n\n  return (\n    <BaseCard title=\"File info\">\n      {error ? (\n        <ErrorMessage error={error} />\n      ) : info === undefined ? (\n        <LoadingEllipses message=\"Loading file data\" />\n      ) : (\n        <Attributes attributes={details} />\n      )}\n    </BaseCard>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { getConfAssemblyNames } from '@jbrowse/core/util/tracks'\nimport { Button, DialogContent } from '@mui/material'\nimport copy from 'copy-to-clipboard'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst MAX_REF_NAMES = 10_000\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    minWidth: 800,\n  },\n  refNames: {\n    maxHeight: 300,\n    overflow: 'auto',\n    flexGrow: 1,\n    background: theme.palette.background.default,\n  },\n}))\n\nconst RefNameInfoDialog = observer(function ({\n  config,\n  onClose,\n}: {\n  config: AnyConfigurationModel\n  onClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [refNames, setRefNames] = useState<Record<string, string[]>>()\n  const [copied, setCopied] = useState(false)\n  const { rpcManager } = getSession(config)\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const map = await Promise.all(\n          [...new Set(getConfAssemblyNames(config))].map(async assemblyName => {\n            const adapterConfig = readConfObject(config, 'adapter')\n            return [\n              assemblyName,\n              (await rpcManager.call(config.trackId, 'CoreGetRefNames', {\n                adapterConfig,\n                // hack for synteny adapters\n                regions: [\n                  {\n                    assemblyName,\n                  },\n                ],\n              })) as string[],\n            ] as const\n          }),\n        )\n        setRefNames(Object.fromEntries(map))\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [config, rpcManager])\n\n  const names = refNames ? Object.entries(refNames) : []\n  const result = names\n    .flatMap(([assemblyName, refNames]) => {\n      return [\n        `--- ${assemblyName} ---`,\n        ...refNames.slice(0, MAX_REF_NAMES),\n        refNames.length > MAX_REF_NAMES\n          ? `\\nToo many refNames to show in browser for ${assemblyName}, use \"Copy ref names\" button to copy to clipboard`\n          : '',\n      ]\n    })\n    .filter(f => !!f)\n    .join('\\n')\n\n  return (\n    <Dialog\n      open\n      title=\"Reference sequence names used in track\"\n      onClose={onClose}\n      maxWidth=\"xl\"\n    >\n      <DialogContent className={classes.container}>\n        {error ? (\n          <ErrorMessage error={error} />\n        ) : refNames === undefined ? (\n          <LoadingEllipses message=\"Loading refNames\" />\n        ) : (\n          <>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                copy(\n                  names\n                    .flatMap(([assemblyName, refNames]) => [\n                      `--- ${assemblyName} ---`,\n                      ...refNames,\n                    ])\n                    .filter(f => !!f)\n                    .join('\\n'),\n                )\n                setCopied(true)\n                setTimeout(() => {\n                  setCopied(false)\n                }, 1000)\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy ref names'}\n            </Button>\n\n            <pre className={classes.refNames}>{result}</pre>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default RefNameInfoDialog\n","import { useState } from 'react'\n\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes'\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { Button } from '@mui/material'\nimport copy from 'copy-to-clipboard'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport FileInfoPanel from './FileInfoPanel'\nimport RefNameInfoDialog from './RefNameInfoDialog'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  content: {\n    minWidth: 800,\n  },\n  button: {\n    float: 'right',\n  },\n})\n\nfunction removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n\nconst AboutDialogContents = observer(function ({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [copied, setCopied] = useState(false)\n  const conf = readConfObject(config)\n  const session = getSession(config)\n  const { classes } = useStyles()\n  const [showRefNames, setShowRefNames] = useState(false)\n\n  const hideUris =\n    getConf(session, ['formatAbout', 'hideUris']) ||\n    readConfObject(config, ['formatAbout', 'hideUris'])\n\n  const { pluginManager } = getEnv(session)\n\n  const confPostExt = pluginManager.evaluateExtensionPoint(\n    'Core-customizeAbout',\n    {\n      config: {\n        ...conf,\n        ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n        ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n      },\n    },\n    { session, config },\n  ) as {\n    config: { metadata?: Record<string, unknown>; [key: string]: unknown }\n  }\n\n  const ExtraPanel = pluginManager.evaluateExtensionPoint(\n    'Core-extraAboutPanel',\n    null,\n    { session, config },\n  ) as { name: string; Component: React.FC<any> } | null\n\n  return (\n    <div className={classes.content}>\n      <BaseCard title=\"Configuration\">\n        {!hideUris ? (\n          <span className={classes.button}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setShowRefNames(true)\n              }}\n            >\n              Show ref names\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                const snap = removeAttr(structuredClone(conf), 'baseUri')\n                copy(JSON.stringify(snap, null, 2))\n                setCopied(true)\n                setTimeout(() => {\n                  setCopied(false)\n                }, 1000)\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy config'}\n            </Button>\n          </span>\n        ) : null}\n        <Attributes\n          attributes={confPostExt.config}\n          omit={['displays', 'baseUri', 'refNames', 'formatAbout', 'metadata']}\n          hideUris={hideUris}\n        />\n      </BaseCard>\n      {confPostExt.config.metadata ? (\n        <BaseCard title=\"Metadata\">\n          <Attributes\n            attributes={confPostExt.config.metadata}\n            omit={['displays', 'baseUri', 'refNames', 'formatAbout']}\n            hideUris={hideUris}\n          />\n        </BaseCard>\n      ) : null}\n      {ExtraPanel ? (\n        <BaseCard title={ExtraPanel.name}>\n          <ExtraPanel.Component config={config} />\n        </BaseCard>\n      ) : null}\n      <FileInfoPanel config={config} />\n      {showRefNames ? (\n        <RefNameInfoDialog\n          config={config}\n          onClose={() => {\n            setShowRefNames(false)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default AboutDialogContents\n","import Dialog from '@jbrowse/core/ui/Dialog'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\n\nimport AboutContents from './AboutDialogContents'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport function AboutDialog({\n  config,\n  handleClose,\n}: {\n  config: AnyConfigurationModel\n  handleClose: () => void\n}) {\n  const session = getSession(config)\n  const trackName = getTrackName(config, session)\n  const { pluginManager } = getEnv(session)\n\n  const AboutComponent = pluginManager.evaluateExtensionPoint(\n    'Core-replaceAbout',\n    AboutContents,\n    { session, config },\n  ) as React.FC<any>\n\n  return (\n    <Dialog open onClose={handleClose} title={trackName} maxWidth=\"xl\">\n      <AboutComponent config={config} />\n    </Dialog>\n  )\n}\n","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n"],"names":["FileInfoPanel","t0","$","_c","config","error","setError","useState","info","setInfo","t1","getSession","session","rpcManager","t2","t3","t4","adapterConfig","readConfObject","result","call","trackId","e","console","useEffect","header","replaceAll","details","t5","_jsx","BaseCard","title","children","ErrorMessage","undefined","LoadingEllipses","message","Attributes","useStyles","makeStyles","theme","container","minWidth","refNames","maxHeight","overflow","flexGrow","background","palette","default","observer","onClose","classes","setRefNames","copied","setCopied","map","Promise","all","Set","getConfAssemblyNames","async","assemblyName","regions","Object","fromEntries","names","entries","flatMap","slice","length","filter","f","join","Dialog","open","maxWidth","DialogContent","className","_jsxs","_Fragment","Button","variant","onClick","copy","setTimeout","content","button","float","removeAttr","obj","attr","prop","conf","showRefNames","setShowRefNames","hideUris","getConf","pluginManager","getEnv","confPostExt","evaluateExtensionPoint","ExtraPanel","color","snap","structuredClone","JSON","stringify","attributes","omit","metadata","name","Component","RefNameInfoDialog","AboutDialog","handleClose","trackName","getTrackName","AboutContents","AboutComponent","expansionPanelDetails","display","padding","spacing","icon","tertiary","contrastText","defaultExpanded","t6","ExpandMore","Typography","AccordionSummary","expandIcon","AccordionDetails","Accordion"],"sourceRoot":""}