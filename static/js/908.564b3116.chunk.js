"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[908],{908:(n,e,a)=>{a.d(e,{doConnect:()=>T});class t{constructor(n=[],e){this.data={};const{checkIndent:a=!0,skipValidation:t=!1}=e??{},r="string"==typeof n?n.trimEnd().split(/\r?\n/):n;let i,o;for(const n of r){if(""===n)throw new Error("Invalid stanza, contained blank lines");if(n.trim().startsWith("#"))continue;if(n.trimEnd().endsWith("\\")){const e=n.trimEnd().slice(0,-1);o?o+=e.trimStart():o=e;continue}let e=n;if(o&&(e=o+e.trimStart(),o=void 0),i??a){const n=/^([ \t]+)/.exec(e);if(void 0===i)n?[,i]=n:i="";else if(""===i&&null!==n||i&&n&&i!==n[1])throw new Error("Inconsistent indentation of stanza")}else i="";const t=e.trim(),r=t.indexOf(" ");if(-1===r){if(!this.nameKey)throw new Error("First line in a stanza must have both a key and a value");if(this.data[t])continue;this.data[t]="";continue}const s=t.slice(0,r),c=t.slice(r+1);if(this.data[s]&&c!==this.data[s])throw new Error(`Got duplicate key with a different value in stanza: "${s}" key has both ${this.data[s]} and ${c}`);this.nameKey||(this.nameKey=s,this.name=t.slice(r+1)),this.data[s]=c}t||this.validate()}validate(){}}class r{constructor(n=[],e){this.data={};const{checkIndent:a=!0,skipValidation:r=!1}=e??{},i="string"==typeof n?n.trimEnd().split(/(?:[\t ]*\r?\n){2,}/):n;for(const n of i){if(""===n)throw new Error("Invalid stanza, was empty");if(n.startsWith("include"))continue;if(n.trim().startsWith("#")&&n.trimEnd().split(/\r?\n/).map(n=>n.trim()).every(n=>n.startsWith("#")))continue;const e=new t(n,{checkIndent:a});if(this.nameKey){if(e.nameKey!==this.nameKey)throw new Error(`The first line in each stanza must have the same key. Saw both ${this.nameKey} and ${e.nameKey}`)}else this.nameKey=e.nameKey;if(!e.name)throw new Error(`No stanza name: ${e.name}`);if(this.data[e.name])throw new Error(`Got duplicate stanza name: ${e.name}`);this.data[e.name]=e}r||this.validate()}validate(){}}function i(n,e,a=""){const t=[];for(const a of e)n.data[a]||t.push(a);if(t.length>0)throw new Error(`${a} is missing required entr${1===t.length?"y":"ies"}: ${t.join(", ")}`)}class o extends r{constructor(n,e){super(n,{...e,checkIndent:!1})}validate(){if("track"!==this.nameKey)throw new Error(`trackDb has "${this.nameKey}" instead of "track" as the first line in each track`);for(const[n,e]of Object.entries(this.data)){const a=Object.keys(e.data);i(e,["track","shortLabel"],`Track ${n}`);const t=new Set(["superTrack","compositeTrack","container","view"]);if(!a.some(n=>t.has(n))){if(!a.includes("bigDataUrl"))throw new Error(`Track ${n} is missing required key "bigDataUrl"`);if(!a.includes("type")&&!Object.keys(this.settings(n)).includes("type"))throw new Error(`Neither track ${n} nor any of its parent tracks have the required key "type"`)}let r=n;do{r=this.data[r]?.parent,r&&([r]=r.split(" "))}while(r);const o=this.data[n];o&&(this.data[n]=o)}}settings(n){if(!this.data[n])throw new Error(`Track ${n} does not exist`);const e=[n];let a=n;do{a=this.data[a]?.parent,a&&e.push(a)}while(a);const t={};e.reverse();for(const n of e){const e=this.data[n];if(e)for(const[n,a]of Object.entries(e))t[n]=a}return t}}class s extends r{validate(n=["genome","trackDb"]){if("genome"!==this.nameKey)throw new Error('Genomes file must begin with a line like "genome <genome_name>"');for(const[e,a]of Object.entries(this.data))i(a,n,`genome ${e}`)}}class c extends t{validate(){i(this,["hub","shortLabel","longLabel","genomesFile","email"],"Hub file")}}class l{constructor(n){const[e,a,...r]=n.trimEnd().split(/(?:[\t ]*\r?\n){2,}/);this.hubData=new t(e),this.validateHub(),this.genome=new t(a),this.validateGenomeSection(),this.tracks=new o(r.join("\n\n"),{skipValidation:!1})}validateHub(){if("hub"!==this.hubData.nameKey)throw new Error('Hub file must begin with a line like "hub <hub_name>"');i(this.hubData,["hub","shortLabel","longLabel","email"])}validateGenomeSection(){if("genome"!==this.genome.nameKey)throw new Error('Genomes file must begin with a line like "genome <genome_name>"')}}var d=a(68584),h=a(99546),m=a(99834),u=a(32761),p=a(91468);async function b(n){const e=await(0,m.openLocation)(n).readFile("utf8");return new o(e)}function f(n,e){return{uri:new URL(n,new URL(e.uri,e.baseUri)).href,locationType:"UriLocation"}}function g(n,e,a){return f(n||e,a)}function w(n,e){return n?{uri:n,locationType:"LocalPath"}:{uri:e,locationType:"UriLocation"}}function y(n,e){return new URL(n,e).href}function k({trackDb:n,trackDbLoc:e,assemblyName:a,sequenceAdapter:t,baseUrl:r}){const i=new Set(["superTrack","compositeTrack","container","view"]);return Object.entries(n.data).map(([a,o])=>{const{data:s}=o;if(!Object.keys(s).some(n=>i.has(n))){const i=[];let s=a;do{s=n.data[s]?.data.parent||"",s&&(s=s.split(" ")[0],i.push(n.data[s]))}while(s);return i.reverse(),{metadata:{...o.data,...o.data.html?{html:`<a href="${y(o.data.html,r)}">${o.data.html}</a>`}:{}},category:[o.data.group,...i.map(n=>n?.data.group).filter(n=>!!n)].filter(n=>!!n),...L({track:o,trackDbLoc:e,trackDb:n,sequenceAdapter:t})}}}).filter(h.notEmpty).map(n=>({...n,trackId:`ucsc-trackhub-${(0,h.objectHash)(n)}`,assemblyNames:[a]}))}function L({track:n,trackDbLoc:e,trackDb:a,sequenceAdapter:t}){const{data:r}=n,i=r.parent||"",o=r.bigDataUrl||"",s=r.bigDataIndex||"",c=r.type||a.data[i]?.data.type||"",l=(r.shortLabel||"")+(o.includes("xeno")?" (xeno)":""),d=(0,h.isUriLocation)(e);let m=c.split(" ")[0]||"";"bam"===m&&o.toLowerCase().endsWith("cram")&&(m="cram");const u=d?f(o,e):w(o);return"bam"===m?{type:"AlignmentsTrack",name:l,description:r.longLabel,adapter:{type:"BamAdapter",bamLocation:u,index:{location:d?g(s,`${o}.bai`,e):w(s,`${o}.bai`)}}}:"cram"===m?{type:"AlignmentsTrack",name:l,description:r.longLabel,adapter:{type:"CramAdapter",cramLocation:u,craiLocation:d?g(s,`${o}.crai`,e):w(s,`${o}.crai`),sequenceAdapter:t}}:"bigWig"===m?{type:"QuantitativeTrack",name:l,description:r.longLabel,adapter:{type:"BigWigAdapter",bigWigLocation:u}}:m.startsWith("big")?{type:"FeatureTrack",name:l,description:r.longLabel,adapter:{type:"BigBedAdapter",bigBedLocation:u}}:"vcfTabix"===m?{type:"VariantTrack",name:l,description:r.longLabel,adapter:{type:"VcfTabixAdapter",vcfGzLocation:u,index:{location:d?g(s,`${o}.tbi`,e):w(s,`${o}.tbi`)}}}:"hic"===m?{type:"HicTrack",name:l,description:r.longLabel,adapter:{type:"HicAdapter",hicLocation:u}}:(0,p.generateUnknownTrackConf)(l,m)}async function T(n){const{pluginManager:e}=(0,h.getEnv)(n),a=(0,h.getSession)(n),t=[];try{const r=(0,d.getConf)(n,"hubTxtLocation"),i=await(0,m.openLocation)(r).readFile("utf8"),o=y(r.uri,r.baseUri),{assemblyManager:h}=a;if(i.includes("useOneFile on")){const t=new l(i),{genome:s,tracks:c}=t,m=s.name,p=s.data.description;h.get(m)||a.addSessionAssembly({name:m,displayName:p,sequence:{type:"ReferenceSequenceTrack",metadata:{...s.data,...s.data.htmlPath?{htmlPath:`<a href="${y(s.data.htmlPath,o)}">${s.data.htmlPath}</a>`}:{}},trackId:`${m}-${(0,u.Ak)()}`,adapter:{type:"TwoBitAdapter",twoBitLocation:{uri:y(s.data.twoBitPath,o)},chromSizesLocation:{uri:y(s.data.chromSizes,o)}}},...s.data.chromAliasBb?{refNameAliases:{adapter:{type:"BigBedAdapter",uri:y(s.data.chromAliasBb,o)}}}:{}});const b=h.get(m),f=k({trackDb:c,trackDbLoc:r,assemblyName:m,sequenceAdapter:(0,d.getConf)(b,["sequence","adapter"]),baseUrl:o});n.addTrackConfs(f),e.evaluateExtensionPoint("LaunchView-LinearGenomeView",{session:a,assembly:m,tracklist:!0,loc:s.data.defaultPos})}else{const e=new c(i).data.genomesFile;if(!e)throw new Error("genomesFile not found on hub");const o=y(r.uri,r.baseUri),l=o?{uri:y(e,o),locationType:"UriLocation"}:{localPath:e,locationType:"LocalPathLocation"},u=await async function(n){const e=await(0,m.openLocation)(n).readFile("utf8");return new s(e)}(l),p={};for(const[a,r]of Object.entries(u.data)){const i=(0,d.getConf)(n,"assemblyNames");if(i.length>0&&!i.includes(a))continue;const s=h.get(a);if(!s){t.push(a);continue}const c=r.data.trackDb;if(!c)throw new Error("genomesFile not found on hub");const l=new URL(e,o),m=o?{uri:new URL(c,l).href,locationType:"UriLocation"}:{localPath:c,locationType:"LocalPathLocation"},u=k({trackDb:await b(m),trackDbLoc:m,assemblyName:a,sequenceAdapter:(0,d.getConf)(s,["sequence","adapter"]),baseUrl:o});n.addTrackConfs(u),p[a]=u.length}const f=Object.entries(p),g=f.length?`Loaded data from these assemblies: ${f.map(([n,e])=>`${n} (${e} tracks)`).join(", ")}`:"",w=t.length?`Skipped data from these assemblies: ${t.join(", ")}`:"";a.notify([g,w].filter(n=>!!n).join(". "),"success")}}catch(e){console.error(e),a.notifyError(`${(0,d.getConf)(n,"name")}: "${e}"`,e),a.breakConnection?.(n.configuration)}}"ailMel1\nallMis1\nanoCar1\nanoCar2\nanoGam1\nanoGam3\napiMel1\napiMel2\naplCal1\naptMan1\naquChr2\nbalAcu1\nbisBis1\nbosTau2\nbosTau3\nbosTau4\nbosTau6\nbosTau7\nbosTau8\nbraFlo1\ncaeJap1\ncaePb1\ncaePb2\ncaeRem2\ncaeRem3\ncalJac1\ncalJac3\ncalMil1\ncanFam1\ncanFam3\ncavPor3\ncb3\nce10\nce11\nce2\nce4\nce6\ncerSim1\nchlSab2\nchoHof1\nchrPic1\nci1\nci2\nci3\ncriGri1\ncriGriChoV1\ndanRer10\ndanRer11\ndanRer3\ndanRer4\ndanRer5\ndanRer6\ndanRer7\ndasNov3\ndipOrd1\ndm1\ndm2\ndm3\ndm6\ndp2\ndp3\ndroAna1\ndroAna2\ndroEre1\ndroGri1\ndroMoj1\ndroMoj2\ndroPer1\ndroSec1\ndroSim1\ndroVir1\ndroVir2\ndroYak1\ndroYak2\neboVir3\nechTel1\nechTel2\nequCab1\nequCab2\neriEur1\neriEur2\nfelCat3\nfelCat4\nfelCat5\nfelCat8\nfr1\nfr2\nfr3\ngadMor1\ngalGal2\ngalGal3\ngalGal4\ngalGal5\ngalGal6\ngalVar1\ngasAcu1\ngeoFor1\ngorGor3\ngorGor4\ngorGor5\nhetGla1\nhetGla2\nhg16\nhg18\nhg19\nhg38\nlatCha1\nloxAfr3\nmacEug2\nmacFas5\nmanPen1\nmelGal1\nmelGal5\nmelUnd1\nmicMur1\nmicMur2\nmm10\nmm7\nmm8\nmm9\nmonDom2\nmonDom4\nmonDom5\nmusFur1\nmyoLuc2\nnanPar1\nnasLar1\nnomLeu1\nnomLeu2\nnomLeu3\nochPri2\nochPri3\noreNil2\nornAna1\nornAna2\noryCun2\noryLat2\notoGar3\noviAri1\noviAri3\noviAri4\npanPan1\npanPan2\npanTro1\npanTro2\npanTro3\npanTro4\npanTro5\npanTro6\npapAnu2\npapHam1\npetMar1\npetMar2\nponAbe2\nponAbe3\npriPac1\nproCap1\npteVam1\nrheMac2\nrheMac3\nrheMac8\nrhiRox1\nrn4\nrn5\nrn6\nsacCer1\nsacCer2\nsacCer3\nsaiBol1\nsarHar1\nsorAra1\nsorAra2\nspeTri2\nstrPur1\nstrPur2\nsusScr11\nsusScr2\nsusScr3\ntaeGut1\ntaeGut2\ntarSyr1\ntarSyr2\ntetNig1\ntetNig2\nthaSir1\ntriMan1\ntupBel1\nturTru2\nventer1\nvicPac1\nvicPac2\nxenLae2\nxenTro1\nxenTro2\nxenTro3\nxenTro7\nxenTro9".split(/\r?\n/)}}]);
//# sourceMappingURL=908.564b3116.chunk.js.map