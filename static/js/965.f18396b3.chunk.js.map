{"version":3,"file":"static/js/965.f18396b3.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../packages/product-core/src/ui/FileInfoPanel.tsx","../../../packages/product-core/src/ui/RefNameInfoDialog.tsx","../../../packages/product-core/src/ui/AboutDialogContents.tsx","../../../packages/product-core/src/ui/AboutDialog.tsx","../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { DataGrid, GridColDef, GridToolbar } from '@mui/x-data-grid'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\n\n// locals\nimport { measureGridWidth, getStr } from '../../util'\nimport FieldName from './FieldName'\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    marginBottom: theme.spacing(4),\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]!).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const widths = colNames.map(e => measureGridWidth(rows.map(r => r[e])))\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <div className={classes.margin}>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => {\n                setChecked(event.target.checked)\n              }}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <DataGrid\n          autoHeight\n          disableRowSelectionOnClick\n          rows={rows}\n          rowHeight={20}\n          columnHeaderHeight={35}\n          hideFooter={rows.length < 25}\n          slots={{\n            toolbar: checked ? GridToolbar : null,\n          }}\n          slotProps={{\n            toolbar: {\n              printOptions: {\n                disableToolbarButton: true,\n              },\n            },\n          }}\n          columns={colNames.map(\n            (val, index) =>\n              ({\n                field: val,\n                renderCell: params => {\n                  const value = params.value as string\n                  return (\n                    <div className={classes.cell}>\n                      <SanitizedHTML html={getStr(value || '')} />\n                    </div>\n                  )\n                },\n                width: widths[index],\n              }) satisfies GridColDef<(typeof rows)[0]>,\n          )}\n        />\n      </div>\n    )\n  }\n  return null\n}\n","import React from 'react'\nimport isObject from 'is-object'\nimport { makeStyles } from 'tss-react/mui'\n\n// locals\nimport Attributes from './Attributes'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={`${JSON.stringify(val)}-${i}`}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, `${name}-${i}`]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={`${JSON.stringify(val)}-${i}`}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport FieldName from './FieldName'\nimport { makeStyles } from 'tss-react/mui'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href: string\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import React from 'react'\nimport isObject from 'is-object'\n\n// locals\nimport { accessNested, generateMaxWidth } from './util'\nimport { isUriLocation } from '../../util'\nimport DataGridDetails from './DataGridDetails'\nimport ArrayValue from './ArrayValue'\nimport UriAttribute from './UriField'\nimport SimpleField from './SimpleField'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                key={key}\n                {...rest}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\nimport { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport isObject from 'is-object'\nimport { Link } from '@mui/material'\n\n// locals\nimport { SanitizedHTML } from '../../ui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {React.isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport FieldName from './FieldName'\nimport BasicValue from './BasicValue'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import isObject from 'is-object'\nimport { max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name || id || ''}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  arr.forEach(elt => {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  })\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2.Description === 'string'\n      ? obj2.Description\n      : undefined\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes'\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\n\ntype FileInfo = Record<string, unknown> | string\n\nexport default function FileInfoPanel({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [error, setError] = useState<unknown>()\n  const [info, setInfo] = useState<FileInfo>()\n  const session = getSession(config)\n  const { rpcManager } = session\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const adapterConfig = readConfObject(config, 'adapter')\n        const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n          adapterConfig,\n        })\n        setInfo(result as FileInfo)\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [config, rpcManager])\n\n  const details =\n    typeof info === 'string'\n      ? {\n          header: `<pre>${info\n            .replaceAll('<', '&lt;')\n            .replaceAll('>', '&gt;')}</pre>`,\n        }\n      : info || {}\n\n  return (\n    <BaseCard title=\"File info\">\n      {error ? (\n        <ErrorMessage error={error} />\n      ) : info === undefined ? (\n        <LoadingEllipses message=\"Loading file data\" />\n      ) : (\n        <Attributes attributes={details} />\n      )}\n    </BaseCard>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Button, DialogContent } from '@mui/material'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { Dialog, ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { getConfAssemblyNames } from '@jbrowse/core/util/tracks'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\nimport copy from 'copy-to-clipboard'\n\nconst MAX_REF_NAMES = 10_000\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    minWidth: 800,\n  },\n  refNames: {\n    maxHeight: 300,\n    overflow: 'auto',\n    flexGrow: 1,\n    background: theme.palette.background.default,\n  },\n}))\n\nconst RefNameInfoDialog = observer(function ({\n  config,\n  onClose,\n}: {\n  config: AnyConfigurationModel\n  onClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [refNames, setRefNames] = useState<Record<string, string[]>>()\n  const [copied, setCopied] = useState(false)\n  const { rpcManager } = getSession(config)\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const map = await Promise.all(\n          [...new Set(getConfAssemblyNames(config))].map(async assemblyName => {\n            const adapterConfig = readConfObject(config, 'adapter')\n            return [\n              assemblyName,\n              (await rpcManager.call(config.trackId, 'CoreGetRefNames', {\n                adapterConfig,\n                // hack for synteny adapters\n                regions: [\n                  {\n                    assemblyName,\n                  },\n                ],\n              })) as string[],\n            ] as const\n          }),\n        )\n        setRefNames(Object.fromEntries(map))\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [config, rpcManager])\n\n  const names = refNames ? Object.entries(refNames) : []\n  const result = names\n    .flatMap(([assemblyName, refNames]) => {\n      return [\n        `--- ${assemblyName} ---`,\n        ...refNames.slice(0, MAX_REF_NAMES),\n        refNames.length > MAX_REF_NAMES\n          ? `\\nToo many refNames to show in browser for ${assemblyName}, use \"Copy ref names\" button to copy to clipboard`\n          : '',\n      ]\n    })\n    .filter(f => !!f)\n    .join('\\n')\n\n  return (\n    <Dialog\n      open\n      title=\"Reference sequence names used in track\"\n      onClose={onClose}\n      maxWidth=\"xl\"\n    >\n      <DialogContent className={classes.container}>\n        {error ? (\n          <ErrorMessage error={error} />\n        ) : refNames === undefined ? (\n          <LoadingEllipses message=\"Loading refNames\" />\n        ) : (\n          <>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                copy(\n                  names\n                    .flatMap(([assemblyName, refNames]) => [\n                      `--- ${assemblyName} ---`,\n                      ...refNames,\n                    ])\n                    .filter(f => !!f)\n                    .join('\\n'),\n                )\n                setCopied(true)\n                setTimeout(() => {\n                  setCopied(false)\n                }, 1000)\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy ref names'}\n            </Button>\n\n            <pre className={classes.refNames}>{result}</pre>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default RefNameInfoDialog\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport clone from 'clone'\nimport copy from 'copy-to-clipboard'\nimport { Button } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport {\n  getConf,\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport { getSession, getEnv } from '@jbrowse/core/util'\nimport Attributes from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/Attributes'\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\n\n// locals\nimport FileInfoPanel from './FileInfoPanel'\nimport RefNameInfoDialog from './RefNameInfoDialog'\n\nconst useStyles = makeStyles()({\n  content: {\n    minWidth: 800,\n  },\n  button: {\n    float: 'right',\n  },\n})\n\nfunction removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n\nconst AboutDialogContents = observer(function ({\n  config,\n}: {\n  config: AnyConfigurationModel\n}) {\n  const [copied, setCopied] = useState(false)\n  const conf = readConfObject(config)\n  const session = getSession(config)\n  const { classes } = useStyles()\n  const [showRefNames, setShowRefNames] = useState(false)\n\n  const hideUris =\n    getConf(session, ['formatAbout', 'hideUris']) ||\n    readConfObject(config, ['formatAbout', 'hideUris'])\n\n  const { pluginManager } = getEnv(session)\n\n  const confPostExt = pluginManager.evaluateExtensionPoint(\n    'Core-customizeAbout',\n    {\n      config: {\n        ...conf,\n        ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n        ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n      },\n    },\n    { session, config },\n  ) as Record<string, unknown>\n\n  const ExtraPanel = pluginManager.evaluateExtensionPoint(\n    'Core-extraAboutPanel',\n    null,\n    { session, config },\n  ) as { name: string; Component: React.FC<any> } | null\n\n  return (\n    <div className={classes.content}>\n      <BaseCard title=\"Configuration\">\n        {!hideUris ? (\n          <span className={classes.button}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setShowRefNames(true)\n              }}\n            >\n              Show ref names\n            </Button>\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                const snap = removeAttr(clone(conf), 'baseUri')\n                copy(JSON.stringify(snap, null, 2))\n                setCopied(true)\n                setTimeout(() => {\n                  setCopied(false)\n                }, 1000)\n              }}\n            >\n              {copied ? 'Copied to clipboard!' : 'Copy config'}\n            </Button>\n          </span>\n        ) : null}\n        <Attributes\n          attributes={confPostExt}\n          omit={['displays', 'baseUri', 'refNames', 'formatAbout']}\n          hideUris={hideUris}\n        />\n      </BaseCard>\n      {ExtraPanel ? (\n        <BaseCard title={ExtraPanel.name}>\n          <ExtraPanel.Component config={config} />\n        </BaseCard>\n      ) : null}\n      <FileInfoPanel config={config} />\n      {showRefNames ? (\n        <RefNameInfoDialog\n          config={config}\n          onClose={() => {\n            setShowRefNames(false)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default AboutDialogContents\n","import React from 'react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport Dialog from '@jbrowse/core/ui/Dialog'\nimport { getSession, getEnv } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport AboutContents from './AboutDialogContents'\n\nexport function AboutDialog({\n  config,\n  handleClose,\n}: {\n  config: AnyConfigurationModel\n  handleClose: () => void\n}) {\n  const session = getSession(config)\n  const trackName = getTrackName(config, session)\n  const { pluginManager } = getEnv(session)\n\n  const AboutComponent = pluginManager.evaluateExtensionPoint(\n    'Core-replaceAbout',\n    AboutContents,\n    { session, config },\n  ) as React.FC<any>\n\n  return (\n    <Dialog open onClose={handleClose} title={trackName} maxWidth=\"xl\">\n      <AboutComponent config={config} />\n    </Dialog>\n  )\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;"],"names":["useStyles","makeStyles","theme","margin","marginBottom","spacing","cell","whiteSpace","overflow","textOverflow","DataGridDetails","value","prefix","name","classes","checked","setChecked","useState","keys","Object","sort","unionKeys","Set","rows","entries","map","k","val","id","rest","identifier","add","colNames","has","delete","widths","e","measureGridWidth","r","size","length","React","className","FieldName","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","variant","DataGrid","autoHeight","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","hideFooter","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","field","renderCell","params","SanitizedHTML","html","getStr","width","display","flexWrap","fieldSubvalue","wordBreak","maxHeight","padding","border","palette","action","selected","boxSizing","ArrayValue","description","isObject","Attributes","attributes","BasicValue","every","i","key","JSON","stringify","UriField","uri","baseUri","href","URL","MAX_FIELD_NAME_WIDTH","globalOmit","props","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","generateMaxWidth","filter","v","undefined","accessNested","Array","isArray","isUriLocation","UriAttribute","_extends","SimpleField","Math","min","expansionPanelDetails","icon","color","tertiary","contrastText","BaseCard","children","title","defaultExpanded","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","fieldValue","fontSize","isLink","exec","Link","String","fieldDescription","background","mode","fieldName","minWidth","borderBottom","disabledBackground","marginRight","cx","join","Tooltip","placement","style","isEmpty","obj","generateTitle","type","ellipses","f","array","ceil","max","measureText","arr","obj2","forEach","elt","Description","FileInfoPanel","config","error","setError","info","setInfo","session","getSession","rpcManager","useEffect","adapterConfig","readConfObject","result","call","trackId","console","details","header","replaceAll","ErrorMessage","LoadingEllipses","message","container","refNames","flexGrow","default","observer","onClose","setRefNames","copied","setCopied","Promise","all","getConfAssemblyNames","async","assemblyName","regions","fromEntries","names","flatMap","slice","Dialog","open","maxWidth","DialogContent","Button","onClick","copy","setTimeout","content","button","float","removeAttr","attr","prop","conf","showRefNames","setShowRefNames","getConf","pluginManager","getEnv","confPostExt","evaluateExtensionPoint","ExtraPanel","snap","clone","Component","RefNameInfoDialog","AboutDialog","handleClose","trackName","getTrackName","AboutComponent","AboutContents","d","AccordionDetailsRoot","slot","overridesResolver","styles","root","inProps","ref","other","ownerState","useUtilityClasses","getAccordionDetailsUtilityClass","getAccordionSummaryUtilityClass","generateUtilityClass","generateUtilityClasses","AccordionSummaryRoot","styled","ButtonBase","memoTheme","transition","duration","transitions","shortest","minHeight","create","focusVisible","backgroundColor","vars","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","expanded","AccordionSummaryContent","AccordionSummaryExpandIconWrapper","expandIconWrapper","active","transform","focusVisibleClassName","toggle","AccordionContext","A","composeClasses","focusRipple","disableRipple","component","clsx"],"sourceRoot":""}