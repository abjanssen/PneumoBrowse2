{"version":3,"file":"static/js/1915.cecdc454.chunk.js","mappings":"wOAMA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,oBAAqB,CACnBC,QAASF,EAAMG,QAAQ,QAoC3B,GAhC4BC,EAAAA,EAAAA,WAAS,UAAU,YAC7CC,IAIA,MAAM,QAAEC,GAAYR,IAEpB,OACES,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CACHC,WAAS,EACTC,UAAWJ,EAAQL,oBACnBU,MAAO,CAAEC,OAAQP,EAAYQ,8BAA+BC,UAE5DP,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACO,MAAI,EAAAD,UACRP,EAAAA,EAAAA,KAACS,EAAAA,EAAgB,CACfC,SACEV,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CACPC,QAASd,EAAYe,yCACrBC,SAAUC,IACRjB,EAAYkB,4CACVD,EAAEE,OAAOL,QACV,IAIPM,MAAM,mCAKhB,IClCM3B,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtC0B,iBAAkB,CAChBC,WAAY3B,EAAM4B,QAAQC,OAAOC,SACjCC,MAAO,EACPC,UAAW,aACXC,UAAW,qBAEbC,kBAAmB,CACjBP,WAAY3B,EAAM4B,QAAQC,OAAOC,SACjClB,OAAQ,EACRoB,UAAW,aACXC,UAAW,qBAEbE,aAAc,CACZC,OAAQ,GAEVC,eAAgB,CACdC,QAAS,QAEX7B,UAAW,CACT8B,SAAU,cAuDd,GAnDwBnC,EAAAA,EAAAA,WAAS,UAAU,MACzCoC,IAIA,MAAM,QAAElC,GAAYR,KAEd,8BACJ2C,EAA6B,2BAC7BC,EAA0B,iBAC1BC,GACEH,EAEJ,OACEI,EAAAA,EAAAA,MAAA,OAAKlC,UAAWJ,EAAQG,UAAUK,SAAA,EAChC8B,EAAAA,EAAAA,MAAA,OAAKlC,UAAWJ,EAAQ+B,eAAevB,SAAA,EACrCP,EAAAA,EAAAA,KAAA,OACEI,MAAO,CACLoB,MAAOS,EAAMK,gBAAgBd,OAE/BrB,UAAWJ,EAAQG,UAAUK,UAE7BP,EAAAA,EAAAA,KAACkC,EAA6B,CAACD,MAAOA,EAAMK,oBAG7CF,GACCC,EAAAA,EAAAA,MAAAE,EAAAA,SAAA,CAAAhC,SAAA,EACEP,EAAAA,EAAAA,KAACwC,EAAAA,aAAY,CACXC,OAAQC,IACN,MAAMC,EAAOV,EAAMW,aAAaC,aAAaH,GAC7C,OAAOT,EAAMK,gBAAgBO,aAAaF,EAAK,EAEjDG,UAAQ,EACRC,SAAO,EACP5C,UAAWJ,EAAQoB,oBAErBkB,EAAAA,EAAAA,MAAA,OAAKjC,MAAO,CAAEoB,MAAOS,EAAMW,aAAapB,OAAQjB,SAAA,EAC9CP,EAAAA,EAAAA,KAACgD,EAAmB,CAAClD,YAAamC,KAClCjC,EAAAA,EAAAA,KAACmC,EAA0B,CAACF,MAAOA,EAAMW,qBAG3C,SAEN5C,EAAAA,EAAAA,KAACwC,EAAAA,aAAY,CACXC,OAAQR,EAAMgB,aACd9C,UAAWJ,EAAQ4B,sBAI3B,G","sources":["../../../plugins/sv-inspector/src/SvInspectorView/components/CircularViewOptions.tsx","../../../plugins/sv-inspector/src/SvInspectorView/components/SvInspectorView.tsx"],"sourcesContent":["import { Checkbox, FormControlLabel, Grid } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SvInspectorViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  circularViewOptions: {\n    padding: theme.spacing(1),\n  },\n}))\n\nconst CircularViewOptions = observer(function ({\n  svInspector,\n}: {\n  svInspector: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  return (\n    <Grid\n      container\n      className={classes.circularViewOptions}\n      style={{ height: svInspector.circularViewOptionsBarHeight }}\n    >\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={svInspector.onlyDisplayRelevantRegionsInCircularView}\n              onChange={e => {\n                svInspector.setOnlyDisplayRelevantRegionsInCircularView(\n                  e.target.checked,\n                )\n              }}\n            />\n          }\n          label=\"show only regions with data\"\n        />\n      </Grid>\n    </Grid>\n  )\n})\n\nexport default CircularViewOptions\n","import { ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport CircularViewOptions from './CircularViewOptions'\n\nimport type { SvInspectorViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  resizeHandleVert: {\n    background: theme.palette.action.selected,\n    width: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  resizeHandleHoriz: {\n    background: theme.palette.action.selected,\n    height: 4,\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n  viewControls: {\n    margin: 0,\n  },\n  viewsContainer: {\n    display: 'flex',\n  },\n  container: {\n    overflow: 'hidden',\n  },\n}))\n\nconst SvInspectorView = observer(function ({\n  model,\n}: {\n  model: SvInspectorViewModel\n}) {\n  const { classes } = useStyles()\n\n  const {\n    SpreadsheetViewReactComponent,\n    CircularViewReactComponent,\n    showCircularView,\n  } = model\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.viewsContainer}>\n        <div\n          style={{\n            width: model.spreadsheetView.width,\n          }}\n          className={classes.container}\n        >\n          <SpreadsheetViewReactComponent model={model.spreadsheetView} />\n        </div>\n\n        {showCircularView ? (\n          <>\n            <ResizeHandle\n              onDrag={distance => {\n                const ret1 = model.circularView.resizeWidth(-distance)\n                return model.spreadsheetView.resizeWidth(-ret1)\n              }}\n              vertical\n              flexbox\n              className={classes.resizeHandleVert}\n            />\n            <div style={{ width: model.circularView.width }}>\n              <CircularViewOptions svInspector={model} />\n              <CircularViewReactComponent model={model.circularView} />\n            </div>\n          </>\n        ) : null}\n      </div>\n      <ResizeHandle\n        onDrag={model.resizeHeight}\n        className={classes.resizeHandleHoriz}\n      />\n    </div>\n  )\n})\n\nexport default SvInspectorView\n"],"names":["useStyles","makeStyles","theme","circularViewOptions","padding","spacing","observer","svInspector","classes","_jsx","Grid","container","className","style","height","circularViewOptionsBarHeight","children","item","FormControlLabel","control","Checkbox","checked","onlyDisplayRelevantRegionsInCircularView","onChange","e","setOnlyDisplayRelevantRegionsInCircularView","target","label","resizeHandleVert","background","palette","action","selected","width","boxSizing","borderTop","resizeHandleHoriz","viewControls","margin","viewsContainer","display","overflow","model","SpreadsheetViewReactComponent","CircularViewReactComponent","showCircularView","_jsxs","spreadsheetView","_Fragment","ResizeHandle","onDrag","distance","ret1","circularView","resizeWidth","vertical","flexbox","CircularViewOptions","resizeHeight"],"sourceRoot":""}