{"version":3,"file":"static/js/4268.ccbcefd4.chunk.js","mappings":"mRAuBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCC,YAAa,CACXC,QAASF,EAAMG,QAAQ,IAEzBC,GAAI,CACFC,OAAQ,MAyCZ,GArCqBC,EAAAA,EAAAA,UAAS,EAAGC,cAC/B,MAAM,QAAEC,GAAYV,KACd,cAAEW,IAAkBC,EAAAA,EAAAA,QAAOH,GAC3BI,EAAYF,EAAcG,mBACzBC,EAAOC,IAAYC,EAAAA,EAAAA,UAASJ,EAAU,IAAIK,MAAQ,IACzD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAWX,EAAQP,YAAYmB,SAAA,EACpCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAC,6BACZC,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAACJ,UAAWX,EAAQJ,GAAGgB,UACjCC,EAAAA,EAAAA,KAACG,EAAAA,EAAM,CACLX,MAAOA,EACPY,SAAUC,IACRZ,EAASY,EAAMC,OAAOd,QACtBO,SAEDT,EACEiB,OAAO,EAAGC,mBAAoBA,EAAaC,eAC3CC,IAAI,EAAGC,cAAahB,WACnBK,EAAAA,EAAAA,KAACY,EAAAA,EAAQ,CAAYpB,MAAOG,EAAKI,SAC9BY,GADYhB,SAMvBK,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CAACJ,UAAWX,EAAQJ,GAAGgB,UACjCC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CACLC,QAASA,IAAM5B,EAAQ6B,QAAQvB,EAAO,CAAC,GACvCwB,QAAQ,YACRC,MAAM,UAASlB,SAChB,sB","sources":["../../../packages/app-core/src/ui/App/ViewLauncher.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { getEnv } from '@jbrowse/core/util'\nimport {\n  Button,\n  FormControl,\n  MenuItem,\n  Paper,\n  Select,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\nimport type { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\ntype AppSession = SessionWithDrawerWidgets & {\n  snackbarMessages: SnackbarMessage[]\n  renameCurrentSession: (arg: string) => void\n  popSnackbarMessage: () => unknown\n}\n\nconst useStyles = makeStyles()(theme => ({\n  selectPaper: {\n    padding: theme.spacing(4),\n  },\n  m2: {\n    margin: 2,\n  },\n}))\n\nconst ViewLauncher = observer(({ session }: { session: AppSession }) => {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  const viewTypes = pluginManager.getViewElements()\n  const [value, setValue] = useState(viewTypes[0]?.name || '')\n  return (\n    <Paper className={classes.selectPaper}>\n      <Typography>Select a view to launch</Typography>\n      <FormControl className={classes.m2}>\n        <Select\n          value={value}\n          onChange={event => {\n            setValue(event.target.value)\n          }}\n        >\n          {viewTypes\n            .filter(({ viewMetadata }) => !viewMetadata.hiddenFromGUI)\n            .map(({ displayName, name }) => (\n              <MenuItem key={name} value={name}>\n                {displayName}\n              </MenuItem>\n            ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.m2}>\n        <Button\n          onClick={() => session.addView(value, {})}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Launch view\n        </Button>\n      </FormControl>\n    </Paper>\n  )\n})\n\nexport default ViewLauncher\n"],"names":["useStyles","makeStyles","theme","selectPaper","padding","spacing","m2","margin","observer","session","classes","pluginManager","getEnv","viewTypes","getViewElements","value","setValue","useState","name","_jsxs","Paper","className","children","_jsx","Typography","FormControl","Select","onChange","event","target","filter","viewMetadata","hiddenFromGUI","map","displayName","MenuItem","Button","onClick","addView","variant","color"],"sourceRoot":""}