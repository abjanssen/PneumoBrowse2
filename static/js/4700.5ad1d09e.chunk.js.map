{"version":3,"file":"static/js/4700.5ad1d09e.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/Formatter.tsx","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/LinkToSyntenyView.tsx","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/SyntenyFeatureDetail.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx"],"sourcesContent":["import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","import { useState } from 'react'\n\nimport copy from 'copy-to-clipboard'\n\n// this 'show more...' used specifically as a formatter on alignments feature\n// details because long SEQ or CRAM files, even a single div full of a ton of\n// data from a long read, can slow down the rest of the app\nexport default function Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  return display.length > 100 ? (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          copy(display)\n          setCopied(true)\n          setTimeout(() => {\n            setCopied(false)\n          }, 700)\n        }}\n      >\n        {copied ? 'Copied to clipboard' : 'Copy'}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setShow(val => !val)\n        }}\n      >\n        {show ? 'Show less' : 'Show more'}\n      </button>\n      <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n    </>\n  ) : (\n    <div>{display}</div>\n  )\n}\n","import { lazy } from 'react'\n\nimport {\n  SimpleFeature,\n  assembleLocString,\n  getSession,\n} from '@jbrowse/core/util'\nimport { Link } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { SyntenyFeatureDetailModel } from './types'\nimport type { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst LaunchSyntenyViewDialog = lazy(\n  () => import('../LGVSyntenyDisplay/components/LaunchSyntenyViewDialog'),\n)\n\nconst LinkToSyntenyView = observer(function ({\n  model,\n  feat,\n}: {\n  model: SyntenyFeatureDetailModel\n  feat: SimpleFeatureSerialized\n}) {\n  const { view, level, trackId } = model\n  return (\n    <ul>\n      {view.type === 'LinearSyntenyView' ? (\n        <li>\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              const { views } = view as LinearSyntenyViewModel\n              if (level !== undefined) {\n                // level is \"pre-known\", and stored in the SyntenyFeatureWidget\n                // model state e.g. when clicking on a feature from a\n                // LinearSyntenyRendering\n                views[level]?.navTo(feat)\n                views[level + 1]?.navTo(feat.mate as SimpleFeatureSerialized)\n              } else {\n                // best effort to find the right level. this is triggered for\n                // example if a user clicks on a feature in a LGVSyntenyDisplay\n                // in an existing LinearSyntenyView, there is no real proper\n                // level \"pre-known\" to this situation\n                const f1 = feat\n                const f2 = feat.mate as SimpleFeatureSerialized\n                const r1 = f1.assemblyName as string\n                const r2 = f2.assemblyName as string\n                const v1 = views.find(view => view.assemblyNames[0] === r1)\n                const v2 = views.find(view => view.assemblyNames[0] === r2)\n                if (!v1 || !v2) {\n                  getSession(model).notify(\n                    [\n                      v1\n                        ? `Unable to find ${assembleLocString(f1)} in synteny view`\n                        : '',\n                      v2\n                        ? `Unable to find ${assembleLocString(f2)} in synteny view`\n                        : '',\n                    ].join(' ... '),\n                  )\n                }\n                v1?.navTo(f1)\n                v2?.navTo(f2)\n              }\n            }}\n          >\n            Center view on this feature\n          </Link>\n        </li>\n      ) : null}\n      <li>\n        <Link\n          href=\"#\"\n          onClick={event => {\n            event.preventDefault()\n            const feature = new SimpleFeature(feat)\n            const session = getSession(model)\n            session.queueDialog(handleClose => [\n              LaunchSyntenyViewDialog,\n              {\n                session,\n                feature,\n                trackId,\n                handleClose,\n              },\n            ])\n          }}\n        >\n          Launch new linear synteny view on this feature\n        </Link>\n      </li>\n    </ul>\n  )\n})\n\nexport default LinkToSyntenyView\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport Formatter from './Formatter'\nimport LinkToSyntenyView from './LinkToSyntenyView'\n\nimport type { SyntenyFeatureDetailModel } from './types'\n\nconst SyntenyFeatureDetail = observer(function (props: {\n  model: SyntenyFeatureDetailModel\n}) {\n  const { model } = props\n  const { featureData } = model\n  const feat = structuredClone(featureData)\n  return feat ? (\n    <Paper>\n      <FeatureDetails\n        {...props}\n        feature={feat}\n        formatter={value => <Formatter value={value} />}\n      />\n      <BaseCard title=\"Link to view\">\n        <LinkToSyntenyView model={model} feat={feat} />\n      </BaseCard>\n    </Paper>\n  ) : (\n    <div>\n      No feature loaded, may not be available after page refresh because it was\n      too large for localStorage\n    </div>\n  )\n})\n\nexport default SyntenyFeatureDetail\n","import { Suspense, lazy, useState } from 'react'\n\nimport Help from '@mui/icons-material/Help'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { LoadingEllipses } from '../../ui'\nimport { getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseFeatureWidgetModel } from '../stateModelFactory'\n\n// lazies\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\nconst HelpDialog = lazy(() => import('./dialogs/HelpDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = observer(function ({\n  model,\n  feature,\n}: {\n  model: BaseFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShown(!shown)\n          }}\n        >\n          {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n        </Button>\n      </FormControl>\n\n      <IconButton\n        onClick={() => {\n          getSession(model).queueDialog(handleClose => [\n            HelpDialog,\n            {\n              handleClose,\n            },\n          ])\n        }}\n      >\n        <Help />\n      </IconButton>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            key={feature.uniqueId}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default SequenceFeaturePanel\n","import { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { Divider, Typography } from '@mui/material'\n\nimport { generateTitle } from './util'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport Attributes from './Attributes'\nimport BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\nimport { ErrorMessage } from '../../ui'\nimport { getEnv, getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { Descriptors } from '../types'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport default function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Descriptors\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { maxDepth } = model\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  const m = mate as { start: number; end: number; refName: string } | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {m ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{\n              ...m,\n              start: m.start,\n              end: m.end,\n              refName: m.refName,\n              uniqueId: `${uniqueId}-mate`,\n            }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {depth < maxDepth && subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{\n                ...sub,\n                uniqueId: `${uniqueId}_${idx}`,\n              }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n"],"names":["Position","props","$","_c","feature","strand","strandMap","str","t0","assembleLocString","t1","_jsx","_Fragment","children","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","coreRenderedDetails","description","name","type","_jsxs","SimpleField","value","Object","entries","map","key","filter","_temp","_temp2","name_0","value_0","Formatter","show","setShow","useState","copied","setCopied","display","String","onClick","copy","setTimeout","slice","val","LaunchSyntenyViewDialog","lazy","observer","model","feat","view","level","trackId","Link","href","event","preventDefault","views","undefined","navTo","mate","f1","f2","r1","assemblyName","r2","v1","find","assemblyNames","v2","getSession","notify","join","SimpleFeature","session","queueDialog","handleClose","featureData","structuredClone","Paper","FeatureDetails","formatter","BaseCard","title","LinkToSyntenyView","SequenceFeatureDetails","HelpDialog","useStyles","makeStyles","theme","formControl","margin","container","marginTop","spacing","marginBottom","classes","shown","setShown","className","FormControl","Button","variant","IconButton","Help","Suspense","fallback","LoadingEllipses","uniqueId","coreDetails","omit","depth","t2","maxDepth","t3","id","t4","t5","subfeatures","t6","pm","getEnv","pluginManager","evaluateExtensionPoint","ExtraPanel","m","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","generateTitle","Symbol","for","Typography","Divider","refName","Attributes","ErrorBoundary","FallbackComponent","Component","defaultExpanded","sub","idx","JSON","stringify","e","ErrorMessage","error","expansionPanelDetails","padding","icon","color","palette","tertiary","contrastText","ExpandMore","AccordionSummary","expandIcon","AccordionDetails","Accordion"],"sourceRoot":""}