{"version":3,"file":"static/js/5847.696805be.chunk.js","mappings":"oMAUA,MAAMA,EAAc,GACdC,EAAa,EAEZ,SAASC,EACdC,EACAC,GAYA,MAAM,UAAEC,EAAS,SAAEC,EAAQ,QAAEC,EAAO,QAAEC,EAAO,UAAEC,EAAS,OAAEC,EAAM,OAAEC,GAChEP,EACIQ,EAASL,EAAQ,GACjBM,GAAQC,EAAAA,EAAAA,gBAAeH,EAAQ,gBAC/BI,GAAaD,EAAAA,EAAAA,gBAAeH,EAAQ,qBACpCK,GAAWF,EAAAA,EAAAA,gBAAeH,EAAQ,YAClCM,GAAWH,EAAAA,EAAAA,gBAAeH,EAAQ,YAClCO,GAAQJ,EAAAA,EAAAA,gBAAeH,EAAQ,SAC/BQ,GAAYL,EAAAA,EAAAA,gBAAeH,EAAQ,aACnCS,EAAqB,SAAVP,GAA4C,QAAxBJ,EAAUY,UACzCC,GAAQC,EAAAA,EAAAA,UAAS,IAClBd,EACHM,WAAYK,EAAWL,OAAaS,EACpCC,MAAOL,EAAW,CAACJ,EAAU,OAAQC,GAAY,CAAC,OAAQA,KAItDS,EACM,SAAVR,EACI,CAACS,EAAYC,IAAkBN,EAAMM,GACrC,CAACC,EAAkBD,KACjBd,EAAAA,EAAAA,gBAAeH,EAAQ,QAAS,CAAEkB,UAASD,UAC7CE,GANSP,EAAAA,EAAAA,UAAS,IAAKd,EAAWgB,MAAO,CAAC,EAAGf,KAM7BoB,SAChBC,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GAEvB,IAAIG,EAAaC,OAAOC,kBACpBC,GAAc,EAClB,MAAMC,EAAkB,GACxB,IAAIC,EAAQC,YAAYC,MACxB,IAAK,MAAMX,KAAWvB,EAASmC,SAAU,CACnCF,YAAYC,MAAQF,EAAQ,OAC9BI,EAAAA,EAAAA,IAAerC,GACfiC,EAAQC,YAAYC,OAEtB,MAAOG,EAAQC,IAAWC,EAAAA,EAAAA,eAAchB,EAASjB,EAAQJ,IAGrDsC,KAAKC,MAAMJ,KAAYG,KAAKC,MAAMd,IAAeW,EAAUD,EAAS,KACtEN,EAAgBW,KAAKnB,GACrBI,EAAaU,GAEf,MAAMf,EAAQC,EAAQoB,IAAI,SAC1Bb,EAAcA,GAAeR,EAAQI,GAAWJ,EAAQG,EACxD,MAAMmB,EAAIN,EAAUD,EAAS3C,EACzB4B,GAASnB,EAAUqB,OAAO,IAC5B3B,EAAIgD,UAAYzB,EAAGG,EAASD,GAC5BzB,EAAIiD,SAAST,EAAQ,EAAGO,EAAGxC,KAE3BP,EAAIgD,UAAY,OAChBhD,EAAIiD,SAAST,EAAQ,EAAGO,EAAGxC,GAE/B,CAKA,GADAP,EAAIkD,OACAjB,EAAa,CACfjC,EAAIgD,UAAYhC,EAChB,IAAK,MAAMU,KAAWvB,EAASmC,SAAU,CACnCF,YAAYC,MAAQF,EAAQ,OAC9BI,EAAAA,EAAAA,IAAerC,GACfiC,EAAQC,YAAYC,OAEtB,MAAOG,EAAQC,IAAWC,EAAAA,EAAAA,eAAchB,EAASjB,EAAQJ,GACnD0C,EAAIN,EAAUD,EAAS3C,EACvB4B,EAAQC,EAAQoB,IAAI,UACtBrB,EAAQI,GAEDJ,EAAQG,GAAmC,QAAxBtB,EAAUY,aADtCiC,EAAAA,EAAAA,aAAYX,EAAQ,EAAGO,EAAGjD,EAAYE,EAI1C,CACF,CAGA,OAFAA,EAAIoD,UAEG,CACLlB,kBAEJ,C","sources":["../../../plugins/wiggle/src/drawDensity.ts"],"sourcesContent":["import { readConfObject } from '@jbrowse/core/configuration'\nimport { featureSpanPx } from '@jbrowse/core/util'\nimport { checkStopToken } from '@jbrowse/core/util/stopToken'\n\nimport { fillRectCtx, getScale } from './util'\n\nimport type { ScaleOpts } from './util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\n\nconst fudgeFactor = 0.3\nconst clipHeight = 2\n\nexport function drawDensity(\n  ctx: CanvasRenderingContext2D,\n  props: {\n    features: Map<string, Feature> | Feature[]\n    regions: Region[]\n    bpPerPx: number\n    scaleOpts: ScaleOpts\n    height: number\n    ticks: { values: number[] }\n    displayCrossHatches: boolean\n    config: AnyConfigurationModel\n    stopToken?: string\n  },\n) {\n  const { stopToken, features, regions, bpPerPx, scaleOpts, height, config } =\n    props\n  const region = regions[0]!\n  const pivot = readConfObject(config, 'bicolorPivot')\n  const pivotValue = readConfObject(config, 'bicolorPivotValue')\n  const negColor = readConfObject(config, 'negColor')\n  const posColor = readConfObject(config, 'posColor')\n  const color = readConfObject(config, 'color')\n  const clipColor = readConfObject(config, 'clipColor')\n  const crossing = pivot !== 'none' && scaleOpts.scaleType !== 'log'\n  const scale = getScale({\n    ...scaleOpts,\n    pivotValue: crossing ? pivotValue : undefined,\n    range: crossing ? [negColor, '#eee', posColor] : ['#eee', posColor],\n  })\n\n  const scale2 = getScale({ ...scaleOpts, range: [0, height] })\n  const cb =\n    color === '#f0f'\n      ? (_: Feature, score: number) => scale(score)\n      : (feature: Feature, score: number) =>\n          readConfObject(config, 'color', { feature, score })\n  const domain = scale2.domain()\n  const niceMin = domain[0]!\n  const niceMax = domain[1]!\n\n  let prevLeftPx = Number.NEGATIVE_INFINITY\n  let hasClipping = false\n  const reducedFeatures = []\n  let start = performance.now()\n  for (const feature of features.values()) {\n    if (performance.now() - start > 400) {\n      checkStopToken(stopToken)\n      start = performance.now()\n    }\n    const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n\n    // create reduced features, avoiding multiple features per px\n    if (Math.floor(leftPx) !== Math.floor(prevLeftPx) || rightPx - leftPx > 1) {\n      reducedFeatures.push(feature)\n      prevLeftPx = leftPx\n    }\n    const score = feature.get('score')\n    hasClipping = hasClipping || score > niceMax || score < niceMin\n    const w = rightPx - leftPx + fudgeFactor\n    if (score >= scaleOpts.domain[0]!) {\n      ctx.fillStyle = cb(feature, score)\n      ctx.fillRect(leftPx, 0, w, height)\n    } else {\n      ctx.fillStyle = '#eee'\n      ctx.fillRect(leftPx, 0, w, height)\n    }\n  }\n\n  // second pass: draw clipping\n  // avoid persisting the red fillstyle with save/restore\n  ctx.save()\n  if (hasClipping) {\n    ctx.fillStyle = clipColor\n    for (const feature of features.values()) {\n      if (performance.now() - start > 400) {\n        checkStopToken(stopToken)\n        start = performance.now()\n      }\n      const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx)\n      const w = rightPx - leftPx + fudgeFactor\n      const score = feature.get('score')\n      if (score > niceMax) {\n        fillRectCtx(leftPx, 0, w, clipHeight, ctx)\n      } else if (score < niceMin && scaleOpts.scaleType !== 'log') {\n        fillRectCtx(leftPx, 0, w, clipHeight, ctx)\n      }\n    }\n  }\n  ctx.restore()\n\n  return {\n    reducedFeatures,\n  }\n}\n"],"names":["fudgeFactor","clipHeight","drawDensity","ctx","props","stopToken","features","regions","bpPerPx","scaleOpts","height","config","region","pivot","readConfObject","pivotValue","negColor","posColor","color","clipColor","crossing","scaleType","scale","getScale","undefined","range","cb","_","score","feature","domain","niceMin","niceMax","prevLeftPx","Number","NEGATIVE_INFINITY","hasClipping","reducedFeatures","start","performance","now","values","checkStopToken","leftPx","rightPx","featureSpanPx","Math","floor","push","get","w","fillStyle","fillRect","save","fillRectCtx","restore"],"sourceRoot":""}