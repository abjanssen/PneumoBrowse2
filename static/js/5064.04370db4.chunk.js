"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[5064],{65064:(e,t,n)=>{n.r(t),n.d(t,{default:()=>L});var s=n(7552),r=n(350),i=n(84144),o=n(95054),a=n(68446),l=n(69566),c=n(69500);function d({value:e,ref:t}){const[n,r]=(0,s.useState)(!1);return(0,l.bC)(t,e)!==e?(0,c.jsxs)("div",{children:[(0,c.jsx)("button",{onClick:()=>{r(!n)},children:n?"Show simplified ALT":"Show raw ALT"})," ",n?e:(0,l.bC)(t,e)]}):e}var u=n(31409),f=n.n(u);function h({value:e}){const[t,n]=(0,s.useState)(!1),[r,i]=(0,s.useState)(!1),o=String(e);return o.length>100?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)("button",{type:"button",onClick:()=>{f()(o),i(!0),setTimeout((()=>{i(!1)}),700)},children:r?"Copied to clipboard":"Copy"}),(0,c.jsx)("button",{type:"button",onClick:()=>{n((e=>!e))},children:t?"Show less":"Show more"}),(0,c.jsx)("div",{children:t?o:`${o.slice(0,100)}...`})]}):(0,c.jsx)("div",{children:o})}var p=n(87083),m=n(67112),j=n(62162),g=n(57468),x=n(99546),b=n(61282),w=n(46275),y=n(7946),S=n(22762);function v({checked:e,disabled:t,label:n,onChange:s}){return(0,c.jsx)(y.A,{disabled:t,control:(0,c.jsx)(S.A,{checked:e,onChange:s}),label:(0,c.jsx)(b.A,{variant:"body2",children:n})})}function A({rows:e}){const[t,n]=(0,s.useState)(!1),r={};if(t)for(const t of e){const e={},n=t.GT.split(/[/|]/);for(const t of n)e[t]=(e[t]||0)+1;const s=Object.entries(e).map((([e,t])=>`${e}:${t}`)).join(";");r[s]||(r[s]={count:0,GT:s,genotype:t.genotype}),r[s].count++}else for(const t of e){const e=t.GT;r[e]||(r[e]={count:0,GT:t.GT,genotype:t.genotype}),r[e].count++}const i=Object.entries(r).map((([t,n])=>{return{id:t,...n,count:`${n.count} / ${e.length}`,frequency:`${s=n.count/e.length*100,s.toPrecision(3)}%`};var s})),o=(i[0]?Object.keys(i[0]):[]).map((e=>(0,x.measureGridWidth)(i.map((t=>`${t[e]}`)))));return(0,c.jsxs)("div",{children:[(0,c.jsx)(y.A,{control:(0,c.jsx)(S.A,{checked:t}),label:(0,c.jsx)(b.A,{variant:"body2",children:"Use allele counts instead of exact GT"}),onChange:(e,t)=>{n(t)}}),(0,c.jsx)(j.A,{children:(0,c.jsx)(w.z,{rows:i,hideFooter:!0,rowHeight:25,columnHeaderHeight:35,columns:[{field:"GT",width:o[0]},{field:"count",width:o[1]},{field:"frequency",width:o[2]},{field:"genotype",width:o[3]}]})})]})}var T=n(93062);function C({columns:e,filter:t,setFilter:n}){return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(b.A,{children:"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33"}),e.map((({field:e})=>(0,c.jsx)(T.A,{placeholder:`Filter ${e}`,value:t[e]||"",onChange:s=>{n({...t,[e]:s.target.value})}},`filter-${e}`)))]})}function F(e,t){if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0}function N(e){const{feature:t,descriptions:n={}}=e,[r,i]=(0,s.useState)({}),[o,a]=(0,s.useState)(!0),[d,u]=(0,s.useState)(!1),f=t.samples||{},h=t.ALT,y=t.REF,S=Object.entries(f).map((([e,t])=>[e,{...t,GT:`${t.GT?.[0]}`,genotype:(0,l.Fm)(`${t.GT?.[0]}`,y,h)}]));let T,N=[];const k=Object.keys(r);try{N=S.map((([e,t])=>({...Object.fromEntries(Object.entries(t).map((([e,t])=>[e,t]))),sample:e,id:e}))).filter((e=>!k.length||k.every((t=>{const n=r[t];return!n||new RegExp(n,"i").exec(e[t])}))))}catch(e){console.error(e),T=e}const $=["sample",...Object.keys(S[0]?.[1]||{})],O=$.map((e=>(0,x.measureGridWidth)(N.map((t=>t[e]))))),G=$.map(((e,t)=>({field:e,description:n?.FORMAT?.[e]?.Description,width:O[t]}))),q=new Set(["sample","GT","genotype"]),E=new Set($);return S.length?(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(p.default,{...e,title:"Genotype frequencies",children:(0,c.jsx)(g.t,{FallbackComponent:m.ErrorMessage,children:(0,c.jsx)(A,{rows:N})})}),(0,c.jsxs)(p.default,{...e,title:"Samples",children:[T?(0,c.jsx)(b.A,{color:"error",children:`${T}`}):null,(0,c.jsx)(v,{label:"Show filters",checked:d,onChange:e=>{u(e.target.checked)}}),F(q,E)?null:(0,c.jsx)(v,{label:"Show only genotype columns",checked:o,onChange:e=>{a(e.target.checked)}}),d?(0,c.jsx)(C,{setFilter:i,columns:G,filter:r}):null,(0,c.jsx)(j.A,{children:(0,c.jsx)(w.z,{rows:N,hideFooter:N.length<100,columns:o?G.filter((e=>q.has(e.field))):G,rowHeight:25,columnHeaderHeight:35,showToolbar:!0})})]})]}):null}const k={CHROM:"chromosome: An identifier from the reference genome",POS:"position: The reference position, with the 1st base having position 1",ID:"identifier: Semi-colon separated list of unique identifiers where available",REF:"reference base(s): Each base must be one of A,C,G,T,N (case insensitive).",ALT:"alternate base(s): Comma-separated list of alternate non-reference alleles",QUAL:"quality: Phred-scaled quality score for the assertion made in ALT",FILTER:"filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail"},$=(0,s.lazy)((()=>n.e(5535).then(n.bind(n,45535)))),O=(0,s.lazy)((()=>n.e(8976).then(n.bind(n,58976))));function G({descriptions:e,feature:t}){const n=e?.INFO?.ANN?.Description,s=n?.match(/.*Functional annotations:'(.*)'$/)?.[1]?.split("|")||[],r=t.INFO?.ANN||[];return(0,c.jsx)(O,{fields:s,data:r,title:"Variant ANN field"})}function q({descriptions:e,feature:t}){const n=e?.INFO?.CSQ?.Description,s=n?.match(/.*Format: (.*)/)?.[1]?.split("|")||[],r=t.INFO?.CSQ||[];return(0,c.jsx)(O,{fields:s,data:r,title:"Variant CSQ field"})}function E({model:e}){const{featureData:t}=e,n=JSON.parse(JSON.stringify(t)),{type:s=""}=n;return"breakend"===s?(0,c.jsx)($,{feature:n,locStrings:n.ALT.map((e=>(0,r.h)(e)?.MatePosition||"")),model:e}):"translocation"===s?(0,c.jsx)($,{feature:n,model:e,locStrings:[`${n.INFO.CHR2[0]}:${n.INFO.END}`]}):"paired_feature"===s?(0,c.jsx)($,{feature:n,model:e,locStrings:[`${n.mate.refName}:${n.mate.start}`]}):s.includes("inversion")||s.includes("deletion")||s.includes("duplication")||s.includes("cnv")||s.includes("sv")?(0,c.jsx)($,{feature:{uniqueId:"random",refName:n.refName,start:n.start,end:n.start+1,mate:{refName:n.refName,start:n.end,end:n.end+1}},model:e,locStrings:[`${n.refName}:${n.end}`]}):null}const I=(0,a.observer)((function(e){const{feat:t,model:n}=e,{descriptions:r}=n,{samples:a,...l}=t,{REF:u}=l;return(0,c.jsxs)(o.A,{"data-testid":"variant-side-drawer",children:[(0,c.jsx)(i.default,{feature:l,descriptions:{...k,...r},formatter:(e,t)=>"ALT"===t?(0,c.jsx)(d,{value:`${e}`,ref:u}):(0,c.jsx)(h,{value:e}),...e}),(0,c.jsxs)(s.Suspense,{fallback:null,children:[(0,c.jsx)(q,{feature:l,descriptions:r}),(0,c.jsx)(G,{feature:l,descriptions:r}),(0,c.jsx)(E,{model:n})]}),(0,c.jsx)(N,{feature:t,...e,descriptions:r})]})})),L=(0,a.observer)((function(e){const{model:t}=e,{featureData:n}=t,s=structuredClone(n);return s?(0,c.jsx)(I,{feat:s,...e}):(0,c.jsx)("div",{children:"No feature loaded, may not be available after page refresh because it was too large for localStorage"})}))}}]);
//# sourceMappingURL=5064.04370db4.chunk.js.map