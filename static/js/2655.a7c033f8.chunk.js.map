{"version":3,"file":"static/js/2655.a7c033f8.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/internal/svg-icons/MoreHoriz.js","../../../node_modules/@mui/material/esm/Breadcrumbs/BreadcrumbCollapsed.js","../../../node_modules/@mui/material/esm/Breadcrumbs/breadcrumbsClasses.js","../../../node_modules/@mui/material/esm/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport MoreHorizIcon from \"../internal/svg-icons/MoreHoriz.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase, {\n  name: 'MuiBreadcrumbCollapsed'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`,\n  ...(theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.grey[700]\n  } : {\n    backgroundColor: theme.palette.grey[700],\n    color: theme.palette.grey[100]\n  }),\n  borderRadius: 2,\n  '&:hover, &:focus': {\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: theme.palette.grey[200]\n    } : {\n      backgroundColor: theme.palette.grey[600]\n    })\n  },\n  '&:active': {\n    boxShadow: theme.shadows[0],\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n    } : {\n      backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n    })\n  }\n})));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n    slots = {},\n    slotProps = {},\n    ...otherProps\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, {\n      focusRipple: true,\n      ...otherProps,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        as: slots.CollapsedIcon,\n        ownerState: ownerState,\n        ...slotProps.collapsedIcon\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport BreadcrumbCollapsed from \"./BreadcrumbCollapsed.js\";\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from \"./breadcrumbsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator'\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n    children,\n    className,\n    component = 'nav',\n    slots = {},\n    slotProps = {},\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/',\n    ...other\n  } = props;\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = {\n    ...props,\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  };\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, {\n    ref: ref,\n    component: component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["createSvgIcon","d","BreadcrumbCollapsedButton","styled","ButtonBase","name","memoTheme","theme","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","BreadcrumbCollapsedIcon","MoreHoriz","width","height","props","slots","slotProps","otherProps","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","BreadcrumbsRoot","Typography","overridesResolver","styles","li","root","BreadcrumbsOl","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","separator","reduce","acc","current","index","length","concat","push","inProps","ref","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","expanded","setExpanded","classes","composeClasses","ol","useUtilityClasses","collapsedIconSlotProps","useSlotProps","elementType","externalSlotProps","listRef","allItems","toArray","filter","child","map","clsx","slice","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}