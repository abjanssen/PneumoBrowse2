{"version":3,"file":"static/js/2267.43518caa.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/Radio/radioClasses.js","../../../node_modules/@mui/material/esm/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/esm/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/esm/RadioGroup/useRadioGroup.js","../../../node_modules/@mui/icons-material/esm/HelpOutline.js","components/ShareInfoDialog.tsx","components/ShareSettingsDialog.tsx","../../../node_modules/@mui/material/esm/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/esm/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/esm/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/esm/Radio/Radio.js","../../../node_modules/@mui/material/esm/RadioGroup/RadioGroup.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18h2v-2h-2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4\"\n}), 'HelpOutline');","import { Dialog } from '@jbrowse/core/ui'\nimport { DialogContent, DialogContentText } from '@mui/material'\n\nexport default function InfoDialog({\n  onClose,\n  open,\n}: {\n  open: boolean\n  onClose: () => void\n}) {\n  return (\n    <Dialog\n      open={open}\n      title=\"Info about session URLs\"\n      onClose={() => {\n        onClose()\n      }}\n    >\n      <DialogContent>\n        <DialogContentText>\n          Because everything about the JBrowse session is encoded in the URL\n          (e.g. state of the tracks, views, features selected, etc.) the\n          sessions can get very long. Therefore, we created a URL shortener,\n          both as a convenience and because long URLs can break some programs.\n          Note that both the long and short URLs encode the same data, but due\n          to long URLs causing problems with some programs, we recommend sharing\n          short URLs.\n        </DialogContentText>\n        <DialogContentText>\n          We generate the short URLs in a secure manner which involves\n          encrypting the session on the client side with a random password\n          string and uploading them to a central database. Then the random\n          password is added to the URL but is not uploaded to the central\n          database, making these short URLs effectively &quot;end-to-end\n          encrypted&quot;\n        </DialogContentText>\n        <DialogContentText>\n          Only users with a share link can read the session.\n        </DialogContentText>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline'\nimport {\n  DialogContent,\n  DialogContentText,\n  FormControl,\n  FormControlLabel,\n  IconButton,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\n\nimport InfoDialog from './ShareInfoDialog'\n\nconst SHARE_URL_LOCALSTORAGE_KEY = 'jbrowse-shareURL'\n\nexport default function SettingsDialog(props: {\n  open: boolean\n  onClose: (arg?: string) => void\n  currentSetting: string\n}) {\n  const { onClose, open, currentSetting } = props\n  const [setting, setSetting] = useState(currentSetting)\n  const [infoDialogOpen, setInfoDialogOpen] = useState(false)\n\n  const handleClose = () => {\n    localStorage.setItem(SHARE_URL_LOCALSTORAGE_KEY, setting)\n    onClose(setting)\n  }\n\n  return (\n    <>\n      <Dialog\n        onClose={handleClose}\n        open={open}\n        title=\"Configure session sharing\"\n      >\n        <DialogContent>\n          <DialogContentText>\n            Select between generating long or short URLs for the session sharing\n            <IconButton\n              onClick={() => {\n                setInfoDialogOpen(true)\n              }}\n            >\n              <HelpOutlineIcon />\n            </IconButton>\n          </DialogContentText>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              value={setting}\n              onChange={event => {\n                setSetting(event.target.value)\n              }}\n            >\n              <FormControlLabel\n                value=\"short\"\n                control={<Radio />}\n                label=\"Short URL\"\n              />\n              <FormControlLabel\n                value=\"long\"\n                control={<Radio />}\n                label=\"Long URL\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n      </Dialog>\n      <InfoDialog\n        open={infoDialogOpen}\n        onClose={() => {\n          setInfoDialogOpen(false)\n        }}\n      />\n    </>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  name: 'MuiRadioButtonIcon',\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon, {\n  name: 'MuiRadioButtonIcon'\n})({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon, {\n  name: 'MuiRadioButtonIcon'\n})(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    slots = {},\n    slotProps = {},\n    inputProps,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  const externalInputProps = slotProps.input ?? inputProps;\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: RadioRoot,\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      slots,\n      slotProps,\n      ...other\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onChange: (event, ...args) => {\n        handlers.onChange?.(event, ...args);\n        onChange(event, ...args);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      type: 'radio',\n      icon: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: icon.props.fontSize ?? size\n      }),\n      checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n        fontSize: checkedIcon.props.fontSize ?? size\n      }),\n      disabled,\n      name,\n      checked,\n      slots,\n      slotProps: {\n        // Do not forward `slotProps.root` again because it's already handled by the `RootSlot` in this file.\n        input: typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    ...rootSlotProps,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   * @deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;"],"names":["getRadioUtilityClass","slot","undefined","getRadioGroupUtilityClass","useRadioGroup","createSvgIcon","d","InfoDialog","t0","$","_c","onClose","open","t1","t2","t3","Symbol","for","_jsxs","DialogContent","children","_jsx","DialogContentText","Dialog","title","SHARE_URL_LOCALSTORAGE_KEY","SettingsDialog","props","currentSetting","setting","setSetting","useState","infoDialogOpen","setInfoDialogOpen","localStorage","setItem","handleClose","t4","t5","t6","t7","t8","t9","IconButton","onClick","HelpOutlineIcon","event","target","value","FormControlLabel","control","Radio","label","FormControl","component","RadioGroup","onChange","_Fragment","RadioButtonIconRoot","styled","name","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","theme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","checked","style","easeOut","classes","fontSize","ownerState","className","root","background","dot","RadioRoot","SwitchBase","prop","overridesResolver","styles","size","capitalize","color","vars","palette","text","secondary","radioClasses","disabled","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","Object","entries","filter","createSimplePaletteValueFilter","map","mainChannel","main","defaultCheckedIcon","defaultIcon","inProps","ref","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","slots","slotProps","inputProps","other","muiFormControl","useFormControl","composeClasses","useUtilityClasses","radioGroup","createChainedFunction","a","b","String","externalInputProps","input","RootSlot","rootSlotProps","useSlot","elementType","clsx","shouldForwardComponentProp","externalForwardedProps","getSlotProps","handlers","args","additionalProps","type","actions","defaultValue","valueProp","rootRef","row","error","setValueState","controlled","default","focus","current","querySelector","handleRef","contextValue","Provider","role"],"sourceRoot":""}