{"version":3,"file":"static/js/8259.537e5d94.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/LinearProgress/LinearProgress.js","../../../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-internals/throttle/throttle.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerWindow/ownerWindow.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-internals/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../../../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/utils/platform.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/capitalize/capitalize.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/composeClasses/composeClasses.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/debounce/debounce.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ClassNameGenerator/ClassNameGenerator.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/generateUtilityClasses/generateUtilityClasses.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/ownerDocument/ownerDocument.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useEventCallback/useEventCallback.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useForkRef/useForkRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/setRef/setRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useId/useId.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useLazyRef/useLazyRef.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useOnMount/useOnMount.js","../../../node_modules/@mui/x-data-grid/node_modules/@mui/utils/esm/useTimeout/useTimeout.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../../../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(([, value]) => value && value.main).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        animation: ${waveKeyframe} 2s linear 0.5s infinite;\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        '&::after': waveAnimation || {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridIsRtl } from './useGridIsRtl';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    columnHeadersContainerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { warnOnce } from '../../../../internals/utils/warning';\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nimport { useGridPaginationMeta } from './useGridPaginationMeta';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutogeneratedRowNode } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    refs.columnHeaderElement.style.minWidth = `${newWidth}px`;\n    refs.columnHeaderElement.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n        div.style.minWidth = finalWidth;\n        div.style.maxWidth = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationMetaSelector } from './gridPaginationSelector';\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { GRID_ID_AUTOGENERATED } from '../rows/gridRowsUtils';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import ownerDocument from '../ownerDocument';\nexport default function ownerWindow(node) {\n  const doc = ownerDocument(node);\n  return doc.defaultView || window;\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { useGridAriaAttributes } from '../hooks/utils/useGridAriaAttributes';\nimport { useGridRowAriaAttributes } from '../hooks/features/rows/useGridRowAriaAttributes';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nimport { gridExpandedRowCountSelector } from '../features/filter/gridFilterSelector';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from '../rowSelection';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridColumnGroupsUnwrappedModelSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, isRtl, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: pinnedRows.top.length === 0 ? gridClasses['row--borderBottom'] : undefined,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from '../hooks';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../utils/cellBorderUtils';\nimport { escapeOperandAttributeSelector } from '../utils/domUtils';\nimport { GridScrollbarFillerCell } from './GridScrollbarFillerCell';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push( /*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push( /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { GridSkeletonLoadingOverlay } from './GridSkeletonLoadingOverlay';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridRowCountSelector, useGridSelector } from '../hooks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { gridClasses } from '../constants/gridClasses';\nimport { composeGridClasses } from '../utils/composeGridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { useGridConfiguration } from '../hooks/utils/useGridConfiguration';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutogeneratedRowNode } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions/gridDimensionsSelectors';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} +\n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: !dimensions.hasScrollY || dimensions.scrollbarSize === 0 ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import { useGridSelector } from '../../utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { gridExpandedRowCountSelector } from '../filter';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../rows';\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridConfiguration } from '../../hooks/utils/useGridConfiguration';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { useGridOverlays } from '../../hooks/features/overlays/useGridOverlays';\nimport { GridOverlays as Overlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { GridConfigurationContext } from '../components/GridConfigurationContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridIsRtlSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { warnOnce } from '../../../internals/utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowTreeSelector, gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from '../rows/gridRowsUtils';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '../../../internals/utils/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport * as platform from '../../../utils/platform';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, isRtl, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height: contentHeight\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, isRtl, pinnedLeftLength) {\n  const factor = isRtl ? -1 : 1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nimport { GridConfigurationContext } from '../../components/GridConfigurationContext';\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the data grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return configuration;\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { warnOnce } from '../../internals/utils/warning';\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word in the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`capitalize(string)\\` expects a string argument.` : _formatMuiErrorMessage(7));\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","/**\n * WARNING: Don't import this directly.\n * Use `MuiError` from `@mui/internal-babel-macros/MuiError.macro` instead.\n * @param {number} code\n */\nexport default function formatMuiErrorMessage(code) {\n  // Apply babel-plugin-transform-template-literals in loose mode\n  // loose mode is safe if we're concatenating primitives\n  // see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose\n  /* eslint-disable prefer-template */\n  let url = 'https://mui.com/production-error/?code=' + code;\n  for (let i = 1; i < arguments.length; i += 1) {\n    // rest params over-transpile for this case\n    // eslint-disable-next-line prefer-rest-params\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return 'Minified MUI error #' + code + '; visit ' + url + ' for the full message.';\n  /* eslint-enable prefer-template */\n}","export default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  Object.keys(slots).forEach(\n  // `Object.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        const utilityClass = getUtilityClass(key);\n        if (utilityClass !== '') {\n          acc.push(utilityClass);\n        }\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n      }\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func, wait = 166) {\n  let timeout;\n  function debounced(...args) {\n    const later = () => {\n      // @ts-ignore\n      func.apply(this, args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n  debounced.clear = () => {\n    clearTimeout(timeout);\n  };\n  return debounced;\n}","const defaultGenerator = componentName => componentName;\nconst createClassNameGenerator = () => {\n  let generate = defaultGenerator;\n  return {\n    configure(generator) {\n      generate = generator;\n    },\n    generate(componentName) {\n      return generate(componentName);\n    },\n    reset() {\n      generate = defaultGenerator;\n    }\n  };\n};\nconst ClassNameGenerator = createClassNameGenerator();\nexport default ClassNameGenerator;","import ClassNameGenerator from '../ClassNameGenerator';\nexport const globalStateClasses = {\n  active: 'active',\n  checked: 'checked',\n  completed: 'completed',\n  disabled: 'disabled',\n  error: 'error',\n  expanded: 'expanded',\n  focused: 'focused',\n  focusVisible: 'focusVisible',\n  open: 'open',\n  readOnly: 'readOnly',\n  required: 'required',\n  selected: 'selected'\n};\nexport default function generateUtilityClass(componentName, slot, globalStatePrefix = 'Mui') {\n  const globalStateClass = globalStateClasses[slot];\n  return globalStateClass ? `${globalStatePrefix}-${globalStateClass}` : `${ClassNameGenerator.generate(componentName)}-${slot}`;\n}\nexport function isGlobalState(slot) {\n  return globalStateClasses[slot] !== undefined;\n}","import generateUtilityClass from '../generateUtilityClass';\nexport default function generateUtilityClasses(componentName, slots, globalStatePrefix = 'Mui') {\n  const result = {};\n  slots.forEach(slot => {\n    result[slot] = generateUtilityClass(componentName, slot, globalStatePrefix);\n  });\n  return result;\n}","export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","'use client';\n\nimport * as React from 'react';\n\n/**\n * A version of `React.useLayoutEffect` that does not show a warning when server-side rendering.\n * This is useful for effects that are only needed for client-side rendering but not for SSR.\n *\n * Before you use this hook, make sure to read https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * and confirm it doesn't apply to your use-case.\n */\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '../useEnhancedEffect';\n\n/**\n * Inspired by https://github.com/facebook/react/issues/14099#issuecomment-440013892\n * See RFC in https://github.com/reactjs/rfcs/pull/220\n */\n\nfunction useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useRef((...args) =>\n  // @ts-expect-error hide `this`\n  (0, ref.current)(...args)).current;\n}\nexport default useEventCallback;","'use client';\n\nimport * as React from 'react';\nimport setRef from '../setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nlet globalId = 0;\nfunction useGlobalId(idOverride) {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`mui-${globalId}`);\n    }\n  }, [defaultId]);\n  return id;\n}\n\n// downstream bundlers may remove unnecessary concatenation, but won't remove toString call -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseId = React['useId'.toString()];\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport default function useId(idOverride) {\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride != null ? idOverride : reactId;\n  }\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride);\n}","'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized lazily with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useLazyRef(sortColumns, columns)\n */\nexport default function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport default function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","'use client';\n\nimport useLazyRef from '../useLazyRef/useLazyRef';\nimport useOnMount from '../useOnMount/useOnMount';\nexport class Timeout {\n  constructor() {\n    this.currentId = null;\n    this.clear = () => {\n      if (this.currentId !== null) {\n        clearTimeout(this.currentId);\n        this.currentId = null;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = null;\n      fn();\n    }, delay);\n  }\n}\nexport default function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { warnOnce } from '../internals/utils/warning';\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import * as React from 'react';\nimport { fastObjectShallowCompare } from '../fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["indeterminate1Keyframe","indeterminate1Animation","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","theme","color","vars","palette","LinearProgress","mode","main","LinearProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","position","overflow","display","height","zIndex","colorAdjust","variants","Object","entries","filter","value","map","style","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundSize","backgroundPosition","backgroundImage","animation","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","ref","className","valueBuffer","other","classes","slots","bar1","bar2","useUtilityClasses","isRtl","rootProps","inlineStyles","undefined","Math","round","role","children","getLinearProgressUtilityClass","pulseKeyframe","waveKeyframe","pulseAnimation","waveAnimation","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","Skeleton","bg","text","primary","marginBottom","visibility","maxWidth","WebkitMaskImage","background","action","hover","component","Boolean","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","EventManager","constructor","this","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","delete","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","Store","create","_value","listeners","subscribe","fn","add","getSnapshot","update","forEach","l","Set","SYMBOL_API_PRIVATE","Symbol","globalId","_typeof","o","iterator","prototype","toPropertyKey","t","e","toPrimitive","call","r","TypeError","String","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","DataGridPremium","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","columnHeadersContainerRef","useGridRefs","isFirstEffect","setState","useGridIsRtl","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","replace","includes","delimiter","some","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","CSVBody","acc","getCellParams","serializeRow","trim","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","_excluded","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","areElementSizesEqual","b","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","minWidth","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","paginationMode","items","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","previousGroupsToFetch","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","previousCache","updateServerRows","groupKeys","setLoading","loadingPropBeforePartialUpdates","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","resetColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","direction","columnIndexToFocus","visibleColumns","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","filterState","getFilterState","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterMode","disableEval","filterResult","filterApi","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","columnsLookup","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","sizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","initialHeights","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","toLowerCase","altKey","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","dimensionsState","columnHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","defaultView","newSize","parseFloat","renderContext","lastRowIndex","firstRowIndex","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","configuration","hooks","useGridAriaAttributes","useGridPrivateApiContext","useGridRootProps","accessibleRowCount","headerGroupingMaxDepth","pinnedRowsCount","useGridRowAriaAttributes","selectedIdsLookup","ariaAttributes","ariaRowIndex","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","sx","forwardedProps","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseCheckbox","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","columnHeaderSortIcon","GridColumnHeaderSortIcon","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","startsWith","groupForwardedProps","overrides","computeSlots","injectDefaultProps","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderTop","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","getCellOffsetStyle","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","GridConfigurationContext","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","handleRef","useForkRef","viewportHeight","skeletonRowsCount","ceil","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","array","rowCells","isPinnedLeft","sectionIndex","pinnedStyle","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","empty","scrollbarWidth","GridScrollbarFillerCell","rowSkeleton","cells","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","noRowsVariant","rowsCount","activeVariant","noRowsLabel","GridPaginationRoot","maxHeight","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","showBottomBorder","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","useGridConfiguration","treeDepth","editing","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","rowReordering","minHeight","numberOfBaseSizes","maximumSize","rowStyle","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","leftCells","rightCells","middleColumnsLength","eventHandlers","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","Overlay","overlayProps","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","padding","border","cellStyle","activeElement","focusableElement","scrollPosition","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","Memoized","skeletonProps","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","overlap","GridColumnHeaderTitleRoot","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","every","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","overlay","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","lineHeight","outlineWidth","outlineOffset","transitions","duration","shorter","borderBottomWidth","borderBottomStyle","marginRight","marginLeft","touchAction","borderBottom","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","virtualScroller","gamma","f","overlayColor","rgb","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","_getTagProps","tagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","useGridOverlays","noRows","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","GridPanelAnchor","Element","flexGrow","GridMainContainer","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","rowsLength","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","GridVirtualScroller","overlaysProps","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","topLevelRowCount","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","defaultPageSize","getPageCount","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","isMultipleRowSelectionEnabled","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutogeneratedRow","isAutogeneratedRowNode","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","computeRowsUpdates","pinnedRowsCache","prevModel","idLookup","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","isFirefox","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","fnRef","observer","useResizeObserver","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","verticalBuffer","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","createScrollCache","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","useRunOnce","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","isLastVisibleInSection","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","condition","didRun","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","code","arguments","encodeURIComponent","charAt","toUpperCase","getUtilityClass","output","utilityClass","debounced","defaultGenerator","generate","configure","generator","createClassNameGenerator","globalStateClasses","active","completed","expanded","focused","focusVisible","required","generateUtilityClass","globalStatePrefix","globalStateClass","generateUtilityClasses","setRef","maybeReactUseId","idOverride","reactId","defaultId","setDefaultId","useGlobalId","UNINITIALIZED","init","initArg","EMPTY","Timeout","currentId","disposeEffect","delay","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","createRandomNumberGenerator","seed","imul","deepClone","obj","structuredClone","parse","fastObjectShallowCompare","aLength","bLength","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","NOT_FOUND","defaultEqualityCheck","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}