"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[9436],{9436:(e,t,n)=>{n.r(t),n.d(t,{default:()=>j});var r=n(7552),l=n(68446),a=n(943),i=n(68984),o=n(9502),s=n(36715),c=n(1343),u=n(33371),m=n(32808),d=n(68259),f=n(76157),p=n(99546);function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},h.apply(null,arguments)}function g({columns:e,filter:t,setFilter:n}){return r.createElement(r.Fragment,null,r.createElement(s.A,null,"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33"),e.map((({field:e})=>r.createElement(c.A,{key:`filter-${e}`,placeholder:`Filter ${e}`,value:t[e]||"",onChange:r=>{n({...t,[e]:r.target.value})}}))))}function E(e){const{feature:t,descriptions:n={}}=e,[l,a]=(0,r.useState)({}),o=t.samples||{},c=Object.entries(o);let E,b=[];const w=Object.keys(l);try{b=c.map((e=>({...Object.fromEntries(Object.entries(e[1]).map((e=>[e[0],`${e[1]}`]))),sample:e[0],id:e[0]}))).filter((e=>!w.length||w.every((t=>{const n=l[t];return!n||new RegExp(n,"i").exec(e[t])}))))}catch(e){E=e}const v=["sample",...Object.keys(c[0]?.[1]||{})],[y,O]=(0,r.useState)(!1),S=v.map((e=>(0,p.measureGridWidth)(b.map((t=>t[e]))))),A=v.map(((e,t)=>({field:e,description:n?.FORMAT?.[e]?.Description,width:S[t]})));return c.length?r.createElement(i.BaseCard,h({},e,{title:"Samples"}),E?r.createElement(s.A,{color:"error"},`${E}`):null,r.createElement(u.A,{control:r.createElement(m.A,{checked:y,onChange:e=>{O(e.target.checked)}}),label:r.createElement(s.A,{variant:"body2"},"Show options")}),y?r.createElement(g,{setFilter:a,columns:A,filter:l}):null,r.createElement(d.z,{autoHeight:!0,rows:b,hideFooter:b.length<100,columns:A,disableRowSelectionOnClick:!0,rowHeight:25,columnHeaderHeight:35,disableColumnMenu:!0,slots:{toolbar:y?f.O:null},slotProps:{toolbar:{printOptions:{disableToolbarButton:!0}}}})):null}var b=n(87731);function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w.apply(null,arguments)}const v=(0,r.lazy)((()=>n.e(6587).then(n.bind(n,46587))));function y({locStrings:e,model:t}){const n=(0,p.getSession)(t);return r.createElement("div",null,r.createElement(s.A,null,"Link to linear view of breakend endpoints"),r.createElement("ul",null,e.map(((e,l)=>r.createElement("li",{key:`${e}-${l}`},r.createElement(b.A,{href:"#",onClick:r=>{r.preventDefault();const{view:l}=t;try{if(!l)throw new Error("No view associated with this feature detail panel anymore");l.navToLocString?.(e)}catch(e){console.error(e),n.notify(`${e}`)}}},`LGV - ${e}`))))))}function O({locStrings:e,model:t,feature:n,viewType:l}){const a=(0,p.getSession)(t),i=new p.SimpleFeature(n);return r.createElement("div",null,r.createElement(s.A,null,"Launch split views with breakend source and target"),r.createElement("ul",null,e.map((e=>r.createElement("li",{key:JSON.stringify(e)},r.createElement(b.A,{href:"#",onClick:e=>{e.preventDefault(),a.queueDialog((e=>[v,{handleClose:e,model:t,feature:i,viewType:l}]))}},`${n.refName}:${n.start} // ${e} (split view)`))))))}function S(e){const{model:t,locStrings:n,feature:l}=e,a=(0,p.getSession)(t),{pluginManager:o}=(0,p.getEnv)(a);let s;try{s=o.getViewType("BreakpointSplitView")}catch(e){}return r.createElement(i.BaseCard,w({},e,{title:"Breakends"}),r.createElement(y,{model:t,locStrings:n}),s?r.createElement(O,{viewType:s,model:t,locStrings:n,feature:l}):null)}function A({rows:e,columns:t}){const[n,l]=(0,r.useState)(!1),a=t.map((t=>(0,p.measureGridWidth)(e.map((e=>e[t.field])))));return e.length?r.createElement("div",null,r.createElement(u.A,{control:r.createElement(m.A,{checked:n,onChange:e=>{l(e.target.checked)}}),label:r.createElement(s.A,{variant:"body2"},"Show options")}),r.createElement(d.z,{rowHeight:25,rows:e,columns:t.map(((e,t)=>({...e,width:a[t]}))),slots:{toolbar:n?f.O:null}})):null}function k({data:e,fields:t,title:n}){return e.length?r.createElement(i.BaseCard,{title:n},r.createElement(A,{rows:e.map(((e,n)=>({id:n,...Object.fromEntries(e.split("|").map(((e,n)=>[t[n],e])))}))),columns:t.map((e=>({field:e})))})):null}const C={CHROM:"chromosome: An identifier from the reference genome",POS:"position: The reference position, with the 1st base having position 1",ID:"identifier: Semi-colon separated list of unique identifiers where available",REF:"reference base(s): Each base must be one of A,C,G,T,N (case insensitive).",ALT:"alternate base(s): Comma-separated list of alternate non-reference alleles",QUAL:"quality: Phred-scaled quality score for the assertion made in ALT",FILTER:"filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail"};function N(){return N=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},N.apply(null,arguments)}function F({descriptions:e,feature:t}){const n=e?.INFO?.ANN?.Description,l=n?.match(/.*Functional annotations:'(.*)'$/)?.[1]?.split("|")||[],a=t.INFO?.ANN||[];return r.createElement(k,{fields:l,data:a,title:"Variant ANN field"})}function T({descriptions:e,feature:t}){const n=e?.INFO?.CSQ?.Description,l=n?.match(/.*Format: (.*)/)?.[1]?.split("|")||[],a=t.INFO?.CSQ||[];return r.createElement(k,{fields:l,data:a,title:"Variant CSQ field"})}const j=(0,l.observer)((function(e){const{model:t}=e,{featureData:n,descriptions:l}=t,s=JSON.parse(JSON.stringify(n)),{samples:c,...u}=s;return r.createElement(a.A,{"data-testid":"variant-side-drawer"},r.createElement(i.FeatureDetails,N({feature:u,descriptions:{...C,...l}},e)),r.createElement(T,{feature:u,descriptions:l}),r.createElement(F,{feature:u,descriptions:l}),"breakend"===s.type?r.createElement(S,{feature:s,locStrings:s.ALT.map((e=>(0,o.h)(e)?.MatePosition||"")),model:t}):null,"translocation"===s.type?r.createElement(S,{feature:s,model:t,locStrings:[`${s.INFO.CHR2[0]}:${s.INFO.END}`]}):null,r.createElement(E,N({feature:s},e,{descriptions:l})))}))}}]);
//# sourceMappingURL=9436.4548c068.chunk.js.map