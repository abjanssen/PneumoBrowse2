"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[8442],{67057:(t,e,a)=>{a.d(e,{pN:()=>s,a9:()=>c,qt:()=>l,OO:()=>r});class n{constructor(t=[],e){this.data={};const{checkIndent:a=!0,skipValidation:n=!1}=e??{},i="string"==typeof t?t.trimEnd().split(/\r?\n/):t;let o,r;for(const t of i){if(""===t)throw new Error("Invalid stanza, contained blank lines");if(t.trim().startsWith("#"))continue;if(t.trimEnd().endsWith("\\")){const e=t.trimEnd().slice(0,-1);r?r+=e.trimStart():r=e;continue}let e=t;if(r&&(e=r+e.trimStart(),r=void 0),o??a){const t=/^([ \t]+)/.exec(e);if(void 0===o)t?[,o]=t:o="";else if(""===o&&null!==t||o&&t&&o!==t[1])throw new Error("Inconsistent indentation of stanza")}else o="";const n=e.trim(),i=n.indexOf(" ");if(-1===i){if(!this.nameKey)throw new Error("First line in a stanza must have both a key and a value");if(this.data[n])continue;this.data[n]="";continue}const s=n.slice(0,i),c=n.slice(i+1);if(this.data[s]&&c!==this.data[s])throw new Error(`Got duplicate key with a different value in stanza: "${s}" key has both ${this.data[s]} and ${c}`);this.nameKey||(this.nameKey=s,this.name=n.slice(i+1)),this.data[s]=c}n||this.validate()}validate(){}}class i{constructor(t=[],e){this.data={};const{checkIndent:a=!0,skipValidation:i=!1}=e??{},o="string"==typeof t?t.trimEnd().split(/(?:[\t ]*\r?\n){2,}/):t;for(const t of o){if(""===t)throw new Error("Invalid stanza, was empty");if(t.startsWith("include"))continue;if(t.trim().startsWith("#")&&t.trimEnd().split(/\r?\n/).map(t=>t.trim()).every(t=>t.startsWith("#")))continue;const e=new n(t,{checkIndent:a});if(this.nameKey){if(e.nameKey!==this.nameKey)throw new Error(`The first line in each stanza must have the same key. Saw both ${this.nameKey} and ${e.nameKey}`)}else this.nameKey=e.nameKey;if(!e.name)throw new Error(`No stanza name: ${e.name}`);if(this.data[e.name])throw new Error(`Got duplicate stanza name: ${e.name}`);this.data[e.name]=e}i||this.validate()}validate(){}}function o(t,e,a=""){const n=[];for(const a of e)t.data[a]||n.push(a);if(n.length>0)throw new Error(`${a} is missing required entr${1===n.length?"y":"ies"}: ${n.join(", ")}`)}class r extends i{constructor(t,e){super(t,{...e,checkIndent:!1})}validate(){if("track"!==this.nameKey)throw new Error(`trackDb has "${this.nameKey}" instead of "track" as the first line in each track`);for(const[t,e]of Object.entries(this.data)){const a=Object.keys(e.data);o(e,["track","shortLabel"],`Track ${t}`);const n=new Set(["superTrack","compositeTrack","container","view"]);if(!a.some(t=>n.has(t))){if(!a.includes("bigDataUrl"))throw new Error(`Track ${t} is missing required key "bigDataUrl"`);if(!a.includes("type")&&!Object.keys(this.settings(t)).includes("type"))throw new Error(`Neither track ${t} nor any of its parent tracks have the required key "type"`)}let i=t;do{i=this.data[i]?.parent,i&&([i]=i.split(" "))}while(i);const r=this.data[t];r&&(this.data[t]=r)}}settings(t){if(!this.data[t])throw new Error(`Track ${t} does not exist`);const e=[t];let a=t;do{a=this.data[a]?.parent,a&&e.push(a)}while(a);const n={};e.reverse();for(const t of e){const e=this.data[t];if(e)for(const[t,a]of Object.entries(e))n[t]=a}return n}}class s extends i{validate(t=["genome","trackDb"]){if("genome"!==this.nameKey)throw new Error('Genomes file must begin with a line like "genome <genome_name>"');for(const[e,a]of Object.entries(this.data))o(a,t,`genome ${e}`)}}class c extends n{validate(){o(this,["hub","shortLabel","longLabel","genomesFile","email"],"Hub file")}}class l{constructor(t){const[e,a,...i]=t.trimEnd().split(/(?:[\t ]*\r?\n){2,}/);this.hubData=new n(e),this.validateHub(),this.genome=new n(a),this.validateGenomeSection(),this.tracks=new r(i.join("\n\n"),{skipValidation:!1})}validateHub(){if("hub"!==this.hubData.nameKey)throw new Error('Hub file must begin with a line like "hub <hub_name>"');o(this.hubData,["hub","shortLabel","longLabel","email"])}validateGenomeSection(){if("genome"!==this.genome.nameKey)throw new Error('Genomes file must begin with a line like "genome <genome_name>"')}}},78442:(t,e,a)=>{a.d(e,{doConnect:()=>b});var n=a(67057),i=a(68584),o=a(99546),r=a(99834),s=a(32761),c=a(91468);async function l(t){const e=await(0,r.openLocation)(t).readFile("utf8");return new n.OO(e)}function d(t,e){return{uri:new URL(t,new URL(e.uri,e.baseUri)).href,locationType:"UriLocation"}}function h(t,e,a){return d(t||e,a)}function m(t,e){return t?{uri:t,locationType:"LocalPath"}:{uri:e,locationType:"UriLocation"}}function u(t,e){return new URL(t,e).href}function p({trackDb:t,trackDbLoc:e,assemblyName:a,sequenceAdapter:n,baseUrl:i}){const r=new Set(["superTrack","compositeTrack","container","view"]);return Object.entries(t.data).map(([a,o])=>{const{data:s}=o;if(!Object.keys(s).some(t=>r.has(t))){const r=[];let s=a;do{s=t.data[s]?.data.parent||"",s&&(s=s.split(" ")[0],r.push(t.data[s]))}while(s);return r.reverse(),{metadata:{...o.data,...o.data.html?{html:`<a href="${u(o.data.html,i)}">${o.data.html}</a>`}:{}},category:[o.data.group,...r.map(t=>t?.data.group).filter(t=>!!t)].filter(t=>!!t),...f({track:o,trackDbLoc:e,trackDb:t,sequenceAdapter:n})}}}).filter(o.notEmpty).map(t=>({...t,trackId:`ucsc-trackhub-${(0,o.objectHash)(t)}`,assemblyNames:[a]}))}function f({track:t,trackDbLoc:e,trackDb:a,sequenceAdapter:n}){const{data:i}=t,r=i.parent||"",s=i.bigDataUrl||"",l=i.bigDataIndex||"",u=i.type||a.data[r]?.data.type||"",p=(i.shortLabel||"")+(s.includes("xeno")?" (xeno)":""),f=(0,o.isUriLocation)(e);let b=u.split(" ")[0]||"";"bam"===b&&s.toLowerCase().endsWith("cram")&&(b="cram");const w=f?d(s,e):m(s);return"bam"===b?{type:"AlignmentsTrack",name:p,description:i.longLabel,adapter:{type:"BamAdapter",bamLocation:w,index:{location:f?h(l,`${s}.bai`,e):m(l,`${s}.bai`)}}}:"cram"===b?{type:"AlignmentsTrack",name:p,description:i.longLabel,adapter:{type:"CramAdapter",cramLocation:w,craiLocation:f?h(l,`${s}.crai`,e):m(l,`${s}.crai`),sequenceAdapter:n}}:"bigWig"===b?{type:"QuantitativeTrack",name:p,description:i.longLabel,adapter:{type:"BigWigAdapter",bigWigLocation:w}}:b.startsWith("big")?{type:"FeatureTrack",name:p,description:i.longLabel,adapter:{type:"BigBedAdapter",bigBedLocation:w}}:"vcfTabix"===b?{type:"VariantTrack",name:p,description:i.longLabel,adapter:{type:"VcfTabixAdapter",vcfGzLocation:w,index:{location:f?h(l,`${s}.tbi`,e):m(l,`${s}.tbi`)}}}:"hic"===b?{type:"HicTrack",name:p,description:i.longLabel,adapter:{type:"HicAdapter",hicLocation:w}}:(0,c.generateUnknownTrackConf)(p,b)}async function b(t){const{pluginManager:e}=(0,o.getEnv)(t),a=(0,o.getSession)(t),c=[];try{const o=(0,i.getConf)(t,"hubTxtLocation"),d=await(0,r.openLocation)(o).readFile("utf8"),h=u(o.uri,o.baseUri),{assemblyManager:m}=a;if(d.includes("useOneFile on")){const r=new n.qt(d),{genome:c,tracks:l}=r,f=c.name,b=c.data.description;m.get(f)||a.addSessionAssembly({name:f,displayName:b,sequence:{type:"ReferenceSequenceTrack",metadata:{...c.data,...c.data.htmlPath?{htmlPath:`<a href="${u(c.data.htmlPath,h)}">${c.data.htmlPath}</a>`}:{}},trackId:`${f}-${(0,s.Ak)()}`,adapter:{type:"TwoBitAdapter",twoBitLocation:{uri:u(c.data.twoBitPath,h)},chromSizesLocation:{uri:u(c.data.chromSizes,h)}}},...c.data.chromAliasBb?{refNameAliases:{adapter:{type:"BigBedAdapter",uri:u(c.data.chromAliasBb,h)}}}:{}});const w=m.get(f),g=p({trackDb:l,trackDbLoc:o,assemblyName:f,sequenceAdapter:(0,i.getConf)(w,["sequence","adapter"]),baseUrl:h});t.addTrackConfs(g),e.evaluateExtensionPoint("LaunchView-LinearGenomeView",{session:a,assembly:f,tracklist:!0,loc:c.data.defaultPos})}else{const e=new n.a9(d).data.genomesFile;if(!e)throw new Error("genomesFile not found on hub");const s=u(o.uri,o.baseUri),h=s?{uri:u(e,s),locationType:"UriLocation"}:{localPath:e,locationType:"LocalPathLocation"},f=await async function(t){const e=await(0,r.openLocation)(t).readFile("utf8");return new n.pN(e)}(h),b={};for(const[a,n]of Object.entries(f.data)){const o=(0,i.getConf)(t,"assemblyNames");if(o.length>0&&!o.includes(a))continue;const r=m.get(a);if(!r){c.push(a);continue}const d=n.data.trackDb;if(!d)throw new Error("genomesFile not found on hub");const h=new URL(e,s),u=s?{uri:new URL(d,h).href,locationType:"UriLocation"}:{localPath:d,locationType:"LocalPathLocation"},f=p({trackDb:await l(u),trackDbLoc:u,assemblyName:a,sequenceAdapter:(0,i.getConf)(r,["sequence","adapter"]),baseUrl:s});t.addTrackConfs(f),b[a]=f.length}const w=Object.entries(b),g=w.length?`Loaded data from these assemblies: ${w.map(([t,e])=>`${t} (${e} tracks)`).join(", ")}`:"",y=c.length?`Skipped data from these assemblies: ${c.join(", ")}`:"";a.notify([g,y].filter(t=>!!t).join(". "),"success")}}catch(e){console.error(e),a.notifyError(`${(0,i.getConf)(t,"name")}: "${e}"`,e),a.breakConnection?.(t.configuration)}}}}]);
//# sourceMappingURL=8442.74388d18.chunk.js.map