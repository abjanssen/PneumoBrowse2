{"version":3,"file":"static/js/5677.e5952d88.chunk.js","mappings":"sjBAeO,MAAMA,EAAmBC,IAC9B,MAAM,MAAEC,EAAQ,gBAAmBD,EACnC,OACEE,EAAAA,cAACC,EAAAA,QAAQC,EAAA,GAAKJ,EAAK,CAAEC,MAAOA,IAC1BC,EAAAA,cAACG,EAAAA,EAAgBL,GACR,EAIFM,EAAkBN,IAC7B,MAAM,QAAEO,GAAYP,EACpB,OACEE,EAAAA,cAACC,EAAAA,QAAQC,EAAA,GAAKJ,EAAK,CAAEC,MAAM,eACzBC,EAAAA,cAACM,EAAAA,QAAUJ,EAAA,GAAKJ,EAAK,CAAES,WAAYF,KAC1B,EA8Bf,GAnB0BG,EAAAA,EAAAA,WAAS,UAAU,MAAEC,IAC7C,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,EAE/B,GAAIC,EACF,OAAOV,EAAAA,cAACY,EAAAA,aAAY,CAACF,MAAOA,IACvB,GAAKC,EAEL,CAKL,MAAME,GAAeC,EAAAA,EAAAA,IAAyBH,GAC9C,OAAOI,EAAAA,EAAAA,IAAQF,GAAgB,KAC7Bb,EAAAA,cAACgB,EAAAA,QAAc,CAACP,MAAOA,EAAOJ,QAASQ,GAE3C,CAVE,OAAO,IAWX,G,6FCjDA,MAgBA,GAhB0CL,EAAAA,EAAAA,WAAS,UAAU,MAC3DC,IAIA,MAAM,SAAEQ,EAAQ,SAAEC,GAAaC,KAAKC,MAAMD,KAAKE,UAAUZ,EAAME,cAC/D,OACEX,EAAAA,cAACsB,EAAAA,EAAK,CAAC,cAAY,yBACjBtB,EAAAA,cAACH,EAAAA,gBAAe,CAACE,MAAM,YAAYM,QAASY,IAC5CjB,EAAAA,cAACH,EAAAA,gBAAe,CAACE,MAAM,YAAYM,QAASa,IAC5ClB,EAAAA,cAACI,EAAAA,eAAc,CAACL,MAAM,uBAAuBM,QAASY,IACtDjB,EAAAA,cAACI,EAAAA,eAAc,CAACL,MAAM,uBAAuBM,QAASa,IAG5D,G","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../plugins/breakpoint-split-view/src/BreakpointAlignmentsFeatureDetail/BreakpointAlignmentsFeatureDetail.tsx"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\n\n// utils\nimport { ErrorMessage } from '../../ui'\nimport { BaseCardProps, BaseProps } from '../types'\nimport { isEmpty } from './util'\nimport { replaceUndefinedWithNull } from '../util'\n\n// locals\nimport Attributes from './Attributes'\nimport BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\nimport FeatureDetails from './FeatureDetails'\n\nexport const BaseCoreDetails = (props: BaseProps) => {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n\nexport const BaseAttributes = (props: BaseProps) => {\n  const { feature } = props\n  return (\n    <BaseCard {...props} title=\"Attributes\">\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nconst BaseFeatureDetail = observer(function ({ model }: BaseInputProps) {\n  const { error, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  } else if (!featureData) {\n    return null\n  } else {\n    // replacing undefined with null helps with allowing fields to be hidden,\n    // setting null is not allowed by jexl so we set it to undefined to hide.\n    // see config guide. this replacement happens both here and when\n    // snapshotting the featureData\n    const featureData2 = replaceUndefinedWithNull(featureData)\n    return isEmpty(featureData2) ? null : (\n      <FeatureDetails model={model} feature={featureData2} />\n    )\n  }\n})\n\nexport default BaseFeatureDetail\n\nexport { default as BaseCard } from './BaseCard'\nexport { default as FeatureDetails } from './FeatureDetails'\n","import React from 'react'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport {\n  BaseCoreDetails,\n  BaseAttributes,\n} from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\n\nconst BreakpointAlignmentsFeatureDetail = observer(function ({\n  model,\n}: {\n  model: { featureData: Record<string, unknown> }\n}) {\n  const { feature1, feature2 } = JSON.parse(JSON.stringify(model.featureData))\n  return (\n    <Paper data-testid=\"alignment-side-drawer\">\n      <BaseCoreDetails title=\"Feature 1\" feature={feature1} />\n      <BaseCoreDetails title=\"Feature 2\" feature={feature2} />\n      <BaseAttributes title=\"Feature 1 attributes\" feature={feature1} />\n      <BaseAttributes title=\"Feature 2 attributes\" feature={feature2} />\n    </Paper>\n  )\n})\n\nexport default BreakpointAlignmentsFeatureDetail\n"],"names":["BaseCoreDetails","props","title","React","BaseCard","_extends","CoreDetails","BaseAttributes","feature","Attributes","attributes","observer","model","error","featureData","ErrorMessage","featureData2","replaceUndefinedWithNull","isEmpty","FeatureDetails","feature1","feature2","JSON","parse","stringify","Paper"],"sourceRoot":""}