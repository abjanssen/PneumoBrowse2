{"version":3,"file":"static/js/4788.ee5b0a7d.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCoreDetails.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import { isValidElement } from 'react'\n\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SanitizedHTML } from '../../ui'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    slots,\n    slotProps,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AccordionSummaryRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      focusRipple: false,\n      disableRipple: true,\n      disabled,\n      'aria-expanded': expanded,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onClick: event => {\n        handlers.onClick?.(event);\n        handleChange(event);\n      }\n    })\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AccordionSummaryContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ExpandIconWrapperSlot, expandIconWrapperSlotProps] = useSlot('expandIconWrapper', {\n    className: classes.expandIconWrapper,\n    elementType: AccordionSummaryExpandIconWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(ContentSlot, {\n      ...contentSlotProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(ExpandIconWrapperSlot, {\n      ...expandIconWrapperSlotProps,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    expandIconWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    content: PropTypes.elementType,\n    expandIconWrapper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\n\nimport type { BaseProps } from '../types'\n\nexport default function BaseCoreDetails(props: BaseProps) {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n"],"names":["d","getAccordionSummaryUtilityClass","slot","useStyles","makeStyles","theme","fieldValue","wordBreak","maxHeight","fontSize","padding","spacing","overflow","BasicValue","value","classes","isLink","exec","_jsx","className","children","isValidElement","Link","href","SanitizedHTML","html","isObject","JSON","stringify","String","field","display","flexWrap","SimpleField","name","description","prefix","width","_jsxs","FieldName","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","cx","val","join","Tooltip","title","placement","style","AccordionSummaryRoot","overridesResolver","props","styles","root","transition","duration","transitions","shortest","minHeight","create","focusVisible","backgroundColor","vars","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","expanded","AccordionSummaryContent","content","textAlign","flexGrow","margin","AccordionSummaryExpandIconWrapper","expandIconWrapper","color","active","transform","inProps","ref","expandIcon","focusVisibleClassName","onClick","slots","slotProps","other","toggle","A","ownerState","useUtilityClasses","externalForwardedProps","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","focusRipple","disableRipple","getSlotProps","handlers","event","handleChange","ContentSlot","contentSlotProps","ExpandIconWrapperSlot","expandIconWrapperSlotProps","Position","feature","strand","strandMap","str","loc","assembleLocString","_Fragment","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","Object","entries","type","map","key","filter","AccordionDetailsRoot","getAccordionDetailsUtilityClass","expansionPanelDetails","icon","tertiary","contrastText","BaseCard","defaultExpanded","Accordion","AccordionSummary","ExpandMore","Typography","variant","AccordionDetails","BaseCoreDetails"],"sourceRoot":""}