{"version":3,"file":"static/js/569.b9fe12a1.chunk.js","mappings":"4XAIO,SAAAA,EAAAC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,OAAAC,EAMCC,EACM,OAPPH,EAAA,KAAAI,OAAAC,IAAA,8BAGDH,GAAAI,EAAAA,EAAAA,KAAA,QACOC,KAAA,eACHC,EAAA,qIACFR,EAAA,GAAAE,GAAAA,EAAAF,EAAA,GAAAA,EAAA,KAAAD,GAJJI,GAAAG,EAAAA,EAAAA,KAACG,EAAAA,EAAO,IAAKV,EAAKW,SAChBR,IAIQF,EAAA,GAAAD,EAAAC,EAAA,GAAAG,GAAAA,EAAAH,EAAA,GALVG,CAKU,CAIP,SAAAQ,EAAAZ,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,OAAAC,EAMCC,EACM,OAPPH,EAAA,KAAAI,OAAAC,IAAA,8BAGDH,GAAAI,EAAAA,EAAAA,KAAA,QACOC,KAAA,eACHC,EAAA,4eACFR,EAAA,GAAAE,GAAAA,EAAAF,EAAA,GAAAA,EAAA,KAAAD,GAJJI,GAAAG,EAAAA,EAAAA,KAACG,EAAAA,EAAO,IAAKV,EAAKW,SAChBR,IAIQF,EAAA,GAAAD,EAAAC,EAAA,GAAAG,GAAAA,EAAAH,EAAA,GALVG,CAKU,CCPd,MAmIA,GAnIwBS,EAAAA,EAAAA,UAAS,UAAU,MACzCC,IAIA,OACEC,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACTC,QAASA,KACPH,EAAMI,WACNP,UAEFJ,EAAAA,EAAAA,KAACY,EAAAA,EAAO,OAGVZ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACTC,QAASA,KACPH,EAAMM,UACNT,UAEFJ,EAAAA,EAAAA,KAACc,EAAAA,EAAM,OAGTd,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACTC,QAASA,IAAMH,EAAMQ,wBACrBC,MAAM,sBAAqBZ,UAE3BJ,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,OAGpBjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAmB,CAClBC,UAAW,CACT,CACEC,MAAO,kCACPC,KAAMC,EAAAA,EACNZ,QAASA,KACPH,EAAMgB,eAGV,CACEH,MAAO,mCACPC,KAAMG,EAAAA,EACNd,QAASA,KACPH,EAAMkB,2BAGV,CACEL,MAAO,mBACPC,KAAMK,EAAAA,EACNhB,QAASA,KACPH,EAAMoB,mBAGV,CACEC,KAAM,WACNR,MAAO,aACPS,QAAStB,EAAMuB,UACfpB,QAASA,KACPH,EAAMwB,cAAcxB,EAAMuB,aAG9B,CACEV,MAAO,mBACPQ,KAAM,WACNC,QAAStB,EAAMyB,eACftB,QAASA,KACPH,EAAM0B,mBAAmB1B,EAAMyB,kBAGnC,CACEZ,MAAO,sBACPc,QAAS,CACP,CACEd,MACE,0DACFC,KAAM7B,EACNoC,KAAM,QACNC,QAA8B,SAArBtB,EAAM4B,WACfzB,QAASA,KACPH,EAAM6B,cAAc,UAGxB,CACEhB,MACE,0DACFC,KAAMhB,EACNuB,KAAM,QACNC,QAA8B,cAArBtB,EAAM4B,WACfzB,QAASA,KACPH,EAAM6B,cAAc,iBAK5B,CACEhB,MAAO,oBACPc,QAAS,CACP,CACEd,MAAO,YACPQ,KAAM,QACNC,QAA6B,QAApBtB,EAAM8B,UACf3B,QAASA,KACPH,EAAM+B,aAAa,SAGvB,CACElB,MAAO,aACPQ,KAAM,QACNC,QAA6B,SAApBtB,EAAM8B,UACf3B,QAASA,KACPH,EAAM+B,aAAa,UAGvB,CACElB,MAAO,UACPQ,KAAM,QACNC,QAA6B,SAApBtB,EAAM8B,UACf3B,QAASA,KACPH,EAAM+B,aAAa,aAK3BlC,UAEFJ,EAAAA,EAAAA,KAACuC,EAAAA,EAAQ,QAIjB,G,0BCzIA,MAAMC,GAAgBC,EAAAA,EAAAA,MAAK,IAAM,oEAwCjC,GAtCwBnC,EAAAA,EAAAA,UAAS,UAAU,MACzCC,IAIA,MAAMmC,EAAgBnC,EAAMoC,OAAOC,OAAOC,GAAKA,EAAEC,SAAS,GAAGC,UAAUC,SAChEC,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,IAC5BC,EAAMC,IAAWF,EAAAA,EAAAA,WAAS,GACjC,OAAOT,EAAcM,SAAWI,GAC9B5C,EAAAA,EAAAA,MAAC8C,EAAAA,EAAK,CAACC,SAAS,UAASnD,SAAA,CAAC,yBACD,KACvBJ,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAASA,KACPwC,GAAS,IACT9C,SACH,cAGA6C,GACCjD,EAAAA,EAAAA,KAACwC,EAAa,CACZE,cAAeA,EACfe,YAAaA,KACXP,GAAS,MAGX,MACJlD,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLE,QAAQ,YACRhD,QAASA,KACP2C,GAAQ,IACRjD,SACH,eAID,IACN,G,2DCjCA,MAAMuD,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,KAAM,CACJC,QAAS,OACTC,oBAAqB,iBACrBC,OAAQ,EACRC,SAAU,WACVC,MAAO,GACPC,OAAQ,IACRC,IAAK,IAEP/C,KAAM,CACJgD,QAAS,EACTL,OAAQ,KAwEZ,GApEmB1D,EAAAA,EAAAA,UAAS,UAAoB,MAC9CC,IAIA,MAAM,QAAE+D,GAAYX,IACpB,OACEnD,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAACC,UAAWF,EAAQT,KAAMY,UAAW,EAAErE,SAAA,EAC3CJ,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMmE,MAAMC,OAAO,MACnBvE,UAEFJ,EAAAA,EAAAA,KAAC4E,EAAAA,EAAW,OAEd5E,EAAAA,EAAAA,KAAA,WAEAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMsE,MAAMF,QAAQ,MACpBvE,UAEFJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAS,OAEZ9E,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMsE,MAAMF,OAAO,MACnBvE,UAEFJ,EAAAA,EAAAA,KAAC+E,EAAAA,EAAU,OAGb/E,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMmE,MAAMC,QAAQ,MACpBvE,UAEFJ,EAAAA,EAAAA,KAACgF,EAAAA,EAAa,OAEhBhF,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMM,UACNT,UAEFJ,EAAAA,EAAAA,KAACc,EAAAA,EAAM,OAETd,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CACT+D,UAAWF,EAAQjD,KACnBX,QAASA,KACPH,EAAMI,WACNP,UAEFJ,EAAAA,EAAAA,KAACY,EAAAA,EAAO,QAIhB,GCnFM+C,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BqB,GAAI,CACFnB,QAAS,OACToB,WAAY,SACZC,WAAY,IAEdC,OAAQ,CACNC,SAAU,GAEZC,UAAW,CACTxB,QAAS,OACTG,SAAU,cAsCd,GAlCsB3D,EAAAA,EAAAA,UAAS,UAAU,MACvCC,EAAK,UACLgF,IAKA,MAAM,QAAEjB,GAAYX,KACd,MAAEkB,EAAK,MAAEH,EAAK,eAAE1C,GAAmBzB,EACzC,OACEC,EAAAA,EAAAA,MAAA,OAAKgE,UAAWF,EAAQgB,UAAUlF,SAAA,EAChCJ,EAAAA,EAAAA,KAACwF,EAAe,CAACjF,MAAOA,KACxBC,EAAAA,EAAAA,MAACiF,EAAAA,EAAU,CAACjB,UAAWF,EAAQW,GAAIvB,QAAQ,QAAQgC,MAAM,gBAAetF,SAAA,CAAC,MACnEyE,EAAMc,cAAcC,KAAK,KAAK,KAAEC,EAAAA,EAAAA,iBAAgBhB,EAAMiB,SAC1D9F,EAAAA,EAAAA,KAAA,SAAM,MACF0E,EAAMiB,cAAcC,KAAK,KAAK,KAAEC,EAAAA,EAAAA,iBAAgBnB,EAAMoB,WAE3DP,GACC/E,EAAAA,EAAAA,MAACiF,EAAAA,EAAU,CACTjB,UAAWF,EAAQW,GACnBvB,QAAQ,QACRgC,MAAM,gBAAetF,SAAA,CAEpB,UAASyF,EAAAA,EAAAA,iBAAgBhB,EAAMkB,QAAUR,EAAUS,SAAS,KAAChG,EAAAA,EAAAA,KAAA,SAC7D,WAAU6F,EAAAA,EAAAA,iBAAgBnB,EAAMqB,QAAUR,EAAUU,aAErD,MACJjG,EAAAA,EAAAA,KAAA,OAAKwE,UAAWF,EAAQc,UACxBpF,EAAAA,EAAAA,KAACkG,EAAe,CAAC3F,MAAOA,IACvByB,GAAiBhC,EAAAA,EAAAA,KAACmG,EAAU,CAAC5F,MAAOA,IAAY,OAGvD,G,gFCxDO,SAAS6F,GAAW,YACzBC,EAAW,UACXC,EAAS,UACTC,EAAS,aACTC,EAAY,kBACZC,EAAiB,aACjBC,EAAY,aACZC,IAUA,GAAoB,SAAhBN,EACF,MAAO,CACLzE,KAAM,aACNgF,YAAaJ,EACbK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,SAAhBF,EACT,MAAO,CACLzE,KAAM,iBACNmF,YAAaP,EACbK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLzE,KAAM,eACNoF,cAAeR,EACfK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,WAAhBF,EACT,MAAO,CACLzE,KAAM,eACNqF,cAAeT,EACfK,cAAeP,EACfQ,eAAgBP,GAEb,GAAoB,aAAhBF,EACT,MAAO,CACLzE,KAAM,uBACNsF,sBAAuBV,EACvBE,eACAC,eACAhB,cAAe,CAACW,EAAWC,IAExB,GAAoB,oBAAhBF,EACT,MAAO,CACLzE,KAAM,6BACNuF,4BAA6BX,EAC7BE,eACAC,eACAhB,cAAe,CAACW,EAAWC,IAExB,GAAoB,YAAhBF,EACT,MAAO,CACLzE,KAAM,4BACNwF,cAAeZ,EACfa,MAAO,CACLC,SAAUb,GAEZd,cAAe,CAACW,EAAWC,IAG7B,MAAM,IAAIgB,MACR,0BAA0BlB,mDAGhC,C,0BC3EO,MAAMmB,EAAc,CACzB,OAAQ,8BACR,UAAW,8BACX,OAAQ,6BACR,SAAU,4BACV,SAAU,4BCaN7D,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7B6D,IAAK,CACH3D,QAAS,OACT4D,IAAK,IAEPC,KAAM,CACJ7D,QAAS,OACTC,oBAAqB,UACrB2D,IAAK,EACLxC,WAAY,YAyDhB,GArDuB5E,EAAAA,EAAAA,UAAS,UAAU,UACxCgG,EAAS,UACTC,EAAS,KACToB,EAAI,QACJC,EAAO,YACPvB,EAAW,YACXwB,EAAW,MACXC,EAAK,MACLC,IAEA,MAAM,QAAEzD,GAAYX,IACpB,OACEnD,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CAAK,wBAEHJ,EAAAA,EAAAA,KAACgI,EAAAA,EAAO,CACNhH,MACE6G,IACE7H,EAAAA,EAAAA,KAAA,QAAAI,SACGoH,EAAYnB,KAGlBjG,UAEDJ,EAAAA,EAAAA,KAACiI,EAAAA,EAAQ,UAGbzH,EAAAA,EAAAA,MAAA,OAAKgE,UAAWF,EAAQmD,IAAIrH,SAAA,EAC1BI,EAAAA,EAAAA,MAAA,OAAKgE,UAAWF,EAAQqD,KAAKvH,SAAA,EAC3BJ,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,KAAAI,SAAIuH,EAAOpB,EAAYD,OAEzBtG,EAAAA,EAAAA,KAAA,OAAAI,SAAM0H,KACN9H,EAAAA,EAAAA,KAAA,OAAAI,UACEJ,EAAAA,EAAAA,KAAA,KAAAI,SAAIuH,EAAOrB,EAAYC,OAEzBvG,EAAAA,EAAAA,KAAA,OAAAI,SAAM2H,QAER/H,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLE,QAAQ,YACRhD,QAASA,KACHkH,GACFA,GAASD,IAEXvH,SACH,eAMT,GCVA,GAnE4BE,EAAAA,EAAAA,UAAS,UAAU,UAC7CgG,EAAS,UACTC,EAAS,KACToB,EAAI,QACJC,EAAO,aACPpB,EAAY,gBACZ0B,EAAe,aACfxB,EAAY,gBACZyB,EAAe,aACfxB,EAAY,gBACZyB,EAAe,YACf/B,IAEA,OACE7F,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,OAAK6H,MAAO,CAAErE,OAAQ,IAAK5D,SAAA,CAAC,YAChBiG,EAAY,uFACe,KACrCrG,EAAAA,EAAAA,KAAA,KAAGsI,KAAK,kEAAiElI,SAAC,oBAI5EI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEJ,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXC,QAAM,EACNC,KAAMpC,EACNiB,SAAUd,EACVkC,YAAaC,IACXT,EAAgBS,OAGpB3I,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXC,QAAM,EACNC,KAAK,8CACLG,YAAY,GACZtB,SAAUZ,EACVgC,YAAaC,IACPR,GACFA,EAAgBQ,OAItB3I,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXC,QAAM,EACNC,KAAK,+CACLG,YAAY,GACZtB,SAAUX,EACV+B,YAAaC,IACPP,GACFA,EAAgBO,UAKxB3I,EAAAA,EAAAA,KAAC6I,EAAc,CACblB,KAAMA,EACNtB,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXqB,QAASA,EACTE,MAAM,iBACNC,MAAM,qBAId,GCnBA,IA9CsBzH,EAAAA,EAAAA,UAAS,UAAU,UACvCgG,EAAS,UACTC,EAAS,KACToB,EAAI,QACJC,EAAO,aACPpB,EAAY,gBACZ0B,EAAe,kBACfzB,EAA6B,qBAC7BqC,EAAuBA,OAAQ,YAC/BzC,IAEA,OACE7F,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,OAAK6H,MAAO,CAAErE,OAAQ,IAAK5D,SAAA,CAAC,YAChBiG,EAAY,uGAGxB7F,EAAAA,EAAAA,MAAA,OAAK6H,MAAO,CAAEU,SAAU,IAAK/E,OAAQ,UAAW5D,SAAA,EAC9CJ,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXE,KAAM,GAAGpC,aACTmC,QAAM,EACNI,YAAY,GACZtB,SAAUd,EACVkC,YAAaR,KAEflI,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXE,KAAM,GAAGpC,kCACTmC,QAAM,EACNI,YAAY,GACZtB,SAAUb,EACViC,YAAaI,KAEf9I,EAAAA,EAAAA,KAAC6I,EAAc,CACblB,KAAMA,EACNtB,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXqB,QAASA,EACTE,MAAM,iBACNC,MAAM,yBAKhB,GC3CMpE,IAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BoF,UAAW,CACTlF,QAAS,OACTmF,cAAe,SACfvB,IAAK,MAsCT,IAlC4BpH,EAAAA,EAAAA,UAAS,UAAU,UAC7CgG,EAAS,UACTC,EAAS,KACToB,EAAI,QACJC,EAAO,aACPpB,EAAY,gBACZ0B,EAAe,YACf7B,IAEA,MAAM,QAAE/B,GAAYX,KACpB,OACEnD,EAAAA,EAAAA,MAAA,OAAKgE,UAAWF,EAAQ0E,UAAU5I,SAAA,EAChCJ,EAAAA,EAAAA,KAACuI,EAAAA,aAAY,CACXE,KAAM,GAAGpC,aACTmC,QAAM,EACNI,YAAY,GACZtB,SAAUd,EACVkC,YAAaC,IACXT,EAAgBS,OAGpB3I,EAAAA,EAAAA,KAAC6I,EAAc,CACbvC,UAAWA,EACXC,UAAWA,EACXoB,KAAMA,EACNC,QAASA,EACTvB,YAAaA,EACbyB,MAAM,iBACNC,MAAM,sBAId,GCsHA,IA9IqCzH,EAAAA,EAAAA,UAAS,UAAU,MACtDC,EAAK,UACL+F,EAAS,UACTC,IAMA,MAAOoB,EAAMC,IAAWzE,EAAAA,EAAAA,WAAS,IAC1BwD,EAAcyB,IAAmBjF,EAAAA,EAAAA,aACjCuD,EAAcyB,IAAmBhF,EAAAA,EAAAA,aACjCqD,EAAc0B,IAAmB/E,EAAAA,EAAAA,aACjCsD,EAAmBqC,IAAwB3F,EAAAA,EAAAA,aAC3C+F,EAAOC,IAAYhG,EAAAA,EAAAA,UAAS,KAC5BiG,EAAOC,IAAYlG,EAAAA,EAAAA,YACpBmG,GCvCNC,EDuCyB/C,GCnCrB+C,EAAiBC,KAEfD,EAAiBE,WAEjBF,EAAiBd,UACnBiB,EAVC,IACLH,EDyCA,MAAMlD,EAAc6C,IAAUI,ECtBzB,SAAiBK,GACtB,MAAMC,EAAID,EAAIE,MAAM,KAAKC,MACzB,OAAOF,EAAI,IAAIA,IAAM,EACvB,CDmB2CG,CC7BpC,SAAiBT,GACtB,OAAOA,EAASU,SAAS,OAASV,EAASW,MAAM,GAAI,GAAKX,CAC5D,CD2BmDY,CAAQZ,IAAa,IA6CtE,OA3CAa,EAAAA,EAAAA,WAAU,KACR,IACE,GAAI3D,EAAc,CAChB,MAAM4D,EAAKd,EAAoBA,EC7B1BO,MAAM,KAAK,GAAIA,MAAM,KAAK,GAAIA,MAAM,KAAKC,MD6BH,UACrCO,EAAU,GAAGD,KAAME,KAAKC,qBAC9BlB,OAASK,GAETnJ,EAAMiK,0BAA0B,EAAG,CACjC5I,KAAM,aACNsH,MAAO,CACLmB,UACA5B,KAAM2B,EACNzE,cAAe,CAACY,EAAWD,GAC3B1E,KAAM,eACN6I,QAASrE,EAAW,CAClBC,cACAC,UAAWqB,EAAOpB,EAAYD,EAC9BC,UAAWoB,EAAOrB,EAAYC,EAC9BC,eACAC,oBACAC,eACAC,mBAIR,CACF,CAAE,MAAO+D,GACPC,QAAQvB,MAAMsB,GACdrB,EAASqB,EACX,GACC,CACD/C,EACApH,EACA+I,EACAhD,EACAC,EACAG,EACAC,EACAH,EACAC,EACAJ,KAIA7F,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAAC8D,MAAO,CAAEhE,QAAS,IAAKjE,SAAA,CAC3BgJ,GAAQpJ,EAAAA,EAAAA,KAAC4K,EAAAA,aAAY,CAACxB,MAAOA,IAAY,MAC1CpJ,EAAAA,EAAAA,KAACyF,EAAAA,EAAU,CAAC4C,MAAO,CAAEwC,UAAW,UAAWzK,SAAC,iMAK5CJ,EAAAA,EAAAA,KAAC8K,EAAAA,EAAU,CACT5B,MAAO7C,EACP0E,SAAUC,IACR7B,EAAS6B,EAAMC,OAAO/B,QACtB9I,UAEFJ,EAAAA,EAAAA,KAACkL,EAAAA,EAAI,CAAClC,WAAS,EAACmC,eAAe,SAAQ/K,SACpC,CACC,OACA,SACA,OACA,SACA,WACA,kBACA,WACAgL,IAAIC,IACJrL,EAAAA,EAAAA,KAACsL,EAAAA,EAAgB,CAEfpC,MAAOmC,EACPE,SAASvL,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,IACfpK,MAAOiK,GAHFA,SAQbrL,EAAAA,EAAAA,KAACkL,EAAAA,EAAI,CAAClC,WAAS,EAACmC,eAAe,SAAQ/K,SACpB,SAAhBiG,GACe,SAAhBA,GACgB,WAAhBA,GACgB,WAAhBA,GACErG,EAAAA,EAAAA,KAACyL,GAAmB,CAClBpF,YAAaA,EACbG,aAAcA,EACd0B,gBAAiBA,EACjB5B,UAAWA,EACXC,UAAWA,EACXoB,KAAMA,EACNC,QAASA,IAEO,aAAhBvB,GAA8C,oBAAhBA,GAChCrG,EAAAA,EAAAA,KAAC0L,EAAmB,CAClBrF,YAAaA,EACbG,aAAcA,EACd0B,gBAAiBA,EACjB5B,UAAWA,EACXC,UAAWA,EACXoB,KAAMA,EACNC,QAASA,EACTlB,aAAcA,EACdyB,gBAAiBA,EACjBxB,aAAcA,EACdyB,gBAAiBA,IAED,YAAhB/B,GACFrG,EAAAA,EAAAA,KAAC2L,GAAa,CACZtF,YAAaA,EACbG,aAAcA,EACd0B,gBAAiBA,EACjB5B,UAAWA,EACXC,UAAWA,EACXoB,KAAMA,EACNC,QAASA,EACTnB,kBAAmBA,EACnBqC,qBAAsBA,IAEtB,SAIZ,G,oDE1IA,MAmEA,IAnEmCxI,EAAAA,EAAAA,UAAS,UAAU,MACpDC,EAAK,UACL+F,EAAS,UACTC,IAMA,MAAMqF,GAAUC,EAAAA,EAAAA,YAAWtL,IACrB,OAAEoC,EAAM,cAAEmJ,GAAkBF,EAK5BG,EAJY,IACbpJ,KACCmJ,GAAiB,IAEUlJ,OAAOC,GA5B1C,SACEmJ,EACA1F,EACAC,GAEA,MAAMZ,GAAgBsG,EAAAA,GAAAA,gBAAeD,EAAO,iBAC5C,OACErG,EAAcuG,SAAS5F,IACvBX,EAAcuG,SAAS3F,IACvByF,EAAMpK,KAAKsK,SAAS,UAExB,CAkBIC,CAAgBtJ,EAAG0D,EAAWD,IAE1B8F,EAAaL,EAAe,IAAI1B,SAAW,IAC1CnB,EAAOC,IAAYhG,EAAAA,EAAAA,UAASiJ,GAiBnC,OAhBAjC,EAAAA,EAAAA,WAAU,KAIRhB,EAASiD,IACR,CAACA,KAEJjC,EAAAA,EAAAA,WAAU,KAGR5J,EAAMiK,0BAA0B,EAAG,CACjC5I,KAAM,gBACNsH,WAED,CAAC3I,EAAO2I,KAGT1I,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAAC8D,MAAO,CAAEhE,QAAS,IAAKjE,SAAA,EAC5BI,EAAAA,EAAAA,MAACiF,EAAAA,EAAU,CAAArF,SAAA,CAAC,6HAEwCJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,WAAU,2IAEH,KAC5DJ,EAAAA,EAAAA,KAACiB,EAAAA,GAAiB,OAEnB8K,EAAe/I,QACdhD,EAAAA,EAAAA,KAACqM,GAAAA,EAAM,CACLnD,MAAOA,EACP6B,SAAUC,IACR7B,EAAS6B,EAAMC,OAAO/B,QACtB9I,SAED2L,EAAeX,IAAIY,IAClBhM,EAAAA,EAAAA,KAACsM,GAAAA,EAAQ,CAAqBpD,MAAO8C,EAAM3B,QAAQjK,UAChDmM,EAAAA,GAAAA,cAAaP,EAAOJ,IADRI,EAAM3B,aAMzBrK,EAAAA,EAAAA,KAAC4K,EAAAA,aAAY,CACXxB,MAAO,+BAA+B9C,KAAaC,QAK7D,GCdA,IA7DsBjG,EAAAA,EAAAA,UAAS,UAAU,UACvCgG,EAAS,UACTC,EAAS,MACThG,IAMA,MAAOiM,EAAQC,IAAatJ,EAAAA,EAAAA,UAAS,aAOrC,OALAgH,EAAAA,EAAAA,WAAU,KACO,SAAXqC,GACFjM,EAAMiK,0BAA0B,EAAG,CAAE5I,KAAM,UAE5C,CAACrB,EAAOiM,KAEThM,EAAAA,EAAAA,MAAAkM,EAAAA,SAAA,CAAAtM,SAAA,EACEI,EAAAA,EAAAA,MAACmM,EAAAA,EAAW,CAAAvM,SAAA,EACVJ,EAAAA,EAAAA,KAAC4M,EAAAA,EAAS,CAACC,GAAG,cAAazM,SAAC,8CAG5BI,EAAAA,EAAAA,MAACsK,EAAAA,EAAU,CACTrD,KAAG,EACHyB,MAAOsD,EACPzB,SAAUC,IACRyB,EAAUzB,EAAMC,OAAO/B,QAEzB,kBAAgB,cAAa9I,SAAA,EAE7BJ,EAAAA,EAAAA,KAACsL,EAAAA,EAAgB,CAACpC,MAAM,OAAOqC,SAASvL,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,IAAKpK,MAAM,UACzDpB,EAAAA,EAAAA,KAACsL,EAAAA,EAAgB,CACfpC,MAAM,YACNqC,SAASvL,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,IACfpK,MAAM,oBAERpB,EAAAA,EAAAA,KAACsL,EAAAA,EAAgB,CACfpC,MAAM,SACNqC,SAASvL,EAAAA,EAAAA,KAACwL,EAAAA,EAAK,IACfpK,MAAM,oBAIA,WAAXoL,GACCxM,EAAAA,EAAAA,KAAC8M,GAA4B,CAC3BvM,MAAOA,EACPgG,UAAWA,EACXD,UAAWA,IAEX,KACQ,cAAXkG,GACCxM,EAAAA,EAAAA,KAAC+M,GAA0B,CACzBxM,MAAOA,EACP+F,UAAWA,EACXC,UAAWA,IAEX,OAGV,GCvDM5C,IAAYC,EAAAA,EAAAA,KAAAA,CAAaoJ,IAAS,CACtCC,oBAAqB,CACnB5I,QAAS2I,EAAME,QAAQ,GACvBlJ,OAAQ,UAEVmJ,iBAAkB,CAChBnH,MAAO,MACPhC,OAAQ,aA4GZ,IA1E0B1D,EAAAA,EAAAA,UAAS,UAAU,MAC3CC,IAIA,MAAM,QAAE+D,GAAYX,KACdiI,GAAUC,EAAAA,EAAAA,YAAWtL,IACrB,cAAEoF,GAAkBiG,GACnBrF,EAAW6G,IAAgBjK,EAAAA,EAAAA,UAASwC,EAAc,IAAM,KACxDW,EAAW+G,IAAgBlK,EAAAA,EAAAA,UAASwC,EAAc,IAAM,KACxDyD,EAAOC,IAAYlG,EAAAA,EAAAA,YAGpBmK,EAAelE,GAAS7I,EAAM6I,MACpC,OACE5I,EAAAA,EAAAA,MAAC+M,EAAAA,EAAS,CAAC/I,UAAWF,EAAQ2I,oBAAoB7M,SAAA,CAC/CkN,GAAetN,EAAAA,EAAAA,KAAC4K,EAAAA,aAAY,CAACxB,MAAOkE,IAAmB,MAExD9M,EAAAA,EAAAA,MAAC+D,EAAAA,EAAK,CAAC8D,MAAO,CAAEhE,QAAS,IAAKjE,SAAA,EAC5BJ,EAAAA,EAAAA,KAACyF,EAAAA,EAAU,CAAC4C,MAAO,CAAEwC,UAAW,UAAWzK,SAAC,wCAG5CI,EAAAA,EAAAA,MAAC0K,EAAAA,EAAI,CAAClC,WAAS,EAACkE,QAAS,EAAG/B,eAAe,SAASjG,WAAW,SAAQ9E,SAAA,EACrEJ,EAAAA,EAAAA,KAACwN,EAAAA,iBAAgB,CACfC,WAAW,kBACXC,SAAUnH,EACVqF,QAASA,EACTb,SAAU4C,IACRP,EAAaO,OAGjB3N,EAAAA,EAAAA,KAACwN,EAAAA,iBAAgB,CACfC,WAAW,kBACXC,SAAUpH,EACVsF,QAASA,EACTb,SAAU4C,IACRN,EAAaM,OAGjB3N,EAAAA,EAAAA,KAAC2M,EAAAA,EAAW,CAAAvM,UACVJ,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAASA,KAEN,WACC,IACE2I,OAASK,GA3E7B,UAAkB,MAChBnJ,EAAK,UACL+F,EAAS,UACTC,IAMA,MAAMqF,GAAUC,EAAAA,EAAAA,YAAWtL,IACrB,iCAAEqN,GAAqCrN,EAE7CA,EAAM8I,cAASK,IACfmE,EAAAA,EAAAA,aAAY,MACNC,EAAAA,EAAAA,wBAAuBlC,KACzBmC,EAAAA,EAAAA,MAAKH,GAAkCxC,IAAI,CAAC4C,EAAGC,KAC9B,eAAXD,EAAEpM,MACJgK,EAAQsC,aAAaF,EAAE9E,OACvB3I,EAAM4N,YAAYH,EAAE9E,OAAOmB,UACP,kBAAX2D,EAAEpM,MACXrB,EAAM6N,UAAUJ,EAAE9E,MAAO+E,KAK/B1N,EAAMoB,iBACNpB,EAAM8N,iBAAiB9H,EAAWD,IAEtC,CAgDoBgI,CAAS,CACPhI,YACAC,YACAhG,SAEJ,CAAE,MAAOmK,GACPC,QAAQvB,MAAMsB,GACdrB,EAASqB,EACX,CACD,EAZA,IAcHhH,QAAQ,YACRgC,MAAM,UAAStF,SAChB,iBAKLJ,EAAAA,EAAAA,KAACuO,GAAa,CACZhI,UAAWA,EACXD,UAAWA,EACX/F,MAAOA,SAKjB,GCvHMiO,IAAsB/L,EAAAA,EAAAA,MAAK,IAAM,iCACjCgM,IAA0BhM,EAAAA,EAAAA,MAAK,IAAM,iCAErCiM,GAAQ,CAAEC,KAAM,EAAGvK,IAAK,EAAG4B,MAAO,EAAGC,OAAQ,GAE7CtC,IAAYC,EAAAA,EAAAA,KAAAA,CAAaoJ,IAAS,CACtC5H,OAAQ,CACNwJ,WAAY,MACZC,QAAS,OAEXC,KAAM,CACJ7K,SAAU,WACV8K,aAAc/B,EAAME,QAAQ,GAC5B8B,SAAU,UAGZhG,UAAW,CACTlF,QAAS,OACTO,QAAS,EACTJ,SAAU,YAEZgL,QAAS,CACPC,cAAe,OACfF,SAAU,SACVlL,QAAS,OACTkC,MAAO,OACP6I,QAAS,MACTD,WAAY,MACZzK,OAAQ,IACR,SAAU,CACRgL,OAAQ,YACRlP,KAAM,SAIVmP,QAAS,CACPnL,SAAU,WACV2K,WAAY,MACZC,QAAS,OAGXQ,aAAc,CACZpJ,OAAQ,EACRqJ,WAAY,OACZC,UAAW,aACXC,UAAW,wBAYf,SAASC,GAAUC,EAAcC,GAC/B,OAAOD,GAAU,CAACA,EAAM,GAAKC,EAAKhB,KAAMe,EAAM,GAAKC,EAAKvL,IAC1D,CAEA,MAAMwL,IAAoBtP,EAAAA,EAAAA,UAAS,EAAGC,YACpC,MAAM,QAAE+D,GAAYX,KACpB,OACE3D,EAAAA,EAAAA,KAAA,OAAKwE,UAAWF,EAAQ2K,QAAQ7O,SAC7BG,EAAMoC,OAAOyI,IAAIY,IAChB,MAAOlI,GAAWkI,EAAMlJ,UAClB,mBAAE+M,GAAuB/L,EAC/B,OAAO+L,GACL7P,EAAAA,EAAAA,KAAC6P,EAAkB,CAEjBtP,MAAOuD,GADFkI,EAAM8D,cAAczF,SAGzB,WAMN0F,IAAsBzP,EAAAA,EAAAA,UAAS,UAAU,MAC7CC,IAIA,MAAM,QAAE+D,GAAYX,MACbqM,EAAiBC,IAAsB9M,EAAAA,EAAAA,aACvC+M,EAAiBC,IAAsBhN,EAAAA,EAAAA,aACvCiN,EAAaC,IAAkBlN,EAAAA,EAAAA,WAAS,IACxCmN,EAAeC,IAAoBpN,EAAAA,EAAAA,YACpCqN,GAAMC,EAAAA,EAAAA,QAAuB,MAC7B3B,GAAO2B,EAAAA,EAAAA,QAAuB,MAC9BC,GAAYD,EAAAA,EAAAA,QAAO,GACnBE,GAAYF,EAAAA,EAAAA,QAAO,GACnBG,GAAYH,EAAAA,EAAAA,SAAO,IAClBI,EAAgBC,IAAqB3N,EAAAA,EAAAA,WAAS,IAC9C4N,EAAaC,IAAkB7N,EAAAA,EAAAA,WAAS,GACzC8N,EAAMT,EAAIU,SAASC,yBAA2BzC,GAC9C0C,EAAWZ,EAAIU,SAASC,yBAA2BzC,GACnD2C,EAAY5B,GAAUS,EAAiBe,GACvCK,EAAY7B,GAAUO,EAAiBiB,GACvCM,EAAU9B,GAAUa,EAAeW,GACnCO,EAAYD,GAAWD,EACvBG,EAAkBnB,GAAiBN,EACnC0B,EAAYL,GAAaG,EAAYA,EAAU,GAAKH,EAAU,GAAK,EACnEM,EAAYN,GAAaG,EAAYA,EAAU,GAAKH,EAAU,GAAK,GACnE,MAAExM,EAAK,MAAEH,EAAK,UAAErC,EAAS,WAAEF,GAAe5B,EAE1CqR,EACY,SAAfzP,IAA0B0O,GACX,cAAf1O,GAA8B0O,EAE3BgB,EACY,SAAf1P,GAAyB0O,GACV,cAAf1O,IAA+B0O,EAqGlC,OAlGA1G,EAAAA,EAAAA,WAAU,KACR,SAAS2H,EAAQ9G,GACfA,EAAM+G,iBAENrB,EAAUQ,SAAWlG,EAAMgH,OAC3BrB,EAAUO,SAAWlG,EAAMiH,OACtBrB,EAAUM,UACbN,EAAUM,SAAU,EAEpBgB,OAAOC,sBAAsB,MAC3BtE,EAAAA,EAAAA,aAAY,KACV,GAAkB,QAAdxL,EACFwC,EAAMF,OAAO+L,EAAUQ,QAAU,GACjCxM,EAAMC,OAAOgM,EAAUO,QAAU,SAC5B,GAAkB,SAAd7O,GAEP+P,KAAKC,IAAI1B,EAAUO,SAAyC,EAA9BkB,KAAKC,IAAI3B,EAAUQ,UACjDI,EACA,CACA,MAAM3D,EAAMgD,EAAUO,QAAU,EAAI,IAAM,GAC1CrM,EAAMyN,OAAOzN,EAAMkB,QAAU4H,EAAK2D,EAAU,IAC5C5M,EAAM4N,OACJ5N,EAAMqB,QAAU4H,EAChByD,EAASnL,OAASqL,EAAU,GAEhC,IAGJV,EAAUM,SAAU,EACpBR,EAAUQ,QAAU,EACpBP,EAAUO,QAAU,IAG1B,CACA,GAAIV,EAAIU,QAAS,CACf,MAAMqB,EAAO/B,EAAIU,QAEjB,OADAqB,EAAKC,iBAAiB,QAASV,GACxB,KACLS,EAAKE,oBAAoB,QAASX,GAEtC,CACA,MAAO,QACN,CAACjN,EAAOH,EAAOrC,EAAWiP,EAAWF,EAASnL,UAEjDkE,EAAAA,EAAAA,WAAU,KACR,SAASuI,EAAgB1H,GACvBiF,EAAmB,CAACjF,EAAM2H,QAAS3H,EAAM4H,UAErC5C,GAAmBE,GAAmB0B,IAAatB,IACrDzL,EAAMF,QAAQqG,EAAM2H,QAAU3C,EAAgB,IAC9CtL,EAAMC,OAAOqG,EAAM4H,QAAU5C,EAAgB,IAEjD,CAGA,OADAkC,OAAOM,iBAAiB,YAAaE,GAC9B,KACLR,OAAOO,oBAAoB,YAAaC,KAEzC,CAACd,EAAU5B,EAAiBE,EAAiBI,EAAezL,EAAOH,KAEtEyF,EAAAA,EAAAA,WAAU,KACR,SAAS0I,EAAkB7H,IACrBA,EAAM8H,SAAW9H,EAAM+H,UACzB/B,GAAe,EAEnB,CACA,SAASgC,EAAgBhI,GAClBA,EAAM8H,SAAY9H,EAAM+H,SAC3B/B,GAAe,EAEnB,CAGA,OAFAkB,OAAOM,iBAAiB,UAAWK,GACnCX,OAAOM,iBAAiB,QAASQ,GAC1B,KACLd,OAAOO,oBAAoB,UAAWI,GACtCX,OAAOM,iBAAiB,QAASQ,KAElC,KAIH7I,EAAAA,EAAAA,WAAU,KACR,SAAS8I,EAAcjI,GACjBoH,KAAKC,IAAIX,GAAa,GAAKU,KAAKC,IAAIV,GAAa,GAAKE,EACxDtB,EAAiB,CAACvF,EAAM2H,QAAS3H,EAAM4H,UAEvCzC,OAAmBzG,EAEvB,CACA,OAAI2H,IAAcE,GAChBW,OAAOM,iBAAiB,UAAWS,GAAe,GAC3C,KACLf,OAAOO,oBAAoB,UAAWQ,GAAe,KAGlD,QACN,CAACpB,EAAaR,EAAWE,EAASG,EAAWC,KAG9CnR,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEJ,EAAAA,EAAAA,KAACkT,EAAM,CACL3S,MAAOA,EACPgF,UACGsM,GAAiBR,GAAaG,EAE3B,CACExL,MAAOoM,KAAKC,IAAIX,GAChBzL,OAAQmM,KAAKC,IAAIV,SAHnBjI,KAORlJ,EAAAA,EAAAA,MAAA,OACEgQ,IAAK1B,EACLtK,UAAWF,EAAQwK,KACnBqE,aAAcA,KACZ9C,GAAe,IAEjB+C,aAAcA,KACZ/C,GAAe,IACfjQ,SAAA,EAEFI,EAAAA,EAAAA,MAAA,OAAKgE,UAAWF,EAAQ0E,UAAU5I,SAAA,EAChCJ,EAAAA,EAAAA,KAACqT,EAAAA,GAAY,CAAC9S,MAAOA,KACrBP,EAAAA,EAAAA,KAACsT,EAAAA,GAAc,CAAC/S,MAAOA,KACvBC,EAAAA,EAAAA,MAAA,OAAKgQ,IAAKA,EAAKhM,UAAWF,EAAQ8K,QAAQhP,SAAA,CACvCgQ,GAAeyB,GACd7R,EAAAA,EAAAA,KAACuT,EAAAA,SAAQ,CAACC,SAAU,KAAKpT,UACvBJ,EAAAA,EAAAA,KAACyO,GAAuB,CACtBlO,MAAOA,EACPiR,UAAWA,EACXC,gBAAiBA,EACjBC,UAAWA,MAGb,KACHG,GACC7R,EAAAA,EAAAA,KAACuT,EAAAA,SAAQ,CAACC,SAAU,KAAKpT,UACvBJ,EAAAA,EAAAA,KAACwO,GAAmB,CAClBjO,MAAOA,EACP8Q,UAAWA,EACXnB,gBAAiBA,EACjBwB,UAAWA,EACXC,UAAWA,MAGb,MACJ3R,EAAAA,EAAAA,KAAA,OACEqI,MAAO,CAAE8G,OAAQ4B,EAAc,UAAY5O,GAC3CsR,YAAazI,IACX,GAAqB,IAAjBA,EAAM0I,OAAc,CACtB,MAAM,QAAEf,EAAO,QAAEC,GAAY5H,EAC7BmF,EAAmB,CAACwC,EAASC,IAC7B3C,EAAmB,CAAC0C,EAASC,IAC7B9B,EAAkBC,EACpB,GACA3Q,UAEFJ,EAAAA,EAAAA,KAACkL,EAAAA,EAAI,CAAC3K,MAAOA,EAAMH,SAChByR,GAAeR,GAAaG,GAC3BxR,EAAAA,EAAAA,KAAA,QACEC,KAAK,oBACL0T,EAAGvB,KAAKwB,IAAIpC,EAAU,GAAIH,EAAU,IACpCwC,EAAGzB,KAAKwB,IAAIpC,EAAU,GAAIH,EAAU,IACpCrL,MAAOoM,KAAKC,IAAIX,GAChBzL,OAAQmM,KAAKC,IAAIV,KAEjB,UAGR3R,EAAAA,EAAAA,KAAA,OAAKwE,UAAWF,EAAQc,aAE1BpF,EAAAA,EAAAA,KAAC4P,GAAiB,CAACrP,MAAOA,KAC1BP,EAAAA,EAAAA,KAAC8T,EAAAA,KAAI,CACHC,KAAMC,QAAQzC,GACd0C,gBAAiBA,CAACC,EAAGC,KACnBA,IACA5D,OAAiB7G,GACjByG,OAAmBzG,IAErB0K,QAASA,KACP7D,OAAiB7G,GACjByG,OAAmBzG,IAErB2K,gBAAgB,iBAChBC,eACEhE,EACI,CACElM,IAAKkM,EAAc,GAAK,GACxB3B,KAAM2B,EAAc,GAAK,SAE3B5G,EAENrB,MAAO,CAAElE,OAAQ,KACjBhD,UAAW,CACT,CACEC,MAAO,UACPV,QAASA,KACH2Q,GAAaE,GACfhR,EAAMgU,oBAAoBlD,EAAWE,GAGvClB,GAAe,KAGnB,CACEjP,MAAO,2BACPV,QAASA,KACH2Q,GAAaE,GACfhR,EAAMiU,cAAcnD,EAAWE,GAGjClB,GAAe,YAMzBrQ,EAAAA,EAAAA,KAACyU,EAAAA,aAAY,CACXC,OAAQC,GAAKpU,EAAMqU,UAAUrU,EAAM0F,OAAS0O,GAC5CnQ,UAAWF,EAAQ+K,oBAK7B,GAeA,IAdoB/O,EAAAA,EAAAA,UAAS,UAAU,MAAEC,IACvC,MAAM,YAAEsU,EAAW,QAAEC,EAAO,MAAE1L,GAAU7I,EAExC,OAAMsU,IAAgBC,GAAY1L,GACzBpJ,EAAAA,EAAAA,KAAC+U,GAAU,CAACxU,MAAOA,IAGxBuU,GACK9U,EAAAA,EAAAA,KAACgV,EAAAA,gBAAe,CAACtR,QAAQ,QAG3B1D,EAAAA,EAAAA,KAAC+P,GAAmB,CAACxP,MAAOA,GACrC,E,sGCzWO,MAAM0U,GAAU3U,EAAAA,EAAAA,UAAS,UAAU,MACxCC,EAAK,SACLH,IAKA,MAAM,UAAE8U,EAAS,WAAEC,EAAU,MAAEtQ,EAAK,MAAEH,GAAUnE,EAC1C6U,EAAUvQ,EAAMwQ,cAAcC,cAC9BC,EAAU7Q,EAAM2Q,cAAcC,cACpC,IAAKF,EAAQpS,SAAWuS,EAAQvS,OAC9B,OAAO,KAET,MAAMwS,EAAO3Q,EAAM4Q,wBAA0B5Q,EAAM6Q,SAC7CC,EAAOjR,EAAM+Q,wBAA0B/Q,EAAMgR,SAC7CE,EAAUR,EAAQ,GAAIM,SAAW7Q,EAAM6Q,SACvCG,EAAUN,EAAQ,GAAIG,SAAWhR,EAAMgR,SACvC1I,GAAQ8I,EAAAA,EAAAA,KACRC,EAAS/I,EAAMgJ,QAAQC,QAIvBC,EAAK9D,KAAK+D,IAAIP,EAAS,GACvBQ,EAAKhE,KAAK+D,IAAIhB,EAAaQ,EAAM,GACjCU,EAAIjE,KAAKwB,IAAI4B,EAAOI,EAASV,GAC7BoB,EAAIlE,KAAKwB,IAAIuB,EAAaU,EAAUO,EAAIjB,GAE9C,IAAIoB,EAAQC,OAAOC,kBACfC,EAAQF,OAAOC,kBACnB,OACEjW,EAAAA,EAAAA,MAAAkM,EAAAA,SAAA,CAAAtM,SAAA,EACEJ,EAAAA,EAAAA,KAAA,QACE2T,EAAGuC,EACHrC,EAAGuC,EACHpQ,MAAOqQ,EACPpQ,OAAQqQ,MACJK,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQ1G,WAAWsH,YAE5CpW,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CACGgV,EAAQhK,IAAIyL,IACX,MAAMlD,EAAIkD,EAAOnB,SAAW7Q,EAAM6Q,SAC5BoB,EAAS1E,KAAK2E,MAAMpD,KAAOvB,KAAK2E,MAAMR,GAI5C,OAHIO,IACFP,EAAQ5C,GAEHmD,GACL9W,EAAAA,EAAAA,KAAA,QAEEgX,GAAIrD,EACJsD,GAAI,EACJC,GAAIvD,EACJwD,GAAIhC,MACAiC,EAAAA,EAAAA,gBAAerB,IALdsB,KAAKC,UAAUT,IAOpB,OAELtB,EAAQnK,IAAIyL,IACX,MAAMhD,EAAIsB,GAAc0B,EAAOnB,SAAWhR,EAAMgR,UAC1CoB,EAAS1E,KAAK2E,MAAMlD,KAAOzB,KAAK2E,MAAML,GAI5C,OAHII,IACFJ,EAAQ7C,GAEHiD,GACL9W,EAAAA,EAAAA,KAAA,QAEEgX,GAAI,EACJC,GAAIpD,EACJqD,GAAIhC,EACJiC,GAAItD,MACAuD,EAAAA,EAAAA,gBAAerB,IALdsB,KAAKC,UAAUT,IAOpB,QAEN7W,EAAAA,EAAAA,KAAA,QACEgX,GAAIxB,EACJyB,GAAI,EACJC,GAAI1B,EACJ2B,GAAIhC,MACAiC,EAAAA,EAAAA,gBAAerB,MAErB/V,EAAAA,EAAAA,KAAA,QACEgX,GAAI,EACJC,GAAI9B,EAAaQ,EACjBuB,GAAIhC,EACJiC,GAAIhC,EAAaQ,MACbyB,EAAAA,EAAAA,gBAAerB,QAGtB3V,IAGP,GAEe,SAAA8K,EAAAtL,GAAA,MAAAF,GAAAC,EAAAA,EAAAA,GAAA,IAAc,MAAAY,EAAA,SAAAH,GAAAR,GAOrB,UAANsV,EAAA,WAAAC,GAAkC5U,EAAK,IAAAV,EAKM0X,EAEEC,EACvC,OAR+B9X,EAAA,KAAAI,OAAAC,IAAA,8BAK5BF,EAAA,CAAAyP,WAAc,oBAAoB5P,EAAA,GAAAG,GAAAA,EAAAH,EAAA,GAAAA,EAAA,KAAAU,GAAAV,EAAA,KAAAa,GAEzCgX,GAAAvX,EAAAA,EAAAA,KAACiV,EAAO,CAAQ1U,MAAAA,EAAKH,SAAGA,IAAmBV,EAAA,GAAAU,EAAAV,EAAA,GAAAa,EAAAb,EAAA,GAAA6X,GAAAA,EAAA7X,EAAA,GAAAA,EAAA,KAAA6X,GAAA7X,EAAA,KAAAyV,GAAAzV,EAAA,KAAAwV,GAL7CsC,GAAAxX,EAAAA,EAAAA,KAAA,OACSkV,MAAAA,EACCC,OAAAA,EACD9M,MAAAxI,EAAkCO,SAEzCmX,IACI7X,EAAA,GAAA6X,EAAA7X,EAAA,GAAAyV,EAAAzV,EAAA,GAAAwV,EAAAxV,EAAA,GAAA8X,GAAAA,EAAA9X,EAAA,GANN8X,CAMM,C,2JCnGV,MAAM7T,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,KAAM,CACnC6T,MAAO,CACL7I,WAAY,MACZC,QAAS,MACTK,cAAe,OACfwI,WAAY,QAEdC,MAAO,CACL/I,WAAY,MACZC,QAAS,MACTK,cAAe,OACfwI,WAAY,WAGHpE,GAAiBhT,EAAAA,EAAAA,UAAS,UAAU,MAC/CC,IAIA,MAAM,UAAE2U,EAAS,QAAE0C,GAAYrX,GACzB,QAAE+D,GAAYX,IACpB,OACE3D,EAAAA,EAAAA,KAAA,OAAKgG,MAAOkP,EAAWjP,OAAQ2R,EAASpT,UAAWF,EAAQqT,MAAMvX,UAC/DJ,EAAAA,EAAAA,KAAC6X,EAAiB,CAACtX,MAAOA,KAGhC,GAEasX,GAAoBvX,EAAAA,EAAAA,UAAS,UAAU,MAClDC,IAIA,MAAM,UAAE2U,EAAS,QAAE4C,EAAO,QAAEF,EAAO,MAAE/S,EAAK,cAAEkT,EAAa,OAAEC,GAAWzX,GAChE,SAAEmV,EAAQ,MAAE1P,EAAK,cAAEqP,EAAa,QAAEtP,GAAYlB,EAC9CoT,EAAU5C,EAAcC,cACxBlS,GAAO8U,EAAAA,EAAAA,IAAwBD,EAAS/C,EAAWQ,GACnD1I,GAAQ8I,EAAAA,EAAAA,KACRqC,EAAY,KACbC,EAAAA,EAAAA,aAAYvT,GACfmB,QACAqS,aAAcxT,EAAMwT,cAGhBC,EAAQN,EACX5M,IACCmN,GACE,CACEA,GACAC,EAAAA,EAAAA,IAAO,CACLC,QAASF,EAAKE,QACd/I,MAAO6I,EAAKG,KACZC,KAAMR,KACJzC,WAGT9S,OAAOoL,QAActE,IAATsE,EAAE,IACd5C,IAAI4C,GAAK,CAACA,EAAE,GAAIA,EAAE,GAAM0H,IAE3B,OACElV,EAAAA,EAAAA,MAAAkM,EAAAA,SAAA,CAAAtM,SAAA,CACG6X,EACErV,OAAOiU,IAAWzT,EAAKwV,IAAI/B,EAAOgC,MAClCzN,IAAIyL,IACH,MAAMlD,EAAIkD,EAAOnB,SAEXoD,EAAO1G,KAAK2E,MAAMpD,EAAI9O,EAAM6Q,UAElC,OACE1V,EAAAA,EAAAA,KAAA,QACE+Y,UAAW,UAAUhB,KAAiBe,OAEtCnF,EAAGmF,EACHjF,EAAGA,EACHmF,SAAU,GACVC,iBAAiB,UACjBC,WAAW,UACPvC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,SAE3CyW,EAAO4B,SARHpB,KAAKC,UAAUT,MAY3ByB,EAAMlN,IAAI,EAAEmN,EAAM5E,KACjBA,EAAI,GAAKA,EAAI3N,GACXhG,EAAAA,EAAAA,KAAA,QAEEgX,GAAIrD,EACJuD,GAAIvD,EACJsD,GAAI,EACJE,GAAkB,UAAdoB,EAAK3W,KAAmB,EAAI,EAChCyX,YAAa,MACT1C,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,UAN/B,QAAQ/B,KAAKC,UAAUiB,MAQ5B,MAELD,EACE1V,OAAOC,GAAmB,UAAdA,EAAE,GAAGjB,MACjBwJ,IAAI,EAAEmN,EAAM5E,KACXA,EAAI,IAAMA,EAAI3N,GACZhG,EAAAA,EAAAA,KAAA,QACE2T,EAAGA,EAAI,EACPE,EAAG,EACHkF,UAAW,UAAUhB,KAAiBpE,OAEtCqF,SAAU,GACVC,iBAAiB,SACjBC,WAAW,UACPvC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,UAE3CkZ,EAAAA,EAAAA,mBAAkBf,EAAKG,KAAO,EAAG3S,IAN7B,QAAQsR,KAAKC,UAAUiB,MAQ5B,OAERvY,EAAAA,EAAAA,KAAA,QACE6T,EAAG+D,EAAU,GACbjE,GAAIuB,EAAY4C,GAAW,EAC3BoB,WAAW,SACXF,SAAU,GACVC,iBAAiB,cACbtC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,SAE3CyE,EAAMc,cAAcC,KAAK,SAIlC,GACayN,GAAe/S,EAAAA,EAAAA,UAAS,UAAU,MAC7CC,IAIA,MAAM,QAAEuX,EAAO,WAAE3C,GAAe5U,GAC1B,QAAE+D,GAAYX,IACpB,OACE3D,EAAAA,EAAAA,KAAA,OAAKwE,UAAWF,EAAQmT,MAAOzR,MAAO8R,EAAS7R,OAAQkP,EAAW/U,UAChEJ,EAAAA,EAAAA,KAACuZ,EAAe,CAAChZ,MAAOA,KAG9B,GAEagZ,GAAkBjZ,EAAAA,EAAAA,UAAS,UAAU,MAChDC,IAIA,MAAM,WAAE4U,EAAU,QAAE2C,EAAO,QAAEF,EAAO,MAAElT,EAAK,cAAE8U,EAAa,OAAEC,GAAWlZ,GACjE,SAAEmV,EAAQ,MAAE1P,EAAK,cAAEqP,EAAa,QAAEtP,GAAYrB,EAC9CuT,EAAU5C,EAAcC,cACxBlS,GAAO8U,EAAAA,EAAAA,IAAwBD,EAAS9C,EAAYO,GACpD1I,GAAQ8I,EAAAA,EAAAA,KACR4D,EAAY,KACbtB,EAAAA,EAAAA,aAAY1T,GACfsB,QACAqS,aAAc3T,EAAM2T,cAEhBC,EAAQmB,EACXrO,IACCmN,GACE,CACEA,GACAC,EAAAA,EAAAA,IAAO,CACLC,QAASF,EAAKE,QACd/I,MAAO6I,EAAKG,KACZC,KAAMe,KACJhE,WAGT9S,OAAOoL,QAActE,IAATsE,EAAE,IACd5C,IAAI4C,GAAK,CAACA,EAAE,GAAIA,EAAE,GAAM0H,IAE3B,OACElV,EAAAA,EAAAA,MAAAkM,EAAAA,SAAA,CAAAtM,SAAA,CACG6X,EACErV,OAAOiU,IAAWzT,EAAKwV,IAAI/B,EAAOgC,MAClCzN,IAAIyL,IACH,MAAMhD,EAAIgD,EAAOnB,SACX/B,EAAImE,EACJ6B,EAAOvH,KAAK2E,MAAM5B,EAAatB,EAAI6B,GAEzC,OACE1V,EAAAA,EAAAA,KAAA,QACE+Y,UAAW,UAAUS,KAAiB7F,KAAKE,KAE3CF,EAAGA,EACHE,EAAG8F,EACHX,SAAU,GACVE,WAAW,UACPvC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,SAE3CyW,EAAO4B,SAPHpB,KAAKC,UAAUT,MAW3ByB,EAAMlN,IAAI,EAAEmN,EAAM1E,KACjBA,EAAI,GACF7T,EAAAA,EAAAA,KAAA,QAEEiX,GAAI9B,EAAatB,EACjBsD,GAAIhC,EAAatB,EACjBmD,GAAIc,EACJZ,GAAIY,GAAyB,UAAdS,EAAK3W,KAAmB,EAAI,GAC3CyX,YAAa,MACTjC,EAAAA,EAAAA,gBAAepK,EAAMgJ,QAAQ4D,KAAK,OANjC,QAAQvC,KAAKC,UAAUiB,MAQ5B,MAELD,EACE1V,OAAOC,GAAmB,UAAdA,EAAE,GAAGjB,MACjBwJ,IAAI,EAAEmN,EAAM1E,KACXA,EAAI,IAAMA,EAAIsB,GACZnV,EAAAA,EAAAA,KAAA,QACE6T,EAAGsB,EAAatB,EAAI,EACpBF,EAAGmE,EAAU,EAEboB,WAAW,MACXD,iBAAiB,UACjBD,SAAU,OACNrC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,UAE3CkZ,EAAAA,EAAAA,mBAAkBf,EAAKG,KAAO,EAAG3S,IAN7B,QAAQsR,KAAKC,UAAUiB,MAQ5B,OAERvY,EAAAA,EAAAA,KAAA,QACE6T,GAAIsB,EAAayC,GAAW,EAC5BjE,EAAG,GACHoF,UAAW,kBAAkB5D,EAAayC,GAAW,KACrDsB,WAAW,SACXF,SAAU,OACNrC,EAAAA,EAAAA,cAAa3J,EAAMgJ,QAAQmD,KAAKC,SAAQhZ,SAE3CsE,EAAMiB,cAAcC,KAAK,SAIlC,E","sources":["../../../plugins/dotplot-view/src/DotplotView/components/CursorIcon.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotControls.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotWarnings.tsx","../../../plugins/dotplot-view/src/DotplotView/components/PanButtons.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Header.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/getAdapter.ts","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/selectors/SelectorTypes.ts","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/selectors/SwapAssemblies.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/selectors/AnchorsFileSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/selectors/PifGzSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/selectors/SyntenyFileSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportSyntenyOpenCustomTrack.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/util.ts","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/ImportSyntenyTrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/TrackSelector.tsx","../../../plugins/dotplot-view/src/DotplotView/components/ImportForm/index.tsx","../../../plugins/dotplot-view/src/DotplotView/components/DotplotView.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Grid.tsx","../../../plugins/dotplot-view/src/DotplotView/components/Axes.tsx"],"sourcesContent":["import SvgIcon from '@mui/material/SvgIcon'\n\nimport type { SvgIconProps } from '@mui/material/SvgIcon'\n\nexport function CursorMove(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M13,6V11H18V7.75L22.25,12L18,16.25V13H13V18H16.25L12,22.25L7.75,18H11V13H6V16.25L1.75,12L6,7.75V11H11V6H7.75L12,1.75L16.25,6H13Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function CursorMouse(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10.07,14.27C10.57,14.03 11.16,14.25 11.4,14.75L13.7,19.74L15.5,18.89L13.19,13.91C12.95,13.41 13.17,12.81 13.67,12.58L13.95,12.5L16.25,12.05L8,5.12V15.9L9.82,14.43L10.07,14.27M13.64,21.97C13.14,22.21 12.54,22 12.31,21.5L10.13,16.76L7.62,18.78C7.45,18.92 7.24,19 7,19A1,1 0 0,1 6,18V3A1,1 0 0,1 7,2C7.24,2 7.47,2.09 7.64,2.23L7.65,2.22L19.14,11.86C19.57,12.22 19.62,12.85 19.27,13.27C19.12,13.45 18.91,13.57 18.7,13.61L15.54,14.23L17.74,18.96C18,19.46 17.76,20.05 17.26,20.28L13.64,21.97Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport CropDinIcon from '@mui/icons-material/CropDin'\nimport CropLandscapeIcon from '@mui/icons-material/CropLandscape'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport SettingsOverscanIcon from '@mui/icons-material/SettingsOverscan'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport { CursorMouse, CursorMove } from './CursorIcon'\n\nimport type { DotplotViewModel } from '../model'\n\nconst DotplotControls = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  return (\n    <div>\n      <IconButton\n        onClick={() => {\n          model.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n\n      <IconButton\n        onClick={() => {\n          model.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n\n      <IconButton\n        onClick={() => model.activateTrackSelector()}\n        title=\"Open track selector\"\n      >\n        <TrackSelectorIcon />\n      </IconButton>\n\n      <CascadingMenuButton\n        menuItems={[\n          {\n            label: 'Square view - same bp per pixel',\n            icon: CropDinIcon,\n            onClick: () => {\n              model.squareView()\n            },\n          },\n          {\n            label: 'Rectangular view - same total bp',\n            icon: CropLandscapeIcon,\n            onClick: () => {\n              model.squareViewProportional()\n            },\n          },\n          {\n            label: 'Show all regions',\n            icon: SettingsOverscanIcon,\n            onClick: () => {\n              model.showAllRegions()\n            },\n          },\n          {\n            type: 'checkbox',\n            label: 'Draw CIGAR',\n            checked: model.drawCigar,\n            onClick: () => {\n              model.setDrawCigar(!model.drawCigar)\n            },\n          },\n          {\n            label: 'Show pan buttons',\n            type: 'checkbox',\n            checked: model.showPanButtons,\n            onClick: () => {\n              model.setShowPanButtons(!model.showPanButtons)\n            },\n          },\n          {\n            label: 'Click and drag mode',\n            subMenu: [\n              {\n                label:\n                  'Pan by default, select region when ctrl/cmd key is held',\n                icon: CursorMove,\n                type: 'radio',\n                checked: model.cursorMode === 'move',\n                onClick: () => {\n                  model.setCursorMode('move')\n                },\n              },\n              {\n                label:\n                  'Select region by default, pan when ctrl/cmd key is held',\n                icon: CursorMouse,\n                type: 'radio',\n                checked: model.cursorMode === 'crosshair',\n                onClick: () => {\n                  model.setCursorMode('crosshair')\n                },\n              },\n            ],\n          },\n          {\n            label: 'Wheel scroll mode',\n            subMenu: [\n              {\n                label: 'Pans view',\n                type: 'radio',\n                checked: model.wheelMode === 'pan',\n                onClick: () => {\n                  model.setWheelMode('pan')\n                },\n              },\n              {\n                label: 'Zooms view',\n                type: 'radio',\n                checked: model.wheelMode === 'zoom',\n                onClick: () => {\n                  model.setWheelMode('zoom')\n                },\n              },\n              {\n                label: 'Disable',\n                type: 'radio',\n                checked: model.wheelMode === 'none',\n                onClick: () => {\n                  model.setWheelMode('none')\n                },\n              },\n            ],\n          },\n        ]}\n      >\n        <MoreVert />\n      </CascadingMenuButton>\n    </div>\n  )\n})\n\nexport default DotplotControls\n","import { lazy, useState } from 'react'\n\nimport { Alert, Button } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { DotplotViewModel } from '../model'\n// lazy components\nconst WarningDialog = lazy(() => import('./WarningDialog'))\n\nconst DotplotWarnings = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const trackWarnings = model.tracks.filter(t => t.displays[0].warnings?.length)\n  const [shown, setShown] = useState(false)\n  const [hide, setHide] = useState(false)\n  return trackWarnings.length && !hide ? (\n    <Alert severity=\"warning\">\n      Warnings during render{' '}\n      <Button\n        onClick={() => {\n          setShown(true)\n        }}\n      >\n        More info\n      </Button>\n      {shown ? (\n        <WarningDialog\n          trackWarnings={trackWarnings}\n          handleClose={() => {\n            setShown(false)\n          }}\n        />\n      ) : null}\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          setHide(true)\n        }}\n      >\n        Dismiss\n      </Button>\n    </Alert>\n  ) : null\n})\n\nexport default DotplotWarnings\n","import ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport ArrowDropUp from '@mui/icons-material/ArrowDropUp'\nimport ArrowLeft from '@mui/icons-material/ArrowLeft'\nimport ArrowRight from '@mui/icons-material/ArrowRight'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport { IconButton, Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  dpad: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    margin: 0,\n    position: 'absolute',\n    right: 50,\n    zIndex: 500,\n    top: 50,\n  },\n  icon: {\n    padding: 0,\n    margin: 0,\n  },\n})\n\nconst PanButtons = observer(function PanButtons({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.dpad} elevation={6}>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.vview.scroll(100)\n        }}\n      >\n        <ArrowDropUp />\n      </IconButton>\n      <div />\n\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.scroll(-100)\n        }}\n      >\n        <ArrowLeft />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.hview.scroll(100)\n        }}\n      >\n        <ArrowRight />\n      </IconButton>\n\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.vview.scroll(-100)\n        }}\n      >\n        <ArrowDropDown />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.zoomIn()\n        }}\n      >\n        <ZoomIn />\n      </IconButton>\n      <div />\n      <IconButton\n        className={classes.icon}\n        onClick={() => {\n          model.zoomOut()\n        }}\n      >\n        <ZoomOut />\n      </IconButton>\n    </Paper>\n  )\n})\n\nexport default PanButtons\n","import { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DotplotControls from './DotplotControls'\nimport DotplotWarnings from './DotplotWarnings'\nimport PanButtons from './PanButtons'\n\nimport type { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()({\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  headerBar: {\n    display: 'flex',\n    position: 'relative',\n  },\n})\n\nconst DotplotHeader = observer(function ({\n  model,\n  selection,\n}: {\n  model: DotplotViewModel\n  selection?: { width: number; height: number }\n}) {\n  const { classes } = useStyles()\n  const { hview, vview, showPanButtons } = model\n  return (\n    <div className={classes.headerBar}>\n      <DotplotControls model={model} />\n      <Typography className={classes.bp} variant=\"body2\" color=\"textSecondary\">\n        x: {hview.assemblyNames.join(',')} {getBpDisplayStr(hview.currBp)}\n        <br />\n        y: {vview.assemblyNames.join(',')} {getBpDisplayStr(vview.currBp)}\n      </Typography>\n      {selection ? (\n        <Typography\n          className={classes.bp}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {`width:${getBpDisplayStr(hview.bpPerPx * selection.width)}`} <br />\n          {`height:${getBpDisplayStr(vview.bpPerPx * selection.height)}`}\n        </Typography>\n      ) : null}\n      <div className={classes.spacer} />\n      <DotplotWarnings model={model} />\n      {showPanButtons ? <PanButtons model={model} /> : null}\n    </div>\n  )\n})\n\nexport default DotplotHeader\n","import type { FileLocation } from '@jbrowse/core/util'\n\nexport function getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  indexFileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  indexFileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.pif.gz') {\n    return {\n      type: 'PairwiseIndexedPAFAdapter',\n      pifGzLocation: fileLocation,\n      index: {\n        location: indexFileLocation,\n      },\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error(\n      `Unknown to detect type ${radioOption} from filename (select radio button to clarify)`,\n    )\n  }\n}\n","import type { FileLocation } from '@jbrowse/core/util/types'\n\nexport const helpStrings = {\n  '.paf': 'minimap2 target.fa query.fa',\n  '.pif.gz': 'minimap2 target.fa query.fa',\n  '.out': 'mashmap target.fa query.fa',\n  '.delta': 'mummer target.fa query.fa',\n  '.chain': 'e.g. queryToTarget.chain',\n} as const\n\nexport interface SelectorProps {\n  assembly1?: string\n  assembly2?: string\n  swap?: boolean\n  setSwap?: (arg: boolean) => void\n  fileLocation?: FileLocation\n  setFileLocation: (arg: FileLocation) => void\n  indexFileLocation?: FileLocation\n  setIndexFileLocation?: (arg: FileLocation) => void\n  bed1Location?: FileLocation\n  setBed1Location?: (arg: FileLocation) => void\n  bed2Location?: FileLocation\n  setBed2Location?: (arg: FileLocation) => void\n  radioOption: string\n}\n","import type { ReactNode } from 'react'\n\nimport HelpIcon from '@mui/icons-material/Help'\nimport { Button, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { helpStrings } from './SelectorTypes'\n\nexport interface SwapAssembliesProps {\n  assembly1?: string\n  assembly2?: string\n  swap?: boolean\n  setSwap?: (arg: boolean) => void\n  radioOption: string\n  helpContent?: ReactNode\n  text1: string\n  text2: string\n}\n\nconst useStyles = makeStyles()({\n  row: {\n    display: 'flex',\n    gap: 20,\n  },\n  swap: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: 4,\n    alignItems: 'center',\n  },\n})\n\nconst SwapAssemblies = observer(function ({\n  assembly1,\n  assembly2,\n  swap,\n  setSwap,\n  radioOption,\n  helpContent,\n  text1,\n  text2,\n}: SwapAssembliesProps) {\n  const { classes } = useStyles()\n  return (\n    <div>\n      <div>\n        Verify or click swap\n        <Tooltip\n          title={\n            helpContent || (\n              <code>\n                {helpStrings[radioOption as keyof typeof helpStrings]}\n              </code>\n            )\n          }\n        >\n          <HelpIcon />\n        </Tooltip>\n      </div>\n      <div className={classes.row}>\n        <div className={classes.swap}>\n          <div>\n            <i>{swap ? assembly2 : assembly1}</i>\n          </div>\n          <div>{text1}</div>\n          <div>\n            <i>{swap ? assembly1 : assembly2}</i>\n          </div>\n          <div>{text2}</div>\n        </div>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            if (setSwap) {\n              setSwap(!swap)\n            }\n          }}\n        >\n          Swap?\n        </Button>\n      </div>\n    </div>\n  )\n})\n\nexport default SwapAssemblies\n","import { FileSelector } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport SwapAssemblies from './SwapAssemblies'\n\nimport type { SelectorProps } from './SelectorTypes'\n\nconst AnchorsFileSelector = observer(function ({\n  assembly1,\n  assembly2,\n  swap,\n  setSwap,\n  fileLocation,\n  setFileLocation,\n  bed1Location,\n  setBed1Location,\n  bed2Location,\n  setBed2Location,\n  radioOption,\n}: SelectorProps) {\n  return (\n    <div>\n      <div style={{ margin: 20 }}>\n        Open the {radioOption} and .bed files for both genome assemblies from\n        the MCScan (Python version) pipeline{' '}\n        <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n          (more info)\n        </a>\n      </div>\n      <div>\n        <FileSelector\n          inline\n          name={radioOption}\n          location={fileLocation}\n          setLocation={loc => {\n            setFileLocation(loc)\n          }}\n        />\n        <FileSelector\n          inline\n          name=\"genome 1 .bed (left column of anchors file)\"\n          description=\"\"\n          location={bed1Location}\n          setLocation={loc => {\n            if (setBed1Location) {\n              setBed1Location(loc)\n            }\n          }}\n        />\n        <FileSelector\n          inline\n          name=\"genome 2 .bed (right column of anchors file)\"\n          description=\"\"\n          location={bed2Location}\n          setLocation={loc => {\n            if (setBed2Location) {\n              setBed2Location(loc)\n            }\n          }}\n        />\n      </div>\n      <SwapAssemblies\n        swap={swap}\n        radioOption={radioOption}\n        assembly1={assembly1}\n        assembly2={assembly2}\n        setSwap={setSwap}\n        text1=\"bed 1 assembly\"\n        text2=\"bed 2 assembly\"\n      />\n    </div>\n  )\n})\n\nexport default AnchorsFileSelector\n","import { FileSelector } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport SwapAssemblies from './SwapAssemblies'\n\nimport type { SelectorProps } from './SelectorTypes'\n\nconst PifGzSelector = observer(function ({\n  assembly1,\n  assembly2,\n  swap,\n  setSwap,\n  fileLocation,\n  setFileLocation,\n  indexFileLocation = undefined,\n  setIndexFileLocation = () => {},\n  radioOption,\n}: SelectorProps) {\n  return (\n    <div>\n      <div style={{ margin: 20 }}>\n        Open the {radioOption} and .pif.gz and index file (.pif.gz.tbi or\n        .pif.gz.csi) files for created by `jbrowse make-pif`\n      </div>\n      <div style={{ maxWidth: 400, margin: '0 auto' }}>\n        <FileSelector\n          name={`${radioOption} location`}\n          inline\n          description=\"\"\n          location={fileLocation}\n          setLocation={setFileLocation}\n        />\n        <FileSelector\n          name={`${radioOption} index location (.tbi or .csi)`}\n          inline\n          description=\"\"\n          location={indexFileLocation}\n          setLocation={setIndexFileLocation}\n        />\n        <SwapAssemblies\n          swap={swap}\n          radioOption={radioOption}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          setSwap={setSwap}\n          text1=\"query assembly\"\n          text2=\"target assembly\"\n        />\n      </div>\n    </div>\n  )\n})\n\nexport default PifGzSelector\n","import { FileSelector } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport SwapAssemblies from './SwapAssemblies'\n\nimport type { SelectorProps } from './SelectorTypes'\n\nconst useStyles = makeStyles()({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 10,\n  },\n})\n\nconst SyntenyFileSelector = observer(function ({\n  assembly1,\n  assembly2,\n  swap,\n  setSwap,\n  fileLocation,\n  setFileLocation,\n  radioOption,\n}: SelectorProps) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.container}>\n      <FileSelector\n        name={`${radioOption} location`}\n        inline\n        description=\"\"\n        location={fileLocation}\n        setLocation={loc => {\n          setFileLocation(loc)\n        }}\n      />\n      <SwapAssemblies\n        assembly1={assembly1}\n        assembly2={assembly2}\n        swap={swap}\n        setSwap={setSwap}\n        radioOption={radioOption}\n        text1=\"query assembly\"\n        text2=\"target assembly\"\n      />\n    </div>\n  )\n})\n\nexport default SyntenyFileSelector\n","import { useEffect, useState } from 'react'\n\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport { getAdapter } from './getAdapter'\nimport {\n  AnchorsFileSelector,\n  PifGzSelector,\n  SyntenyFileSelector,\n} from './selectors'\nimport { basename, extName, getName, stripGz } from './util'\n\nimport type { DotplotViewModel } from '../../model'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nconst ImportSyntenyOpenCustomTrack = observer(function ({\n  model,\n  assembly1,\n  assembly2,\n}: {\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [swap, setSwap] = useState(false)\n  const [bed2Location, setBed2Location] = useState<FileLocation>()\n  const [bed1Location, setBed1Location] = useState<FileLocation>()\n  const [fileLocation, setFileLocation] = useState<FileLocation>()\n  const [indexFileLocation, setIndexFileLocation] = useState<FileLocation>()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState<unknown>()\n  const fileName = getName(fileLocation)\n\n  const radioOption = value || (fileName ? extName(stripGz(fileName)) : '')\n\n  useEffect(() => {\n    try {\n      if (fileLocation) {\n        const fn = fileName ? basename(fileName) : 'MyTrack'\n        const trackId = `${fn}-${Date.now()}-sessionTrack`\n        setError(undefined)\n\n        model.setImportFormSyntenyTrack(0, {\n          type: 'userOpened',\n          value: {\n            trackId,\n            name: fn,\n            assemblyNames: [assembly2, assembly1],\n            type: 'SyntenyTrack',\n            adapter: getAdapter({\n              radioOption,\n              assembly1: swap ? assembly2 : assembly1,\n              assembly2: swap ? assembly1 : assembly2,\n              fileLocation,\n              indexFileLocation,\n              bed1Location,\n              bed2Location,\n            }),\n          },\n        })\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }, [\n    swap,\n    model,\n    fileName,\n    assembly1,\n    assembly2,\n    bed1Location,\n    bed2Location,\n    fileLocation,\n    indexFileLocation,\n    radioOption,\n  ])\n\n  return (\n    <Paper style={{ padding: 12 }}>\n      {error ? <ErrorMessage error={error} /> : null}\n      <Typography style={{ textAlign: 'center' }}>\n        Add a .paf (minimap2), .delta (Mummer), .chain (UCSC liftover), .anchors\n        or .anchors.simple (MCScan), or .pif.gz (jbrowse CLI make-pif) file to\n        view. These file types can also be gzipped.\n      </Typography>\n      <RadioGroup\n        value={radioOption}\n        onChange={event => {\n          setValue(event.target.value)\n        }}\n      >\n        <Grid container justifyContent=\"center\">\n          {[\n            '.paf',\n            '.delta',\n            '.out',\n            '.chain',\n            '.anchors',\n            '.anchors.simple',\n            '.pif.gz',\n          ].map(extension => (\n            <FormControlLabel\n              key={extension}\n              value={extension}\n              control={<Radio />}\n              label={extension}\n            />\n          ))}\n        </Grid>\n      </RadioGroup>\n      <Grid container justifyContent=\"center\">\n        {radioOption === '.paf' ||\n        radioOption === '.out' ||\n        radioOption === '.delta' ||\n        radioOption === '.chain' ? (\n          <SyntenyFileSelector\n            radioOption={radioOption}\n            fileLocation={fileLocation}\n            setFileLocation={setFileLocation}\n            assembly1={assembly1}\n            assembly2={assembly2}\n            swap={swap}\n            setSwap={setSwap}\n          />\n        ) : radioOption === '.anchors' || radioOption === '.anchors.simple' ? (\n          <AnchorsFileSelector\n            radioOption={radioOption}\n            fileLocation={fileLocation}\n            setFileLocation={setFileLocation}\n            assembly1={assembly1}\n            assembly2={assembly2}\n            swap={swap}\n            setSwap={setSwap}\n            bed1Location={bed1Location}\n            setBed1Location={setBed1Location}\n            bed2Location={bed2Location}\n            setBed2Location={setBed2Location}\n          />\n        ) : radioOption === '.pif.gz' ? (\n          <PifGzSelector\n            radioOption={radioOption}\n            fileLocation={fileLocation}\n            setFileLocation={setFileLocation}\n            assembly1={assembly1}\n            assembly2={assembly2}\n            swap={swap}\n            setSwap={setSwap}\n            indexFileLocation={indexFileLocation}\n            setIndexFileLocation={setIndexFileLocation}\n          />\n        ) : null}\n      </Grid>\n    </Paper>\n  )\n})\n\nexport default ImportSyntenyOpenCustomTrack\n","export function getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nexport function stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nexport function basename(str: string) {\n  return str.split('#')[0]!.split('?')[0]!.split('/').pop()\n}\nexport function extName(str: string) {\n  const r = str.split('.').pop()\n  return r ? `.${r}` : ''\n}\n","import { useEffect, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { MenuItem, Paper, Select, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { DotplotViewModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nfunction isRelevantTrack(\n  track: AnyConfigurationModel,\n  assembly1: string,\n  assembly2: string,\n) {\n  const assemblyNames = readConfObject(track, 'assemblyNames')\n  return (\n    assemblyNames.includes(assembly1) &&\n    assemblyNames.includes(assembly2) &&\n    track.type.includes('Synteny')\n  )\n}\n\nconst ImportSyntenyTrackSelector = observer(function ({\n  model,\n  assembly1,\n  assembly2,\n}: {\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const session = getSession(model)\n  const { tracks, sessionTracks } = session\n  const allTracks = [\n    ...tracks,\n    ...(sessionTracks || []),\n  ] as AnyConfigurationModel[]\n  const filteredTracks = allTracks.filter(t =>\n    isRelevantTrack(t, assembly2, assembly1),\n  )\n  const resetTrack = filteredTracks[0]?.trackId || ''\n  const [value, setValue] = useState(resetTrack)\n  useEffect(() => {\n    // if assembly1/assembly2 changes, then we will want to use this effect to\n    // change the state of the useState because it otherwise gets locked to a\n    // stale value\n    setValue(resetTrack)\n  }, [resetTrack])\n\n  useEffect(() => {\n    // sets track data in a useEffect because the initial load is needed as\n    // well as onChange's to the select box\n    model.setImportFormSyntenyTrack(0, {\n      type: 'preConfigured',\n      value,\n    })\n  }, [model, value])\n\n  return (\n    <Paper style={{ padding: 12 }}>\n      <Typography>\n        Select a track from the select box below, the track will be shown when\n        you hit \"Launch\". Note: there is a track selector <i>inside</i> the\n        DotplotView, which can turn on one or more SyntenyTracks (more than one\n        can be displayed at once). Look for the track selector icon{' '}\n        <TrackSelectorIcon />\n      </Typography>\n      {filteredTracks.length ? (\n        <Select\n          value={value}\n          onChange={event => {\n            setValue(event.target.value)\n          }}\n        >\n          {filteredTracks.map(track => (\n            <MenuItem key={track.trackId} value={track.trackId}>\n              {getTrackName(track, session)}\n            </MenuItem>\n          ))}\n        </Select>\n      ) : (\n        <ErrorMessage\n          error={`No synteny tracks found for ${assembly1},${assembly2}`}\n        />\n      )}\n    </Paper>\n  )\n})\n\nexport default ImportSyntenyTrackSelector\n","import { useEffect, useState } from 'react'\n\nimport {\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport ImportSyntenyOpenCustomTrack from './ImportSyntenyOpenCustomTrack'\nimport ImportSyntenyTrackSelector from './ImportSyntenyTrackSelector'\n\nimport type { DotplotViewModel } from '../../model'\n\nconst TrackSelector = observer(function ({\n  assembly1,\n  assembly2,\n  model,\n}: {\n  model: DotplotViewModel\n  assembly1: string\n  assembly2: string\n}) {\n  const [choice, setChoice] = useState('tracklist')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      model.setImportFormSyntenyTrack(0, { type: 'none' })\n    }\n  }, [model, choice])\n  return (\n    <>\n      <FormControl>\n        <FormLabel id=\"group-label\">\n          (Optional) Select or add a synteny track\n        </FormLabel>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => {\n            setChoice(event.target.value)\n          }}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportSyntenyOpenCustomTrack\n          model={model}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n        />\n      ) : null}\n    </>\n  )\n})\n\nexport default TrackSelector\n","import { useState } from 'react'\n\nimport { AssemblySelector, ErrorMessage } from '@jbrowse/core/ui'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  Paper,\n  Typography,\n} from '@mui/material'\nimport { toJS, transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport TrackSelector from './TrackSelector'\n\nimport type { DotplotViewModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n    margin: '0 auto',\n  },\n  assemblySelector: {\n    width: '75%',\n    margin: '0 auto',\n  },\n}))\n\nfunction doSubmit({\n  model,\n  assembly1,\n  assembly2,\n}: {\n  assembly1: string\n  assembly2: string\n  model: DotplotViewModel\n}) {\n  const session = getSession(model)\n  const { importFormSyntenyTrackSelections } = model\n\n  model.setError(undefined)\n  transaction(() => {\n    if (isSessionWithAddTracks(session)) {\n      toJS(importFormSyntenyTrackSelections).map((f, idx) => {\n        if (f.type === 'userOpened') {\n          session.addTrackConf(f.value)\n          model.toggleTrack(f.value?.trackId)\n        } else if (f.type === 'preConfigured') {\n          model.showTrack(f.value, idx)\n        }\n      })\n    }\n\n    model.showAllRegions()\n    model.setAssemblyNames(assembly2, assembly1)\n  })\n}\n\nconst DotplotImportForm = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const [assembly2, setAssembly2] = useState(assemblyNames[0] || '')\n  const [assembly1, setAssembly1] = useState(assemblyNames[0] || '')\n  const [error, setError] = useState<unknown>()\n\n  // this is a combination of any displayed error message we have\n  const displayError = error || model.error\n  return (\n    <Container className={classes.importFormContainer}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n\n      <Paper style={{ padding: 12 }}>\n        <Typography style={{ textAlign: 'center' }}>\n          Select assemblies for dotplot view\n        </Typography>\n        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n          <AssemblySelector\n            helperText=\"x-axis assembly\"\n            selected={assembly2}\n            session={session}\n            onChange={val => {\n              setAssembly2(val)\n            }}\n          />\n          <AssemblySelector\n            helperText=\"y-axis assembly\"\n            selected={assembly1}\n            session={session}\n            onChange={val => {\n              setAssembly1(val)\n            }}\n          />\n          <FormControl>\n            <Button\n              onClick={() => {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                ;(async () => {\n                  try {\n                    setError(undefined)\n                    doSubmit({\n                      assembly1,\n                      assembly2,\n                      model,\n                    })\n                  } catch (e) {\n                    console.error(e)\n                    setError(e)\n                  }\n                })()\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Launch\n            </Button>\n          </FormControl>\n        </Grid>\n        <TrackSelector\n          assembly2={assembly2}\n          assembly1={assembly1}\n          model={model}\n        />\n      </Paper>\n    </Container>\n  )\n})\n\nexport default DotplotImportForm\n","import { Suspense, lazy, useEffect, useRef, useState } from 'react'\n\nimport { LoadingEllipses, Menu, ResizeHandle } from '@jbrowse/core/ui'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { HorizontalAxis, VerticalAxis } from './Axes'\nimport Grid from './Grid'\nimport Header from './Header'\nimport ImportForm from './ImportForm'\n\nimport type { DotplotViewModel } from '../model'\n\nconst TooltipWhereClicked = lazy(() => import('./DotplotTooltipClick'))\nconst TooltipWhereMouseovered = lazy(() => import('./DotplotTooltipMouseover'))\n\nconst blank = { left: 0, top: 0, width: 0, height: 0 }\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    gridColumn: '1/2',\n    gridRow: '2/2',\n  },\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n\n  container: {\n    display: 'grid',\n    padding: 5,\n    position: 'relative',\n  },\n  overlay: {\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n    gridRow: '1/2',\n    gridColumn: '2/2',\n    zIndex: 100, // needs to be below controls\n    '& path': {\n      cursor: 'crosshair',\n      fill: 'none',\n    },\n  },\n\n  content: {\n    position: 'relative',\n    gridColumn: '2/2',\n    gridRow: '1/2',\n  },\n\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\ntype Coord = [number, number] | undefined\ninterface Rect {\n  left: number\n  top: number\n}\n\n// produces offsetX/offsetY coordinates from a clientX and an element's\n// getBoundingClientRect\nfunction getOffset(coord: Coord, rect: Rect) {\n  return coord && ([coord[0] - rect.left, coord[1] - rect.top] as Coord)\n}\n\nconst RenderedComponent = observer(({ model }: { model: DotplotViewModel }) => {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.overlay}>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        return RenderingComponent ? (\n          <RenderingComponent\n            key={track.configuration.trackId}\n            model={display}\n          />\n        ) : null\n      })}\n    </div>\n  )\n})\n\nconst DotplotViewInternal = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { classes } = useStyles()\n  const [mousecurrClient, setMouseCurrClient] = useState<Coord>()\n  const [mousedownClient, setMouseDownClient] = useState<Coord>()\n  const [mouseOvered, setMouseOvered] = useState(false)\n  const [mouseupClient, setMouseUpClient] = useState<Coord>()\n  const ref = useRef<HTMLDivElement>(null)\n  const root = useRef<HTMLDivElement>(null)\n  const distanceX = useRef(0)\n  const distanceY = useRef(0)\n  const scheduled = useRef(false)\n  const [ctrlKeyWasUsed, setCtrlKeyWasUsed] = useState(false)\n  const [ctrlKeyDown, setCtrlKeyDown] = useState(false)\n  const svg = ref.current?.getBoundingClientRect() || blank\n  const rootRect = ref.current?.getBoundingClientRect() || blank\n  const mousedown = getOffset(mousedownClient, svg)\n  const mousecurr = getOffset(mousecurrClient, svg)\n  const mouseup = getOffset(mouseupClient, svg)\n  const mouserect = mouseup || mousecurr\n  const mouserectClient = mouseupClient || mousecurrClient\n  const xdistance = mousedown && mouserect ? mouserect[0] - mousedown[0] : 0\n  const ydistance = mousedown && mouserect ? mouserect[1] - mousedown[1] : 0\n  const { hview, vview, wheelMode, cursorMode } = model\n\n  const validPan =\n    (cursorMode === 'move' && !ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && ctrlKeyWasUsed)\n\n  const validSelect =\n    (cursorMode === 'move' && ctrlKeyWasUsed) ||\n    (cursorMode === 'crosshair' && !ctrlKeyWasUsed)\n\n  // use non-React wheel handler to properly prevent body scrolling\n  useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      event.preventDefault()\n\n      distanceX.current += event.deltaX\n      distanceY.current -= event.deltaY\n      if (!scheduled.current) {\n        scheduled.current = true\n\n        window.requestAnimationFrame(() => {\n          transaction(() => {\n            if (wheelMode === 'pan') {\n              hview.scroll(distanceX.current / 3)\n              vview.scroll(distanceY.current / 10)\n            } else if (wheelMode === 'zoom') {\n              if (\n                Math.abs(distanceY.current) > Math.abs(distanceX.current) * 2 &&\n                mousecurr\n              ) {\n                const val = distanceY.current < 0 ? 1.1 : 0.9\n                hview.zoomTo(hview.bpPerPx * val, mousecurr[0])\n                vview.zoomTo(\n                  vview.bpPerPx * val,\n                  rootRect.height - mousecurr[1],\n                )\n              }\n            }\n          })\n          scheduled.current = false\n          distanceX.current = 0\n          distanceY.current = 0\n        })\n      }\n    }\n    if (ref.current) {\n      const curr = ref.current\n      curr.addEventListener('wheel', onWheel)\n      return () => {\n        curr.removeEventListener('wheel', onWheel)\n      }\n    }\n    return () => {}\n  }, [hview, vview, wheelMode, mousecurr, rootRect.height])\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      setMouseCurrClient([event.clientX, event.clientY])\n\n      if (mousecurrClient && mousedownClient && validPan && !mouseupClient) {\n        hview.scroll(-event.clientX + mousecurrClient[0])\n        vview.scroll(event.clientY - mousecurrClient[1])\n      }\n    }\n\n    window.addEventListener('mousemove', globalMouseMove)\n    return () => {\n      window.removeEventListener('mousemove', globalMouseMove)\n    }\n  }, [validPan, mousecurrClient, mousedownClient, mouseupClient, hview, vview])\n\n  useEffect(() => {\n    function globalCtrlKeyDown(event: KeyboardEvent) {\n      if (event.metaKey || event.ctrlKey) {\n        setCtrlKeyDown(true)\n      }\n    }\n    function globalCtrlKeyUp(event: KeyboardEvent) {\n      if (!event.metaKey && !event.ctrlKey) {\n        setCtrlKeyDown(false)\n      }\n    }\n    window.addEventListener('keydown', globalCtrlKeyDown)\n    window.addEventListener('keyup', globalCtrlKeyUp)\n    return () => {\n      window.removeEventListener('keydown', globalCtrlKeyDown)\n      window.addEventListener('keyup', globalCtrlKeyUp)\n    }\n  }, [])\n\n  // detect a mouseup after a mousedown was submitted, autoremoves mouseup once\n  // that single mouseup is set\n  useEffect(() => {\n    function globalMouseUp(event: MouseEvent) {\n      if (Math.abs(xdistance) > 3 && Math.abs(ydistance) > 3 && validSelect) {\n        setMouseUpClient([event.clientX, event.clientY])\n      } else {\n        setMouseDownClient(undefined)\n      }\n    }\n    if (mousedown && !mouseup) {\n      window.addEventListener('mouseup', globalMouseUp, true)\n      return () => {\n        window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n    }\n    return () => {}\n  }, [validSelect, mousedown, mouseup, xdistance, ydistance])\n\n  return (\n    <div>\n      <Header\n        model={model}\n        selection={\n          !validSelect || !(mousedown && mouserect)\n            ? undefined\n            : {\n                width: Math.abs(xdistance),\n                height: Math.abs(ydistance),\n              }\n        }\n      />\n      <div\n        ref={root}\n        className={classes.root}\n        onMouseLeave={() => {\n          setMouseOvered(false)\n        }}\n        onMouseEnter={() => {\n          setMouseOvered(true)\n        }}\n      >\n        <div className={classes.container}>\n          <VerticalAxis model={model} />\n          <HorizontalAxis model={model} />\n          <div ref={ref} className={classes.content}>\n            {mouseOvered && validSelect ? (\n              <Suspense fallback={null}>\n                <TooltipWhereMouseovered\n                  model={model}\n                  mouserect={mouserect}\n                  mouserectClient={mouserectClient}\n                  xdistance={xdistance}\n                />\n              </Suspense>\n            ) : null}\n            {validSelect ? (\n              <Suspense fallback={null}>\n                <TooltipWhereClicked\n                  model={model}\n                  mousedown={mousedown}\n                  mousedownClient={mousedownClient}\n                  xdistance={xdistance}\n                  ydistance={ydistance}\n                />\n              </Suspense>\n            ) : null}\n            <div\n              style={{ cursor: ctrlKeyDown ? 'pointer' : cursorMode }}\n              onMouseDown={event => {\n                if (event.button === 0) {\n                  const { clientX, clientY } = event\n                  setMouseDownClient([clientX, clientY])\n                  setMouseCurrClient([clientX, clientY])\n                  setCtrlKeyWasUsed(ctrlKeyDown)\n                }\n              }}\n            >\n              <Grid model={model}>\n                {validSelect && mousedown && mouserect ? (\n                  <rect\n                    fill=\"rgba(255,0,0,0.3)\"\n                    x={Math.min(mouserect[0], mousedown[0])}\n                    y={Math.min(mouserect[1], mousedown[1])}\n                    width={Math.abs(xdistance)}\n                    height={Math.abs(ydistance)}\n                  />\n                ) : null}\n              </Grid>\n            </div>\n            <div className={classes.spacer} />\n          </div>\n          <RenderedComponent model={model} />\n          <Menu\n            open={Boolean(mouseup)}\n            onMenuItemClick={(_, callback) => {\n              callback()\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            onClose={() => {\n              setMouseUpClient(undefined)\n              setMouseDownClient(undefined)\n            }}\n            anchorReference=\"anchorPosition\"\n            anchorPosition={\n              mouseupClient\n                ? {\n                    top: mouseupClient[1] + 50,\n                    left: mouseupClient[0] + 50,\n                  }\n                : undefined\n            }\n            style={{ zIndex: 800 }}\n            menuItems={[\n              {\n                label: 'Zoom in',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.zoomInToMouseCoords(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n              {\n                label: 'Open linear synteny view',\n                onClick: () => {\n                  if (mousedown && mouseup) {\n                    model.onDotplotView(mousedown, mouseup)\n                  }\n                  // below line is needed to prevent tooltip from sticking\n                  setMouseOvered(false)\n                },\n              },\n            ]}\n          />\n        </div>\n        <ResizeHandle\n          onDrag={n => model.setHeight(model.height + n)}\n          className={classes.resizeHandle}\n        />\n      </div>\n    </div>\n  )\n})\nconst DotplotView = observer(function ({ model }: { model: DotplotViewModel }) {\n  const { initialized, loading, error } = model\n\n  if ((!initialized && !loading) || error) {\n    return <ImportForm model={model} />\n  }\n\n  if (loading) {\n    return <LoadingEllipses variant=\"h6\" />\n  }\n\n  return <DotplotViewInternal model={model} />\n})\n\nexport default DotplotView\n","import { getFillProps, getStrokeProps } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { DotplotViewModel } from '../model'\n\nexport const GridRaw = observer(function ({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight, hview, vview } = model\n  const hblocks = hview.dynamicBlocks.contentBlocks\n  const vblocks = vview.dynamicBlocks.contentBlocks\n  if (!hblocks.length || !vblocks.length) {\n    return null\n  }\n  const htop = hview.displayedRegionsTotalPx - hview.offsetPx\n  const vtop = vview.displayedRegionsTotalPx - vview.offsetPx\n  const hbottom = hblocks[0]!.offsetPx - hview.offsetPx\n  const vbottom = vblocks[0]!.offsetPx - vview.offsetPx\n  const theme = useTheme()\n  const stroke = theme.palette.divider\n\n  // Uses math.max/min avoid making very large SVG rect offscreen element,\n  // which can sometimes fail to draw\n  const rx = Math.max(hbottom, 0)\n  const ry = Math.max(viewHeight - vtop, 0)\n  const w = Math.min(htop - hbottom, viewWidth)\n  const h = Math.min(viewHeight - vbottom - ry, viewHeight)\n\n  let lastx = Number.POSITIVE_INFINITY\n  let lasty = Number.POSITIVE_INFINITY\n  return (\n    <>\n      <rect\n        x={rx}\n        y={ry}\n        width={w}\n        height={h}\n        {...getFillProps(theme.palette.background.default)}\n      />\n      <g>\n        {hblocks.map(region => {\n          const x = region.offsetPx - hview.offsetPx\n          const render = Math.floor(x) !== Math.floor(lastx)\n          if (render) {\n            lastx = x\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={x}\n              y1={0}\n              x2={x}\n              y2={viewHeight}\n              {...getStrokeProps(stroke)}\n            />\n          ) : null\n        })}\n        {vblocks.map(region => {\n          const y = viewHeight - (region.offsetPx - vview.offsetPx)\n          const render = Math.floor(y) !== Math.floor(lasty)\n          if (render) {\n            lasty = y\n          }\n          return render ? (\n            <line\n              key={JSON.stringify(region)}\n              x1={0}\n              y1={y}\n              x2={viewWidth}\n              y2={y}\n              {...getStrokeProps(stroke)}\n            />\n          ) : null\n        })}\n        <line\n          x1={htop}\n          y1={0}\n          x2={htop}\n          y2={viewHeight}\n          {...getStrokeProps(stroke)}\n        />\n        <line\n          x1={0}\n          y1={viewHeight - vtop}\n          x2={viewWidth}\n          y2={viewHeight - vtop}\n          {...getStrokeProps(stroke)}\n        />\n      </g>\n      {children}\n    </>\n  )\n})\n\nexport default function Grid({\n  model,\n  children,\n}: {\n  model: DotplotViewModel\n  children?: React.ReactNode\n}) {\n  const { viewWidth, viewHeight } = model\n  return (\n    <svg\n      width={viewWidth}\n      height={viewHeight}\n      style={{ background: 'rgba(0,0,0,0.12)' }}\n    >\n      <GridRaw model={model}>{children}</GridRaw>\n    </svg>\n  )\n}\n","import {\n  getFillProps,\n  getStrokeProps,\n  getTickDisplayStr,\n} from '@jbrowse/core/util'\nimport { bpToPx } from '@jbrowse/core/util/Base1DUtils'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { getBlockLabelKeysToHide } from './util'\n\nimport type { DotplotViewModel } from '../model'\n\nconst useStyles = makeStyles()(() => ({\n  vtext: {\n    gridColumn: '1/2',\n    gridRow: '1/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n  htext: {\n    gridColumn: '2/2',\n    gridRow: '2/2',\n    pointerEvents: 'none',\n    userSelect: 'none',\n  },\n}))\nexport const HorizontalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderY } = model\n  const { classes } = useStyles()\n  return (\n    <svg width={viewWidth} height={borderY} className={classes.htext}>\n      <HorizontalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const HorizontalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewWidth, borderX, borderY, hview, htextRotation, hticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = hview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewWidth, offsetPx)\n  const theme = useTheme()\n  const hviewSnap = {\n    ...getSnapshot(hview),\n    width,\n    staticBlocks: hview.staticBlocks,\n  }\n\n  const ticks = hticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: hviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const x = region.offsetPx\n          const y = 0\n          const xoff = Math.floor(x - hview.offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${htextRotation},${xoff},${y})`}\n              key={JSON.stringify(region)}\n              x={xoff}\n              y={y + 1}\n              fontSize={11}\n              dominantBaseline=\"hanging\"\n              textAnchor=\"end\"\n              {...getFillProps(theme.palette.text.primary)}\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, x]) =>\n        x > 0 && x < width ? (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            {...getFillProps(theme.palette.text.primary)}\n          />\n        ) : null,\n      )}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, x]) =>\n          x > 10 && x < width ? (\n            <text\n              x={x - 7}\n              y={0}\n              transform={`rotate(${htextRotation},${x},0)`}\n              key={`text-${JSON.stringify(tick)}`}\n              fontSize={11}\n              dominantBaseline=\"middle\"\n              textAnchor=\"end\"\n              {...getFillProps(theme.palette.text.primary)}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null,\n        )}\n      <text\n        y={borderY - 12}\n        x={(viewWidth - borderX) / 2}\n        textAnchor=\"middle\"\n        fontSize={11}\n        dominantBaseline=\"hanging\"\n        {...getFillProps(theme.palette.text.primary)}\n      >\n        {hview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\nexport const VerticalAxis = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { borderX, viewHeight } = model\n  const { classes } = useStyles()\n  return (\n    <svg className={classes.vtext} width={borderX} height={viewHeight}>\n      <VerticalAxisRaw model={model} />\n    </svg>\n  )\n})\n\nexport const VerticalAxisRaw = observer(function ({\n  model,\n}: {\n  model: DotplotViewModel\n}) {\n  const { viewHeight, borderX, borderY, vview, vtextRotation, vticks } = model\n  const { offsetPx, width, dynamicBlocks, bpPerPx } = vview\n  const dblocks = dynamicBlocks.contentBlocks\n  const hide = getBlockLabelKeysToHide(dblocks, viewHeight, offsetPx)\n  const theme = useTheme()\n  const vviewSnap = {\n    ...getSnapshot(vview),\n    width,\n    staticBlocks: vview.staticBlocks,\n  }\n  const ticks = vticks\n    .map(\n      tick =>\n        [\n          tick,\n          bpToPx({\n            refName: tick.refName,\n            coord: tick.base,\n            self: vviewSnap,\n          })?.offsetPx,\n        ] as const,\n    )\n    .filter(f => f[1] !== undefined)\n    .map(f => [f[0], f[1]! - offsetPx] as const)\n\n  return (\n    <>\n      {dblocks\n        .filter(region => !hide.has(region.key))\n        .map(region => {\n          const y = region.offsetPx\n          const x = borderX\n          const yoff = Math.floor(viewHeight - y + offsetPx)\n\n          return (\n            <text\n              transform={`rotate(${vtextRotation},${x},${y})`}\n              key={JSON.stringify(region)}\n              x={x}\n              y={yoff}\n              fontSize={11}\n              textAnchor=\"end\"\n              {...getFillProps(theme.palette.text.primary)}\n            >\n              {region.refName}\n            </text>\n          )\n        })}\n      {ticks.map(([tick, y]) =>\n        y > 0 ? (\n          <line\n            key={`line-${JSON.stringify(tick)}`}\n            y1={viewHeight - y}\n            y2={viewHeight - y}\n            x1={borderX}\n            x2={borderX - (tick.type === 'major' ? 6 : 4)}\n            strokeWidth={1}\n            {...getStrokeProps(theme.palette.grey[400])}\n          />\n        ) : null,\n      )}\n      {ticks\n        .filter(t => t[0].type === 'major')\n        .map(([tick, y]) =>\n          y > 10 && y < viewHeight ? (\n            <text\n              y={viewHeight - y - 3}\n              x={borderX - 7}\n              key={`text-${JSON.stringify(tick)}`}\n              textAnchor=\"end\"\n              dominantBaseline=\"hanging\"\n              fontSize={11}\n              {...getFillProps(theme.palette.text.primary)}\n            >\n              {getTickDisplayStr(tick.base + 1, bpPerPx)}\n            </text>\n          ) : null,\n        )}\n      <text\n        y={(viewHeight - borderY) / 2}\n        x={12}\n        transform={`rotate(-90,12,${(viewHeight - borderY) / 2})`}\n        textAnchor=\"middle\"\n        fontSize={11}\n        {...getFillProps(theme.palette.text.primary)}\n      >\n        {vview.assemblyNames.join(',')}\n      </text>\n    </>\n  )\n})\n"],"names":["CursorMove","props","$","_c","t0","t1","Symbol","for","_jsx","fill","d","SvgIcon","children","CursorMouse","observer","model","_jsxs","IconButton","onClick","zoomOut","ZoomOut","zoomIn","ZoomIn","activateTrackSelector","title","TrackSelectorIcon","CascadingMenuButton","menuItems","label","icon","CropDinIcon","squareView","CropLandscapeIcon","squareViewProportional","SettingsOverscanIcon","showAllRegions","type","checked","drawCigar","setDrawCigar","showPanButtons","setShowPanButtons","subMenu","cursorMode","setCursorMode","wheelMode","setWheelMode","MoreVert","WarningDialog","lazy","trackWarnings","tracks","filter","t","displays","warnings","length","shown","setShown","useState","hide","setHide","Alert","severity","Button","handleClose","variant","useStyles","makeStyles","dpad","display","gridTemplateColumns","margin","position","right","zIndex","top","padding","classes","Paper","className","elevation","vview","scroll","ArrowDropUp","hview","ArrowLeft","ArrowRight","ArrowDropDown","bp","alignItems","marginLeft","spacer","flexGrow","headerBar","selection","DotplotControls","Typography","color","assemblyNames","join","getBpDisplayStr","currBp","bpPerPx","width","height","DotplotWarnings","PanButtons","getAdapter","radioOption","assembly1","assembly2","fileLocation","indexFileLocation","bed1Location","bed2Location","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","mcscanSimpleAnchorsLocation","pifGzLocation","index","location","Error","helpStrings","row","gap","swap","setSwap","helpContent","text1","text2","Tooltip","HelpIcon","setFileLocation","setBed1Location","setBed2Location","style","href","FileSelector","inline","name","setLocation","loc","description","SwapAssemblies","setIndexFileLocation","maxWidth","container","flexDirection","value","setValue","error","setError","fileName","sessionTrackData","uri","localPath","undefined","str","r","split","pop","extName","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","setImportFormSyntenyTrack","adapter","e","console","ErrorMessage","textAlign","RadioGroup","onChange","event","target","Grid","justifyContent","map","extension","FormControlLabel","control","Radio","SyntenyFileSelector","AnchorsFileSelector","PifGzSelector","session","getSession","sessionTracks","filteredTracks","track","readConfObject","includes","isRelevantTrack","resetTrack","Select","MenuItem","getTrackName","choice","setChoice","_Fragment","FormControl","FormLabel","id","ImportSyntenyOpenCustomTrack","ImportSyntenyTrackSelector","theme","importFormContainer","spacing","assemblySelector","setAssembly2","setAssembly1","displayError","Container","AssemblySelector","helperText","selected","val","importFormSyntenyTrackSelections","transaction","isSessionWithAddTracks","toJS","f","idx","addTrackConf","toggleTrack","showTrack","setAssemblyNames","doSubmit","TrackSelector","TooltipWhereClicked","TooltipWhereMouseovered","blank","left","gridColumn","gridRow","root","marginBottom","overflow","overlay","pointerEvents","cursor","content","resizeHandle","background","boxSizing","borderTop","getOffset","coord","rect","RenderedComponent","RenderingComponent","configuration","DotplotViewInternal","mousecurrClient","setMouseCurrClient","mousedownClient","setMouseDownClient","mouseOvered","setMouseOvered","mouseupClient","setMouseUpClient","ref","useRef","distanceX","distanceY","scheduled","ctrlKeyWasUsed","setCtrlKeyWasUsed","ctrlKeyDown","setCtrlKeyDown","svg","current","getBoundingClientRect","rootRect","mousedown","mousecurr","mouseup","mouserect","mouserectClient","xdistance","ydistance","validPan","validSelect","onWheel","preventDefault","deltaX","deltaY","window","requestAnimationFrame","Math","abs","zoomTo","curr","addEventListener","removeEventListener","globalMouseMove","clientX","clientY","globalCtrlKeyDown","metaKey","ctrlKey","globalCtrlKeyUp","globalMouseUp","Header","onMouseLeave","onMouseEnter","VerticalAxis","HorizontalAxis","Suspense","fallback","onMouseDown","button","x","min","y","Menu","open","Boolean","onMenuItemClick","_","callback","onClose","anchorReference","anchorPosition","zoomInToMouseCoords","onDotplotView","ResizeHandle","onDrag","n","setHeight","initialized","loading","ImportForm","LoadingEllipses","GridRaw","viewWidth","viewHeight","hblocks","dynamicBlocks","contentBlocks","vblocks","htop","displayedRegionsTotalPx","offsetPx","vtop","hbottom","vbottom","useTheme","stroke","palette","divider","rx","max","ry","w","h","lastx","Number","POSITIVE_INFINITY","lasty","getFillProps","default","region","render","floor","x1","y1","x2","y2","getStrokeProps","JSON","stringify","t2","t3","vtext","userSelect","htext","borderY","HorizontalAxisRaw","borderX","htextRotation","hticks","dblocks","getBlockLabelKeysToHide","hviewSnap","getSnapshot","staticBlocks","ticks","tick","bpToPx","refName","base","self","has","key","xoff","transform","fontSize","dominantBaseline","textAnchor","text","primary","strokeWidth","getTickDisplayStr","VerticalAxisRaw","vtextRotation","vticks","vviewSnap","yoff","grey"],"sourceRoot":""}