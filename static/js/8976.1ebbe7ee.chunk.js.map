{"version":3,"file":"static/js/8976.1ebbe7ee.chunk.js","mappings":"4PAQe,SAAAA,EAAAC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,IAA2C,KAAAC,EAAA,QAAAC,GAAAJ,GAOxDK,EAAAC,IAA8BC,EAAAA,EAAAA,WAAA,GAAe,IAAAC,EAAA,GAAAP,EAAA,KAAAI,GAAAJ,EAAA,KAAAG,GAAAH,EAAA,KAAAE,EAAA,KAAAM,EAAAR,EAAA,KAAAE,GAClBM,EAAAC,IAAKC,EAAAA,EAAAA,kBAAiBR,EAAIS,IAAAC,GAAUA,EAAEH,EAACI,SAASb,EAAA,GAAAE,EAAAF,EAAA,GAAAQ,GAAAA,EAAAR,EAAA,GAA3E,MAAAc,EAAeX,EAAOQ,IAAKH,GAEpBD,EAAAL,EAAIa,QACTC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACRC,OAAAF,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAASC,QAAA,QAAOL,SAAC,iBAEjCM,SAAAL,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACEpB,QAAAA,EACCqB,SAETC,IADCrB,EAAWqB,EAAKC,OAAAvB,eAMxBc,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CACIC,UAAE,GACDC,WAAA5B,EAAIa,OAAA,IACVb,KAAAA,EACOE,YAAAA,EACJD,QAAAA,EAAOQ,IAAA,CAAAoB,EAAAC,KAAA,IAGPD,EAACE,MACGnB,EAAOkB,WAIlB,KACAhC,EAAA,GAAAI,EAAAJ,EAAA,GAAAG,EAAAH,EAAA,GAAAE,EAAAF,EAAA,GAAAO,CAAA,MAAAA,EAAAP,EAAA,UA5BDO,CA4BC,CC1CK,SAAA2B,EAAAnC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,IAAoC,KAAAkC,EAAA,OAAAC,EAAA,MAAAC,GAAAtC,EAQlD,IAAAQ,EAWS,OAXTP,EAAA,KAAAmC,GAAAnC,EAAA,KAAAoC,GAAApC,EAAA,KAAAqC,GACQ9B,EAAA4B,EAAIpB,QACTG,EAAAA,EAAAA,KAACoB,EAAAA,QAAQ,CAAQD,MAAAA,EAAKpB,UACpBC,EAAAA,EAAAA,KAACpB,EAAiC,CAC1BI,KAAAiC,EAAIxB,IAAA,CAAA4B,EAAAC,KAAA,CAAAA,QAELC,OAAAC,YAAmBH,EAAGI,MAAO,KAAIhC,IAAA,CAAAF,EAAAuB,IAAA,CAAgBI,EAAOJ,GAAIvB,QAExDN,QAAAiC,EAAMzB,IAAAiC,OAER,KACL5C,EAAA,GAAAmC,EAAAnC,EAAA,GAAAoC,EAAApC,EAAA,GAAAqC,EAAArC,EAAA,GAAAO,GAAAA,EAAAP,EAAA,GAVDO,CAUC,CAnBK,SAAAqC,EAAAb,GAAA,OAAAlB,MAgB4BkB,EAAC,C","sources":["../../../plugins/variants/src/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGridWrapper.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGrid.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { measureGridWidth } from '@jbrowse/core/util'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\n\nimport type { GridColDef, GridValidRowModel } from '@mui/x-data-grid'\n\nexport default function VariantConsequenceDataGridWrapper({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const [checked, setChecked] = useState(false)\n  const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])))\n\n  return rows.length ? (\n    <div>\n      <FormControlLabel\n        label={<Typography variant=\"body2\">Show options</Typography>}\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => {\n              setChecked(event.target.checked)\n            }}\n          />\n        }\n      />\n\n      <DataGrid\n        rowHeight={25}\n        hideFooter={rows.length < 100}\n        rows={rows}\n        showToolbar={checked}\n        columns={columns.map(\n          (c, i) =>\n            ({\n              ...c,\n              width: widths[i],\n            }) satisfies GridColDef<(typeof rows)[0]>,\n        )}\n      />\n    </div>\n  ) : null\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\n\nimport VariantConsequenceDataGridWrapper from './VariantConsequenceDataGridWrapper'\n\nexport default function VariantConsequenceDataGrid({\n  data,\n  fields,\n  title,\n}: {\n  data: string[]\n  fields: string[]\n  title: string\n}) {\n  return data.length ? (\n    <BaseCard title={title}>\n      <VariantConsequenceDataGridWrapper\n        rows={data.map((elt, id) => ({\n          id,\n          ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n        }))}\n        columns={fields.map(c => ({ field: c }))}\n      />\n    </BaseCard>\n  ) : null\n}\n"],"names":["VariantConsequenceDataGridWrapper","t0","$","_c","rows","columns","checked","setChecked","useState","t1","t2","e","measureGridWidth","map","r","field","widths","length","_jsxs","children","_jsx","FormControlLabel","label","Typography","variant","control","Checkbox","onChange","event","target","DataGrid","rowHeight","hideFooter","c","i","width","VariantConsequenceDataGrid","data","fields","title","BaseCard","elt","id","Object","fromEntries","split","_temp"],"sourceRoot":""}