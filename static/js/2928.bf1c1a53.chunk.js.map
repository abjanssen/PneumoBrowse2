{"version":3,"file":"static/js/2928.bf1c1a53.chunk.js","mappings":"8RAgBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,KAAM,CACnCC,UAAW,CACTC,MAAO,QAoDX,GAhD0BC,EAAAA,EAAAA,UAAS,UAAU,YAC3CC,EAAW,QACXC,IAWA,MAAM,QAAEC,GAAYP,IACpB,OACEQ,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAM,cAAcC,MAAI,EAACC,QAASP,EAAaQ,SAAS,KAAIC,SAAA,EAClEN,EAAAA,EAAAA,MAACO,EAAAA,EAAa,CAACC,UAAWT,EAAQL,UAAUY,SAAA,EAC1CG,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,QAAM,EACNC,MAAM,QACNC,MAAOf,EAAQgB,UACfC,SAAUC,IACRlB,EAAQmB,aAAaD,EAAME,OAAOL,QAClCP,SAEDa,OAAOC,QAAQtB,EAAQuB,aAAaC,IAAI,EAAEC,EAAKC,MAC9Cf,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CAAWZ,MAAOU,EAAIjB,SAC5BkB,EAAIE,MAAQ,kBADAH,OAKnBd,EAAAA,EAAAA,KAACkB,EAAAA,EAAS,CAAArB,UACRG,EAAAA,EAAAA,KAACmB,EAAAA,EAAgB,CACfC,SAASpB,EAAAA,EAAAA,KAACqB,EAAAA,EAAQ,CAACC,QAASjC,EAAQkC,oBACpCpB,MAAM,2BACNG,SAAUA,CAACkB,EAAGF,KACZjC,EAAQoC,qBAAqBH,YAKrCtB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAAA7B,UACZG,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACC,QAASxC,EAAYS,SAAC,cAItC,E","sources":["components/PreferencesDialog.tsx"],"sourcesContent":["import { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  TextField,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { ThemeOptions } from '@mui/material'\n\nconst useStyles = makeStyles()(() => ({\n  container: {\n    width: 800,\n  },\n}))\n\nconst PreferencesDialog = observer(function ({\n  handleClose,\n  session,\n}: {\n  handleClose: () => void\n  session: {\n    allThemes: () => Record<string, ThemeOptions & { name?: string }>\n    themeName?: string\n    setThemeName: (arg: string) => void\n    stickyViewHeaders: boolean\n    setStickyViewHeaders(sticky: boolean): void\n  }\n}) {\n  const { classes } = useStyles()\n  return (\n    <Dialog title=\"Preferences\" open onClose={handleClose} maxWidth=\"xl\">\n      <DialogContent className={classes.container}>\n        <TextField\n          select\n          label=\"Theme\"\n          value={session.themeName}\n          onChange={event => {\n            session.setThemeName(event.target.value)\n          }}\n        >\n          {Object.entries(session.allThemes()).map(([key, val]) => (\n            <MenuItem key={key} value={key}>\n              {val.name || '(Unknown name)'}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={session.stickyViewHeaders} />}\n            label=\"Keep view header visible\"\n            onChange={(_, checked) => {\n              session.setStickyViewHeaders(checked)\n            }}\n          />\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Close</Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default PreferencesDialog\n"],"names":["useStyles","makeStyles","container","width","observer","handleClose","session","classes","_jsxs","Dialog","title","open","onClose","maxWidth","children","DialogContent","className","_jsx","TextField","select","label","value","themeName","onChange","event","setThemeName","target","Object","entries","allThemes","map","key","val","MenuItem","name","FormGroup","FormControlLabel","control","Checkbox","checked","stickyViewHeaders","_","setStickyViewHeaders","DialogActions","Button","onClick"],"sourceRoot":""}