{"version":3,"file":"static/js/9114.869c79fd.chunk.js","mappings":"gNASA,MAAMA,GAAiCC,EAAAA,EAAAA,OACrC,IAAM,kCAEFC,GAAkCD,EAAAA,EAAAA,OACtC,IAAM,iCAGO,SAASE,GAAwC,MAC9DC,EAAK,QACLC,IAKA,MAAMC,GAAUC,EAAAA,EAAAA,YAAWH,GACrBI,EAAK,CACTC,SAAUJ,EAAQI,SAClBC,QAASL,EAAQK,QACjBC,MAAON,EAAQM,MACfC,IAAKP,EAAQO,IACbC,OAAQR,EAAQQ,QAEZC,EAAK,CACTL,SAAU,GAAGJ,EAAQU,UACrBL,QAASL,EAAQW,SACjBL,MAAON,EAAQY,SACfL,IAAMP,EAAQY,SAAsB,EACpCJ,OAAQR,EAAQQ,QAElB,OACEK,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAU,KAAC,qBACZD,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACGV,EAAGE,QAAQ,KAAEU,EAAAA,EAAAA,UAASZ,EAAGG,OAAO,OAAQG,EAAGJ,QAAQ,KACnDU,EAAAA,EAAAA,UAASN,EAAGH,OAAQ,IACrBO,EAAAA,cAACG,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACNnB,EAAQoB,aAAYC,GAAe,CACjC3B,EACA,CACE2B,cACArB,UACAD,QAAS,IAAIuB,EAAAA,cAAc,IAAKpB,EAAIqB,KAAMf,IAC1CgB,KAAM1B,EAAM0B,KACZC,aAAc3B,EAAM0B,KAAKE,iBAAiB,GAAGD,gBAE/C,GAEL,gBAEO,IACRb,EAAAA,cAACG,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACNnB,EAAQoB,aAAYC,GAAe,CACjCzB,EACA,CACEyB,cACArB,UACAD,QAAS,IAAIuB,EAAAA,cAAc,IAAKpB,EAAIqB,KAAMf,IAC1CgB,KAAM1B,EAAM0B,KACZC,aAAc3B,EAAM0B,KAAKE,iBAAiB,GAAGD,gBAE/C,GAEL,kBAOX,C,wNC3Ee,SAASE,EAAeC,GAIrC,MAAM,MAAE9B,EAAK,QAAEC,GAAY6B,EACrB5B,GAAUC,EAAAA,EAAAA,YAAWH,IACrB,cAAE+B,IAAkBC,EAAAA,EAAAA,QAAO9B,GACjC,IAAI+B,GAAuB,EAE3B,IACEA,IAAyBF,EAAcG,YAAY,sBACrD,CAAE,MAAOC,GACP,CAEF,OACErB,EAAAA,cAACsB,EAAAA,QAAQC,EAAA,GAAKP,EAAK,CAAEQ,MAAM,sBACxBL,EACCnB,EAAAA,cAACf,EAAuC,CACtCC,MAAOA,EACPC,QAASA,IAET,KAGV,C","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/LaunchPairedEndBreakpointSplitViewPanel.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/LinkedPairedAlignments.tsx"],"sourcesContent":["import React, { lazy } from 'react'\n\nimport { SimpleFeature, getSession, toLocale } from '@jbrowse/core/util'\nimport { Link, Typography } from '@mui/material'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nexport default function LaunchPairedEndBreakpointSplitViewPanel({\n  model,\n  feature,\n}: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const session = getSession(model)\n  const f1 = {\n    uniqueId: feature.uniqueId,\n    refName: feature.refName,\n    start: feature.start,\n    end: feature.end,\n    strand: feature.strand,\n  }\n  const f2 = {\n    uniqueId: `${feature.id}-mate`,\n    refName: feature.next_ref as string,\n    start: feature.next_pos as number,\n    end: (feature.next_pos as number) + 1,\n    strand: feature.strand as number,\n  }\n  return (\n    <div>\n      <Typography>Launch split view</Typography>\n      <ul>\n        <li>\n          {f1.refName}:{toLocale(f1.start)} -&gt; {f2.refName}:\n          {toLocale(f2.start)}{' '}\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              session.queueDialog(handleClose => [\n                BreakendMultiLevelOptionDialog,\n                {\n                  handleClose,\n                  session,\n                  feature: new SimpleFeature({ ...f1, mate: f2 }),\n                  view: model.view,\n                  assemblyName: model.view.displayedRegions[0].assemblyName,\n                },\n              ])\n            }}\n          >\n            (top/bottom)\n          </Link>{' '}\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              session.queueDialog(handleClose => [\n                BreakendSingleLevelOptionDialog,\n                {\n                  handleClose,\n                  session,\n                  feature: new SimpleFeature({ ...f1, mate: f2 }),\n                  view: model.view,\n                  assemblyName: model.view.displayedRegions[0].assemblyName,\n                },\n              ])\n            }}\n          >\n            (single row)\n          </Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { getEnv, getSession } from '@jbrowse/core/util'\n\nimport LaunchPairedEndBreakpointSplitViewPanel from './LaunchPairedEndBreakpointSplitViewPanel'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nexport default function SuppAlignments(props: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let hasBreakendSplitView = false\n\n  try {\n    hasBreakendSplitView = !!pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n  return (\n    <BaseCard {...props} title=\"Paired alignments\">\n      {hasBreakendSplitView ? (\n        <LaunchPairedEndBreakpointSplitViewPanel\n          model={model}\n          feature={feature}\n        />\n      ) : null}\n    </BaseCard>\n  )\n}\n"],"names":["BreakendMultiLevelOptionDialog","lazy","BreakendSingleLevelOptionDialog","LaunchPairedEndBreakpointSplitViewPanel","model","feature","session","getSession","f1","uniqueId","refName","start","end","strand","f2","id","next_ref","next_pos","React","Typography","toLocale","Link","href","onClick","event","preventDefault","queueDialog","handleClose","SimpleFeature","mate","view","assemblyName","displayedRegions","SuppAlignments","props","pluginManager","getEnv","hasBreakendSplitView","getViewType","e","BaseCard","_extends","title"],"sourceRoot":""}