{"version":3,"file":"static/js/7761.da13eef9.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/esm/Container/Container.js","../../../node_modules/@mui/icons-material/esm/GetApp.js","../../../plugins/linear-genome-view/src/LinearGenomeView/components/GetSequenceDialog.tsx","../../../packages/core/util/formatFastaStrings.ts","../../../node_modules/@mui/system/esm/styled/styled.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');","import { useEffect, useState } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport { complement, getSession, reverse } from '@jbrowse/core/util'\nimport { formatSeqFasta } from '@jbrowse/core/util/formatFastaStrings'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Container,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  FormGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport copy from 'copy-to-clipboard'\nimport { saveAs } from 'file-saver'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { Feature, Region } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  dialogContent: {\n    width: '80em',\n  },\n  textAreaFont: {\n    fontFamily: 'Courier New',\n  },\n  ml: {\n    marginLeft: 10,\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * Fetches and returns a list features for a given list of regions\n */\nasync function fetchSequence(model: LGV, regions: Region[]) {\n  const session = getSession(model)\n  const { leftOffset, rightOffset } = model\n\n  if (!leftOffset || !rightOffset) {\n    throw new Error('no offsets on model to use for range')\n  }\n\n  const assemblyNames = new Set(regions.map(r => r.assemblyName))\n  if (assemblyNames.size > 1) {\n    throw new Error(\n      'not able to fetch sequences from multiple assemblies currently',\n    )\n  }\n  const { rpcManager, assemblyManager } = session\n  const assemblyName = leftOffset.assemblyName || rightOffset.assemblyName || ''\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  const adapterConfig = getConf(assembly, ['sequence', 'adapter'])\n\n  const sessionId = 'getSequence'\n  return rpcManager.call(sessionId, 'CoreGetFeatures', {\n    adapterConfig,\n    regions,\n    sessionId,\n  }) as Promise<Feature[]>\n}\n\nconst GetSequenceDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: LGV\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [error, setError] = useState<unknown>()\n  const [sequenceChunks, setSequenceChunks] = useState<Feature[]>()\n  const [rev, setReverse] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const [comp, setComplement] = useState(false)\n  const { leftOffset, rightOffset } = model\n  const loading = Boolean(sequenceChunks === undefined)\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        // random note: the current selected region can't be a computed because\n        // it uses action on base1dview even though it's on the ephemeral\n        // base1dview\n        const selection = model.getSelectedRegions(leftOffset, rightOffset)\n        if (selection.length === 0) {\n          throw new Error('Selected region is out of bounds')\n        }\n        // TODO:ABORT\n        const chunks = await fetchSequence(model, selection)\n        setSequenceChunks(chunks)\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n\n    return () => {\n      controller.abort()\n    }\n  }, [model, leftOffset, rightOffset])\n\n  const sequence = sequenceChunks\n    ? formatSeqFasta(\n        sequenceChunks.map(chunk => {\n          let chunkSeq = chunk.get('seq')\n          const chunkRefName = chunk.get('refName')\n          const chunkStart = chunk.get('start') + 1\n          const chunkEnd = chunk.get('end')\n          const loc = `${chunkRefName}:${chunkStart}-${chunkEnd}`\n          if (chunkSeq?.length !== chunkEnd - chunkStart + 1) {\n            throw new Error(\n              `${loc} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(\n                chunkEnd - chunkStart\n              ).toLocaleString()}`,\n            )\n          }\n\n          if (rev) {\n            chunkSeq = reverse(chunkSeq)\n          }\n          if (comp) {\n            chunkSeq = complement(chunkSeq)\n          }\n          return {\n            header: loc + (rev ? '-rev' : '') + (comp ? '-comp' : ''),\n            seq: chunkSeq,\n          }\n        }),\n      )\n    : ''\n\n  const sequenceTooLarge = sequence ? sequence.length > 1_000_000 : false\n\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => {\n        handleClose()\n        model.setOffsets()\n      }}\n      title=\"Reference sequence\"\n    >\n      <DialogContent>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : loading ? (\n          <Container>\n            Retrieving reference sequence...\n            <CircularProgress className={classes.ml} size={20} disableShrink />\n          </Container>\n        ) : null}\n        <TextField\n          data-testid=\"rubberband-sequence\"\n          variant=\"outlined\"\n          multiline\n          minRows={5}\n          maxRows={10}\n          disabled={sequenceTooLarge}\n          className={classes.dialogContent}\n          fullWidth\n          value={\n            sequenceTooLarge\n              ? 'Reference sequence too large to display, use the download FASTA button'\n              : sequence\n          }\n          slotProps={{\n            input: {\n              readOnly: true,\n              classes: {\n                input: classes.textAreaFont,\n              },\n            },\n          }}\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={rev}\n                onChange={event => {\n                  setReverse(event.target.checked)\n                }}\n              />\n            }\n            label=\"Reverse sequence\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                value={comp}\n                onChange={event => {\n                  setComplement(event.target.checked)\n                }}\n              />\n            }\n            label=\"Complement sequence\"\n          />\n        </FormGroup>\n        <Typography style={{ margin: 10 }}>\n          Note: Check both boxes for the &quot;reverse complement&quot;\n        </Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            copy(sequence)\n            setCopied(true)\n            setTimeout(() => {\n              setCopied(false)\n            }, 500)\n          }}\n          disabled={loading || !!error || sequenceTooLarge}\n          color=\"primary\"\n          startIcon={<ContentCopyIcon />}\n        >\n          {copied ? 'Copied' : 'Copy to clipboard'}\n        </Button>\n        <Button\n          onClick={() => {\n            saveAs(\n              new Blob([sequence || ''], {\n                type: 'text/x-fasta;charset=utf-8',\n              }),\n              'jbrowse_ref_seq.fa',\n            )\n          }}\n          disabled={loading || !!error}\n          color=\"primary\"\n          startIcon={<GetAppIcon />}\n        >\n          Download FASTA\n        </Button>\n        <Button onClick={handleClose} variant=\"contained\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default GetSequenceDialog\n","export interface SeqChunk {\n  header: string\n  seq: string\n}\n/**\n * Returns sequence with new line every 80 characters\n * ref https://stackoverflow.com/a/51506718/2129219\n *\n * @param seqString -  string\n * @returns formatted sequence string\n */\nexport function formatFastaLines(seqString: string) {\n  return seqString.replaceAll(/(.{1,80})/g, '$1\\n').trimEnd()\n}\n/**\n * Formats the sequences chunks into Fasta format\n *\n * @param chunks - array of seq chunks of the form `{ header: string, seq: string }`\n * @returns formatted sequence in fasta format\n */\nexport function formatSeqFasta(chunks: SeqChunk[]) {\n  return chunks\n    .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n    .join('\\n')\n}\n","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;"],"names":["defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","Math","max","xs","ref","className","component","classes","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","d","useStyles","makeStyles","dialogContent","textAreaFont","fontFamily","ml","observer","model","handleClose","error","setError","useState","sequenceChunks","setSequenceChunks","rev","setReverse","copied","setCopied","comp","setComplement","leftOffset","rightOffset","loading","Boolean","undefined","useEffect","controller","AbortController","selection","getSelectedRegions","length","Error","chunks","async","regions","session","getSession","Set","map","r","assemblyName","size","rpcManager","assemblyManager","assembly","get","adapterConfig","getConf","sessionId","call","fetchSequence","e","console","abort","sequence","chunk","chunkSeq","chunkRefName","chunkStart","chunkEnd","loc","toLocaleString","reverse","complement","header","seq","seqString","replaceAll","trimEnd","join","sequenceTooLarge","_jsxs","Dialog","open","onClose","setOffsets","title","children","DialogContent","_jsx","Typography","color","CircularProgress","disableShrink","TextField","variant","multiline","minRows","maxRows","disabled","fullWidth","slotProps","input","readOnly","FormGroup","FormControlLabel","control","Checkbox","onChange","event","target","checked","label","style","margin","DialogActions","Button","onClick","copy","setTimeout","startIcon","ContentCopyIcon","saveAs","Blob","type","GetAppIcon"],"sourceRoot":""}