{"version":3,"file":"static/js/8076.a36efd04.chunk.js","mappings":"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","sources":["../../../packages/app-core/src/ui/App/Drawer.tsx","../../../packages/app-core/src/ui/App/DrawerControls.tsx","../../../packages/app-core/src/ui/App/DrawerWidgetSelector.tsx","../../../packages/app-core/src/ui/App/DrawerHeader.tsx","../../../packages/app-core/src/ui/App/DrawerWidget.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react'\n\nimport ResizeHandle from '@jbrowse/core/ui/ResizeHandle'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  paper: {\n    overflowY: 'auto',\n    height: '100%',\n    position: 'relative',\n    zIndex: theme.zIndex.drawer,\n    outline: 'none',\n    background: theme.palette.background.default,\n  },\n  resizeHandle: {\n    width: 4,\n    position: 'fixed',\n    top: 0,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}))\n\nconst Drawer = observer(function ({\n  children,\n  session,\n}: {\n  children: React.ReactNode\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { drawerPosition, drawerWidth } = session\n  const { classes } = useStyles()\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element && ref.current?.contains(e.target)) {\n        // @ts-ignore\n        const visibleWidgetId = session.visibleWidget?.view?.id\n        if (visibleWidgetId) {\n          session.setFocusedViewId(visibleWidgetId)\n        }\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [session])\n\n  return (\n    <Paper ref={ref} className={classes.paper} elevation={16} square>\n      {drawerPosition === 'right' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          vertical\n        />\n      ) : null}\n      {children}\n      {drawerPosition === 'left' ? (\n        <ResizeHandle\n          onDrag={session.resizeDrawer}\n          className={classes.resizeHandle}\n          style={{ left: drawerWidth }}\n          vertical\n        />\n      ) : null}\n    </Paper>\n  )\n})\n\nexport default Drawer\n","import { useState } from 'react'\n\nimport CloseIcon from '@mui/icons-material/Close'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport { IconButton, Menu, MenuItem, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst DrawerControls = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const { drawerPosition, visibleWidget } = session\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        onClick={event => {\n          setAnchorEl(event.currentTarget)\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Tooltip title=\"Minimize drawer\">\n        <IconButton\n          data-testid=\"drawer-minimize\"\n          color=\"inherit\"\n          onClick={() => {\n            session.notify(\n              `Drawer minimized, click button on ${drawerPosition} side of screen to re-open`,\n              'info',\n            )\n            session.minimizeWidgetDrawer()\n          }}\n        >\n          <MinimizeIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Close drawer\">\n        <IconButton\n          color=\"inherit\"\n          onClick={() => {\n            session.hideWidget(visibleWidget)\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null)\n        }}\n      >\n        {['left', 'right'].map(option => (\n          <MenuItem\n            key={option}\n            selected={drawerPosition === 'option'}\n            onClick={() => {\n              session.setDrawerPosition(option)\n              setAnchorEl(null)\n            }}\n          >\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  )\n})\n\nexport default DrawerControls\n","import { getEnv } from '@jbrowse/core/util'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport {\n  FormControl,\n  IconButton,\n  MenuItem,\n  Select,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  drawerSelect: {\n    margin: 0,\n    color: theme.palette.secondary.contrastText,\n  },\n\n  dropDownIcon: {\n    color: theme.palette.secondary.contrastText,\n  },\n}))\n\nconst DrawerWidgetSelector = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget, activeWidgets } = session\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(session)\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        value={visibleWidget?.id}\n        data-testid=\"widget-drawer-selects\"\n        className={classes.drawerSelect}\n        classes={{ icon: classes.dropDownIcon }}\n        renderValue={widgetId => {\n          const widget = session.activeWidgets.get(widgetId)\n          if (!widget) {\n            return (\n              <Typography variant=\"h6\" color=\"inherit\">\n                Unknown widget\n              </Typography>\n            )\n          }\n          const widgetType = pluginManager.getWidgetType(widget.type)!\n          const { HeadingComponent, heading } = widgetType\n          return HeadingComponent ? (\n            <HeadingComponent model={widget} />\n          ) : (\n            <Typography variant=\"h6\" color=\"inherit\">\n              {heading}\n            </Typography>\n          )\n        }}\n        onChange={e => {\n          const w = session.activeWidgets.get(e.target.value)\n          if (w) {\n            session.showWidget(w)\n          } else {\n            session.notify(`Widget not found ${e.target.value}`, 'warning')\n          }\n        }}\n      >\n        {[...activeWidgets.values()].map(widget => {\n          const widgetType = pluginManager.getWidgetType(widget.type)!\n          const { HeadingComponent, heading } = widgetType\n          return (\n            <MenuItem\n              data-testid={`widget-drawer-selects-item-${widget.type}`}\n              key={widget.id}\n              value={widget.id}\n            >\n              {HeadingComponent ? (\n                <HeadingComponent model={widget} />\n              ) : (\n                <Typography variant=\"h6\" color=\"inherit\">\n                  {heading}\n                </Typography>\n              )}\n              <IconButton\n                data-testid={`${widget.type}-drawer-delete`}\n                color=\"inherit\"\n                aria-label=\"Delete\"\n                onClick={() => {\n                  session.hideWidget(widget)\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </MenuItem>\n          )\n        })}\n      </Select>\n    </FormControl>\n  )\n})\n\nexport default DrawerWidgetSelector\n","import LaunchIcon from '@mui/icons-material/Launch'\nimport { AppBar, IconButton, Toolbar, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DrawerControls from './DrawerControls'\nimport DrawerWidgetSelector from './DrawerWidgetSelector'\n\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst useStyles = makeStyles()(theme => ({\n  spacer: {\n    flexGrow: 1,\n  },\n\n  headerFocused: {\n    background: theme.palette.secondary.main,\n  },\n  headerUnfocused: {\n    background: theme.palette.secondary.dark,\n  },\n}))\n\nconst DrawerHeader = observer(function ({\n  session,\n  setToolbarHeight,\n  onPopoutDrawer,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n  setToolbarHeight: (arg: number) => void\n  onPopoutDrawer: () => void\n}) {\n  const { classes } = useStyles()\n  const focusedViewId = session.focusedViewId\n  // @ts-ignore\n  const viewWidgetId = session.visibleWidget?.view?.id\n\n  return (\n    <AppBar\n      position=\"sticky\"\n      className={\n        focusedViewId === viewWidgetId\n          ? classes.headerFocused\n          : classes.headerUnfocused\n      }\n      ref={ref => {\n        setToolbarHeight(ref?.getBoundingClientRect().height || 0)\n      }}\n    >\n      <Toolbar disableGutters>\n        <DrawerWidgetSelector session={session} />\n        <Tooltip title=\"Open drawer in dialog\">\n          <IconButton\n            color=\"inherit\"\n            onClick={() => {\n              onPopoutDrawer()\n            }}\n          >\n            <LaunchIcon />\n          </IconButton>\n        </Tooltip>\n        <div className={classes.spacer} />\n        <DrawerControls session={session} />\n      </Toolbar>\n    </AppBar>\n  )\n})\n\nexport default DrawerHeader\n","import { Suspense, lazy, useState } from 'react'\n\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui'\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport Drawer from './Drawer'\nimport DrawerHeader from './DrawerHeader'\n\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util/types'\n\nconst ModalWidget = lazy(() => import('./ModalWidget'))\n\nconst DrawerWidget = observer(function ({\n  session,\n}: {\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { visibleWidget } = session\n  const { pluginManager } = getEnv(session)\n\n  const DrawerComponent = visibleWidget\n    ? (pluginManager.evaluateExtensionPoint(\n        'Core-replaceWidget',\n        pluginManager.getWidgetType(visibleWidget.type)!.ReactComponent,\n        {\n          session,\n          model: visibleWidget,\n        },\n      ) as React.FC<any>)\n    : null\n\n  // we track the toolbar height because components that use virtualized\n  // height want to be able to fill the contained, minus the toolbar height\n  // (the position static/sticky is included in AutoSizer estimates)\n  const [toolbarHeight, setToolbarHeight] = useState(0)\n  const [popoutDrawer, setPopoutDrawer] = useState(false)\n\n  return (\n    <Drawer session={session}>\n      <DrawerHeader\n        onPopoutDrawer={() => {\n          setPopoutDrawer(true)\n        }}\n        session={session}\n        setToolbarHeight={setToolbarHeight}\n      />\n      <Suspense fallback={<LoadingEllipses />}>\n        <ErrorBoundary\n          FallbackComponent={({ error }) => <ErrorMessage error={error} />}\n        >\n          {DrawerComponent ? (\n            popoutDrawer ? (\n              <>\n                <div>Opened in dialog...</div>\n                <ModalWidget\n                  session={session}\n                  onClose={() => {\n                    setPopoutDrawer(false)\n                  }}\n                />\n              </>\n            ) : (\n              <>\n                <DrawerComponent\n                  model={visibleWidget}\n                  session={session}\n                  toolbarHeight={toolbarHeight}\n                />\n                <div style={{ height: 300 }} />\n              </>\n            )\n          ) : null}\n        </ErrorBoundary>\n      </Suspense>\n    </Drawer>\n  )\n})\n\nexport default DrawerWidget\n"],"names":["useStyles","makeStyles","theme","paper","overflowY","height","position","zIndex","drawer","outline","background","palette","default","resizeHandle","width","top","observer","children","session","drawerPosition","drawerWidth","classes","ref","useRef","useEffect","handleSelectView","e","target","Element","current","contains","visibleWidgetId","visibleWidget","view","id","setFocusedViewId","document","addEventListener","removeEventListener","_jsxs","Paper","className","elevation","square","_jsx","ResizeHandle","onDrag","resizeDrawer","vertical","style","left","anchorEl","setAnchorEl","useState","_Fragment","IconButton","color","onClick","event","currentTarget","MoreVertIcon","Tooltip","title","notify","minimizeWidgetDrawer","MinimizeIcon","hideWidget","CloseIcon","Menu","open","Boolean","onClose","map","option","MenuItem","selected","setDrawerPosition","formControl","margin","drawerSelect","secondary","contrastText","dropDownIcon","activeWidgets","pluginManager","getEnv","FormControl","Select","value","icon","renderValue","widgetId","widget","get","Typography","variant","widgetType","getWidgetType","type","HeadingComponent","heading","model","onChange","w","showWidget","values","DeleteIcon","spacer","flexGrow","headerFocused","main","headerUnfocused","dark","setToolbarHeight","onPopoutDrawer","focusedViewId","viewWidgetId","AppBar","getBoundingClientRect","Toolbar","disableGutters","DrawerWidgetSelector","LaunchIcon","DrawerControls","ModalWidget","lazy","DrawerComponent","evaluateExtensionPoint","ReactComponent","toolbarHeight","popoutDrawer","setPopoutDrawer","Drawer","DrawerHeader","Suspense","fallback","LoadingEllipses","ErrorBoundary","FallbackComponent","error","ErrorMessage"],"sourceRoot":""}