{"version":3,"file":"static/js/4357.93fedeac.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../plugins/dotplot-view/src/DotplotView/components/WarningDialog.tsx","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/material/Badge/useBadge.js","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import { getConf } from '@jbrowse/core/configuration'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { measureGridWidth } from '@jbrowse/core/util'\nimport { DialogContent, DialogContentText } from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  content: {\n    minWidth: 600,\n  },\n})\n\ninterface Warning {\n  message: string\n  effect: string\n}\n\ninterface TrackWarning {\n  configuration: AnyConfigurationModel\n  displays: {\n    warnings: Warning[]\n  }[]\n}\nfunction getTrackWarnings({\n  trackWarnings,\n}: {\n  trackWarnings: TrackWarning[]\n}) {\n  const rows = [] as {\n    name: string\n    message: string\n    effect: string\n    id: string\n  }[]\n  for (let i = 0; i < trackWarnings.length; i++) {\n    const track = trackWarnings[i]!\n    const name = getConf(track, 'name')\n    const d = track.displays[0]!\n    for (let j = 0; j < d.warnings.length; j++) {\n      const warning = d.warnings[j]!\n      rows.push({ name, ...warning, id: `${i}_${j}` })\n    }\n  }\n  return rows\n}\n\nconst WarningDialog = observer(function WarningDialog({\n  trackWarnings,\n  handleClose,\n}: {\n  handleClose: () => void\n  trackWarnings: TrackWarning[]\n}) {\n  const { classes } = useStyles()\n  const rows = getTrackWarnings({ trackWarnings })\n  const columns = [\n    { field: 'name' },\n    { field: 'message', width: measureGridWidth(rows.map(r => r.message)) },\n    { field: 'effect', width: measureGridWidth(rows.map(r => r.effect)) },\n  ]\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      maxWidth=\"xl\"\n      title=\"Dotplot rendered with warnings\"\n    >\n      <DialogContent className={classes.content}>\n        <DialogContentText>\n          Found warnings while rendering the dotplot. This is often due to\n          out-of-bound features that may indicate the wrong assemblies are being\n          used. Check that the query and target are configured correctly, and\n          that the right assemblies are being compared.\n        </DialogContentText>\n        <div style={{ height: 600, width: '100%', overflow: 'auto' }}>\n          <DataGrid\n            rows={rows}\n            columns={columns}\n            disableRowSelectionOnClick\n            rowHeight={25}\n            disableColumnMenu\n          />\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default WarningDialog\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["ToolbarRoot","name","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","getBadgeUtilityClass","useStyles","makeStyles","content","minWidth","observer","trackWarnings","handleClose","rows","i","length","track","getConf","d","displays","j","warnings","warning","push","id","getTrackWarnings","columns","field","width","measureGridWidth","map","r","message","effect","_jsx","Dialog","open","onClose","maxWidth","title","children","_jsxs","DialogContent","DialogContentText","height","overflow","DataGrid","disableRowSelectionOnClick","rowHeight","disableColumnMenu","BadgeRoot","styled","verticalAlign","flexShrink","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","memoTheme","flexDirection","flexWrap","justifyContent","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","RADIUS_STANDARD","lineHeight","padding","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","Object","entries","palette","filter","createSimplePaletteValueFilter","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","components","componentsProps","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slotProps","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","undefined","composeClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","clsx","badgeProps","getToolbarUtilityClass"],"sourceRoot":""}