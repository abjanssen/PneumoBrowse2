{"version":3,"file":"static/js/4902.abd12d5f.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Avatar/avatarClasses.js","../../../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../../../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../../../node_modules/@mui/material/internal/svg-icons/Person.js","../../../node_modules/@mui/material/Avatar/Avatar.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Avatar, { avatarClasses } from \"../Avatar/index.js\";\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from \"./avatarGroupClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: -8\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n    }, styles.root];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row-reverse',\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: 'var(--AvatarGroup-spacing, -8px)',\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }\n})));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps,\n    max = 5,\n    renderSurplus,\n    slotProps = {},\n    slots = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular',\n    ...other\n  } = props;\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = {\n    ...props,\n    max,\n    spacing,\n    component,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing || -8;\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      surplus: slotProps.additionalAvatar ?? componentsProps?.additionalAvatar,\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [SurplusSlot, surplusProps] = useSlot('surplus', {\n    elementType: Avatar,\n    externalForwardedProps,\n    className: classes.avatar,\n    ownerState,\n    additionalProps: {\n      variant\n    }\n  });\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    style: {\n      '--AvatarGroup-spacing': marginValue ? `${marginValue}px` : undefined,\n      ...other.style\n    },\n    children: [extraAvatars ? /*#__PURE__*/_jsx(SurplusSlot, {\n      ...surplusProps,\n      children: extraAvatarsElement\n    }) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object,\n    surplus: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    surplus: PropTypes.elementType\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n  const ownerState = {\n    ...props,\n    component,\n    variant\n  };\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    ...(typeof slotProps.img === 'function' ? slotProps.img(ownerState) : slotProps.img),\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  ownerState.colorDefault = !hasImgNotFailing;\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"names":["getAvatarUtilityClass","slot","getAvatarGroupUtilityClass","generateUtilityClass","generateUtilityClasses","SPACINGS","small","medium","AvatarGroupRoot","styled","name","overridesResolver","props","styles","avatar","root","memoTheme","theme","display","flexDirection","avatarClasses","border","vars","palette","background","default","boxSizing","marginLeft","inProps","ref","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","slots","spacing","total","variant","other","clampedMax","ownerState","classes","composeClasses","useUtilityClasses","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","marginValue","undefined","externalForwardedProps","surplus","additionalAvatar","SurplusSlot","surplusProps","useSlot","elementType","Avatar","A","additionalProps","as","clsx","style","slice","reverse","map","createSvgIcon","d","AvatarRoot","colorDefault","position","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","shape","color","backgroundColor","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","alt","imgProps","sizes","src","srcSet","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps"],"sourceRoot":""}