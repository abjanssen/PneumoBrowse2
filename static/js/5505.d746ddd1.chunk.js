"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[5505],{35505:(e,t,n)=>{n.d(t,{wD:()=>I});var i=n(47046),r=n(16308),s=n.n(r),a=n(95624),o=n(27061);class c extends Error{}function l(e){if(e&&e.aborted){if("undefined"!=typeof DOMException)throw new DOMException("aborted","AbortError");{const e=new c("aborted");throw e.code="ERR_ABORTED",e}}}function h(e,t){const n=[];let i=null;return 0===e.length?e:(e.sort((function(e,t){const n=e.minv.blockPosition-t.minv.blockPosition;return 0!==n?n:e.minv.dataPosition-t.minv.dataPosition})),e.forEach((e=>{var r,s;(!t||e.maxv.compareTo(t)>0)&&(null===i?(n.push(e),i=e):(r=i,(s=e).minv.blockPosition-r.maxv.blockPosition<65e3&&s.maxv.blockPosition-r.minv.blockPosition<5e6?e.maxv.compareTo(i.maxv)>0&&(i.maxv=e.maxv):(n.push(e),i=e)))})),n)}class d{constructor(e,t){this.blockPosition=e,this.dataPosition=t}toString(){return`${this.blockPosition}:${this.dataPosition}`}compareTo(e){return this.blockPosition-e.blockPosition||this.dataPosition-e.dataPosition}}function f(e,t=0){return new d(1099511627776*e[t+7]+4294967296*e[t+6]+16777216*e[t+5]+65536*e[t+4]+256*e[t+3]+e[t+2],e[t+1]<<8|e[t])}class u{constructor(e,t,n,i=void 0){this.minv=e,this.maxv=t,this.bin=n,this._fetchedSize=i}toUniqueString(){return`${this.minv}..${this.maxv} (bin ${this.bin}, fetchedSize ${this.fetchedSize()})`}toString(){return this.toUniqueString()}compareTo(e){return this.minv.compareTo(e.minv)||this.maxv.compareTo(e.maxv)||this.bin-e.bin}fetchedSize(){return void 0!==this._fetchedSize?this._fetchedSize:this.maxv.blockPosition+65536-this.minv.blockPosition}}class m{constructor({filehandle:e,renameRefSeqs:t=e=>e}){this.filehandle=e,this.renameRefSeq=t}async getMetadata(e={}){const{indices:t,...n}=await this.parse(e);return n}_findFirstData(e,t){return e?e.compareTo(t)>0?t:e:t}async parse(e={}){return this.parseP||(this.parseP=this._parse(e).catch((e=>{throw this.parseP=void 0,e}))),this.parseP}async hasRefSeq(e,t={}){const n=await this.parse(t);return!!n.indices[e]?.binIndex}}function b(e,t=0){const n=e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24;return 4294967296*((e[t+4]|e[t+5]<<8|e[t+6]<<16|e[t+7]<<24)>>>0)+(n>>>0)}class g extends m{async lineCount(e,t={}){const n=await this.parse(t),i=n.refNameToId[e];return void 0===i?-1:n.indices[i]?n.indices[i].stats?.lineCount??-1:-1}async _parse(e={}){const t=await this.filehandle.readFile(e),n=await(0,o.$1)(t);l(e.signal);const i=new DataView(n.buffer);if(21578324!==i.getUint32(0,!0))throw new Error("Not a TBI file");const r=i.getUint32(4,!0),s=i.getUint32(8,!0),a=65536&s?"zero-based-half-open":"1-based-closed",c={0:"generic",1:"SAM",2:"VCF"}[15&s];if(!c)throw new Error(`invalid Tabix preset format flags ${s}`);const h={ref:i.getInt32(12,!0),start:i.getInt32(16,!0),end:i.getInt32(20,!0)},d=i.getInt32(24,!0),m=d?String.fromCharCode(d):null,b=i.getInt32(28,!0),g=i.getInt32(32,!0),{refNameToId:p,refIdToName:w}=this._parseNameBytes(n.slice(36,36+g));let x,v=36+g;return{indices:new Array(r).fill(0).map((()=>{const e=i.getInt32(v,!0);v+=4;const t={};let r;for(let s=0;s<e;s+=1){const e=i.getUint32(v,!0);if(v+=4,e>37450)throw new Error("tabix index contains too many bins, please use a CSI index");if(37450===e){const e=i.getInt32(v,!0);v+=4,2===e&&(r=this.parsePseudoBin(n,v)),v+=16*e}else{const r=i.getInt32(v,!0);v+=4;const s=new Array(r);for(let t=0;t<r;t+=1){const i=f(n,v),r=f(n,v+8);v+=16,x=this._findFirstData(x,i),s[t]=new u(i,r,e)}t[e]=s}}const s=i.getInt32(v,!0);v+=4;const a=new Array(s);for(let e=0;e<s;e+=1)a[e]=f(n,v),v+=8,x=this._findFirstData(x,a[e]);return{binIndex:t,linearIndex:a,stats:r}})),metaChar:m,maxBinNumber:37449,maxRefLength:536870912,skipLines:b,firstDataLine:x,columnNumbers:h,coordinateType:a,format:c,refIdToName:w,refNameToId:p,maxBlockSize:65536}}parsePseudoBin(e,t){return{lineCount:b(e,t+16)}}_parseNameBytes(e){let t=0,n=0;const i=[],r={},s=new TextDecoder("utf8");for(let a=0;a<e.length;a+=1)if(!e[a]){if(n<a){const o=this.renameRefSeq(s.decode(e.subarray(n,a)));i[t]=o,r[o]=t}n=a+1,t+=1}return{refNameToId:r,refIdToName:i}}async blocksForRange(e,t,n,i={}){t<0&&(t=0);const r=await this.parse(i),s=r.refNameToId[e];if(void 0===s)return[];const a=r.indices[s];if(!a)return[];(a.linearIndex.length?a.linearIndex[t>>14>=a.linearIndex.length?a.linearIndex.length-1:t>>14]:new d(0,0))||console.warn("querying outside of possible tabix range");const o=(c=t,l=n,[[0,0],[1+((c+=1)>>26),1+((l-=1)>>26)],[9+(c>>23),9+(l>>23)],[73+(c>>20),73+(l>>20)],[585+(c>>17),585+(l>>17)],[4681+(c>>14),4681+(l>>14)]]);var c,l;const f=[];for(const[e,t]of o)for(let n=e;n<=t;n++)if(a.binIndex[n])for(const e of a.binIndex[n])f.push(new u(e.minv,e.maxv,n));const m=a.linearIndex.length;let b=null;const g=Math.min(t>>14,m-1),p=Math.min(n>>14,m-1);for(let e=g;e<=p;++e){const t=a.linearIndex[e];t&&(!b||t.compareTo(b)<0)&&(b=t)}return h(f,b)}}const p={0:"generic",1:"SAM",2:"VCF"};function w(e,t){return Math.floor(e/2**t)}class x extends m{constructor(e){super(e),this.maxBinNumber=0,this.depth=0,this.minShift=0}async lineCount(e,t={}){const n=await this.parse(t),i=n.refNameToId[e];if(void 0===i)return-1;if(!n.indices[i])return-1;const{stats:r}=n.indices[i];return r?r.lineCount:-1}indexCov(){throw new Error("CSI indexes do not support indexcov")}parseAuxData(e,t){const n=new DataView(e.buffer),i=n.getInt32(t,!0),r=65536&i?"zero-based-half-open":"1-based-closed",s=p[15&i];if(!s)throw new Error(`invalid Tabix preset format flags ${i}`);const a={ref:n.getInt32(t+4,!0),start:n.getInt32(t+8,!0),end:n.getInt32(t+12,!0)},o=n.getInt32(t+16,!0),c=o?String.fromCharCode(o):null,l=n.getInt32(t+20,!0),h=n.getInt32(t+24,!0),{refIdToName:d,refNameToId:f}=this._parseNameBytes(e.subarray(t+28,t+28+h));return{refIdToName:d,refNameToId:f,skipLines:l,metaChar:c,columnNumbers:a,format:s,coordinateType:r}}_parseNameBytes(e){let t=0,n=0;const i=[],r={},s=new TextDecoder("utf8");for(let a=0;a<e.length;a+=1)if(!e[a]){if(n<a){const o=this.renameRefSeq(s.decode(e.subarray(n,a)));i[t]=o,r[o]=t}n=a+1,t+=1}return{refNameToId:r,refIdToName:i}}async _parse(e={}){const t=await(0,o.$1)(await this.filehandle.readFile(e)),n=new DataView(t.buffer);let i;if(21582659===n.getUint32(0,!0))i=1;else{if(38359875!==n.getUint32(0,!0))throw new Error("Not a CSI file");i=2}this.minShift=n.getInt32(4,!0),this.depth=n.getInt32(8,!0),this.maxBinNumber=((1<<3*(this.depth+1))-1)/7;const r=2**(this.minShift+3*this.depth),s=n.getInt32(12,!0),a=s&&s>=30?this.parseAuxData(t,16):{refIdToName:[],refNameToId:{},metaChar:null,columnNumbers:{ref:0,start:1,end:2},coordinateType:"zero-based-half-open",format:"generic"},c=n.getInt32(16+s,!0);let l,h=16+s+4;const d=new Array(c).fill(0).map((()=>{const e=n.getInt32(h,!0);h+=4;const i={};let r;for(let s=0;s<e;s+=1){const e=n.getUint32(h,!0);if(e>this.maxBinNumber)r=this.parsePseudoBin(t,h+4),h+=48;else{const r=f(t,h+4);l=this._findFirstData(l,r);const s=n.getInt32(h+12,!0);h+=16;const a=new Array(s);for(let n=0;n<s;n+=1){const i=f(t,h),r=f(t,h+8);h+=16,a[n]=new u(i,r,e)}i[e]=a}}return{binIndex:i,stats:r}}));return{...a,csi:!0,refCount:c,maxBlockSize:65536,firstDataLine:l,csiVersion:i,indices:d,depth:this.depth,maxBinNumber:this.maxBinNumber,maxRefLength:r}}parsePseudoBin(e,t){return{lineCount:b(e,t+28)}}async blocksForRange(e,t,n,i={}){t<0&&(t=0);const r=await this.parse(i),s=r.refNameToId[e];if(void 0===s)return[];const a=r.indices[s];if(!a)return[];const o=this.reg2bins(t,n),c=[];for(const[e,t]of o)for(let n=e;n<=t;n++)if(a.binIndex[n])for(const e of a.binIndex[n])c.push(new u(e.minv,e.maxv,n));return h(c,new d(0,0))}reg2bins(e,t){(e-=1)<1&&(e=1),t>2**50&&(t=2**34),t-=1;let n=0,i=0,r=this.minShift+3*this.depth;const s=[];for(;n<=this.depth;r-=3,i+=1*2**(3*n),n+=1){const n=i+w(e,r),a=i+w(t,r);if(a-n+s.length>this.maxBinNumber)throw new Error(`query ${e}-${t} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`);s.push([n,a])}return s}}function v(e){return/^[\u0000-\u007F]*$/.test(e)}class I{constructor({path:e,filehandle:t,url:n,tbiPath:r,tbiUrl:o,tbiFilehandle:c,csiPath:l,csiUrl:h,csiFilehandle:d,renameRefSeqs:f=e=>e,chunkCacheSize:u=5242880}){if(t)this.filehandle=t;else if(e)this.filehandle=new a.EY(e);else{if(!n)throw new TypeError("must provide either filehandle or path");this.filehandle=new a.Tx(n)}if(c)this.index=new g({filehandle:c,renameRefSeqs:f});else if(d)this.index=new x({filehandle:d,renameRefSeqs:f});else if(r)this.index=new g({filehandle:new a.EY(r),renameRefSeqs:f});else if(l)this.index=new x({filehandle:new a.EY(l),renameRefSeqs:f});else if(e)this.index=new g({filehandle:new a.EY(`${e}.tbi`),renameRefSeqs:f});else if(h)this.index=new x({filehandle:new a.Tx(h)});else if(o)this.index=new g({filehandle:new a.Tx(o)});else{if(!n)throw new TypeError("must provide one of tbiFilehandle, tbiPath, csiFilehandle, csiPath, tbiUrl, csiUrl");this.index=new g({filehandle:new a.Tx(`${n}.tbi`)})}this.renameRefSeq=f,this.chunkCache=new i.A({cache:new(s())({maxSize:Math.floor(u/65536)}),fill:(e,t)=>this.readChunk(e,{signal:t})})}async getLines(e,t,n,i){let r,s,a={};"function"==typeof i?s=i:(a=i,s=i.lineCallback,r=i.signal);const o=await this.index.getMetadata(a);l(r);const c=t??0,h=n??o.maxRefLength;if(!(c<=h))throw new TypeError("invalid start and end coordinates. start must be less than or equal to end");if(c===h)return;const d=await this.index.blocksForRange(e,c,h,a);l(r);const f=new TextDecoder("utf8");for(const t of d){const{buffer:n,cpositions:i,dpositions:a}=await this.chunkCache.get(t.toString(),t,r);l(r);let d=0,u=0;const m=f.decode(n),b=v(m);for(;d<m.length;){let r,l;if(b){if(l=m.indexOf("\n",d),-1===l)break;r=m.slice(d,l)}else{if(l=n.indexOf("\n".charCodeAt(0),d),-1===l)break;const e=n.slice(d,l);r=f.decode(e)}if(a){for(;d+t.minv.dataPosition>=a[u++];);u--}const{startCoordinate:g,overlaps:p}=this.checkLine(o,e,c,h,r);if(p)s(r,256*i[u]+(d-a[u])+t.minv.dataPosition+1);else if(void 0!==g&&g>=h)return;d=l+1}}}async getMetadata(e={}){return this.index.getMetadata(e)}async getHeaderBuffer(e={}){const{firstDataLine:t,metaChar:n,maxBlockSize:i}=await this.getMetadata(e);l(e.signal);const r=(t?.blockPosition||0)+i,s=await this.filehandle.read(r,0,e),a=await(0,o.$1)(s);if(n){let e=-1;const t="\n".charCodeAt(0),i=n.charCodeAt(0);for(let n=0;n<a.length&&(n!==e+1||a[n]===i);n+=1)a[n]===t&&(e=n);return a.subarray(0,e+1)}return a}async getHeader(e={}){const t=new TextDecoder("utf8"),n=await this.getHeaderBuffer(e);return t.decode(n)}async getReferenceSequenceNames(e={}){return(await this.getMetadata(e)).refIdToName}checkLine(e,t,n,i,r){const{columnNumbers:s,metaChar:a,coordinateType:o,format:c}=e;if(a&&r.startsWith(a))return{overlaps:!1};let{ref:l,start:h,end:d}=s;l||(l=0),h||(h=0),d||(d=0),"VCF"===c&&(d=8);const f=Math.max(l,h,d);let u=1,m=0,b="",g=-1/0;const p=r.length;for(let e=0;e<p+1;e++)if("\t"===r[e]||e===p){if(u===l){if(this.renameRefSeq(r.slice(m,e))!==t)return{overlaps:!1}}else if(u===h){if(g=parseInt(r.slice(m,e),10),"1-based-closed"===o&&(g-=1),g>=i)return{startCoordinate:g,overlaps:!1};if((0===d||d===h)&&g+1<=n)return{startCoordinate:g,overlaps:!1}}else if("VCF"===c&&4===u)b=r.slice(m,e);else if(u===d&&("VCF"===c?this._getVcfEnd(g,b,r.slice(m,e)):Number.parseInt(r.slice(m,e),10))<=n)return{overlaps:!1};if(m=e+1,u+=1,u>f)break}return{startCoordinate:g,overlaps:!0}}_getVcfEnd(e,t,n){let i=e+t.length;const r=n.includes("SVTYPE=TRA");if("."===n[0]||r){if(r)return e+1}else{let e=";";for(let t=0;t<n.length;t+=1){if(";"===e&&"END="===n.slice(t,t+4)){let e=n.indexOf(";",t);-1===e&&(e=n.length),i=parseInt(n.slice(t+4,e),10);break}e=n[t]}}return i}async lineCount(e,t={}){return this.index.lineCount(e,t)}async readChunk(e,t={}){const n=await this.filehandle.read(e.fetchedSize(),e.minv.blockPosition,t);return(0,o.i2)(n,e)}}},47046:(e,t,n)=>{n.d(t,{A:()=>a});class i{}class r{constructor(){this.signals=new Set,this.abortController=new AbortController}addSignal(e=new i){if(this.signal.aborted)throw new Error("cannot add a signal, already aborted!");this.signals.add(e),e.aborted?this.handleAborted(e):"function"==typeof e.addEventListener&&e.addEventListener("abort",(()=>{this.handleAborted(e)}))}handleAborted(e){this.signals.delete(e),0===this.signals.size&&this.abortController.abort()}get signal(){return this.abortController.signal}abort(){this.abortController.abort()}}class s{constructor(){this.callbacks=new Set}addCallback(e=()=>{}){this.callbacks.add(e),e(this.currentMessage)}callback(e){this.currentMessage=e;for(const t of this.callbacks)t(e)}}class a{constructor({fill:e,cache:t}){if("function"!=typeof e)throw new TypeError("must pass a fill function");if("object"!=typeof t)throw new TypeError("must pass a cache object");if("function"!=typeof t.get||"function"!=typeof t.set||"function"!=typeof t.delete)throw new TypeError("cache must implement get(key), set(key, val), and and delete(key)");this.cache=t,this.fillCallback=e}static isAbortException(e){return"AbortError"===e.name||"ERR_ABORTED"===e.code||"AbortError: aborted"===e.message||"Error: aborted"===e.message}evict(e,t){this.cache.get(e)===t&&this.cache.delete(e)}fill(e,t,n,i){const a=new r,o=new s;o.addCallback(i);const c={aborter:a,promise:this.fillCallback(t,a.signal,(e=>{o.callback(e)})),settled:!1,statusReporter:o,get aborted(){return this.aborter.signal.aborted}};c.aborter.addSignal(n),c.aborter.signal.addEventListener("abort",(()=>{c.settled||this.evict(e,c)})),c.promise.then((()=>{c.settled=!0}),(()=>{c.settled=!0,this.evict(e,c)})).catch((e=>{throw console.error(e),e})),this.cache.set(e,c)}static checkSinglePromise(e,t){function n(){if(null==t?void 0:t.aborted)throw Object.assign(new Error("aborted"),{code:"ERR_ABORTED"})}return e.then((e=>(n(),e)),(e=>{throw n(),e}))}has(e){return this.cache.has(e)}get(e,t,n,i){if(!n&&t instanceof AbortSignal)throw new TypeError("second get argument appears to be an AbortSignal, perhaps you meant to pass `null` for the fill data?");const r=this.cache.get(e);return r?r.aborted&&!r.settled?(this.evict(e,r),this.get(e,t,n,i)):r.settled?r.promise:(r.aborter.addSignal(n),r.statusReporter.addCallback(i),a.checkSinglePromise(r.promise,n)):(this.fill(e,t,n,i),a.checkSinglePromise(this.cache.get(e).promise,n))}delete(e){const t=this.cache.get(e);t&&(t.settled||t.aborter.abort(),this.cache.delete(e))}clear(){const e=this.cache.keys();let t=0;for(let n=e.next();!n.done;n=e.next())this.delete(n.value),t+=1;return t}}}}]);
//# sourceMappingURL=5505.d746ddd1.chunk.js.map