{"version":3,"file":"static/js/5183.ab5825bc.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/Badge/badgeClasses.js","../../../packages/core/ui/DataGridFlexContainer.tsx","../../../node_modules/@mui/icons-material/esm/StarBorder.js","../../../node_modules/date-fns/startOfDay.js","../../../node_modules/date-fns/differenceInDays.js","../../../node_modules/date-fns/differenceInCalendarDays.js","../../../plugins/menus/src/SessionManager/components/SessionManager.tsx","../../../node_modules/@mui/material/esm/Badge/Badge.js","../../../node_modules/@mui/material/esm/Badge/useBadge.js","../../../node_modules/@mui/system/esm/styled/styled.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  flexContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n})\n\n// https://mui.com/x/react-data-grid/layout/#flex-parent-container\nexport default function DataGridFlexContainer({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return <div className={classes.flexContainer}>{children}</div>\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"m22 9.24-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28z\"\n}), 'StarBorder');","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\n\n/**\n * The {@link differenceInDays} function options.\n */\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_),\n  );\n\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign,\n  );\n\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff =\n    laterDate.getFullYear() - earlierDate.getFullYear() ||\n    laterDate.getMonth() - earlierDate.getMonth() ||\n    laterDate.getDate() - earlierDate.getDate() ||\n    laterDate.getHours() - earlierDate.getHours() ||\n    laterDate.getMinutes() - earlierDate.getMinutes() ||\n    laterDate.getSeconds() - earlierDate.getSeconds() ||\n    laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer'\nimport { measureGridWidth, useLocalStorage } from '@jbrowse/core/util'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport StarIcon from '@mui/icons-material/Star'\nimport StarBorderIcon from '@mui/icons-material/StarBorder'\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  Link,\n  Tooltip,\n} from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { differenceInDays, formatDistanceToNow } from 'date-fns'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SessionModel } from './util'\n\nconst useStyles = makeStyles()(theme => ({\n  mb: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\nconst SessionManager = observer(function ({\n  session,\n}: {\n  session: SessionModel\n}) {\n  const { classes } = useStyles()\n  const [showOnlyFavs, setShowOnlyFavs] = useLocalStorage(\n    'sessionManager-showOnlyFavs',\n    false,\n  )\n  const rows = session.savedSessionMetadata\n    ?.map(r => ({\n      id: r.id,\n      name: r.name,\n      createdAt: r.createdAt,\n      fav: r.favorite,\n    }))\n    .filter(f => (showOnlyFavs ? f.fav : true))\n\n  return (\n    <div>\n      <div className={classes.mb}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showOnlyFavs}\n              onChange={() => {\n                setShowOnlyFavs(val => !val)\n              }}\n            />\n          }\n          label=\"Show only favorites?\"\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            let i = 0\n            if (session.savedSessionMetadata) {\n              for (const elt of session.savedSessionMetadata) {\n                if (\n                  differenceInDays(+Date.now(), elt.createdAt) > 1 &&\n                  !elt.favorite\n                ) {\n                  // @ts-expect-error\n                  session.deleteSavedSession(elt.id)\n                  i++\n                }\n              }\n            }\n            session.notify(`${i} sessions deleted`, 'info')\n          }}\n        >\n          Delete non-fav sessions older than 7 days?\n        </Button>\n      </div>\n      {rows ? (\n        <DataGridFlexContainer>\n          <DataGrid\n            disableRowSelectionOnClick\n            columnHeaderHeight={35}\n            rowHeight={25}\n            hideFooter={rows.length < 100}\n            slotProps={{\n              toolbar: {\n                showQuickFilter: true,\n              },\n            }}\n            rows={rows}\n            columns={[\n              {\n                field: 'fav',\n                headerName: 'Fav',\n                width: 20,\n                renderCell: ({ row }) => (\n                  <IconButton\n                    onClick={() => {\n                      if (row.fav) {\n                        // @ts-expect-error\n                        session.unfavoriteSavedSession(row.id)\n                      } else {\n                        // @ts-expect-error\n                        session.favoriteSavedSession(row.id)\n                      }\n                    }}\n                  >\n                    {row.fav ? <StarIcon /> : <StarBorderIcon />}\n                  </IconButton>\n                ),\n              },\n              {\n                field: 'name',\n                headerName: 'Name',\n                editable: true,\n                width: measureGridWidth(rows.map(r => r.name)),\n                renderCell: ({ row }) => (\n                  <>\n                    <Link\n                      href=\"#\"\n                      onClick={event => {\n                        event.preventDefault()\n                        session.activateSession(row.id)\n                      }}\n                    >\n                      {row.name}\n                    </Link>\n                    {session.id === row.id ? ' (current)' : ''}\n                  </>\n                ),\n              },\n              {\n                headerName: 'Created at',\n                field: 'createdAt',\n                renderCell: ({ row }) => (\n                  <Tooltip\n                    disableInteractive\n                    slotProps={{\n                      transition: {\n                        timeout: 0,\n                      },\n                    }}\n                    title={row.createdAt.toLocaleString()}\n                  >\n                    <div>\n                      {formatDistanceToNow(row.createdAt, {\n                        addSuffix: true,\n                      })}\n                    </div>\n                  </Tooltip>\n                ),\n              },\n              {\n                field: 'delete',\n                width: 10,\n                headerName: 'Delete',\n                renderCell: ({ row }) => (\n                  <IconButton\n                    onClick={() => {\n                      // @ts-expect-error\n                      session.deleteSavedSession(row.id)\n                    }}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                ),\n              },\n            ]}\n          />\n        </DataGridFlexContainer>\n      ) : (\n        <div>No sessions loaded</div>\n      )}\n    </div>\n  )\n})\n\nexport default SessionManager\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root'\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const externalForwardedProps = {\n    slots: {\n      root: slots?.root ?? components.Root,\n      badge: slots?.badge ?? components.Badge\n    },\n    slotProps: {\n      root: slotProps?.root ?? componentsProps.root,\n      badge: slotProps?.badge ?? componentsProps.badge\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: BadgeRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    className: clsx(classes.root, className),\n    ref,\n    additionalProps: {\n      as: component\n    }\n  });\n  const [BadgeSlot, badgeProps] = useSlot('badge', {\n    elementType: BadgeBadge,\n    externalForwardedProps,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;"],"names":["getBadgeUtilityClass","slot","useStyles","makeStyles","flexContainer","display","flexDirection","DataGridFlexContainer","t0","$","_c","children","classes","t1","_jsx","className","createSvgIcon","d","startOfDay","date","options","_date","toDate","in","setHours","differenceInDays","laterDate","earlierDate","laterDate_","earlierDate_","normalizeDates","sign","compareLocalAsc","difference","Math","abs","laterStartOfDay","earlierStartOfDay","laterTimestamp","getTimezoneOffsetInMilliseconds","earlierTimestamp","round","differenceInCalendarDays","setDate","getDate","result","Number","diff","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","theme","mb","margin","spacing","marginBottom","observer","session","showOnlyFavs","setShowOnlyFavs","useLocalStorage","rows","savedSessionMetadata","map","r","id","name","createdAt","fav","favorite","filter","f","_jsxs","FormControlLabel","control","Checkbox","checked","onChange","val","label","Button","variant","onClick","i","elt","Date","now","deleteSavedSession","notify","DataGrid","disableRowSelectionOnClick","columnHeaderHeight","rowHeight","hideFooter","length","slotProps","toolbar","showQuickFilter","columns","field","headerName","width","renderCell","row","IconButton","unfavoriteSavedSession","favoriteSavedSession","StarIcon","StarBorderIcon","editable","measureGridWidth","_Fragment","Link","href","event","preventDefault","activateSession","Tooltip","disableInteractive","transition","timeout","title","toLocaleString","formatDistanceToNow","addSuffix","DeleteIcon","BadgeRoot","styled","position","verticalAlign","flexShrink","BadgeBadge","overridesResolver","props","styles","ownerState","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","memoTheme","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","entries","palette","createSimplePaletteValueFilter","style","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","inProps","ref","anchorOriginProp","classesProp","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","showZero","variantProp","other","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","anchorOriginPropProp","undefined","root","composeClasses","useUtilityClasses","externalForwardedProps","Root","Badge","RootSlot","rootProps","useSlot","elementType","clsx","additionalProps","as","BadgeSlot","badgeProps"],"sourceRoot":""}