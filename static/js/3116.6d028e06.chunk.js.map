{"version":3,"file":"static/js/3116.6d028e06.chunk.js","mappings":"uQAkBA,SAASA,GAAoB,UAC3BC,EAAS,SACTC,EAAQ,OACRC,IAMA,OACEC,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,SAAS,KAAKC,MAAM,UAAUC,QAASP,GAClDE,EAAAA,cAACM,EAAAA,EAAa,KACZN,EAAAA,cAACO,EAAAA,EAAW,CAACC,SAAS,UACtBR,EAAAA,cAACS,EAAAA,EAAiB,KAAC,mFAGjBT,EAAAA,cAAA,UACGD,EAAOW,KAAIC,GACVX,EAAAA,cAAA,MAAIY,IAAKC,KAAKC,UAAUH,KAAKI,EAAAA,EAAAA,IAAwBJ,OAEpD,qDAITX,EAAAA,cAACgB,EAAAA,EAAa,KACZhB,EAAAA,cAACiB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAAQ,YACRC,QAASA,KACPvB,GAAW,GAEd,mBAGDG,EAAAA,cAACiB,EAAAA,EAAM,CACLC,MAAM,YACNC,QAAQ,YACRC,QAASA,KACPtB,GAAU,GAEb,WAMT,CAEe,SAASuB,GAAc,OACpCC,EAAM,YACNC,IAKA,MAAM,eAAEC,GAAmBF,EAC3B,OAAOE,EACLxB,EAAAA,cAACJ,EAAmB,CAClBC,UAAW4B,UACT,MAAMC,EAAUb,KAAKc,MAAMd,KAAKC,UAAUU,EAAeI,aACnDN,EAAOO,aAAaH,GAC1BJ,EAAOQ,kBAAkB,IAAKJ,EAASK,IAAIC,EAAAA,EAAAA,QAC3CT,GAAa,EAEfzB,SAAU2B,gBACFQ,EAAAA,EAAAA,KACNV,GAAa,EAEfxB,OAAQyB,EAAezB,SAEvB,IACN,C,6DCrFA,SAAe,QAA2B,SAAK,OAAQ,CACrDmC,EAAG,8CACD,U","sources":["components/ConfigWarningDialog.tsx","../../../node_modules/@mui/icons-material/esm/Warning.js"],"sourcesContent":["import React from 'react'\n\nimport { pluginDescriptionString } from '@jbrowse/core/PluginLoader'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { nanoid } from '@jbrowse/core/util/nanoid'\nimport WarningIcon from '@mui/icons-material/Warning'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material'\n\nimport factoryReset from '../factoryReset'\n\nimport type { SessionLoaderModel } from '../SessionLoader'\nimport type { PluginDefinition } from '@jbrowse/core/PluginLoader'\n\nfunction ConfigWarningDialog({\n  onConfirm,\n  onCancel,\n  reason,\n}: {\n  onConfirm: () => void\n  onCancel: () => void\n  reason: PluginDefinition[]\n}) {\n  return (\n    <Dialog open maxWidth=\"xl\" title=\"Warning\" onClose={onCancel}>\n      <DialogContent>\n        <WarningIcon fontSize=\"large\" />\n        <DialogContentText>\n          This link contains a cross origin config that has the following\n          unknown plugins:\n          <ul>\n            {reason.map(r => (\n              <li key={JSON.stringify(r)}>{pluginDescriptionString(r)}</li>\n            ))}\n          </ul>\n          Please ensure you trust the source of this link.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            onConfirm()\n          }}\n        >\n          Yes, I trust it\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            onCancel()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default function ConfigTriaged({\n  loader,\n  handleClose,\n}: {\n  loader: SessionLoaderModel\n  handleClose: () => void\n}) {\n  const { sessionTriaged } = loader\n  return sessionTriaged ? (\n    <ConfigWarningDialog\n      onConfirm={async () => {\n        const session = JSON.parse(JSON.stringify(sessionTriaged.snap))\n        await loader.fetchPlugins(session)\n        loader.setConfigSnapshot({ ...session, id: nanoid() })\n        handleClose()\n      }}\n      onCancel={async () => {\n        await factoryReset()\n        handleClose()\n      }}\n      reason={sessionTriaged.reason}\n    />\n  ) : null\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');"],"names":["ConfigWarningDialog","onConfirm","onCancel","reason","React","Dialog","open","maxWidth","title","onClose","DialogContent","WarningIcon","fontSize","DialogContentText","map","r","key","JSON","stringify","pluginDescriptionString","DialogActions","Button","color","variant","onClick","ConfigTriaged","loader","handleClose","sessionTriaged","async","session","parse","snap","fetchPlugins","setConfigSnapshot","id","nanoid","factoryReset","d"],"sourceRoot":""}