"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[6800],{96800:(e,t,a)=>{a.r(t),a.d(t,{default:()=>o});var n=a(68120),i=a(46377),r=a(99546),s=a(99834),c=a(66885);class o extends i.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,t=this.getConf("bedGraphGzLocation"),a=this.getConf(["index","location"]),i=this.getConf(["index","indexType"]),r=(0,s.openLocation)(t,e),c="CSI"===i,o=new n.wD({filehandle:r,csiFilehandle:c?(0,s.openLocation)(a,e):void 0,tbiFilehandle:c?void 0:(0,s.openLocation)(a,e),chunkCacheSize:52428800}),h=this.getConf("columnNames"),d=await o.getHeader();return{columnNames:h,bedGraph:o,header:d}}async configure(){return this.configured||(this.configured=this.configurePre().catch((e=>{throw this.configured=void 0,e}))),this.configured}async getNames(){const{bedGraph:e,columnNames:t}=await this.configure();if(t.length)return t;const a=(await e.getHeader()).split(/\n|\r\n|\r/).filter((e=>!!e)).at(-1);return a?.includes("\t")?a.slice(1).split("\t").map((e=>e.trim())):void 0}async getRefNames(e={}){const{bedGraph:t}=await this.configure();return t.getReferenceSequenceNames(e)}async getHeader(){const{bedGraph:e}=await this.configure();return e.getHeader()}getFeatures(e,t={}){return(0,c.ObservableCreate)((async a=>{const{bedGraph:n}=await this.configure(),i=await n.getMetadata(),{columnNumbers:s}=i,c=s.ref-1,o=s.start-1,h=s.end-1,d=o===h,u=(await this.getNames())?.slice(d?2:3)||[];await n.getLines(e.refName,e.start+(d?-1:0),e.end,{lineCallback:(e,t)=>{const n=e.split("\t"),i=n[c],s=+n[o],l=+(d?s+1:n[h]),g=n.slice(h+1);for(let e=0;e<g.length;e++){const n=`${this.id}-${t}-${e}`,c=Math.abs(+g[e]),o=u[e]||`col${e}`;c&&a.next(new r.SimpleFeature({id:n,data:{refName:i,start:s,end:l,score:c,source:o}}))}},...t}),a.complete()}))}freeResources(){}}}}]);
//# sourceMappingURL=6800.84851a2c.chunk.js.map