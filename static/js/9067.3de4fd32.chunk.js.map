{"version":3,"file":"static/js/9067.3de4fd32.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Table/tableClasses.js","../../../node_modules/@mui/material/TableHead/tableHeadClasses.js","../../../node_modules/@mui/material/Table/TableContext.js","../../../node_modules/@mui/material/TableBody/tableBodyClasses.js","../../../node_modules/@mui/material/TableContainer/TableContainer.js","../../../node_modules/@mui/material/TableRow/tableRowClasses.js","../../../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../../../node_modules/@mui/material/TableCell/tableCellClasses.js","../../../node_modules/@mui/material/Table/Table.js","../../../node_modules/@mui/material/Table/Tablelvl2Context.js","../../../node_modules/@mui/material/TableBody/TableBody.js","../../../node_modules/@mui/material/TableCell/TableCell.js","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsTable.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsDialog.tsx","../../../node_modules/@mui/material/TableRow/TableRow.js","../../../node_modules/@mui/material/TableHead/TableHead.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableContainerUtilityClass } from \"./tableContainerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, {\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from \"./TableContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableUtilityClass } from \"./tableClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': {\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      borderCollapse: 'separate'\n    }\n  }]\n})));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    padding,\n    size,\n    stickyHeader\n  };\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, {\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableBodyUtilityClass } from \"./tableBodyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, {\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import { getEnv, getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\n\nimport type { LinearGenomeViewModel } from '../..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport default function SearchResultsTable({\n  searchResults,\n  assemblyName: optAssemblyName,\n  model,\n  handleClose,\n}: {\n  searchResults: BaseResult[]\n  assemblyName?: string\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const { assemblyManager } = session\n  const assemblyName =\n    optAssemblyName || model.displayedRegions[0]!.assemblyName\n\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n\n  function getTrackName(trackId: string | undefined) {\n    if (trackId) {\n      const schema = pluginManager.pluggableConfigSchemaType('track')\n      const configuration = resolveIdentifier(schema, getRoot(model), trackId)\n      return configuration?.name?.value || ''\n    }\n    return ''\n  }\n  async function handleClick(location: string) {\n    try {\n      const newRegion = assembly?.regions?.find(\n        region => location === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        await model.navToLocString(location, assemblyName)\n      }\n    } catch (e) {\n      console.warn(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Location</TableCell>\n            <TableCell align=\"right\">Track</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {searchResults.map(result => (\n            <TableRow key={result.getId()}>\n              <TableCell component=\"th\" scope=\"row\">\n                {result.getLabel()}\n              </TableCell>\n              <TableCell align=\"right\">{result.getLocation()}</TableCell>\n              <TableCell align=\"right\">\n                {getTrackName(result.getTrackId()) || 'N/A'}\n              </TableCell>\n              <TableCell align=\"right\">\n                <Button\n                  onClick={async () => {\n                    try {\n                      await handleClick(\n                        // label is used if it is a refName, it has no location\n                        result.getLocation() || result.getLabel(),\n                      )\n                      const resultTrackId = result.getTrackId()\n                      if (resultTrackId) {\n                        model.showTrack(resultTrackId)\n                      }\n                    } catch (e) {\n                      console.error(e)\n                      session.notifyError(`${e}`, e)\n                    }\n                    handleClose()\n                  }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Go\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Divider,\n  Typography,\n} from '@mui/material'\n\nimport SearchResultsTable from './SearchResultsTable'\n\nimport type { LinearGenomeViewModel } from '../..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport default function SearchResultsDialog({\n  model,\n  assemblyName,\n  searchQuery,\n  searchResults,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  assemblyName?: string\n  searchQuery: string\n  searchResults?: BaseResult[]\n  handleClose: () => void\n}) {\n  return (\n    <Dialog open maxWidth=\"xl\" onClose={handleClose} title=\"Search results\">\n      <DialogContent>\n        {!searchResults?.length ? (\n          <Typography>\n            No results found for <b>{searchQuery}</b>\n          </Typography>\n        ) : (\n          <>\n            <Typography>\n              Showing results for <b>{searchQuery}</b>\n            </Typography>\n            <SearchResultsTable\n              model={model}\n              handleClose={handleClose}\n              assemblyName={assemblyName}\n              searchResults={searchResults}\n            />\n          </>\n        )}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableRowClasses, { getTableRowUtilityClass } from \"./tableRowClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n})));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false,\n    ...other\n  } = props;\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const ownerState = {\n    ...props,\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Should be valid `<tr>` children such as `TableCell`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableHeadUtilityClass } from \"./tableHeadClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;"],"names":["getTableUtilityClass","slot","getTableHeadUtilityClass","getTableBodyUtilityClass","TableContainerRoot","name","overridesResolver","props","styles","root","width","overflowX","inProps","ref","className","component","other","ownerState","classes","useUtilityClasses","as","getTableRowUtilityClass","getTableContainerUtilityClass","getTableCellUtilityClass","TableRoot","stickyHeader","theme","display","borderCollapse","borderSpacing","typography","body2","padding","spacing","color","vars","palette","text","secondary","textAlign","captionSide","variants","style","defaultComponent","size","slots","table","Provider","value","children","role","TableBodyRoot","tablelvl2","variant","TableCellRoot","align","verticalAlign","borderBottom","TableCell","border","mode","divider","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","fontSize","paddingCheckbox","flexDirection","position","top","zIndex","backgroundColor","background","default","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","variantProp","isHeadCell","undefined","ariaSort","SearchResultsTable","searchResults","assemblyName","optAssemblyName","model","handleClose","session","getSession","pluginManager","getEnv","assemblyManager","displayedRegions","assembly","get","Error","regions","getTrackName","trackId","schema","pluggableConfigSchemaType","configuration","resolveIdentifier","getRoot","_jsx","TableContainer","Paper","_jsxs","Table","TableHead","TableRow","TableBody","map","result","getLabel","getLocation","getTrackId","Button","onClick","async","location","newRegion","find","region","refName","setDisplayedRegions","showAllRegions","navToLocString","e","console","warn","notify","handleClick","resultTrackId","showTrack","error","notifyError","getId","SearchResultsDialog","searchQuery","Dialog","open","maxWidth","onClose","title","DialogContent","length","_Fragment","Typography","Divider","DialogActions","TableRowRoot","head","footer","outline","hover","action","selected","mainChannel","selectedOpacity","main","hoverOpacity","TableHeadRoot"],"sourceRoot":""}