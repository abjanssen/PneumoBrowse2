{"version":3,"file":"static/js/4895.d8661943.chunk.js","mappings":"sMASA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCC,oBAAqB,CACnBC,WAAY,cACZC,OAAQ,OACRC,OAAQ,EACRC,SAAU,WACVC,OAAQ,OAAON,EAAMO,QAAQC,OAAOC,gBACpCC,UAAW,OACXC,aAAc,OACdC,cAAe,QAEjBC,eAAgB,CACdR,SAAU,WACVO,cAAe,OACfE,WAAY,SACZC,WAAY,WA0ChB,GAtCmBC,EAAAA,EAAAA,UAAS,UAAU,MAAEC,IACtC,MAAM,QAAEC,EAAO,eAAEC,EAAc,aAAEC,EAAY,OAAEC,EAAM,MAAEC,GAAUL,EAC3DM,GAAMC,EAAAA,EAAAA,QAAuB,OAC7B,QAAEC,GAAY3B,IACd4B,EAAmBJ,EAAQ,EAEjC,OAAOD,EAAOM,QACZC,EAAAA,EAAAA,KAAA,OACE,cAAY,uBACZC,UAAWJ,EAAQxB,oBACnB6B,KAAK,eACLP,IAAKA,EACLQ,MAAO,CACLC,KAAM,GAAGN,MACTJ,MAAOW,KAAKC,IAAI,EAAIhB,EAAS,IAC7BiB,SAEDhB,IACCiB,EAAAA,EAAAA,MAAA,OAGE,cAAY,kBACZP,UAAWJ,EAAQZ,eACnBiB,KAAK,eACLC,MAAO,CACLC,KAAMC,KAAKC,IAAI,EAAIhB,EAAS,GAAK,EACjCmB,IAAKjB,GACLe,SAAA,CAGDhB,EAAemB,QAAQ,IAAE,IACzBL,KAAKC,IAAID,KAAKM,MAAMpB,EAAeqB,QAAU,EAAG,QAIrD,IACN,E","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/CenterLine.tsx"],"sourcesContent":["import { useRef } from 'react'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  centerLineContainer: {\n    background: 'transparent',\n    height: '100%',\n    zIndex: 4, // above the track but under menu\n    position: 'absolute',\n    border: `1px ${theme.palette.action.active} dashed`,\n    borderTop: 'none',\n    borderBottom: 'none',\n    pointerEvents: 'none',\n  },\n  centerLineText: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    whiteSpace: 'nowrap',\n    fontWeight: 'bold',\n  },\n}))\n\nconst CenterLine = observer(function ({ model }: { model: LGV }) {\n  const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const startingPosition = width / 2\n\n  return tracks.length ? (\n    <div\n      data-testid=\"centerline_container\"\n      className={classes.centerLineContainer}\n      role=\"presentation\"\n      ref={ref}\n      style={{\n        left: `${startingPosition}px`,\n        width: Math.max(1 / bpPerPx, 1),\n      }}\n    >\n      {centerLineInfo && (\n        <div\n          // text that indicates what bp is center, positioned\n          // at the bottom right of the center line\n          data-testid=\"centerline_text\"\n          className={classes.centerLineText}\n          role=\"presentation\"\n          style={{\n            left: Math.max(1 / bpPerPx, 1) + 5,\n            top: trackHeights,\n          }}\n        >\n          {/* change bp to refName */}\n          {centerLineInfo.refName}:{' '}\n          {Math.max(Math.round(centerLineInfo.offset) + 1, 0)}\n        </div>\n      )}\n    </div>\n  ) : null\n})\n\nexport default CenterLine\n"],"names":["useStyles","makeStyles","theme","centerLineContainer","background","height","zIndex","position","border","palette","action","active","borderTop","borderBottom","pointerEvents","centerLineText","whiteSpace","fontWeight","observer","model","bpPerPx","centerLineInfo","trackHeights","tracks","width","ref","useRef","classes","startingPosition","length","_jsx","className","role","style","left","Math","max","children","_jsxs","top","refName","round","offset"],"sourceRoot":""}