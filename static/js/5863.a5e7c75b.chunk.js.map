{"version":3,"file":"static/js/5863.a5e7c75b.chunk.js","mappings":"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","sources":["../../../plugins/spreadsheet-view/src/SpreadsheetView/components/TrackSelector.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/ImportWizard.tsx","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport { coarseStripHTML } from '@jbrowse/core/util'\nimport { MenuItem, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { ImportWizardModel } from '../ImportWizard'\n\nconst TrackSelector = observer(function ({\n  model,\n  selectedAssembly,\n}: {\n  model: ImportWizardModel\n  selectedAssembly: string\n}) {\n  const filteredTracks = selectedAssembly\n    ? model.tracksForAssembly(selectedAssembly)\n    : undefined\n  const resetTrack = filteredTracks?.[0]?.track.trackId || ''\n  const [selectedTrack, setSelectedTrack] = useState(resetTrack)\n  useEffect(() => {\n    const entry = filteredTracks?.find(f => selectedTrack === f.track.trackId)\n    if (entry) {\n      model.setFileSource(entry.loc)\n      model.setFileType(entry.type)\n    }\n  }, [model, selectedTrack, filteredTracks])\n\n  return (\n    <div>\n      {filteredTracks?.length ? (\n        <TextField\n          select\n          label=\"Tracks\"\n          variant=\"outlined\"\n          value={selectedTrack}\n          onChange={event => {\n            setSelectedTrack(event.target.value)\n          }}\n        >\n          {filteredTracks.map(({ track, label }) => (\n            <MenuItem key={track.trackId} value={track.trackId}>\n              {coarseStripHTML(label)}\n            </MenuItem>\n          ))}\n        </TextField>\n      ) : (\n        <ErrorMessage error={`No tracks found for ${selectedAssembly}`} />\n      )}\n    </div>\n  )\n})\n\nexport default TrackSelector\n","import React, { useState } from 'react'\n\nimport {\n  AssemblySelector,\n  ErrorMessage,\n  FileSelector,\n  LoadingEllipses,\n} from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Paper,\n  Radio,\n  RadioGroup,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getRoot } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\nimport TrackSelector from './TrackSelector'\n\nimport type { ImportWizardModel } from '../ImportWizard'\nimport type { AbstractRootModel } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  container: {\n    margin: '0 auto',\n    maxWidth: '40em',\n    padding: 20,\n  },\n})\n\nconst ImportWizard = observer(function ({\n  model,\n}: {\n  model: ImportWizardModel\n}) {\n  const session = getSession(model)\n  const { classes } = useStyles()\n  const { assemblyNames, assemblyManager } = session\n  const { loading, fileType, fileSource, isReadyToOpen, fileTypes, error } =\n    model\n  const [selectedAssembly, setSelectedAssembly] = useState(assemblyNames[0])\n  const [selectorType, setSelectorType] = useState('custom')\n  const err = assemblyManager.get(selectedAssembly!)?.error || error\n  const rootModel = getRoot(model)\n\n  return (\n    <div>\n      {err ? <ErrorMessage error={err} /> : null}\n      <Paper className={classes.container}>\n        {loading ? <LoadingEllipses variant=\"h6\" /> : null}\n        <div>\n          <FormControl component=\"fieldset\">\n            <RadioGroup\n              row\n              aria-label=\"file type\"\n              name=\"type\"\n              value={fileType}\n              onChange={event => {\n                setSelectorType(event.target.value)\n              }}\n            >\n              {Object.entries({\n                custom: 'Open file from URL or local computer',\n                existing: 'Open from track',\n              }).map(([key, val]) => (\n                <FormControlLabel\n                  key={key}\n                  checked={selectorType === key}\n                  value={key}\n                  control={<Radio />}\n                  label={val}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </div>\n        {selectorType === 'custom' ? (\n          <div>\n            <FormControl component=\"fieldset\">\n              <FormGroup>\n                <FileSelector\n                  inline\n                  location={fileSource}\n                  rootModel={rootModel as AbstractRootModel}\n                  setLocation={arg => {\n                    model.setFileSource(arg)\n                  }}\n                />\n              </FormGroup>\n            </FormControl>\n          </div>\n        ) : selectedAssembly ? (\n          <TrackSelector model={model} selectedAssembly={selectedAssembly} />\n        ) : (\n          <div>Select assembly</div>\n        )}\n        <div>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">File Type</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"file type\"\n              name=\"type\"\n              value={fileType}\n              onChange={event => {\n                model.setFileType(event.target.value)\n              }}\n            >\n              {fileTypes.map(fileTypeName => (\n                <FormControlLabel\n                  key={fileTypeName}\n                  checked={fileType === fileTypeName}\n                  value={fileTypeName}\n                  control={<Radio />}\n                  label={fileTypeName}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <div>\n          <AssemblySelector\n            session={session}\n            selected={selectedAssembly}\n            onChange={val => {\n              setSelectedAssembly(val)\n            }}\n          />\n        </div>\n        <div>\n          <Button\n            disabled={!isReadyToOpen || !!err}\n            variant=\"contained\"\n            data-testid=\"open_spreadsheet\"\n            color=\"primary\"\n            onClick={() => {\n              // eslint-disable-next-line @typescript-eslint/no-floating-promises\n              model.import(selectedAssembly!)\n            }}\n          >\n            Open\n          </Button>\n        </div>\n      </Paper>\n    </div>\n  )\n})\n\nexport default ImportWizard\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, {\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: defaultIcon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: defaultCheckedIcon.props.fontSize ?? size\n    }),\n    disabled: disabled,\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["observer","model","selectedAssembly","filteredTracks","tracksForAssembly","undefined","resetTrack","track","trackId","selectedTrack","setSelectedTrack","useState","useEffect","entry","find","f","setFileSource","loc","setFileType","type","React","length","TextField","select","label","variant","value","onChange","event","target","map","MenuItem","key","coarseStripHTML","ErrorMessage","error","useStyles","makeStyles","container","margin","maxWidth","padding","session","getSession","classes","assemblyNames","assemblyManager","loading","fileType","fileSource","isReadyToOpen","fileTypes","setSelectedAssembly","selectorType","setSelectorType","err","get","rootModel","getRoot","Paper","className","LoadingEllipses","FormControl","component","RadioGroup","row","name","Object","entries","custom","existing","val","FormControlLabel","checked","control","Radio","FormGroup","FileSelector","inline","location","setLocation","arg","TrackSelector","FormLabel","fileTypeName","AssemblySelector","selected","Button","disabled","color","onClick","import","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","theme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","props","style","easeOut","fontSize","ownerState","root","children","background","dot","RadioRoot","SwitchBase","prop","slot","overridesResolver","styles","size","capitalize","vars","palette","text","secondary","radioClasses","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","filter","createSimplePaletteValueFilter","mainChannel","main","defaultCheckedIcon","defaultIcon","inProps","ref","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","other","muiFormControl","useFormControl","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role","getRadioGroupUtilityClass"],"sourceRoot":""}