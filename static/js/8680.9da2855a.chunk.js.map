{"version":3,"file":"static/js/8680.9da2855a.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/material/Badge/useBadge.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    slots,\n    slotProps,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AccordionSummaryRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      focusRipple: false,\n      disableRipple: true,\n      disabled,\n      'aria-expanded': expanded,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onClick: event => {\n        handlers.onClick?.(event);\n        handleChange(event);\n      }\n    })\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AccordionSummaryContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ExpandIconWrapperSlot, expandIconWrapperSlotProps] = useSlot('expandIconWrapper', {\n    className: classes.expandIconWrapper,\n    elementType: AccordionSummaryExpandIconWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(ContentSlot, {\n      ...contentSlotProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(ExpandIconWrapperSlot, {\n      ...expandIconWrapperSlotProps,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    expandIconWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    content: PropTypes.elementType,\n    expandIconWrapper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;"],"names":["d","getAccordionSummaryUtilityClass","slot","getBadgeUtilityClass","AccordionSummaryRoot","name","overridesResolver","props","styles","root","theme","transition","duration","transitions","shortest","display","width","minHeight","padding","spacing","create","focusVisible","backgroundColor","vars","palette","action","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","style","expanded","AccordionSummaryContent","content","textAlign","flexGrow","margin","AccordionSummaryExpandIconWrapper","expandIconWrapper","color","active","transform","inProps","ref","children","className","expandIcon","focusVisibleClassName","onClick","slots","slotProps","other","toggle","A","ownerState","classes","useUtilityClasses","externalForwardedProps","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","focusRipple","disableRipple","getSlotProps","handlers","event","handleChange","ContentSlot","contentSlotProps","ExpandIconWrapperSlot","expandIconWrapperSlotProps","AccordionDetailsRoot","getAccordionDetailsUtilityClass","BadgeRoot","styled","position","verticalAlign","flexShrink","BadgeBadge","badge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","invisible","memoTheme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","easing","easeInOut","enteringScreen","Object","entries","filter","createSimplePaletteValueFilter","map","main","contrastText","RADIUS_DOT","top","right","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","undefined","composeClasses","Root","BadgeSlot","Badge","badgeSlotProps","rootProps","useSlotProps","externalSlotProps","as","clsx","badgeProps"],"sourceRoot":""}