{"version":3,"file":"static/js/8237.eb6aa553.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/LinearProgress/LinearProgress.js","../../../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/esm/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../../../node_modules/@mui/x-internals/esm/warning/warning.js","../../../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/internals/utils/gridRowGroupingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-internals/esm/throttle/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/utils/platform.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/constants.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-internals/esm/fastMemo/fastMemo.js","../../../node_modules/@mui/x-internals/esm/fastObjectShallowCompare/fastObjectShallowCompare.js","../../../node_modules/@mui/x-internals/reactMajor.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/@babel/runtime/helpers/interopRequireWildcard.js","../../../node_modules/reselect/src/devModeChecks/identityFunctionCheck.ts","../../../node_modules/reselect/src/utils.ts","../../../node_modules/reselect/src/autotrackMemoize/proxy.ts","../../../node_modules/reselect/src/lruMemoize.ts","../../../node_modules/reselect/src/weakMapMemoize.ts","../../../node_modules/reselect/src/createSelectorCreator.ts","../../../node_modules/reselect/src/createStructuredSelector.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color === 'inherit',\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        &::after {\n          animation: ${waveKeyframe} 2s linear 0.5s infinite;\n        }\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: waveAnimation || {\n        '&::after': {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'setPaginationModel');\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { GRID_TREE_DATA_GROUPING_FIELD, GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { isGroupingColumn } from \"../../../internals/utils/gridRowGroupingUtils.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && (colDef.field === GRID_TREE_DATA_GROUPING_FIELD || isGroupingColumn(colDef.field))) {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    const value = apiRef.current.getCellValue(id, field);\n    let newValue = value;\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const column = apiRef.current.getColumn(field);\n    const shouldProcessEditCellProps = !!column.preProcessEditCellProps && deleteValue;\n    let newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: shouldProcessEditCellProps\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n    if (shouldProcessEditCellProps) {\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps,\n        hasChanged: newValue !== value\n      }));\n      // Check if still in edit mode before updating\n      if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n        const editingState = gridEditRowsStateSelector(apiRef.current.state);\n        updateOrDeleteFieldState(id, field, _extends({}, newProps, {\n          value: editingState[id][field].value,\n          isProcessingProps: false\n        }));\n      }\n    }\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      const column = apiRef.current.getColumn(field);\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(column);\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: !!column.preProcessEditCellProps && deleteValue\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n    columnFields.filter(field => !!apiRef.current.getColumn(field).preProcessEditCellProps && deleteValue).forEach(field => {\n      const column = apiRef.current.getColumn(field);\n      const value = apiRef.current.getCellValue(id, field);\n      const newValue = deleteValue ? getDefaultCellValue(column) : initialValue ?? value;\n      Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps[field],\n        hasChanged: newValue !== value\n      })).then(processedProps => {\n        // Check if still in edit mode before updating\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          const editingState = gridEditRowsStateSelector(apiRef.current.state);\n          updateOrDeleteFieldState(id, field, _extends({}, processedProps, {\n            value: editingState[id][field].value,\n            isProcessingProps: false\n          }));\n        }\n      });\n    });\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowsLookupSelector, gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = new Set(selectableIds);\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.add(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = new Set();\n      }\n      const currentLookup = selectedIdsLookupSelector(apiRef);\n      if (newSelection.size === Object.keys(currentLookup).length && Array.from(newSelection).every(id => currentLookup[id] === id)) {\n        return;\n      }\n    } else {\n      newSelection = new Set(Object.values(selectedIdsLookupSelector(apiRef)));\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          newSelection.add(id);\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n    }\n    const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(Array.from(newSelection));\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    const isNonExistent = id => {\n      if (props.filterMode === 'server') {\n        return !rowsLookup[id];\n      }\n      return filteredRowsLookup[id] !== true;\n    };\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (isNonExistent(id)) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n\n    // For nested data, on row tree updation (filtering, adding rows, etc.) when the selection is\n    // not empty, we need to re-run scanning of the tree to propagate the selection changes\n    // Example: A parent whose de-selected children are filtered out should now be selected\n    const shouldReapplyPropagation = isNestedData && props.rowSelectionPropagation?.parents && Object.keys(selectionLookup).length > 0;\n    if (hasChanged || shouldReapplyPropagation && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (shouldReapplyPropagation) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, props.filterMode, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  React.useEffect(() => debouncedSetSavedSize.clear, [debouncedSetSavedSize]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom|HappyDOM/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field],\n        flex: 0\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set([GRID_CHECKBOX_SELECTION_FIELD, '__reorder__', GRID_DETAIL_PANEL_TOGGLE_FIELD]);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","const warnedOnceCache = new Set();\n\n// TODO move to @base_ui/internals. Base UI, etc. need this helper.\nexport function warnOnce(message, gravity = 'warning') {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  if (!warnedOnceCache.has(cleanMessage)) {\n    warnedOnceCache.add(cleanMessage);\n    if (gravity === 'error') {\n      console.error(cleanMessage);\n    } else {\n      console.warn(cleanMessage);\n    }\n  }\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../constants.js\";\nexport const getRowGroupingCriteriaFromGroupingField = groupingColDefField => {\n  const match = groupingColDefField.match(/^__row_group_by_columns_group_(.*)__$/);\n  if (!match) {\n    return null;\n  }\n  return match[1];\n};\nexport const isGroupingColumn = field => field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD || getRowGroupingCriteriaFromGroupingField(field) !== null;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","export function GridDetailPanels(_) {\n  return null;\n}","export function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.\n   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.\n   * For datasets with a large number of columns, this can cause performance issues.\n   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.\n   * @default false\n   */\n  virtualizeColumnsWithAutoRowHeight: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean, sanitizeFilterItemValue } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    const sanitizedValue = sanitizeFilterItemValue(filterItem.value);\n    if (sanitizedValue === undefined) {\n      return null;\n    }\n    return value => Boolean(value) === sanitizedValue;\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: index === visibleColumnGroupHeader.length - 1,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: visibleColumnGroupHeader.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { minimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  // TODO: take pinned rows into account\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = Math.max(dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0), 0);\n  if (height === 0) {\n    height = minimalContentHeight;\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../../internals/constants.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    const row = apiRef.current.getRow(rowId);\n    if (!row) {\n      return EMPTY_CELL_PARAMS;\n    }\n    const result = apiRef.current.getCellParams(rowId, field);\n    result.api = apiRef.current;\n    return result;\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 6;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport { inputBaseClasses } from '@mui/material/InputBase';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    searchInput: ['columnsManagementSearchInput'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns,\n    searchInputProps\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(SearchInput, _extends({\n        as: rootProps.slots.baseTextField,\n        ownerState: rootProps,\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        className: classes.searchInput,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"search\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n            \"aria-label\": apiRef.current.getLocaleText('columnsManagementDeleteIconLabel'),\n            size: \"small\",\n            sx: [searchValue ? {\n              visibility: 'visible'\n            } : {\n              visibility: 'hidden'\n            }],\n            tabIndex: -1,\n            onClick: handleSearchReset\n          }, rootProps.slotProps?.baseIconButton, {\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n              fontSize: \"small\"\n            })\n          }))\n        },\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('columnsManagementSearchTitle')\n        },\n        autoComplete: \"off\",\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField, searchInputProps))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchInputProps: PropTypes.object,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst SearchInput = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementSearchInput',\n  overridesResolver: (props, styles) => styles.columnsManagementSearchInput\n})(({\n  theme\n}) => ({\n  [`& .${inputBaseClasses.root}`]: {\n    padding: theme.spacing(0, 1.5, 0, 1.5)\n  },\n  [`& .${inputBaseClasses.input}::-webkit-search-decoration,\n  & .${inputBaseClasses.input}::-webkit-search-cancel-button,\n  & .${inputBaseClasses.input}::-webkit-search-results-button,\n  & .${inputBaseClasses.input}::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const sanitizeFilterItemValue = value => {\n  if (String(value).toLowerCase() === 'true') {\n    return true;\n  }\n  if (String(value).toLowerCase() === 'false') {\n    return false;\n  }\n  return undefined;\n};\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(sanitizeFilterItemValue(item.value));\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = sanitizeFilterItemValue(event.target.value);\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(sanitizeFilterItemValue(item.value));\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState === undefined ? '' : String(filterValueState),\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const _ref = props,\n    {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, tooltipProps, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId,\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, buttonProps, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scroller[propertyScroll];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false,\n  virtualizeColumnsWithAutoRowHeight: false\n};","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementSearchInput', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  columnsManagementDeleteIconLabel: 'Clear',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","/**\n * Get the list column definition\n * @category List View\n * @ignore - Do not document\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport const minimalContentHeight = 'var(--DataGrid-overlayHeight, calc(var(--height) * 2))';\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport reactMajor from '@mui/x-internals/reactMajor';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { minimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom|HappyDOM/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  const mainRefCallback = React.useCallback(node => {\n    mainRef.current = node;\n    if (!node) {\n      return undefined;\n    }\n    const initialRect = node.getBoundingClientRect();\n    let lastSize = {\n      width: initialRect.width,\n      height: initialRect.height\n    };\n    apiRef.current.publishEvent('resize', lastSize);\n    if (typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      if (!entry) {\n        return;\n      }\n      const newSize = {\n        width: entry.contentRect.width,\n        height: entry.contentRect.height\n      };\n      if (newSize.width === lastSize.width && newSize.height === lastSize.height) {\n        return;\n      }\n      apiRef.current.publishEvent('resize', newSize);\n      lastSize = newSize;\n    });\n    observer.observe(node);\n    if (reactMajor >= 19) {\n      return () => {\n        mainRef.current = null;\n        observer.disconnect();\n      };\n    }\n    return undefined;\n  }, [apiRef, mainRef]);\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const scroller = scrollerRef.current;\n    if (!scroller) {\n      return undefined;\n    }\n    const newScroll = {\n      top: scroller.scrollTop,\n      left: scroller.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (size.flexBasis === 0) {\n      size.flexBasis = minimalContentHeight; // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [columnsTotalWidth, contentHeight, needsHorizontalScrollbar]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRefCallback\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false,\n    virtualizeColumnsWithAutoRowHeight: rootProps.virtualizeColumnsWithAutoRowHeight\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    if (!inputs.virtualizeColumnsWithAutoRowHeight) {\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n    }\n    if (!hasRowWithAutoHeight || inputs.virtualizeColumnsWithAutoRowHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst arrayShallowCompare = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n};\nexport const argsEqual = (prev, curr) => {\n  let fn = Object.is;\n  if (curr instanceof Array) {\n    fn = arrayShallowCompare;\n  } else if (curr instanceof Object) {\n    fn = objectShallowCompare;\n  }\n  return fn(prev, curr);\n};\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null,\n  args: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  const prevArgs = refs.current.args;\n  refs.current.args = args;\n  if (didInit && !argsEqual(prevArgs, args)) {\n    const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n    if (!refs.current.equals(refs.current.state, newState)) {\n      refs.current.state = newState;\n      setState(newState);\n    }\n  }\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","export const GRID_TREE_DATA_GROUPING_FIELD = '__tree_data_group__';\nexport const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = '__row_group_by_columns_group__';\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { argsEqual } from \"../hooks/utils/useGridSelector.js\";\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      if (!argsEqual(cacheFn.selectorArgs, selectorArgs)) {\n        const reselectArgs = selectorArgs !== undefined ? [...args.slice(0, args.length - 1), () => selectorArgs, args[args.length - 1]] : args;\n        const fn = reselectCreateSelector(...reselectArgs);\n        fn.selectorArgs = selectorArgs;\n        cacheArgs.set(args, fn);\n        return fn(state, selectorArgs, cacheKey);\n      }\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const reselectArgs = selectorArgs !== undefined ? [...args.slice(0, args.length - 1), () => selectorArgs, args[args.length - 1]] : args;\n    const fn = reselectCreateSelector(...reselectArgs);\n    fn.selectorArgs = selectorArgs;\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _default = exports.default = parseInt(React.version, 10);","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return {\n    \"default\": e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n[\"default\"] = e, t && t.set(e, n), n;\n}\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import type { AnyFunction } from '../types'\r\n\r\n/**\r\n * Runs a check to determine if the given result function behaves as an\r\n * identity function. An identity function is one that returns its\r\n * input unchanged, for example, `x => x`. This check helps ensure\r\n * efficient memoization and prevent unnecessary re-renders by encouraging\r\n * proper use of transformation logic in result functions and\r\n * extraction logic in input selectors.\r\n *\r\n * @param resultFunc - The result function to be checked.\r\n * @param inputSelectorsResults - The results of the input selectors.\r\n * @param outputSelectorResult - The result of the output selector.\r\n *\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks#identityfunctioncheck `identityFunctionCheck`}\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const runIdentityFunctionCheck = (\r\n  resultFunc: AnyFunction,\r\n  inputSelectorsResults: unknown[],\r\n  outputSelectorResult: unknown\r\n) => {\r\n  if (\r\n    inputSelectorsResults.length === 1 &&\r\n    inputSelectorsResults[0] === outputSelectorResult\r\n  ) {\r\n    let isInputSameAsOutput = false\r\n    try {\r\n      const emptyObject = {}\r\n      if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true\r\n    } catch {\r\n      // Do nothing\r\n    }\r\n    if (isInputSameAsOutput) {\r\n      let stack: string | undefined = undefined\r\n      try {\r\n        throw new Error()\r\n      } catch (e) {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\r\n        ;({ stack } = e as Error)\r\n      }\r\n      console.warn(\r\n        'The result function returned its own inputs without modification. e.g' +\r\n          '\\n`createSelector([state => state.todos], todos => todos)`' +\r\n          '\\nThis could lead to inefficient memoization and unnecessary re-renders.' +\r\n          '\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.',\r\n        { stack }\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n"],"names":["indeterminate1Keyframe","indeterminate1Animation","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","theme","color","vars","palette","LinearProgress","mode","main","LinearProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","position","overflow","display","height","zIndex","colorAdjust","variants","Object","entries","filter","map","style","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundSize","backgroundPosition","backgroundImage","animation","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","ref","className","value","valueBuffer","other","classes","slots","bar1","bar2","useUtilityClasses","isRtl","rootProps","inlineStyles","undefined","Math","round","role","children","getLinearProgressUtilityClass","pulseKeyframe","waveKeyframe","pulseAnimation","waveAnimation","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","Skeleton","bg","text","primary","marginBottom","visibility","maxWidth","WebkitMaskImage","background","action","hover","component","Boolean","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","EventManager","constructor","this","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","delete","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","Store","create","_value","listeners","subscribe","fn","add","getSnapshot","update","forEach","l","Set","SYMBOL_API_PRIVATE","Symbol","globalId","_typeof","o","iterator","prototype","toPropertyKey","t","e","toPrimitive","call","r","TypeError","String","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","DataGridPremium","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","virtualScrollbarVerticalRef","virtualScrollbarHorizontalRef","columnHeadersContainerRef","useGridRefs","isFirstEffect","setState","useGridIsRtl","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","replace","includes","delimiter","some","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","CSVBody","acc","getCellParams","serializeRow","trim","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","getDefaultCellValue","_excluded","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","containerSize","scrollPosition","elementSize","elementOffset","elementEnd","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","groupHeaderHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","areElementSizesEqual","b","ResizeObserver","globalThis","observe","unobserve","disconnect","rowsMetaStateInitializer","rowsMeta","heights","currentPageTotalHeight","positions","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","minWidth","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","firstRowIndex","lastRowIndex","getCellValue","cellValue","valueGetter","rowSpanValueGetter","EMPTY_STATE","spannedCells","hiddenCells","hiddenCellOriginMap","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","visibleRows","rangeToProcess","resetState","processedRange","rowSpanning","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","unstable_rowSpanning","dataRowIdToModelLookup","columnsLookup","isFilteringPending","items","quickFilterValues","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","listViewColumn","unstable_listColumn","getListColumnWidth","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","listView","unstable_listView","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","rowSpanScanDirection","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","nonRowSpannedRowId","rowSpanHiddenCells","nextRowIndex","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","getColumnIndexFn","rowIndexBefore","shiftKey","groupingColDefField","match","getRowGroupingCriteriaFromGroupingField","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","applyAutoSelection","DataGrid","rowSelectionPropagation","descendants","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","addRow","removeRow","selectRows","ids","selectableIds","currentLookup","every","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","rowsLookup","selectionLookup","hasChanged","filterMode","isNonExistent","keepNonExistentRowsSelected","isAutoGenerated","childId","shouldReapplyPropagation","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","paginationMode","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","fromCharCode","keyCode","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","previousGroupsToFetch","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","previousCache","updateServerRows","groupKeys","setLoading","loadingPropBeforePartialUpdates","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","renderContext","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","useGridRowSpanning","getColumnHeaderParams","rawValue","cellFocus","cellTabIndex","hasFocus","isEditable","valueFormatter","isCellEditable","getRowFormattedValue","getRowElement","paramsApi","getCellElement","useGridParamsApi","resetColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","throwIfNotInMode","handleCellDoubleClick","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","shouldProcessEditCellProps","preProcessEditCellProps","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","processedProps","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","hasRootReference","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","direction","columnIndexToFocus","visibleColumns","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","lastFocusedRowId","lastFocusedRowIndex","nextRow","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","filterState","getFilterState","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","disableEval","filterResult","filterApi","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","hasRowWithAutoHeight","isHeightMetaValid","gridPaginationSelector","processHeightEntry","baseRowHeight","entry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","autoHeight","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","unstable_getRowHeight","unstable_setLastMeasuredRowIndex","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","rowHasAutoHeight","getLastMeasuredRowIndex","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scrollTop","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnHeaderHeight","columnGroupHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","newSize","parseFloat","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseBadge","baseCheckbox","baseDivider","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","columnHeaderSortIcon","GridColumnHeaderSortIcon","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","defaultSlots","useDataGridProps","themedProps","allProps","useThemeProps","startsWith","forwardedProps","groupForwardedProps","overrides","computeSlots","injectDefaultProps","configuration","hooks","useGridAriaAttributes","useGridPrivateApiContext","accessibleRowCount","headerGroupingMaxDepth","pinnedRowsCount","useGridRowAriaAttributes","selectedIdsLookup","ariaAttributes","ariaRowIndex","DataGridRaw","GridContextProvider","GridRoot","sx","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","indeterminateCheckboxAction","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowPositionsDebounceMs","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","virtualizeColumnsWithAutoRowHeight","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","pastedValueParser","toLowerCase","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","sanitizedValue","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","createContainsFilterFn","disableTrim","negate","trimmedValue","createEqualityFilterFn","collator","Intl","Collator","sensitivity","usage","isEqual","compare","createEmptyFilterFn","getGridStringOperators","filterItemValue","val","filterValue","GridColumnGroupHeader","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderBottom","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","borderTop","getCellOffsetStyle","isLeftPinned","isRightPinned","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","isSiblingFocused","isLastUnpinned","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","GridConfigurationContext","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","handleRef","useForkRef","viewportHeight","skeletonRowsCount","ceil","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","array","rowCells","isPinnedLeft","sectionIndex","pinnedStyle","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","empty","scrollbarWidth","GridScrollbarFillerCell","rowSkeleton","cells","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","noRowsVariant","rowsCount","activeVariant","noRowsLabel","GridPaginationRoot","maxHeight","flexGrow","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","showBottomBorder","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","useGridConfiguration","treeDepth","editing","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","propHandler","publishClick","rowReordering","heightEntry","rowStyle","minHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","leftCells","rightCells","middleColumnsLength","eventHandlers","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","Overlay","overlayProps","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","isCellRowSpanned","padding","border","cellStyle","activeElement","focusableElement","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","Memoized","skeletonProps","icon","counter","toggleFilter","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onContextMenu","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","overlap","GridColumnHeaderTitleRoot","textOverflow","fontWeight","lineHeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","checkboxElement","rippleRef","handleKeyDown","isSelectable","checkboxPropsSelector","isIndeterminate","isChecked","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","handleSelectionChange","p","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInput","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","searchInputProps","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","handleSearchReset","GridColumnsManagementHeader","SearchInput","placeholder","InputProps","startAdornment","autoComplete","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","TextField","columnsManagementSearchInput","inputBaseClasses","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","overlay","alignSelf","columnHeaderStyles","separatorIconDragStyles","rx","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","transitions","duration","shorter","gap","borderBottomWidth","borderBottomStyle","marginLeft","marginRight","columnSeparatorOffset","touchAction","shortest","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","virtualScroller","gamma","f","overlayColor","rgb","removeOpacity","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","sanitizeFilterItemValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","_getTagProps","tagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","useGridOverlays","noRows","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","GridPanelAnchor","Element","GridMainContainer","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","rowsLength","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","offsetTop","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","GridVirtualScroller","overlaysProps","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","DATA_GRID_PROPS_DEFAULT_VALUES","getDataGridUtilityClass","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","columnsManagementDeleteIconLabel","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","topLevelRowCount","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridListColumnSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","defaultPageSize","getPageCount","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","getGridRowGroupSelectableDescendants","getCheckboxPropsSelector","autoSelectParents","rowSelectionLookup","selectableDescendantsCount","selectedDescendantsCount","isMultipleRowSelectionEnabled","findRowsToSelect","selectedRow","autoSelectDescendants","filteredRows","selectedDescendants","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","findRowsToDeselect","deselectedRow","allParents","getRowNodeParents","descendant","gridRowSpanningStateSelector","gridRowSpanningHiddenCellsSelector","gridRowSpanningSpannedCellsSelector","gridRowSpanningHiddenCellsOriginMapSelector","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutogeneratedRow","isAutogeneratedRowNode","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","minimalContentHeight","computeRowsUpdates","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","rowHeightWarning","getRowHeightWarning","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","gridRenderContextColumnsSelector","isFirefox","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","mainRefCallback","initialRect","lastSize","observer","reactMajor","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","verticalBuffer","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","createScrollCache","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","flexBasis","useRunOnce","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","isLastVisibleInSection","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","rowSpanHiddenCellOrigin","minSpannedRowIndex","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","condition","didRun","GRID_TREE_DATA_GROUPING_FIELD","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","GRID_DETAIL_PANEL_TOGGLE_FIELD","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","reselectCreateSelector","memoize","memoizeOptions","maxSize","equalityCheck","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","clientHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","altKey","isCopyShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","createRandomNumberGenerator","seed","imul","deepClone","obj","structuredClone","parse","eslintUseValue","fastObjectShallowCompare","aLength","bLength","_interopRequireWildcard","exports","React","version","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","_getRequireWildcardCache","__esModule","n","__proto__","defineProperty","getOwnPropertyDescriptor","u","NOT_FOUND","ensureIsArray","getPrototypeOf","referenceEqualityCheck","lruMemoize","equalityCheckOrOptions","providedOptions","resultEqualityCheck","prev","next","createCacheKeyComparator","resultsCount","put","getEntries","createSingletonCache","cacheIndex","pop","createLruCache","memoized","arguments","matchingEntry","clearCache","resetResultsCount","Ref","WeakRef","deref","weakMapMemoize","fnNode","s","lastResult","cacheNode","arg","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","createSelectorArgs","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","errorMessage","assertIsFunction","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","dependencies","itemTypes","assertIsArrayOfFunctions","getDependencies","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createStructuredSelector","inputSelectorsObject","selectorCreator","assertIsObject","inputSelectorKeys","composition"],"sourceRoot":""}