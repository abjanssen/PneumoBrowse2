{"version":3,"file":"static/js/6205.8273f034.chunk.js","mappings":"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","sources":["../../../plugins/circular-view/src/CircularView/components/ExportSvgDialog.tsx","../../../node_modules/@mui/system/esm/styled/styled.js","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js","../../../node_modules/@mui/icons-material/esm/LockOpen.js","../../../node_modules/@mui/icons-material/esm/RotateLeft.js","../../../node_modules/@mui/icons-material/esm/RotateRight.js","../../../plugins/circular-view/src/CircularView/components/Controls.tsx","../../../plugins/circular-view/src/CircularView/components/ImportForm.tsx","../../../plugins/circular-view/src/CircularView/components/CircularView.tsx","../../../node_modules/@mui/icons-material/esm/Lock.js","../../../plugins/circular-view/src/CircularView/components/Ruler.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui'\nimport { getSession, useLocalStorage } from '@jbrowse/core/util'\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n  MenuItem,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport type { ExportSvgOptions } from '../model'\nimport type { TextFieldProps } from '@mui/material'\n\nfunction LoadingMessage() {\n  return (\n    <div>\n      <CircularProgress size={20} style={{ marginRight: 20 }} />\n      <Typography display=\"inline\">Creating SVG</Typography>\n    </div>\n  )\n}\n\nfunction TextField2({ children, ...rest }: TextFieldProps) {\n  return (\n    <div>\n      <TextField {...rest}>{children}</TextField>\n    </div>\n  )\n}\nfunction useSvgLocal<T>(key: string, val: T) {\n  return useLocalStorage(`svg-${key}`, val)\n}\n\nexport default function ExportSvgDialog({\n  model,\n  handleClose,\n}: {\n  model: { exportSvg(opts: ExportSvgOptions): Promise<void> }\n  handleClose: () => void\n}) {\n  const session = getSession(model)\n  const offscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n  const [rasterizeLayers, setRasterizeLayers] = useState(offscreenCanvas)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<unknown>()\n  const [filename, setFilename] = useSvgLocal('file', 'jbrowse.svg')\n  const [themeName, setThemeName] = useSvgLocal(\n    'theme',\n    session.themeName || 'default',\n  )\n  return (\n    <Dialog open onClose={handleClose} title=\"Export SVG\">\n      <DialogContent>\n        {error ? (\n          <ErrorMessage error={error} />\n        ) : loading ? (\n          <LoadingMessage />\n        ) : null}\n        <TextField2\n          helperText=\"filename\"\n          value={filename}\n          onChange={event => {\n            setFilename(event.target.value)\n          }}\n        />\n\n        {session.allThemes ? (\n          <TextField2\n            select\n            label=\"Theme\"\n            value={themeName}\n            onChange={event => {\n              setThemeName(event.target.value)\n            }}\n          >\n            {Object.entries(session.allThemes()).map(([key, val]) => (\n              <MenuItem key={key} value={key}>\n                {\n                  // @ts-expect-error\n                  val.name || '(Unknown name)'\n                }\n              </MenuItem>\n            ))}\n          </TextField2>\n        ) : null}\n        {offscreenCanvas ? (\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={rasterizeLayers}\n                onChange={() => {\n                  setRasterizeLayers(val => !val)\n                }}\n              />\n            }\n            label=\"Rasterize canvas based tracks? File may be much larger if this is turned off\"\n          />\n        ) : (\n          <Typography>\n            Note: rasterizing layers not yet supported in this browser, so SVG\n            size may be large\n          </Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={async () => {\n            setLoading(true)\n            setError(undefined)\n            try {\n              await model.exportSvg({\n                rasterizeLayers,\n                filename,\n                themeName,\n              })\n              handleClose()\n            } catch (e) {\n              console.error(e)\n              setError(e)\n            } finally {\n              setLoading(false)\n            }\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m0 12H6V10h12z\"\n}), 'LockOpen');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47M6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47m1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93\"\n}), 'RotateLeft');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.55 5.55 11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03m3.89-2.42 1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48\"\n}), 'RotateRight');","import { useState } from 'react'\n\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport { getSession } from '@jbrowse/core/util'\nimport LockIcon from '@mui/icons-material/Lock'\nimport LockOpenIcon from '@mui/icons-material/LockOpen'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft'\nimport RotateRightIcon from '@mui/icons-material/RotateRight'\nimport ZoomInIcon from '@mui/icons-material/ZoomIn'\nimport ZoomOutIcon from '@mui/icons-material/ZoomOut'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ExportSvgDialog from './ExportSvgDialog'\n\nimport type { CircularViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  controls: {\n    position: 'absolute',\n    borderRight: `1px solid ${theme.palette.divider}`,\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    left: 0,\n    top: 0,\n  },\n}))\n\nconst Controls = observer(function ({ model }: { model: CircularViewModel }) {\n  const { classes } = useStyles()\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  return (\n    <div className={classes.controls}>\n      <IconButton\n        onClick={model.zoomOutButton}\n        title={model.lockedFitToWindow ? 'unlock to zoom out' : 'zoom out'}\n        disabled={model.atMaxBpPerPx || model.lockedFitToWindow}\n      >\n        <ZoomOutIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={model.zoomInButton}\n        disabled={model.atMinBpPerPx}\n        title=\"zoom in\"\n      >\n        <ZoomInIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateCounterClockwiseButton}\n        title=\"rotate counter-clockwise\"\n      >\n        <RotateLeftIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={model.rotateClockwiseButton}\n        title=\"rotate clockwise\"\n      >\n        <RotateRightIcon />\n      </IconButton>\n\n      <IconButton\n        onClick={model.toggleFitToWindowLock}\n        title={\n          model.lockedFitToWindow\n            ? 'locked model to window size'\n            : 'unlocked model to zoom further'\n        }\n        disabled={model.tooSmallToLock}\n      >\n        {model.lockedFitToWindow ? <LockIcon /> : <LockOpenIcon />}\n      </IconButton>\n\n      <IconButton\n        onClick={event => {\n          setAnchorEl(event.currentTarget)\n        }}\n      >\n        <MoreVert />\n      </IconButton>\n\n      {model.hideTrackSelectorButton ? null : (\n        <IconButton\n          onClick={model.activateTrackSelector}\n          title=\"Open track selector\"\n          data-testid=\"circular_track_select\"\n        >\n          <TrackSelectorIcon />\n        </IconButton>\n      )}\n\n      {anchorEl ? (\n        <JBrowseMenu\n          anchorEl={anchorEl}\n          menuItems={[\n            {\n              label: 'Export SVG',\n              icon: PhotoCamera,\n              onClick: () => {\n                getSession(model).queueDialog(handleClose => [\n                  ExportSvgDialog,\n                  { model, handleClose },\n                ])\n              },\n            },\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setAnchorEl(null)\n          }}\n          open={Boolean(anchorEl)}\n          onClose={() => {\n            setAnchorEl(null)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Controls\n","import { useState } from 'react'\n\nimport { AssemblySelector, ErrorMessage } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { Button, Container, Grid } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { CircularViewModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(6),\n  },\n}))\n\nconst ImportForm = observer(function ({ model }: { model: CircularViewModel }) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { error } = model\n  const { assemblyNames, assemblyManager } = session\n  const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0]!)\n  const assembly = assemblyManager.get(selectedAsm)\n  const assemblyError = assemblyNames.length\n    ? assembly?.error\n    : 'No configured assemblies'\n  const regions = assembly?.regions || []\n  const err = assemblyError || error\n\n  return (\n    <Container className={classes.importFormContainer}>\n      {err ? (\n        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n          <Grid item>\n            <ErrorMessage error={err} />\n          </Grid>\n        </Grid>\n      ) : null}\n      <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\n        <Grid item>\n          <AssemblySelector\n            onChange={val => {\n              model.setError(undefined)\n              setSelectedAsm(val)\n            }}\n            session={session}\n            selected={selectedAsm}\n          />\n        </Grid>\n\n        <Grid item>\n          <Button\n            disabled={!regions.length}\n            onClick={() => {\n              model.setError(undefined)\n              model.setDisplayedRegions(regions)\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {/* if there's an error, it's not actively loading  so just display open */}\n            {regions.length || err ? 'Open' : 'Loading...'}\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  )\n})\n\nexport default ImportForm\n","import { ResizeHandle } from '@jbrowse/core/ui'\nimport { assembleLocString } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Controls from './Controls'\nimport ImportForm from './ImportForm'\nimport Ruler from './Ruler'\n\nimport type { CircularViewModel } from '../model'\n\nconst dragHandleHeight = 3\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    overflow: 'hidden',\n  },\n  scroller: {\n    overflow: 'auto',\n  },\n}))\n\nconst Slices = observer(({ model }: { model: CircularViewModel }) => {\n  return (\n    <>\n      {model.staticSlices.map(slice => (\n        <Ruler\n          key={assembleLocString(\n            slice.region.elided ? slice.region.regions[0]! : slice.region,\n          )}\n          model={model}\n          slice={slice}\n        />\n      ))}\n      {model.tracks.map(track => {\n        const display = track.displays[0]\n        return (\n          <display.RenderingComponent\n            key={display.id}\n            display={display}\n            view={model}\n          />\n        )\n      })}\n    </>\n  )\n})\n\nconst CircularView = observer(({ model }: { model: CircularViewModel }) => {\n  const initialized =\n    !!model.displayedRegions.length &&\n    !!model.figureWidth &&\n    !!model.figureHeight &&\n    model.initialized\n\n  const showImportForm = !initialized && !model.disableImportForm\n  const showFigure = initialized && !showImportForm\n\n  return showImportForm || model.error ? (\n    <ImportForm model={model} />\n  ) : showFigure ? (\n    <CircularViewLoaded model={model} />\n  ) : null\n})\n\nconst CircularViewLoaded = observer(function ({\n  model,\n}: {\n  model: CircularViewModel\n}) {\n  const {\n    width,\n    height,\n    id,\n    offsetRadians,\n    centerXY,\n    figureWidth,\n    figureHeight,\n    hideVerticalResizeHandle,\n  } = model\n  const { classes } = useStyles()\n  return (\n    <div className={classes.root} style={{ width, height }} data-testid={id}>\n      <div className={classes.scroller} style={{ width, height }}>\n        <svg\n          style={{\n            transform: `rotate(${offsetRadians}rad)`,\n            transition: 'transform 0.5s',\n            transformOrigin: centerXY.map(x => `${x}px`).join(' '),\n            position: 'absolute',\n            left: 0,\n            top: 0,\n          }}\n          width={figureWidth}\n          height={figureHeight}\n        >\n          <g transform={`translate(${centerXY})`}>\n            <Slices model={model} />\n          </g>\n        </svg>\n      </div>\n      <Controls model={model} />\n      {hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onDrag={model.resizeHeight}\n          style={{\n            height: dragHandleHeight,\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            background: '#ccc',\n            boxSizing: 'border-box',\n            borderTop: '1px solid #fafafa',\n          }}\n        />\n      )}\n    </div>\n  )\n})\n\nexport default CircularView\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import {\n  assembleLocString,\n  getFillProps,\n  getSession,\n  getStrokeProps,\n  polarToCartesian,\n  radToDeg,\n} from '@jbrowse/core/util'\nimport { makeContrasting } from '@jbrowse/core/util/color'\nimport { useTheme } from '@mui/material/styles'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { CircularViewModel } from '../model'\nimport type { Slice, SliceElidedRegion, SliceNonElidedRegion } from '../slices'\n\nconst useStyles = makeStyles()({\n  rulerLabel: {\n    fontSize: '0.8rem',\n    fontWeight: 500,\n    lineHeight: 1.6,\n    letterSpacing: '0.0075em',\n  },\n})\n\nfunction sliceArcPath(\n  slice: Slice,\n  radiusPx: number,\n  startBase: number,\n  endBase: number,\n) {\n  // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n  if (slice.flipped) {\n    ;[startBase, endBase] = [endBase, startBase]\n  }\n  const startXY = slice.bpToXY(startBase, radiusPx)\n  const endXY = slice.bpToXY(endBase, radiusPx)\n  const largeArc =\n    Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0'\n  const sweepFlag = '1'\n  return [\n    'M',\n    ...startXY,\n    'A',\n    radiusPx,\n    radiusPx,\n    '0',\n    largeArc,\n    sweepFlag,\n    ...endXY,\n  ].join(' ')\n}\n\nconst ElisionRulerArc = observer(function ({\n  model,\n  slice,\n  region,\n}: {\n  model: CircularViewModel\n  slice: Slice\n  region: SliceElidedRegion\n}) {\n  const theme = useTheme()\n  const { radiusPx: modelRadiusPx } = model\n  const radiusPx = modelRadiusPx + 1\n  const { endRadians, startRadians } = slice\n  const startXY = polarToCartesian(radiusPx, startRadians)\n  const endXY = polarToCartesian(radiusPx, endRadians)\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const largeArc = endRadians - startRadians > Math.PI ? '1' : '0'\n  // TODO: draw the elision\n  const centerRadians = (endRadians + startRadians) / 2\n  const regionCount = `[${Number(region.regions.length).toLocaleString()}]`\n  return (\n    <>\n      <RulerLabel\n        text={regionCount}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        title={`${regionCount} more regions`}\n        color={theme.palette.text.primary}\n      />\n      <path\n        d={[\n          'M',\n          ...startXY,\n          'A',\n          radiusPx,\n          radiusPx,\n          '0',\n          largeArc,\n          '1',\n          ...endXY,\n        ].join(' ')}\n        {...getStrokeProps(theme.palette.text.secondary)}\n        strokeWidth={2}\n        strokeDasharray=\"2,2\"\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nconst RulerLabel = observer(function ({\n  view,\n  text,\n  maxWidthPx,\n  radians,\n  radiusPx,\n  title,\n  color,\n}: {\n  view: CircularViewModel\n  text: string\n  maxWidthPx: number\n  radiusPx: number\n  radians: number\n  title?: string\n  color: string\n}) {\n  const { classes } = useStyles()\n  const textXY = polarToCartesian(radiusPx + 5, radians)\n  if (!text) {\n    return null\n  }\n\n  if (text.length * 6.5 < maxWidthPx) {\n    // text is rotated parallel to the ruler arc\n    return (\n      <text\n        x={0}\n        y={0}\n        className={classes.rulerLabel}\n        textAnchor=\"middle\"\n        dominantBaseline=\"baseline\"\n        transform={`translate(${textXY}) rotate(${radToDeg(radians) + 90})`}\n        {...getFillProps(color)}\n      >\n        {text}\n        <title>{title || text}</title>\n      </text>\n    )\n  }\n  if (maxWidthPx > 4) {\n    // text is rotated perpendicular to the ruler arc\n    const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2)\n    if (overallRotation >= 180) {\n      return (\n        <text\n          x={0}\n          y={0}\n          className={classes.rulerLabel}\n          textAnchor=\"start\"\n          dominantBaseline=\"middle\"\n          transform={`translate(${textXY}) rotate(${radToDeg(radians)})`}\n          fill={color}\n        >\n          {text}\n          <title>{title || text}</title>\n        </text>\n      )\n    }\n    return (\n      <text\n        x={0}\n        y={0}\n        className={classes.rulerLabel}\n        textAnchor=\"end\"\n        dominantBaseline=\"middle\"\n        transform={`translate(${textXY}) rotate(${radToDeg(radians) + 180})`}\n        fill={color}\n      >\n        {text}\n        <title>{title || text}</title>\n      </text>\n    )\n  }\n\n  // if you get here there is no room for the text at all\n  return null\n})\n\nconst RegionRulerArc = observer(function ({\n  model,\n  slice,\n  region,\n}: {\n  model: CircularViewModel\n  slice: Slice\n  region: SliceNonElidedRegion\n}) {\n  const theme = useTheme()\n  const { radiusPx } = model\n  const { endRadians, startRadians } = slice\n  const centerRadians = (endRadians + startRadians) / 2\n  const widthPx = (endRadians - startRadians) * radiusPx\n  const session = getSession(model)\n  const assembly = session.assemblyManager.get(region.assemblyName)\n  let color = assembly ? assembly.getRefNameColor(region.refName) : undefined\n  if (color) {\n    try {\n      color = makeContrasting(color, theme.palette.background.paper)\n    } catch (error) {\n      color = theme.palette.text.primary\n    }\n  } else {\n    color = theme.palette.text.primary\n  }\n\n  // TODO: slice flipping\n  return (\n    <>\n      <RulerLabel\n        text={region.refName}\n        view={model}\n        maxWidthPx={widthPx}\n        radians={centerRadians}\n        radiusPx={radiusPx}\n        color={color}\n      />\n      <path\n        d={sliceArcPath(slice, radiusPx + 1, region.start, region.end)}\n        stroke={color}\n        strokeWidth={2}\n        fill=\"none\"\n      />\n    </>\n  )\n})\n\nconst Ruler = observer(function ({\n  model,\n  slice,\n}: {\n  model: CircularViewModel\n  slice: Slice\n}) {\n  return slice.region.elided ? (\n    <ElisionRulerArc\n      key={assembleLocString(slice.region.regions[0]!)}\n      model={model}\n      region={slice.region}\n      slice={slice}\n    />\n  ) : (\n    <RegionRulerArc\n      key={assembleLocString(slice.region)}\n      region={slice.region}\n      model={model}\n      slice={slice}\n    />\n  )\n})\n\nexport default Ruler\n"],"names":["LoadingMessage","_jsxs","children","_jsx","CircularProgress","size","style","marginRight","Typography","display","TextField2","rest","TextField","useSvgLocal","key","val","useLocalStorage","ExportSvgDialog","model","handleClose","session","getSession","offscreenCanvas","OffscreenCanvas","rasterizeLayers","setRasterizeLayers","useState","loading","setLoading","error","setError","filename","setFilename","themeName","setThemeName","Dialog","open","onClose","title","DialogContent","ErrorMessage","helperText","value","onChange","event","target","allThemes","select","label","Object","entries","map","MenuItem","name","FormControlLabel","control","Checkbox","checked","DialogActions","Button","variant","color","onClick","type","async","undefined","exportSvg","e","console","defaultTheme","createTheme","defaultCreateStyledComponent","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","Container","options","createStyledComponent","componentName","ContainerRoot","theme","width","marginLeft","boxSizing","paddingLeft","spacing","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","ref","className","component","classes","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","createSvgIcon","d","useStyles","makeStyles","controls","position","borderRight","palette","divider","borderBottom","left","top","observer","anchorEl","setAnchorEl","IconButton","zoomOutButton","lockedFitToWindow","disabled","atMaxBpPerPx","ZoomOutIcon","zoomInButton","atMinBpPerPx","ZoomInIcon","rotateCounterClockwiseButton","RotateLeftIcon","rotateClockwiseButton","RotateRightIcon","toggleFitToWindowLock","tooSmallToLock","LockIcon","LockOpenIcon","currentTarget","MoreVert","hideTrackSelectorButton","activateTrackSelector","TrackSelectorIcon","JBrowseMenu","menuItems","icon","PhotoCamera","queueDialog","onMenuItemClick","_event","callback","Boolean","importFormContainer","padding","assemblyNames","assemblyManager","selectedAsm","setSelectedAsm","assembly","get","assemblyError","length","regions","err","Grid","container","justifyContent","alignItems","item","AssemblySelector","selected","setDisplayedRegions","marginBottom","overflow","scroller","Slices","_Fragment","staticSlices","slice","Ruler","assembleLocString","region","elided","tracks","track","displays","RenderingComponent","view","id","CircularView","initialized","displayedRegions","figureWidth","figureHeight","showImportForm","disableImportForm","showFigure","ImportForm","CircularViewLoaded","height","offsetRadians","centerXY","hideVerticalResizeHandle","transform","transition","transformOrigin","x","join","Controls","ResizeHandle","onDrag","resizeHeight","bottom","background","borderTop","rulerLabel","fontSize","fontWeight","lineHeight","letterSpacing","sliceArcPath","radiusPx","startBase","endBase","flipped","startXY","bpToXY","endXY","abs","bpPerRadian","PI","ElisionRulerArc","useTheme","modelRadiusPx","endRadians","startRadians","polarToCartesian","widthPx","largeArc","centerRadians","regionCount","Number","toLocaleString","RulerLabel","text","maxWidthPx","radians","primary","getStrokeProps","secondary","strokeWidth","strokeDasharray","fill","textXY","y","textAnchor","dominantBaseline","radToDeg","getFillProps","RegionRulerArc","assemblyName","getRefNameColor","refName","makeContrasting","paper","start","end","stroke"],"sourceRoot":""}