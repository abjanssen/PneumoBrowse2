{"version":3,"file":"static/js/2241.2fb85a1e.chunk.js","mappings":"gNASA,MAAMA,GAAkBC,EAAAA,EAAAA,aACtB,UAA0B,QAAEC,GAAWC,GACrC,OACEC,EAAAA,EAAAA,KAAA,OAAKD,IAAKA,EAAIE,UACXC,EAAAA,EAAAA,gBAAeJ,GACdA,EACEA,GACFE,EAAAA,EAAAA,KAACG,EAAAA,cAAa,CAACC,KAAMC,OAAOP,KAC1B,MAGV,IAaF,GAVmBQ,EAAAA,EAAAA,WAAS,UAAU,SAAEC,IACtC,OAAOA,GACLP,EAAAA,EAAAA,KAACQ,EAAAA,SAAQ,CAACC,SAAU,KAAKR,UACvBD,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAAAT,UACVD,EAAAA,EAAAA,KAACJ,EAAe,CAACE,QAASS,QAG5B,IACN,G","sources":["../../../plugins/arc/src/ArcTooltip.tsx"],"sourcesContent":["import { Suspense, forwardRef, isValidElement } from 'react'\n\nimport { SanitizedHTML } from '@jbrowse/core/ui'\nimport BaseTooltip from '@jbrowse/core/ui/BaseTooltip'\nimport { observer } from 'mobx-react'\n\ninterface Props {\n  message: React.ReactNode | string\n}\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2({ message }, ref) {\n    return (\n      <div ref={ref}>\n        {isValidElement(message) ? (\n          message\n        ) : message ? (\n          <SanitizedHTML html={String(message)} />\n        ) : null}\n      </div>\n    )\n  },\n)\n\nconst ArcTooltip = observer(function ({ contents }: { contents?: string }) {\n  return contents ? (\n    <Suspense fallback={null}>\n      <BaseTooltip>\n        <TooltipContents message={contents} />\n      </BaseTooltip>\n    </Suspense>\n  ) : null\n})\n\nexport default ArcTooltip\n"],"names":["TooltipContents","forwardRef","message","ref","_jsx","children","isValidElement","SanitizedHTML","html","String","observer","contents","Suspense","fallback","BaseTooltip"],"sourceRoot":""}