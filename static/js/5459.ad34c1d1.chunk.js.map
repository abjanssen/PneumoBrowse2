{"version":3,"file":"static/js/5459.ad34c1d1.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/LinearProgress/LinearProgress.js","../../../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-internals/EventManager/EventManager.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../../../node_modules/@mui/x-internals/warning/warning.js","../../../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/internals/utils/gridRowGroupingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-internals/throttle/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/utils/platform.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/constants.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-internals/fastMemo/fastMemo.js","../../../node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","../../../node_modules/prop-types/factoryWithThrowingShims.js","../../../node_modules/prop-types/index.js","../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../../node_modules/reselect/src/devModeChecks/identityFunctionCheck.ts","../../../node_modules/reselect/src/utils.ts","../../../node_modules/reselect/src/autotrackMemoize/proxy.ts","../../../node_modules/reselect/src/lruMemoize.ts","../../../node_modules/reselect/src/weakMapMemoize.ts","../../../node_modules/reselect/src/createSelectorCreator.ts","../../../node_modules/reselect/src/createStructuredSelector.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color === 'inherit',\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        &::after {\n          animation: ${waveKeyframe} 2s linear 0.5s infinite;\n        }\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: waveAnimation || {\n        '&::after': {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { GRID_TREE_DATA_GROUPING_FIELD, GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { isGroupingColumn } from \"../../../internals/utils/gridRowGroupingUtils.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && (colDef.field === GRID_TREE_DATA_GROUPING_FIELD || isGroupingColumn(colDef.field))) {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    const value = apiRef.current.getCellValue(id, field);\n    let newValue = value;\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const column = apiRef.current.getColumn(field);\n    const shouldProcessEditCellProps = !!column.preProcessEditCellProps && deleteValue;\n    let newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: shouldProcessEditCellProps\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n    if (shouldProcessEditCellProps) {\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps,\n        hasChanged: newValue !== value\n      }));\n      // Check if still in edit mode before updating\n      if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n        const editingState = gridEditRowsStateSelector(apiRef.current.state);\n        updateOrDeleteFieldState(id, field, _extends({}, newProps, {\n          value: editingState[id][field].value,\n          isProcessingProps: false\n        }));\n      }\n    }\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      const column = apiRef.current.getColumn(field);\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(column);\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: !!column.preProcessEditCellProps && deleteValue\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n    columnFields.filter(field => !!apiRef.current.getColumn(field).preProcessEditCellProps && deleteValue).forEach(field => {\n      const column = apiRef.current.getColumn(field);\n      const value = apiRef.current.getCellValue(id, field);\n      const newValue = deleteValue ? getDefaultCellValue(column) : initialValue ?? value;\n      Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps[field],\n        hasChanged: newValue !== value\n      })).then(processedProps => {\n        // Check if still in edit mode before updating\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          const editingState = gridEditRowsStateSelector(apiRef.current.state);\n          updateOrDeleteFieldState(id, field, _extends({}, processedProps, {\n            value: editingState[id][field].value,\n            isProcessingProps: false\n          }));\n        }\n      });\n    });\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowsLookupSelector, gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = new Set(selectableIds);\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.add(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = new Set();\n      }\n      const currentLookup = selectedIdsLookupSelector(apiRef);\n      if (newSelection.size === Object.keys(currentLookup).length && Array.from(newSelection).every(id => currentLookup[id] === id)) {\n        return;\n      }\n    } else {\n      newSelection = new Set(Object.values(selectedIdsLookupSelector(apiRef)));\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          newSelection.add(id);\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n    }\n    const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(Array.from(newSelection));\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    const isNonExistent = id => {\n      if (props.filterMode === 'server') {\n        return !rowsLookup[id];\n      }\n      return filteredRowsLookup[id] !== true;\n    };\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (isNonExistent(id)) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n\n    // For nested data, on row tree updation (filtering, adding rows, etc.) when the selection is\n    // not empty, we need to re-run scanning of the tree to propagate the selection changes\n    // Example: A parent whose de-selected children are filtered out should now be selected\n    const shouldReapplyPropagation = isNestedData && props.rowSelectionPropagation?.parents && Object.keys(selectionLookup).length > 0;\n    if (hasChanged || shouldReapplyPropagation && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (shouldReapplyPropagation) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, props.filterMode, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set([GRID_CHECKBOX_SELECTION_FIELD, '__reorder__', GRID_DETAIL_PANEL_TOGGLE_FIELD]);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","const warnedOnceCache = new Set();\n\n// TODO move to @base_ui/internals. Base UI, etc. need this helper.\nexport function warnOnce(message, gravity = 'warning') {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  if (!warnedOnceCache.has(cleanMessage)) {\n    warnedOnceCache.add(cleanMessage);\n    if (gravity === 'error') {\n      console.error(cleanMessage);\n    } else {\n      console.warn(cleanMessage);\n    }\n  }\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../constants.js\";\nexport const getRowGroupingCriteriaFromGroupingField = groupingColDefField => {\n  const match = groupingColDefField.match(/^__row_group_by_columns_group_(.*)__$/);\n  if (!match) {\n    return null;\n  }\n  return match[1];\n};\nexport const isGroupingColumn = field => field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD || getRowGroupingCriteriaFromGroupingField(field) !== null;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean, sanitizeFilterItemValue } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    const sanitizedValue = sanitizeFilterItemValue(filterItem.value);\n    if (sanitizedValue === undefined) {\n      return null;\n    }\n    return value => Boolean(value) === sanitizedValue;\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: rowStructure.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../../internals/constants.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const sanitizeFilterItemValue = value => {\n  if (String(value).toLowerCase() === 'true') {\n    return true;\n  }\n  if (String(value).toLowerCase() === 'false') {\n    return false;\n  }\n  return undefined;\n};\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(sanitizeFilterItemValue(item.value));\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = sanitizeFilterItemValue(event.target.value);\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(sanitizeFilterItemValue(item.value));\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState === undefined ? '' : String(filterValueState),\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scroller[propertyScroll];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.flexBasis = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","export const GRID_TREE_DATA_GROUPING_FIELD = '__tree_data_group__';\nexport const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = '__row_group_by_columns_group__';\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import type { AnyFunction } from '../types'\r\n\r\n/**\r\n * Runs a check to determine if the given result function behaves as an\r\n * identity function. An identity function is one that returns its\r\n * input unchanged, for example, `x => x`. This check helps ensure\r\n * efficient memoization and prevent unnecessary re-renders by encouraging\r\n * proper use of transformation logic in result functions and\r\n * extraction logic in input selectors.\r\n *\r\n * @param resultFunc - The result function to be checked.\r\n * @param inputSelectorsResults - The results of the input selectors.\r\n * @param outputSelectorResult - The result of the output selector.\r\n *\r\n * @see {@link https://reselect.js.org/api/development-only-stability-checks#identityfunctioncheck `identityFunctionCheck`}\r\n *\r\n * @since 5.0.0\r\n * @internal\r\n */\r\nexport const runIdentityFunctionCheck = (\r\n  resultFunc: AnyFunction,\r\n  inputSelectorsResults: unknown[],\r\n  outputSelectorResult: unknown\r\n) => {\r\n  if (\r\n    inputSelectorsResults.length === 1 &&\r\n    inputSelectorsResults[0] === outputSelectorResult\r\n  ) {\r\n    let isInputSameAsOutput = false\r\n    try {\r\n      const emptyObject = {}\r\n      if (resultFunc(emptyObject) === emptyObject) isInputSameAsOutput = true\r\n    } catch {\r\n      // Do nothing\r\n    }\r\n    if (isInputSameAsOutput) {\r\n      let stack: string | undefined = undefined\r\n      try {\r\n        throw new Error()\r\n      } catch (e) {\r\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\r\n        ;({ stack } = e as Error)\r\n      }\r\n      console.warn(\r\n        'The result function returned its own inputs without modification. e.g' +\r\n          '\\n`createSelector([state => state.todos], todos => todos)`' +\r\n          '\\nThis could lead to inefficient memoization and unnecessary re-renders.' +\r\n          '\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.',\r\n        { stack }\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { runIdentityFunctionCheck } from './devModeChecks/identityFunctionCheck'\r\nimport { runInputStabilityCheck } from './devModeChecks/inputStabilityCheck'\r\nimport { globalDevModeChecks } from './devModeChecks/setGlobalDevModeChecks'\r\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\r\nimport type {\r\n  DevModeChecks,\r\n  Selector,\r\n  SelectorArray,\r\n  DevModeChecksExecutionInfo\r\n} from './types'\r\n\r\nexport const NOT_FOUND = /* @__PURE__ */ Symbol('NOT_FOUND')\r\nexport type NOT_FOUND_TYPE = typeof NOT_FOUND\r\n\r\n/**\r\n * Assert that the provided value is a function. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param func - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsFunction<FunctionType extends Function>(\r\n  func: unknown,\r\n  errorMessage = `expected a function, instead received ${typeof func}`\r\n): asserts func is FunctionType {\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided value is an object. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param object - The value to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsObject<ObjectType extends Record<string, unknown>>(\r\n  object: unknown,\r\n  errorMessage = `expected an object, instead received ${typeof object}`\r\n): asserts object is ObjectType {\r\n  if (typeof object !== 'object') {\r\n    throw new TypeError(errorMessage)\r\n  }\r\n}\r\n\r\n/**\r\n * Assert that the provided array is an array of functions. If the assertion fails,\r\n * a `TypeError` is thrown with an optional custom error message.\r\n *\r\n * @param array - The array to be checked.\r\n * @param  errorMessage - An optional custom error message to use if the assertion fails.\r\n * @throws A `TypeError` if the assertion fails.\r\n */\r\nexport function assertIsArrayOfFunctions<FunctionType extends Function>(\r\n  array: unknown[],\r\n  errorMessage = `expected all items to be functions, instead received the following types: `\r\n): asserts array is FunctionType[] {\r\n  if (\r\n    !array.every((item): item is FunctionType => typeof item === 'function')\r\n  ) {\r\n    const itemTypes = array\r\n      .map(item =>\r\n        typeof item === 'function'\r\n          ? `function ${item.name || 'unnamed'}()`\r\n          : typeof item\r\n      )\r\n      .join(', ')\r\n    throw new TypeError(`${errorMessage}[${itemTypes}]`)\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure that the input is an array. If it's already an array, it's returned as is.\r\n * If it's not an array, it will be wrapped in a new array.\r\n *\r\n * @param item - The item to be checked.\r\n * @returns An array containing the input item. If the input is already an array, it's returned without modification.\r\n */\r\nexport const ensureIsArray = (item: unknown) => {\r\n  return Array.isArray(item) ? item : [item]\r\n}\r\n\r\n/**\r\n * Extracts the \"dependencies\" / \"input selectors\" from the arguments of `createSelector`.\r\n *\r\n * @param createSelectorArgs - Arguments passed to `createSelector` as an array.\r\n * @returns An array of \"input selectors\" / \"dependencies\".\r\n * @throws A `TypeError` if any of the input selectors is not function.\r\n */\r\nexport function getDependencies(createSelectorArgs: unknown[]) {\r\n  const dependencies = Array.isArray(createSelectorArgs[0])\r\n    ? createSelectorArgs[0]\r\n    : createSelectorArgs\r\n\r\n  assertIsArrayOfFunctions<Selector>(\r\n    dependencies,\r\n    `createSelector expects all input-selectors to be functions, but received the following types: `\r\n  )\r\n\r\n  return dependencies as SelectorArray\r\n}\r\n\r\n/**\r\n * Runs each input selector and returns their collective results as an array.\r\n *\r\n * @param dependencies - An array of \"dependencies\" or \"input selectors\".\r\n * @param inputSelectorArgs - An array of arguments being passed to the input selectors.\r\n * @returns An array of input selector results.\r\n */\r\nexport function collectInputSelectorResults(\r\n  dependencies: SelectorArray,\r\n  inputSelectorArgs: unknown[] | IArguments\r\n) {\r\n  const inputSelectorResults = []\r\n  const { length } = dependencies\r\n  for (let i = 0; i < length; i++) {\r\n    // @ts-ignore\r\n    // apply arguments instead of spreading and mutate a local list of params for performance.\r\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs))\r\n  }\r\n  return inputSelectorResults\r\n}\r\n\r\n/**\r\n * Retrieves execution information for development mode checks.\r\n *\r\n * @param devModeChecks - Custom Settings for development mode checks. These settings will override the global defaults.\r\n * @param firstRun - Indicates whether it is the first time the selector has run.\r\n * @returns  An object containing the execution information for each development mode check.\r\n */\r\nexport const getDevModeChecksExecutionInfo = (\r\n  firstRun: boolean,\r\n  devModeChecks: Partial<DevModeChecks>\r\n) => {\r\n  const { identityFunctionCheck, inputStabilityCheck } = {\r\n    ...globalDevModeChecks,\r\n    ...devModeChecks\r\n  }\r\n  return {\r\n    identityFunctionCheck: {\r\n      shouldRun:\r\n        identityFunctionCheck === 'always' ||\r\n        (identityFunctionCheck === 'once' && firstRun),\r\n      run: runIdentityFunctionCheck\r\n    },\r\n    inputStabilityCheck: {\r\n      shouldRun:\r\n        inputStabilityCheck === 'always' ||\r\n        (inputStabilityCheck === 'once' && firstRun),\r\n      run: runInputStabilityCheck\r\n    }\r\n  } satisfies DevModeChecksExecutionInfo\r\n}\r\n","// Original source:\r\n// - https://github.com/simonihmig/tracked-redux/blob/master/packages/tracked-redux/src/-private/proxy.ts\r\n\r\nimport type { Node, Tag } from './tracking'\r\nimport {\r\n  consumeCollection,\r\n  consumeTag,\r\n  createTag,\r\n  dirtyCollection,\r\n  dirtyTag\r\n} from './tracking'\r\n\r\nexport const REDUX_PROXY_LABEL = Symbol()\r\n\r\nlet nextId = 0\r\n\r\nconst proto = Object.getPrototypeOf({})\r\n\r\nclass ObjectTreeNode<T extends Record<string, unknown>> implements Node<T> {\r\n  proxy: T = new Proxy(this, objectProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {} as Record<string, Tag>\r\n  children = {} as Record<string, Node>\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst objectProxyHandler = {\r\n  get(node: Node, key: string | symbol): unknown {\r\n    function calculateResult() {\r\n      const { value } = node\r\n\r\n      const childValue = Reflect.get(value, key)\r\n\r\n      if (typeof key === 'symbol') {\r\n        return childValue\r\n      }\r\n\r\n      if (key in proto) {\r\n        return childValue\r\n      }\r\n\r\n      if (typeof childValue === 'object' && childValue !== null) {\r\n        let childNode = node.children[key]\r\n\r\n        if (childNode === undefined) {\r\n          childNode = node.children[key] = createNode(childValue)\r\n        }\r\n\r\n        if (childNode.tag) {\r\n          consumeTag(childNode.tag)\r\n        }\r\n\r\n        return childNode.proxy\r\n      } else {\r\n        let tag = node.tags[key]\r\n\r\n        if (tag === undefined) {\r\n          tag = node.tags[key] = createTag()\r\n          tag.value = childValue\r\n        }\r\n\r\n        consumeTag(tag)\r\n\r\n        return childValue\r\n      }\r\n    }\r\n    const res = calculateResult()\r\n    return res\r\n  },\r\n\r\n  ownKeys(node: Node): ArrayLike<string | symbol> {\r\n    consumeCollection(node)\r\n    return Reflect.ownKeys(node.value)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    node: Node,\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return Reflect.getOwnPropertyDescriptor(node.value, prop)\r\n  },\r\n\r\n  has(node: Node, prop: string | symbol): boolean {\r\n    return Reflect.has(node.value, prop)\r\n  }\r\n}\r\n\r\nclass ArrayTreeNode<T extends Array<unknown>> implements Node<T> {\r\n  proxy: T = new Proxy([this], arrayProxyHandler) as unknown as T\r\n  tag = createTag()\r\n  tags = {}\r\n  children = {}\r\n  collectionTag = null\r\n  id = nextId++\r\n\r\n  constructor(public value: T) {\r\n    this.value = value\r\n    this.tag.value = value\r\n  }\r\n}\r\n\r\nconst arrayProxyHandler = {\r\n  get([node]: [Node], key: string | symbol): unknown {\r\n    if (key === 'length') {\r\n      consumeCollection(node)\r\n    }\r\n\r\n    return objectProxyHandler.get(node, key)\r\n  },\r\n\r\n  ownKeys([node]: [Node]): ArrayLike<string | symbol> {\r\n    return objectProxyHandler.ownKeys(node)\r\n  },\r\n\r\n  getOwnPropertyDescriptor(\r\n    [node]: [Node],\r\n    prop: string | symbol\r\n  ): PropertyDescriptor | undefined {\r\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop)\r\n  },\r\n\r\n  has([node]: [Node], prop: string | symbol): boolean {\r\n    return objectProxyHandler.has(node, prop)\r\n  }\r\n}\r\n\r\nexport function createNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  value: T\r\n): Node<T> {\r\n  if (Array.isArray(value)) {\r\n    return new ArrayTreeNode(value)\r\n  }\r\n\r\n  return new ObjectTreeNode(value) as Node<T>\r\n}\r\n\r\nconst keysMap = new WeakMap<\r\n  Array<unknown> | Record<string, unknown>,\r\n  Set<string>\r\n>()\r\n\r\nexport function updateNode<T extends Array<unknown> | Record<string, unknown>>(\r\n  node: Node<T>,\r\n  newValue: T\r\n): void {\r\n  const { value, tags, children } = node\r\n\r\n  node.value = newValue\r\n\r\n  if (\r\n    Array.isArray(value) &&\r\n    Array.isArray(newValue) &&\r\n    value.length !== newValue.length\r\n  ) {\r\n    dirtyCollection(node)\r\n  } else {\r\n    if (value !== newValue) {\r\n      let oldKeysSize = 0\r\n      let newKeysSize = 0\r\n      let anyKeysAdded = false\r\n\r\n      for (const _key in value) {\r\n        oldKeysSize++\r\n      }\r\n\r\n      for (const key in newValue) {\r\n        newKeysSize++\r\n        if (!(key in value)) {\r\n          anyKeysAdded = true\r\n          break\r\n        }\r\n      }\r\n\r\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize\r\n\r\n      if (isDifferent) {\r\n        dirtyCollection(node)\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in tags) {\r\n    const childValue = (value as Record<string, unknown>)[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    if (childValue !== newChildValue) {\r\n      dirtyCollection(node)\r\n      dirtyTag(tags[key], newChildValue)\r\n    }\r\n\r\n    if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      delete tags[key]\r\n    }\r\n  }\r\n\r\n  for (const key in children) {\r\n    const childNode = children[key]\r\n    const newChildValue = (newValue as Record<string, unknown>)[key]\r\n\r\n    const childValue = childNode.value\r\n\r\n    if (childValue === newChildValue) {\r\n      continue\r\n    } else if (typeof newChildValue === 'object' && newChildValue !== null) {\r\n      updateNode(childNode, newChildValue as Record<string, unknown>)\r\n    } else {\r\n      deleteNode(childNode)\r\n      delete children[key]\r\n    }\r\n  }\r\n}\r\n\r\nfunction deleteNode(node: Node): void {\r\n  if (node.tag) {\r\n    dirtyTag(node.tag, null)\r\n  }\r\n  dirtyCollection(node)\r\n  for (const key in node.tags) {\r\n    dirtyTag(node.tags[key], null)\r\n  }\r\n  for (const key in node.children) {\r\n    deleteNode(node.children[key])\r\n  }\r\n}\r\n","import type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nimport type { NOT_FOUND_TYPE } from './utils'\r\nimport { NOT_FOUND } from './utils'\r\n\r\n// Cache implementation based on Erik Rasmussen's `lru-memoize`:\r\n// https://github.com/erikras/lru-memoize\r\n\r\ninterface Entry {\r\n  key: unknown\r\n  value: unknown\r\n}\r\n\r\ninterface Cache {\r\n  get(key: unknown): unknown | NOT_FOUND_TYPE\r\n  put(key: unknown, value: unknown): void\r\n  getEntries(): Entry[]\r\n  clear(): void\r\n}\r\n\r\nfunction createSingletonCache(equals: EqualityFn): Cache {\r\n  let entry: Entry | undefined\r\n  return {\r\n    get(key: unknown) {\r\n      if (entry && equals(entry.key, key)) {\r\n        return entry.value\r\n      }\r\n\r\n      return NOT_FOUND\r\n    },\r\n\r\n    put(key: unknown, value: unknown) {\r\n      entry = { key, value }\r\n    },\r\n\r\n    getEntries() {\r\n      return entry ? [entry] : []\r\n    },\r\n\r\n    clear() {\r\n      entry = undefined\r\n    }\r\n  }\r\n}\r\n\r\nfunction createLruCache(maxSize: number, equals: EqualityFn): Cache {\r\n  let entries: Entry[] = []\r\n\r\n  function get(key: unknown) {\r\n    const cacheIndex = entries.findIndex(entry => equals(key, entry.key))\r\n\r\n    // We found a cached entry\r\n    if (cacheIndex > -1) {\r\n      const entry = entries[cacheIndex]\r\n\r\n      // Cached entry not at top of cache, move it to the top\r\n      if (cacheIndex > 0) {\r\n        entries.splice(cacheIndex, 1)\r\n        entries.unshift(entry)\r\n      }\r\n\r\n      return entry.value\r\n    }\r\n\r\n    // No entry found in cache, return sentinel\r\n    return NOT_FOUND\r\n  }\r\n\r\n  function put(key: unknown, value: unknown) {\r\n    if (get(key) === NOT_FOUND) {\r\n      // TODO Is unshift slow?\r\n      entries.unshift({ key, value })\r\n      if (entries.length > maxSize) {\r\n        entries.pop()\r\n      }\r\n    }\r\n  }\r\n\r\n  function getEntries() {\r\n    return entries\r\n  }\r\n\r\n  function clear() {\r\n    entries = []\r\n  }\r\n\r\n  return { get, put, getEntries, clear }\r\n}\r\n\r\n/**\r\n * Runs a simple reference equality check.\r\n * What {@linkcode lruMemoize lruMemoize} uses by default.\r\n *\r\n * **Note**: This function was previously known as `defaultEqualityCheck`.\r\n *\r\n * @public\r\n */\r\nexport const referenceEqualityCheck: EqualityFn = (a, b) => a === b\r\n\r\nexport function createCacheKeyComparator(equalityCheck: EqualityFn) {\r\n  return function areArgumentsShallowlyEqual(\r\n    prev: unknown[] | IArguments | null,\r\n    next: unknown[] | IArguments | null\r\n  ): boolean {\r\n    if (prev === null || next === null || prev.length !== next.length) {\r\n      return false\r\n    }\r\n\r\n    // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n    const { length } = prev\r\n    for (let i = 0; i < length; i++) {\r\n      if (!equalityCheck(prev[i], next[i])) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\n/**\r\n * Options for configuring the behavior of a function memoized with\r\n * LRU (Least Recently Used) caching.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @public\r\n */\r\nexport interface LruMemoizeOptions<Result = any> {\r\n  /**\r\n   * Function used to compare the individual arguments of the\r\n   * provided calculation function.\r\n   *\r\n   * @default referenceEqualityCheck\r\n   */\r\n  equalityCheck?: EqualityFn\r\n\r\n  /**\r\n   * If provided, used to compare a newly generated output value against\r\n   * previous values in the cache. If a match is found,\r\n   * the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes\r\n   * a recalculation due to changed references, but the output is still\r\n   * effectively the same.\r\n   *\r\n   * @since 4.1.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n\r\n  /**\r\n   * The maximum size of the cache used by the selector.\r\n   * A size greater than 1 means the selector will use an\r\n   * LRU (Least Recently Used) cache, allowing for the caching of multiple\r\n   * results based on different sets of arguments.\r\n   *\r\n   * @default 1\r\n   */\r\n  maxSize?: number\r\n}\r\n\r\n/**\r\n * Creates a memoized version of a function with an optional\r\n * LRU (Least Recently Used) cache. The memoized function uses a cache to\r\n * store computed values. Depending on the `maxSize` option, it will use\r\n * either a singleton cache (for a single entry) or an\r\n * LRU cache (for multiple entries).\r\n *\r\n * **Note**: This function was previously known as `defaultMemoize`.\r\n *\r\n * @param func - The function to be memoized.\r\n * @param equalityCheckOrOptions - Either an equality check function or an options object.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/lruMemoize `lruMemoize`}\r\n *\r\n * @public\r\n */\r\nexport function lruMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  equalityCheckOrOptions?: EqualityFn | LruMemoizeOptions<ReturnType<Func>>\r\n) {\r\n  const providedOptions =\r\n    typeof equalityCheckOrOptions === 'object'\r\n      ? equalityCheckOrOptions\r\n      : { equalityCheck: equalityCheckOrOptions }\r\n\r\n  const {\r\n    equalityCheck = referenceEqualityCheck,\r\n    maxSize = 1,\r\n    resultEqualityCheck\r\n  } = providedOptions\r\n\r\n  const comparator = createCacheKeyComparator(equalityCheck)\r\n\r\n  let resultsCount = 0\r\n\r\n  const cache =\r\n    maxSize <= 1\r\n      ? createSingletonCache(comparator)\r\n      : createLruCache(maxSize, comparator)\r\n\r\n  function memoized() {\r\n    let value = cache.get(arguments) as ReturnType<Func>\r\n    if (value === NOT_FOUND) {\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      value = func.apply(null, arguments) as ReturnType<Func>\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const entries = cache.getEntries()\r\n        const matchingEntry = entries.find(entry =>\r\n          resultEqualityCheck(entry.value as ReturnType<Func>, value)\r\n        )\r\n\r\n        if (matchingEntry) {\r\n          value = matchingEntry.value as ReturnType<Func>\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n      }\r\n\r\n      cache.put(arguments, value)\r\n    }\r\n    return value\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    cache.clear()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","// Original source:\r\n// - https://github.com/facebook/react/blob/0b974418c9a56f6c560298560265dcf4b65784bc/packages/react/src/ReactCache.js\r\n\r\nimport type {\r\n  AnyFunction,\r\n  DefaultMemoizeFields,\r\n  EqualityFn,\r\n  Simplify\r\n} from './types'\r\n\r\nclass StrongRef<T> {\r\n  constructor(private value: T) {}\r\n  deref() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nconst Ref =\r\n  typeof WeakRef !== 'undefined'\r\n    ? WeakRef\r\n    : (StrongRef as unknown as typeof WeakRef)\r\n\r\nconst UNTERMINATED = 0\r\nconst TERMINATED = 1\r\n\r\ninterface UnterminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 0\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: void\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular Map where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ninterface TerminatedCacheNode<T> {\r\n  /**\r\n   * Status, represents whether the cached computation returned a value or threw an error.\r\n   */\r\n  s: 1\r\n  /**\r\n   * Value, either the cached result or an error, depending on status.\r\n   */\r\n  v: T\r\n  /**\r\n   * Object cache, a `WeakMap` where non-primitive arguments are stored.\r\n   */\r\n  o: null | WeakMap<Function | Object, CacheNode<T>>\r\n  /**\r\n   * Primitive cache, a regular `Map` where primitive arguments are stored.\r\n   */\r\n  p: null | Map<string | number | null | void | symbol | boolean, CacheNode<T>>\r\n}\r\n\r\ntype CacheNode<T> = TerminatedCacheNode<T> | UnterminatedCacheNode<T>\r\n\r\nfunction createCacheNode<T>(): CacheNode<T> {\r\n  return {\r\n    s: UNTERMINATED,\r\n    v: undefined,\r\n    o: null,\r\n    p: null\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration options for a memoization function utilizing `WeakMap` for\r\n * its caching mechanism.\r\n *\r\n * @template Result - The type of the return value of the memoized function.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport interface WeakMapMemoizeOptions<Result = any> {\r\n  /**\r\n   * If provided, used to compare a newly generated output value against previous values in the cache.\r\n   * If a match is found, the old value is returned. This addresses the common\r\n   * ```ts\r\n   * todos.map(todo => todo.id)\r\n   * ```\r\n   * use case, where an update to another field in the original data causes a recalculation\r\n   * due to changed references, but the output is still effectively the same.\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  resultEqualityCheck?: EqualityFn<Result>\r\n}\r\n\r\n/**\r\n * Creates a tree of `WeakMap`-based cache nodes based on the identity of the\r\n * arguments it's been called with (in this case, the extracted values from your input selectors).\r\n * This allows `weakMapMemoize` to have an effectively infinite cache size.\r\n * Cache results will be kept in memory as long as references to the arguments still exist,\r\n * and then cleared out as the arguments are garbage-collected.\r\n *\r\n * __Design Tradeoffs for `weakMapMemoize`:__\r\n * - Pros:\r\n *   - It has an effectively infinite cache size, but you have no control over\r\n *   how long values are kept in cache as it's based on garbage collection and `WeakMap`s.\r\n * - Cons:\r\n *   - There's currently no way to alter the argument comparisons.\r\n *   They're based on strict reference equality.\r\n *   - It's roughly the same speed as `lruMemoize`, although likely a fraction slower.\r\n *\r\n * __Use Cases for `weakMapMemoize`:__\r\n * - This memoizer is likely best used for cases where you need to call the\r\n * same selector instance with many different arguments, such as a single\r\n * selector instance that is used in a list item component and called with\r\n * item IDs like:\r\n *   ```ts\r\n *   useSelector(state => selectSomeData(state, props.category))\r\n *   ```\r\n * @param func - The function to be memoized.\r\n * @returns A memoized function with a `.clearCache()` method attached.\r\n *\r\n * @example\r\n * <caption>Using `createSelector`</caption>\r\n * ```ts\r\n * import { createSelector, weakMapMemoize } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   items: { id: number; category: string; name: string }[]\r\n * }\r\n *\r\n * const selectItemsByCategory = createSelector(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category),\r\n *   {\r\n *     memoize: weakMapMemoize,\r\n *     argsMemoize: weakMapMemoize\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @example\r\n * <caption>Using `createSelectorCreator`</caption>\r\n * ```ts\r\n * import { createSelectorCreator, weakMapMemoize } from 'reselect'\r\n *\r\n * const createSelectorWeakMap = createSelectorCreator({ memoize: weakMapMemoize, argsMemoize: weakMapMemoize })\r\n *\r\n * const selectItemsByCategory = createSelectorWeakMap(\r\n *   [\r\n *     (state: RootState) => state.items,\r\n *     (state: RootState, category: string) => category\r\n *   ],\r\n *   (items, category) => items.filter(item => item.category === category)\r\n * )\r\n * ```\r\n *\r\n * @template Func - The type of the function that is memoized.\r\n *\r\n * @see {@link https://reselect.js.org/api/weakMapMemoize `weakMapMemoize`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n * @experimental\r\n */\r\nexport function weakMapMemoize<Func extends AnyFunction>(\r\n  func: Func,\r\n  options: WeakMapMemoizeOptions<ReturnType<Func>> = {}\r\n) {\r\n  let fnNode = createCacheNode()\r\n  const { resultEqualityCheck } = options\r\n\r\n  let lastResult: WeakRef<object> | undefined\r\n\r\n  let resultsCount = 0\r\n\r\n  function memoized() {\r\n    let cacheNode = fnNode\r\n    const { length } = arguments\r\n    for (let i = 0, l = length; i < l; i++) {\r\n      const arg = arguments[i]\r\n      if (\r\n        typeof arg === 'function' ||\r\n        (typeof arg === 'object' && arg !== null)\r\n      ) {\r\n        // Objects go into a WeakMap\r\n        let objectCache = cacheNode.o\r\n        if (objectCache === null) {\r\n          cacheNode.o = objectCache = new WeakMap()\r\n        }\r\n        const objectNode = objectCache.get(arg)\r\n        if (objectNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          objectCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = objectNode\r\n        }\r\n      } else {\r\n        // Primitives go into a regular Map\r\n        let primitiveCache = cacheNode.p\r\n        if (primitiveCache === null) {\r\n          cacheNode.p = primitiveCache = new Map()\r\n        }\r\n        const primitiveNode = primitiveCache.get(arg)\r\n        if (primitiveNode === undefined) {\r\n          cacheNode = createCacheNode()\r\n          primitiveCache.set(arg, cacheNode)\r\n        } else {\r\n          cacheNode = primitiveNode\r\n        }\r\n      }\r\n    }\r\n\r\n    const terminatedNode = cacheNode as unknown as TerminatedCacheNode<any>\r\n\r\n    let result\r\n\r\n    if (cacheNode.s === TERMINATED) {\r\n      result = cacheNode.v\r\n    } else {\r\n      // Allow errors to propagate\r\n      result = func.apply(null, arguments as unknown as any[])\r\n      resultsCount++\r\n\r\n      if (resultEqualityCheck) {\r\n        const lastResultValue = lastResult?.deref?.() ?? lastResult\r\n\r\n        if (\r\n          lastResultValue != null &&\r\n          resultEqualityCheck(lastResultValue as ReturnType<Func>, result)\r\n        ) {\r\n          result = lastResultValue\r\n\r\n          resultsCount !== 0 && resultsCount--\r\n        }\r\n\r\n        const needsWeakRef =\r\n          (typeof result === 'object' && result !== null) ||\r\n          typeof result === 'function'\r\n\r\n        lastResult = needsWeakRef ? new Ref(result) : result\r\n      }\r\n    }\r\n\r\n    terminatedNode.s = TERMINATED\r\n\r\n    terminatedNode.v = result\r\n    return result\r\n  }\r\n\r\n  memoized.clearCache = () => {\r\n    fnNode = createCacheNode()\r\n    memoized.resetResultsCount()\r\n  }\r\n\r\n  memoized.resultsCount = () => resultsCount\r\n\r\n  memoized.resetResultsCount = () => {\r\n    resultsCount = 0\r\n  }\r\n\r\n  return memoized as Func & Simplify<DefaultMemoizeFields>\r\n}\r\n","import { weakMapMemoize } from './weakMapMemoize'\r\n\r\nimport type {\r\n  Combiner,\r\n  CreateSelectorOptions,\r\n  DropFirstParameter,\r\n  ExtractMemoizerFields,\r\n  GetParamsFromSelectors,\r\n  GetStateFromSelectors,\r\n  InterruptRecursion,\r\n  OutputSelector,\r\n  Selector,\r\n  SelectorArray,\r\n  SetRequired,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\n\r\nimport {\r\n  assertIsFunction,\r\n  collectInputSelectorResults,\r\n  ensureIsArray,\r\n  getDependencies,\r\n  getDevModeChecksExecutionInfo\r\n} from './utils'\r\n\r\n/**\r\n * An instance of `createSelector`, customized with a given memoize implementation.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template StateType - The type of state that the selectors created with this selector creator will operate on.\r\n *\r\n * @public\r\n */\r\nexport interface CreateSelectorFunction<\r\n  MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n  StateType = any\r\n> {\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments and a `combiner` function.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <InputSelectors extends SelectorArray<StateType>, Result>(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param createSelectorArgs - An arbitrary number of input selectors as separate inline arguments, a `combiner` function and an `options` object.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors as an array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: InputSelectors,\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions: Simplify<\r\n        CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n      >\r\n    ]\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a memoized selector function.\r\n   *\r\n   * @param inputSelectors - An array of input selectors.\r\n   * @param combiner - A function that Combines the input selectors and returns an output selector. Otherwise known as the result function.\r\n   * @param createSelectorOptions - An optional options object that allows for further customization per selector.\r\n   * @returns A memoized output selector.\r\n   *\r\n   * @template InputSelectors - The type of the input selectors array.\r\n   * @template Result - The return type of the `combiner` as well as the output selector.\r\n   * @template OverrideMemoizeFunction - The type of the optional `memoize` function that could be passed into the options object to override the original `memoize` function that was initially passed into `createSelectorCreator`.\r\n   * @template OverrideArgsMemoizeFunction - The type of the optional `argsMemoize` function that could be passed into the options object to override the original `argsMemoize` function that was initially passed into `createSelectorCreator`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector `createSelector`}\r\n   */\r\n  <\r\n    InputSelectors extends SelectorArray<StateType>,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    inputSelectors: [...InputSelectors],\r\n    combiner: Combiner<InputSelectors, Result>,\r\n    createSelectorOptions?: Simplify<\r\n      CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    >\r\n  ): OutputSelector<\r\n    InputSelectors,\r\n    Result,\r\n    OverrideMemoizeFunction,\r\n    OverrideArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of {@linkcode createSelector createSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every {@linkcode createSelector createSelector} call.\r\n   *\r\n   * @returns A pre-typed `createSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createAppSelector = createSelector.withTypes<RootState>()\r\n   *\r\n   * const selectTodoIds = createAppSelector(\r\n   *   [\r\n   *     // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *     state => state.todos\r\n   *   ],\r\n   *   todos => todos.map(({ id }) => id)\r\n   * )\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all selectors created with this selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createselector#defining-a-pre-typed-createselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <OverrideStateType extends StateType>() => CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction,\r\n    OverrideStateType\r\n  >\r\n}\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param options - An options object containing the `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). It also provides additional options for customizing memoization. While the `memoize` property is mandatory, the rest are optional.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator({\r\n *   memoize: customMemoize, // Function to be used to memoize `resultFunc`\r\n *   memoizeOptions: [memoizeOption1, memoizeOption2], // Options passed to `customMemoize` as the second argument onwards\r\n *   argsMemoize: customArgsMemoize, // Function to be used to memoize the selector's arguments\r\n *   argsMemoizeOptions: [argsMemoizeOption1, argsMemoizeOption2] // Options passed to `customArgsMemoize` as the second argument onwards\r\n * })\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n *\r\n * customSelector(\r\n *   ...selectorArgs // Will be memoized by `customArgsMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-options-since-500 `createSelectorCreator`}\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n>(\r\n  options: Simplify<\r\n    SetRequired<\r\n      CreateSelectorOptions<\r\n        typeof weakMapMemoize,\r\n        typeof weakMapMemoize,\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >,\r\n      'memoize'\r\n    >\r\n  >\r\n): CreateSelectorFunction<MemoizeFunction, ArgsMemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization function\r\n * and options for customizing memoization behavior.\r\n *\r\n * @param memoize - The `memoize` function responsible for memoizing the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @example\r\n * ```ts\r\n * const customCreateSelector = createSelectorCreator(customMemoize, // Function to be used to memoize `resultFunc`\r\n *   option1, // Will be passed as second argument to `customMemoize`\r\n *   option2, // Will be passed as third argument to `customMemoize`\r\n *   option3 // Will be passed as fourth argument to `customMemoize`\r\n * )\r\n *\r\n * const customSelector = customCreateSelector(\r\n *   [inputSelector1, inputSelector2],\r\n *   resultFunc // `resultFunc` will be passed as the first argument to `customMemoize`\r\n * )\r\n * ```\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelectorCreator#using-memoize-and-memoizeoptions `createSelectorCreator`}\r\n *\r\n * @public\r\n */\r\nexport function createSelectorCreator<MemoizeFunction extends UnknownMemoizer>(\r\n  memoize: MemoizeFunction,\r\n  ...memoizeOptionsFromArgs: DropFirstParameter<MemoizeFunction>\r\n): CreateSelectorFunction<MemoizeFunction>\r\n\r\n/**\r\n * Creates a selector creator function with the specified memoization\r\n * function and options for customizing memoization behavior.\r\n *\r\n * @param memoizeOrOptions - Either A `memoize` function or an `options` object containing the `memoize` function.\r\n * @param memoizeOptionsFromArgs - Optional configuration options for the memoization function. These options are then passed to the memoize function as the second argument onwards.\r\n * @returns A customized `createSelector` function.\r\n *\r\n * @template MemoizeFunction - The type of the memoize function that is used to memoize the `resultFunc` inside `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`).\r\n * @template ArgsMemoizeFunction - The type of the optional memoize function that is used to memoize the arguments passed into the output selector generated by `createSelector` (e.g., `lruMemoize` or `weakMapMemoize`). If none is explicitly provided, `weakMapMemoize` will be used.\r\n * @template MemoizeOrOptions - The type of the first argument. It can either be a `memoize` function or an `options` object containing the `memoize` function.\r\n */\r\nexport function createSelectorCreator<\r\n  MemoizeFunction extends UnknownMemoizer,\r\n  ArgsMemoizeFunction extends UnknownMemoizer,\r\n  MemoizeOrOptions extends\r\n    | MemoizeFunction\r\n    | SetRequired<\r\n        CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n        'memoize'\r\n      >\r\n>(\r\n  memoizeOrOptions: MemoizeOrOptions,\r\n  ...memoizeOptionsFromArgs: MemoizeOrOptions extends SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  >\r\n    ? never\r\n    : DropFirstParameter<MemoizeFunction>\r\n) {\r\n  /** options initially passed into `createSelectorCreator`. */\r\n  const createSelectorCreatorOptions: SetRequired<\r\n    CreateSelectorOptions<MemoizeFunction, ArgsMemoizeFunction>,\r\n    'memoize'\r\n  > = typeof memoizeOrOptions === 'function'\r\n    ? {\r\n        memoize: memoizeOrOptions as MemoizeFunction,\r\n        memoizeOptions: memoizeOptionsFromArgs\r\n      }\r\n    : memoizeOrOptions\r\n\r\n  const createSelector = <\r\n    InputSelectors extends SelectorArray,\r\n    Result,\r\n    OverrideMemoizeFunction extends UnknownMemoizer = MemoizeFunction,\r\n    OverrideArgsMemoizeFunction extends UnknownMemoizer = ArgsMemoizeFunction\r\n  >(\r\n    ...createSelectorArgs: [\r\n      ...inputSelectors: [...InputSelectors],\r\n      combiner: Combiner<InputSelectors, Result>,\r\n      createSelectorOptions?: CreateSelectorOptions<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction,\r\n        OverrideMemoizeFunction,\r\n        OverrideArgsMemoizeFunction\r\n      >\r\n    ]\r\n  ) => {\r\n    let recomputations = 0\r\n    let dependencyRecomputations = 0\r\n    let lastResult: Result\r\n\r\n    // Due to the intricacies of rest params, we can't do an optional arg after `...createSelectorArgs`.\r\n    // So, start by declaring the default value here.\r\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\r\n    let directlyPassedOptions: CreateSelectorOptions<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    > = {}\r\n\r\n    // Normally, the result func or \"combiner\" is the last arg\r\n    let resultFunc = createSelectorArgs.pop() as\r\n      | Combiner<InputSelectors, Result>\r\n      | CreateSelectorOptions<\r\n          MemoizeFunction,\r\n          ArgsMemoizeFunction,\r\n          OverrideMemoizeFunction,\r\n          OverrideArgsMemoizeFunction\r\n        >\r\n\r\n    // If the result func is actually an _object_, assume it's our options object\r\n    if (typeof resultFunc === 'object') {\r\n      directlyPassedOptions = resultFunc\r\n      // and pop the real result func off\r\n      resultFunc = createSelectorArgs.pop() as Combiner<InputSelectors, Result>\r\n    }\r\n\r\n    assertIsFunction(\r\n      resultFunc,\r\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\r\n    )\r\n\r\n    // Determine which set of options we're using. Prefer options passed directly,\r\n    // but fall back to options given to `createSelectorCreator`.\r\n    const combinedOptions = {\r\n      ...createSelectorCreatorOptions,\r\n      ...directlyPassedOptions\r\n    }\r\n\r\n    const {\r\n      memoize,\r\n      memoizeOptions = [],\r\n      argsMemoize = weakMapMemoize,\r\n      argsMemoizeOptions = [],\r\n      devModeChecks = {}\r\n    } = combinedOptions\r\n\r\n    // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\r\n    // is an array. In most libs I've looked at, it's an equality function or options object.\r\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\r\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\r\n    // we wrap it in an array so we can apply it.\r\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions)\r\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions)\r\n    const dependencies = getDependencies(createSelectorArgs) as InputSelectors\r\n\r\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\r\n      recomputations++\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      return (resultFunc as Combiner<InputSelectors, Result>).apply(\r\n        null,\r\n        arguments as unknown as Parameters<Combiner<InputSelectors, Result>>\r\n      )\r\n    }, ...finalMemoizeOptions) as Combiner<InputSelectors, Result> &\r\n      ExtractMemoizerFields<OverrideMemoizeFunction>\r\n\r\n    let firstRun = true\r\n\r\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\r\n    const selector = argsMemoize(function dependenciesChecker() {\r\n      dependencyRecomputations++\r\n      /** Return values of input selectors which the `resultFunc` takes as arguments. */\r\n      const inputSelectorResults = collectInputSelectorResults(\r\n        dependencies,\r\n        arguments\r\n      )\r\n\r\n      // apply arguments instead of spreading for performance.\r\n      // @ts-ignore\r\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults)\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        const { identityFunctionCheck, inputStabilityCheck } =\r\n          getDevModeChecksExecutionInfo(firstRun, devModeChecks)\r\n        if (identityFunctionCheck.shouldRun) {\r\n          identityFunctionCheck.run(\r\n            resultFunc as Combiner<InputSelectors, Result>,\r\n            inputSelectorResults,\r\n            lastResult\r\n          )\r\n        }\r\n\r\n        if (inputStabilityCheck.shouldRun) {\r\n          // make a second copy of the params, to check if we got the same results\r\n          const inputSelectorResultsCopy = collectInputSelectorResults(\r\n            dependencies,\r\n            arguments\r\n          )\r\n\r\n          inputStabilityCheck.run(\r\n            { inputSelectorResults, inputSelectorResultsCopy },\r\n            { memoize, memoizeOptions: finalMemoizeOptions },\r\n            arguments\r\n          )\r\n        }\r\n\r\n        if (firstRun) firstRun = false\r\n      }\r\n\r\n      return lastResult\r\n    }, ...finalArgsMemoizeOptions) as unknown as Selector<\r\n      GetStateFromSelectors<InputSelectors>,\r\n      Result,\r\n      GetParamsFromSelectors<InputSelectors>\r\n    > &\r\n      ExtractMemoizerFields<OverrideArgsMemoizeFunction>\r\n\r\n    return Object.assign(selector, {\r\n      resultFunc,\r\n      memoizedResultFunc,\r\n      dependencies,\r\n      dependencyRecomputations: () => dependencyRecomputations,\r\n      resetDependencyRecomputations: () => {\r\n        dependencyRecomputations = 0\r\n      },\r\n      lastResult: () => lastResult,\r\n      recomputations: () => recomputations,\r\n      resetRecomputations: () => {\r\n        recomputations = 0\r\n      },\r\n      memoize,\r\n      argsMemoize\r\n    }) as OutputSelector<\r\n      InputSelectors,\r\n      Result,\r\n      OverrideMemoizeFunction,\r\n      OverrideArgsMemoizeFunction\r\n    >\r\n  }\r\n\r\n  Object.assign(createSelector, {\r\n    withTypes: () => createSelector\r\n  })\r\n\r\n  return createSelector as CreateSelectorFunction<\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  >\r\n}\r\n\r\n/**\r\n * Accepts one or more \"input selectors\" (either as separate arguments or a single array),\r\n * a single \"result function\" / \"combiner\", and an optional options object, and\r\n * generates a memoized selector function.\r\n *\r\n * @see {@link https://reselect.js.org/api/createSelector `createSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createSelector =\r\n  /* #__PURE__ */ createSelectorCreator(weakMapMemoize)\r\n","import { createSelector } from './createSelectorCreator'\r\n\r\nimport type { CreateSelectorFunction } from './createSelectorCreator'\r\nimport type {\r\n  InterruptRecursion,\r\n  ObjectValuesToTuple,\r\n  OutputSelector,\r\n  Selector,\r\n  Simplify,\r\n  UnknownMemoizer\r\n} from './types'\r\nimport { assertIsObject } from './utils'\r\nimport type { weakMapMemoize } from './weakMapMemoize'\r\n\r\n/**\r\n * Represents a mapping of selectors to their return types.\r\n *\r\n * @template TObject - An object type where each property is a selector function.\r\n *\r\n * @public\r\n */\r\nexport type SelectorResultsMap<TObject extends SelectorsObject> = {\r\n  [Key in keyof TObject]: ReturnType<TObject[Key]>\r\n}\r\n\r\n/**\r\n * Represents a mapping of selectors for each key in a given root state.\r\n *\r\n * This type is a utility that takes a root state object type and\r\n * generates a corresponding set of selectors. Each selector is associated\r\n * with a key in the root state, allowing for the selection\r\n * of specific parts of the state.\r\n *\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type RootStateSelectors<RootState = any> = {\r\n  [Key in keyof RootState]: Selector<RootState, RootState[Key], []>\r\n}\r\n\r\n/**\r\n * @deprecated Please use {@linkcode StructuredSelectorCreator.withTypes createStructuredSelector.withTypes<RootState>()} instead. This type will be removed in the future.\r\n * @template RootState - The type of the root state object.\r\n *\r\n * @since 5.0.0\r\n * @public\r\n */\r\nexport type TypedStructuredSelectorCreator<RootState = any> =\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends RootStateSelectors<RootState> = RootStateSelectors<RootState>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ) => OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n/**\r\n * Represents an object where each property is a selector function.\r\n *\r\n * @template StateType - The type of state that all the selectors operate on.\r\n *\r\n * @public\r\n */\r\nexport type SelectorsObject<StateType = any> = Record<\r\n  string,\r\n  Selector<StateType>\r\n>\r\n\r\n/**\r\n * It provides a way to create structured selectors.\r\n * The structured selector can take multiple input selectors\r\n * and map their output to an object with specific keys.\r\n *\r\n * @template StateType - The type of state that the structured selectors created with this structured selector creator will operate on.\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport interface StructuredSelectorCreator<StateType = any> {\r\n  /**\r\n   * A convenience function that simplifies returning an object\r\n   * made up of selector results.\r\n   *\r\n   * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n   * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n   * @returns A memoized structured selector.\r\n   *\r\n   * @example\r\n   * <caption>Modern Use Case</caption>\r\n   * ```ts\r\n   * import { createSelector, createStructuredSelector } from 'reselect'\r\n   *\r\n   * interface RootState {\r\n   *   todos: {\r\n   *     id: number\r\n   *     completed: boolean\r\n   *     title: string\r\n   *     description: string\r\n   *   }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * // This:\r\n   * const structuredSelector = createStructuredSelector(\r\n   *   {\r\n   *     todos: (state: RootState) => state.todos,\r\n   *     alerts: (state: RootState) => state.alerts,\r\n   *     todoById: (state: RootState, id: number) => state.todos[id]\r\n   *   },\r\n   *   createSelector\r\n   * )\r\n   *\r\n   * // Is essentially the same as this:\r\n   * const selector = createSelector(\r\n   *   [\r\n   *     (state: RootState) => state.todos,\r\n   *     (state: RootState) => state.alerts,\r\n   *     (state: RootState, id: number) => state.todos[id]\r\n   *   ],\r\n   *   (todos, alerts, todoById) => {\r\n   *     return {\r\n   *       todos,\r\n   *       alerts,\r\n   *       todoById\r\n   *     }\r\n   *   }\r\n   * )\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>In your component:</caption>\r\n   * ```tsx\r\n   * import type { RootState } from 'createStructuredSelector/modernUseCase'\r\n   * import { structuredSelector } from 'createStructuredSelector/modernUseCase'\r\n   * import type { FC } from 'react'\r\n   * import { useSelector } from 'react-redux'\r\n   *\r\n   * interface Props {\r\n   *   id: number\r\n   * }\r\n   *\r\n   * const MyComponent: FC<Props> = ({ id }) => {\r\n   *   const { todos, alerts, todoById } = useSelector((state: RootState) =>\r\n   *     structuredSelector(state, id)\r\n   *   )\r\n   *\r\n   *   return (\r\n   *     <div>\r\n   *       Next to do is:\r\n   *       <h2>{todoById.title}</h2>\r\n   *       <p>Description: {todoById.description}</p>\r\n   *       <ul>\r\n   *         <h3>All other to dos:</h3>\r\n   *         {todos.map(todo => (\r\n   *           <li key={todo.id}>{todo.title}</li>\r\n   *         ))}\r\n   *       </ul>\r\n   *     </div>\r\n   *   )\r\n   * }\r\n   * ```\r\n   *\r\n   * @example\r\n   * <caption>Simple Use Case</caption>\r\n   * ```ts\r\n   * const selectA = state => state.a\r\n   * const selectB = state => state.b\r\n   *\r\n   * // The result function in the following selector\r\n   * // is simply building an object from the input selectors\r\n   * const structuredSelector = createSelector(selectA, selectB, (a, b) => ({\r\n   *   a,\r\n   *   b\r\n   * }))\r\n   *\r\n   * const result = structuredSelector({ a: 1, b: 2 }) // will produce { x: 1, y: 2 }\r\n   * ```\r\n   *\r\n   * @template InputSelectorsObject - The shape of the input selectors object.\r\n   * @template MemoizeFunction - The type of the memoize function that is used to create the structured selector. It defaults to `weakMapMemoize`.\r\n   * @template ArgsMemoizeFunction - The type of the of the memoize function that is used to memoize the arguments passed into the generated structured selector. It defaults to `weakMapMemoize`.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n   */\r\n  <\r\n    InputSelectorsObject extends SelectorsObject<StateType>,\r\n    MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n    ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n  >(\r\n    inputSelectorsObject: InputSelectorsObject,\r\n    selectorCreator?: CreateSelectorFunction<\r\n      MemoizeFunction,\r\n      ArgsMemoizeFunction\r\n    >\r\n  ): OutputSelector<\r\n    ObjectValuesToTuple<InputSelectorsObject>,\r\n    Simplify<SelectorResultsMap<InputSelectorsObject>>,\r\n    MemoizeFunction,\r\n    ArgsMemoizeFunction\r\n  > &\r\n    InterruptRecursion\r\n\r\n  /**\r\n   * Creates a \"pre-typed\" version of\r\n   * {@linkcode createStructuredSelector createStructuredSelector}\r\n   * where the `state` type is predefined.\r\n   *\r\n   * This allows you to set the `state` type once, eliminating the need to\r\n   * specify it with every\r\n   * {@linkcode createStructuredSelector createStructuredSelector} call.\r\n   *\r\n   * @returns A pre-typed `createStructuredSelector` with the state type already defined.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * import { createStructuredSelector } from 'reselect'\r\n   *\r\n   * export interface RootState {\r\n   *   todos: { id: number; completed: boolean }[]\r\n   *   alerts: { id: number; read: boolean }[]\r\n   * }\r\n   *\r\n   * export const createStructuredAppSelector =\r\n   *   createStructuredSelector.withTypes<RootState>()\r\n   *\r\n   * const structuredAppSelector = createStructuredAppSelector({\r\n   *   // Type of `state` is set to `RootState`, no need to manually set the type\r\n   *   todos: state => state.todos,\r\n   *   alerts: state => state.alerts,\r\n   *   todoById: (state, id: number) => state.todos[id]\r\n   * })\r\n   *\r\n   * ```\r\n   * @template OverrideStateType - The specific type of state used by all structured selectors created with this structured selector creator.\r\n   *\r\n   * @see {@link https://reselect.js.org/api/createstructuredselector#defining-a-pre-typed-createstructuredselector `createSelector.withTypes`}\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  withTypes: <\r\n    OverrideStateType extends StateType\r\n  >() => StructuredSelectorCreator<OverrideStateType>\r\n}\r\n\r\n/**\r\n * A convenience function that simplifies returning an object\r\n * made up of selector results.\r\n *\r\n * @param inputSelectorsObject - A key value pair consisting of input selectors.\r\n * @param selectorCreator - A custom selector creator function. It defaults to `createSelector`.\r\n * @returns A memoized structured selector.\r\n *\r\n * @example\r\n * <caption>Modern Use Case</caption>\r\n * ```ts\r\n * import { createSelector, createStructuredSelector } from 'reselect'\r\n *\r\n * interface RootState {\r\n *   todos: {\r\n *     id: number\r\n *     completed: boolean\r\n *     title: string\r\n *     description: string\r\n *   }[]\r\n *   alerts: { id: number; read: boolean }[]\r\n * }\r\n *\r\n * // This:\r\n * const structuredSelector = createStructuredSelector(\r\n *   {\r\n *     todos: (state: RootState) => state.todos,\r\n *     alerts: (state: RootState) => state.alerts,\r\n *     todoById: (state: RootState, id: number) => state.todos[id]\r\n *   },\r\n *   createSelector\r\n * )\r\n *\r\n * // Is essentially the same as this:\r\n * const selector = createSelector(\r\n *   [\r\n *     (state: RootState) => state.todos,\r\n *     (state: RootState) => state.alerts,\r\n *     (state: RootState, id: number) => state.todos[id]\r\n *   ],\r\n *   (todos, alerts, todoById) => {\r\n *     return {\r\n *       todos,\r\n *       alerts,\r\n *       todoById\r\n *     }\r\n *   }\r\n * )\r\n * ```\r\n *\r\n * @see {@link https://reselect.js.org/api/createStructuredSelector `createStructuredSelector`}\r\n *\r\n * @public\r\n */\r\nexport const createStructuredSelector: StructuredSelectorCreator =\r\n  Object.assign(\r\n    <\r\n      InputSelectorsObject extends SelectorsObject,\r\n      MemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize,\r\n      ArgsMemoizeFunction extends UnknownMemoizer = typeof weakMapMemoize\r\n    >(\r\n      inputSelectorsObject: InputSelectorsObject,\r\n      selectorCreator: CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      > = createSelector as CreateSelectorFunction<\r\n        MemoizeFunction,\r\n        ArgsMemoizeFunction\r\n      >\r\n    ) => {\r\n      assertIsObject(\r\n        inputSelectorsObject,\r\n        'createStructuredSelector expects first argument to be an object ' +\r\n          `where each property is a selector, instead received a ${typeof inputSelectorsObject}`\r\n      )\r\n      const inputSelectorKeys = Object.keys(inputSelectorsObject)\r\n      const dependencies = inputSelectorKeys.map(\r\n        key => inputSelectorsObject[key]\r\n      )\r\n      const structuredSelector = selectorCreator(\r\n        dependencies,\r\n        (...inputSelectorResults: any[]) => {\r\n          return inputSelectorResults.reduce((composition, value, index) => {\r\n            composition[inputSelectorKeys[index]] = value\r\n            return composition\r\n          }, {})\r\n        }\r\n      )\r\n      return structuredSelector\r\n    },\r\n    { withTypes: () => createStructuredSelector }\r\n  ) as StructuredSelectorCreator\r\n"],"names":["indeterminate1Keyframe","indeterminate1Animation","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","theme","color","vars","palette","LinearProgress","mode","main","LinearProgressRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","position","overflow","display","height","zIndex","colorAdjust","variants","Object","entries","filter","map","style","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","marginTop","width","backgroundSize","backgroundPosition","backgroundImage","animation","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","transition","transformOrigin","LinearProgressBar2","bar2Indeterminate","bar2Buffer","inProps","ref","className","value","valueBuffer","other","classes","slots","bar1","bar2","useUtilityClasses","isRtl","rootProps","inlineStyles","undefined","Math","round","role","children","getLinearProgressUtilityClass","pulseKeyframe","waveKeyframe","pulseAnimation","waveAnimation","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","Skeleton","bg","text","primary","marginBottom","visibility","maxWidth","WebkitMaskImage","background","action","hover","component","Boolean","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","EventManager","constructor","this","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","delete","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","Store","create","_value","listeners","subscribe","fn","add","getSnapshot","update","forEach","l","Set","SYMBOL_API_PRIVATE","Symbol","globalId","_typeof","o","iterator","prototype","toPropertyKey","t","e","toPrimitive","call","r","TypeError","String","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","DataGridPremium","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","virtualScrollbarVerticalRef","virtualScrollbarHorizontalRef","columnHeadersContainerRef","useGridRefs","isFirstEffect","setState","useGridIsRtl","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","replace","includes","delimiter","some","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","row","bottomPinnedRowsIds","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","CSVBody","acc","getCellParams","serializeRow","trim","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","meta","paginationMeta","preferencePanelStateInitializer","preferencePanel","getDefaultCellValue","_excluded","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","containerSize","scrollPosition","elementSize","elementOffset","elementEnd","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","groupHeaderHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","areElementSizesEqual","b","ResizeObserver","globalThis","observe","unobserve","disconnect","rowsMetaStateInitializer","rowsMeta","heights","currentPageTotalHeight","positions","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","refs","useLazyRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","columnWidthDiff","newTotalWidth","setProperty","flex","element","div","finalWidth","getAttribute","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","getRootDimensions","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","minWidth","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","firstRowIndex","lastRowIndex","getCellValue","cellValue","valueGetter","rowSpanValueGetter","EMPTY_STATE","spannedCells","hiddenCells","hiddenCellOriginMap","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","visibleRows","rangeToProcess","resetState","processedRange","rowSpanning","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","unstable_rowSpanning","dataRowIdToModelLookup","columnsLookup","isFilteringPending","items","quickFilterValues","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","listViewColumn","unstable_listColumn","getListColumnWidth","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","listView","unstable_listView","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","rowSpanScanDirection","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","nonRowSpannedRowId","rowSpanHiddenCells","nextRowIndex","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","getColumnIndexFn","rowIndexBefore","shiftKey","groupingColDefField","match","getRowGroupingCriteriaFromGroupingField","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","applyAutoSelection","DataGrid","rowSelectionPropagation","descendants","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","addRow","removeRow","selectRows","ids","selectableIds","currentLookup","every","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","rowsLookup","selectionLookup","hasChanged","filterMode","isNonExistent","keepNonExistentRowsSelected","isAutoGenerated","childId","shouldReapplyPropagation","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","paginationMode","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","fromCharCode","keyCode","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","lastRowCount","timeout","getRowIdProp","throttledRowsChange","throttle","run","previousGroupsToFetch","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","previousCache","updateServerRows","groupKeys","setLoading","loadingPropBeforePartialUpdates","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","renderContext","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","useGridRowSpanning","useGridParamsApi","resetColSpan","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","shouldProcessEditCellProps","preProcessEditCellProps","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","processedProps","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","hasRootReference","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","direction","columnIndexToFocus","visibleColumns","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","lastFocusedRowId","lastFocusedRowIndex","nextRow","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","filterState","getFilterState","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","disableEval","filterResult","filterApi","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","densityApi","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","onPaginationMetaChange","paginationMetaApi","setPaginationMeta","newPaginationMeta","exportedPaginationMeta","restoredPaginationMeta","useGridPaginationMeta","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","rowCountState","previousPageSize","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","hasRowWithAutoHeight","isHeightMetaValid","gridPaginationSelector","processHeightEntry","baseRowHeight","entry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","autoHeight","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","unstable_getRowHeight","unstable_setLastMeasuredRowIndex","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","rowHasAutoHeight","getLastMeasuredRowIndex","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scrollTop","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","computedTotalHeight","boxSizing","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","virtualization","printExportApi","exportDataAsPrint","exportState","enabled","enabledForColumns","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnHeaderHeight","columnGroupHeaderHeight","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","newSize","parseFloat","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseBadge","baseCheckbox","baseDivider","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","columnHeaderSortIcon","GridColumnHeaderSortIcon","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","defaultSlots","useDataGridProps","themedProps","allProps","useThemeProps","startsWith","forwardedProps","groupForwardedProps","overrides","computeSlots","injectDefaultProps","configuration","hooks","useGridAriaAttributes","useGridPrivateApiContext","accessibleRowCount","headerGroupingMaxDepth","pinnedRowsCount","useGridRowAriaAttributes","selectedIdsLookup","ariaAttributes","ariaRowIndex","DataGridRaw","GridContextProvider","GridRoot","sx","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","estimatedRowCount","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","indeterminateCheckboxAction","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowPositionsDebounceMs","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","toLowerCase","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","sanitizedValue","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setMinutes","getMinutes","getTimezoneOffset","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","createContainsFilterFn","disableTrim","negate","trimmedValue","createEqualityFilterFn","collator","Intl","Collator","sensitivity","usage","isEqual","compare","createEmptyFilterFn","getGridStringOperators","filterItemValue","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderBottom","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","borderTop","getCellOffsetStyle","isLeftPinned","isRightPinned","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","isSiblingFocused","isLastUnpinned","GridColumnHeaderItem","filterItemsCounter","isLast","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","GridConfigurationContext","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","handleRef","useForkRef","viewportHeight","skeletonRowsCount","ceil","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","array","rowCells","isPinnedLeft","sectionIndex","pinnedStyle","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","empty","scrollbarWidth","GridScrollbarFillerCell","rowSkeleton","cells","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","noRowsVariant","rowsCount","activeVariant","noRowsLabel","GridPaginationRoot","maxHeight","flexGrow","selectLabel","breakpoints","up","input","defaultLabelDisplayedRows","to","count","estimated","computedProps","backIconButtonProps","disabled","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","showBottomBorder","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","useGridConfiguration","treeDepth","editing","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","propHandler","publishClick","rowReordering","heightEntry","rowStyle","minHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","leftCells","rightCells","middleColumnsLength","eventHandlers","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","Overlay","overlayProps","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","isCellRowSpanned","padding","border","cellStyle","activeElement","focusableElement","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","endAdornment","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","Memoized","skeletonProps","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onContextMenu","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","overlap","GridColumnHeaderTitleRoot","textOverflow","fontWeight","lineHeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","checkboxElement","rippleRef","handleKeyDown","isSelectable","checkboxPropsSelector","isIndeterminate","isChecked","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","handleSelectionChange","p","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","overlay","alignSelf","columnHeaderStyles","separatorIconDragStyles","rx","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedHoverOpacity","selectedBackground","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","transitions","duration","shorter","gap","borderBottomWidth","borderBottomStyle","marginLeft","marginRight","columnSeparatorOffset","touchAction","shortest","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","virtualScroller","gamma","f","overlayColor","rgb","removeOpacity","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","sanitizeFilterItemValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","_getTagProps","tagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","useGridOverlays","noRows","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","GridPanelAnchor","Element","GridMainContainer","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","rowsLength","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","offsetTop","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","GridVirtualScroller","overlaysProps","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","DATA_GRID_PROPS_DEFAULT_VALUES","getDataGridUtilityClass","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","isHeaderFilteringEnabled","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","topLevelRowCount","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridListColumnSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","defaultPageSize","getPageCount","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","getGridRowGroupSelectableDescendants","getCheckboxPropsSelector","autoSelectParents","rowSelectionLookup","selectableDescendantsCount","selectedDescendantsCount","isMultipleRowSelectionEnabled","findRowsToSelect","selectedRow","autoSelectDescendants","filteredRows","selectedDescendants","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","findRowsToDeselect","deselectedRow","allParents","getRowNodeParents","descendant","gridRowSpanningStateSelector","gridRowSpanningHiddenCellsSelector","gridRowSpanningSpannedCellsSelector","gridRowSpanningHiddenCellsOriginMapSelector","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutogeneratedRow","isAutogeneratedRowNode","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","computeRowsUpdates","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","rowHeightWarning","getRowHeightWarning","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","gridRenderContextColumnsSelector","isFirefox","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","fnRef","observer","useResizeObserver","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","verticalBuffer","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","createScrollCache","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","flexBasis","useRunOnce","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","isLastVisibleInSection","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","rowSpanHiddenCellOrigin","minSpannedRowIndex","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","unstable_setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","didInit","getVisibleRows","condition","didRun","GRID_TREE_DATA_GROUPING_FIELD","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","GRID_DETAIL_PANEL_TOGGLE_FIELD","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","reselectCreateSelector","memoize","memoizeOptions","maxSize","equalityCheck","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","clientHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","getFieldsFromGroupHeaderElem","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","altKey","isCopyShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","createRandomNumberGenerator","seed","imul","deepClone","obj","structuredClone","parse","eslintUseValue","fastObjectShallowCompare","aLength","bLength","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","location","propFullName","secret","getShim","ReactPropTypes","bigint","bool","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","exact","checkPropTypes","PropTypes","NOT_FOUND","ensureIsArray","getPrototypeOf","referenceEqualityCheck","lruMemoize","equalityCheckOrOptions","providedOptions","resultEqualityCheck","prev","next","createCacheKeyComparator","resultsCount","put","getEntries","createSingletonCache","cacheIndex","pop","createLruCache","memoized","arguments","matchingEntry","clearCache","resetResultsCount","Ref","WeakRef","deref","weakMapMemoize","fnNode","s","lastResult","cacheNode","arg","objectCache","objectNode","primitiveCache","primitiveNode","terminatedNode","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","createSelectorArgs","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","errorMessage","assertIsFunction","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","dependencies","itemTypes","assertIsArrayOfFunctions","getDependencies","memoizedResultFunc","inputSelectorResults","inputSelectorArgs","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createStructuredSelector","inputSelectorsObject","selectorCreator","assertIsObject","inputSelectorKeys","composition"],"sourceRoot":""}