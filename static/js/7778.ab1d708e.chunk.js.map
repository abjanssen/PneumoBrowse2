{"version":3,"file":"static/js/7778.ab1d708e.chunk.js","mappings":"0LAQA,MAAMA,GAAYC,E,SAAAA,KAAAA,CAAa,CAC7BC,cAAe,CACbC,WAAY,OACZC,OAAQ,OACRC,MAAO,EACPC,OAAQ,OACRC,OAAQ,UACRC,SAAU,WACVC,cAAe,UAYbC,GAAUC,EAAAA,EAAAA,WAAS,UAAiB,MACxCC,EAAK,OACLN,EAAM,iBACNO,EAAgB,iBAChBC,EAAgB,WAChBC,EAAU,gBACVC,EAAe,WACfC,IAUA,MAAM,kBAAEC,GAAsBN,GACxB,QAAEO,GAAYnB,IAEdoB,EAAIP,EAAiB,GAAK,EAC1BQ,EAAIJ,EAAaJ,EAAiB,GAAKE,GAAYO,KAAO,EAChE,OAAOJ,EACLK,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,SAAQ,CAACC,SAAU,MAClBF,EAAAA,cAACG,EAAAA,EAAW,CAACC,YAAa,CAAEP,IAAGC,MAC7BE,EAAAA,cAACP,EAAe,CAACJ,MAAOA,EAAOgB,QAASV,MAI5CK,EAAAA,cAAA,OACEM,UAAWV,EAAQjB,cACnB4B,MAAO,CACLC,KAAMjB,EAAiB,GACvBR,OAAQA,MAIZ,IACN,IAEA,I,wNC1DA,MAAM0B,EAAMC,GAAcA,EAAEC,eAAe,SAMrClB,EAAkBO,EAAAA,YACtB,UAA0B,MAAEX,EAAK,QAAEgB,GAAWO,GAC5C,MAAMC,EAAQR,EAAQS,IAAI,SACpBC,EAAMV,EAAQS,IAAI,OAClBE,EAAUX,EAAQS,IAAI,WACtBG,EAAQJ,IAAUE,EAAMN,EAAGI,GAAS,GAAGJ,EAAGI,OAAWJ,EAAGM,KACxDG,EAAUb,EAAQS,IAAI,WAGtBK,EAASd,EAAQS,IAAI,UACrBM,EAAMC,OAAOC,YAAYjC,EAAM6B,QAAQK,KAAIC,GAAO,CAACA,EAAIC,KAAMD,MAEnE,OACExB,EAAAA,cAAA,OAAKY,IAAKA,GACP,CAACI,EAASC,GAAOS,QAAOC,KAAOA,IAAGC,KAAK,KACxC5B,EAAAA,cAAA,WACCkB,EACClB,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAI,WAGRA,EAAAA,cAAA,aACGqB,OAAOQ,QAAQX,GAASK,KAAI,EAAEJ,EAAQW,KACrC9B,EAAAA,cAAA,MAAI+B,IAAKZ,GACPnB,EAAAA,cAAA,MAAIO,MAAO,CAAE3B,WAAYwC,EAAID,IAASa,QAAS,KAC/ChC,EAAAA,cAAA,UAAKmB,GACLnB,EAAAA,cAAA,UAAK8B,EAAKG,YAMlBjC,EAAAA,cAAA,YAAOmB,GAIf,IAiBF,GAZuB/B,EAAAA,EAAAA,WACpB8C,GAQQlC,EAAAA,cAACb,EAAOgD,EAAA,CAACzC,YAAU,EAACD,gBAAiBA,GAAqByC,K","sources":["../../../plugins/variants/src/Tooltip.tsx","../../../plugins/variants/src/shared/Tooltip.tsx"],"sourcesContent":["import React, { Suspense } from 'react'\n\nimport BaseTooltip from '@jbrowse/core/ui/BaseTooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n})\n\ntype Coord = [number, number]\n\n// React.forwardRef component for the tooltip, the ref is used for measuring\n// the size of the tooltip\nexport type TooltipContentsComponent = React.ForwardRefExoticComponent<\n  { feature: Feature; model: any } & React.RefAttributes<HTMLDivElement>\n>\n\nconst Tooltip = observer(function Tooltip({\n  model,\n  height,\n  clientMouseCoord,\n  offsetMouseCoord,\n  clientRect,\n  TooltipContents,\n  useClientY,\n}: {\n  model: { featureUnderMouse?: Feature }\n  useClientY?: boolean\n  height: number\n  clientMouseCoord: Coord\n  offsetMouseCoord: Coord\n  clientRect?: DOMRect\n  TooltipContents: TooltipContentsComponent\n}) {\n  const { featureUnderMouse } = model\n  const { classes } = useStyles()\n\n  const x = clientMouseCoord[0] + 5\n  const y = useClientY ? clientMouseCoord[1] : clientRect?.top || 0\n  return featureUnderMouse ? (\n    <>\n      <Suspense fallback={null}>\n        <BaseTooltip clientPoint={{ x, y }}>\n          <TooltipContents model={model} feature={featureUnderMouse} />\n        </BaseTooltip>\n      </Suspense>\n\n      <div\n        className={classes.hoverVertical}\n        style={{\n          left: offsetMouseCoord[0],\n          height: height,\n        }}\n      />\n    </>\n  ) : null\n})\n\nexport default Tooltip\n","import React from 'react'\n\nimport { observer } from 'mobx-react'\n\n// locals\nimport Tooltip from '../Tooltip'\n\nimport type { TooltipContentsComponent } from '../Tooltip'\nimport type { Source } from '../util'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst en = (n: number) => n.toLocaleString('en-US')\n\ninterface Props {\n  model: { sources: Source[] }\n  feature: Feature\n}\nconst TooltipContents = React.forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2({ model, feature }, ref) {\n    const start = feature.get('start')\n    const end = feature.get('end')\n    const refName = feature.get('refName')\n    const coord = start === end ? en(start) : `${en(start)}..${en(end)}`\n    const sources = feature.get('sources') as\n      | Record<string, { score: number }>\n      | undefined\n    const source = feature.get('source')\n    const obj = Object.fromEntries(model.sources.map(ent => [ent.name, ent]))\n\n    return (\n      <div ref={ref}>\n        {[refName, coord].filter(f => !!f).join(':')}\n        <br />\n        {sources ? (\n          <table>\n            <thead>\n              <tr>\n                <th>color</th>\n                <th>source</th>\n                <th>score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(sources).map(([source, data]) => (\n                <tr key={source}>\n                  <td style={{ background: obj[source]?.color }}> </td>\n                  <td>{source}</td>\n                  <td>{data.score}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <span>{source}</span>\n        )}\n      </div>\n    )\n  },\n)\n\ntype Coord = [number, number]\n\nconst VariantTooltip = observer(\n  (props: {\n    model: { featureUnderMouse: Feature; sources: Source[]; rowHeight: number }\n    height: number\n    offsetMouseCoord: Coord\n    clientMouseCoord: Coord\n    clientRect?: DOMRect\n    TooltipContents?: TooltipContentsComponent\n  }) => {\n    return <Tooltip useClientY TooltipContents={TooltipContents} {...props} />\n  },\n)\nexport default VariantTooltip\n"],"names":["useStyles","makeStyles","hoverVertical","background","border","width","height","cursor","position","pointerEvents","Tooltip","observer","model","clientMouseCoord","offsetMouseCoord","clientRect","TooltipContents","useClientY","featureUnderMouse","classes","x","y","top","React","Suspense","fallback","BaseTooltip","clientPoint","feature","className","style","left","en","n","toLocaleString","ref","start","get","end","refName","coord","sources","source","obj","Object","fromEntries","map","ent","name","filter","f","join","entries","data","key","color","score","props","_extends"],"sourceRoot":""}