{"version":3,"file":"static/js/6021.7ca5e0ef.chunk.js","mappings":"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","sources":["../../../plugins/wiggle/src/MultiLinearWiggleDisplay/components/Tooltip.tsx"],"sourcesContent":["import { forwardRef } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport Tooltip from '../../Tooltip'\nimport { toP } from '../../util'\n\nimport type { TooltipContentsComponent } from '../../Tooltip'\nimport type { Source } from '../../util'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst en = (n: number) => n.toLocaleString('en-US')\n\ninterface Props {\n  model: { sources: Source[] }\n  feature: Feature\n}\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2({ model, feature }, ref) {\n    const start = feature.get('start')\n    const end = feature.get('end')\n    const refName = feature.get('refName')\n    const coord = start === end ? en(start) : `${en(start)}..${en(end)}`\n    const sources = feature.get('sources') as\n      | Record<string, { score: number }>\n      | undefined\n    const source = feature.get('source')\n    const summary = feature.get('summary')\n    const obj = Object.fromEntries(model.sources.map(ent => [ent.name, ent]))\n\n    return (\n      <div ref={ref}>\n        {[refName, coord].filter(f => !!f).join(':')}\n        <br />\n        {sources ? (\n          <table>\n            <thead>\n              <tr>\n                <th>color</th>\n                <th>source</th>\n                <th>score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(sources).map(([source, data]) => (\n                <tr key={source}>\n                  <td>\n                    <div\n                      style={{\n                        width: 16,\n                        height: 16,\n                        background: obj[source]!.color,\n                      }}\n                    ></div>\n                  </td>\n                  <td>{source}</td>\n                  <td>{toP(data.score)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <span>\n            {source}{' '}\n            {summary\n              ? `min:${toP(feature.get('minScore'))} avg:${toP(\n                  feature.get('score'),\n                )} max:${toP(feature.get('maxScore'))}`\n              : toP(feature.get('score'))}\n          </span>\n        )}\n      </div>\n    )\n  },\n)\n\ntype Coord = [number, number]\n\nconst WiggleTooltip = observer(\n  (props: {\n    model: { featureUnderMouse: Feature; sources: Source[]; rowHeight: number }\n    height: number\n    offsetMouseCoord: Coord\n    clientMouseCoord: Coord\n    clientRect?: DOMRect\n    TooltipContents?: TooltipContentsComponent\n  }) => {\n    return <Tooltip useClientY TooltipContents={TooltipContents} {...props} />\n  },\n)\nexport default WiggleTooltip\n\nexport { default as Tooltip } from '../../Tooltip'\n"],"names":["en","n","toLocaleString","TooltipContents","forwardRef","t0","ref","$","_c","model","feature","refName","t1","start","get","end","coord","t2","sources","t3","source","summary","obj","Object","fromEntries","map","_temp","t4","t5","filter","_temp2","Symbol","for","_jsx","_jsxs","children","join","entries","t6","source_0","data","style","width","height","background","color","toP","score","observer","props","Tooltip","useClientY","ent","name","f"],"sourceRoot":""}