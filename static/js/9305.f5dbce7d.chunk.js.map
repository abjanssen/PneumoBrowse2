{"version":3,"file":"static/js/9305.f5dbce7d.chunk.js","mappings":"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","sources":["../../../plugins/wiggle/src/CreateMultiWiggleExtension/ConfirmDialog.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport Dialog from '@jbrowse/core/ui/Dialog'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst ConfirmDialog = ({\n  tracks,\n  onClose,\n}: {\n  tracks: AnyConfigurationModel[]\n  onClose: (arg: boolean, arg1?: { name: string }) => void\n}) => {\n  const [val, setVal] = useState(`MultiWiggle ${Date.now()}`)\n  const allQuant = tracks.every(t => t.type === 'QuantitativeTrack')\n  return (\n    <Dialog\n      open\n      onClose={() => {\n        onClose(false)\n      }}\n      title=\"Confirm multi-wiggle track create\"\n    >\n      <DialogContent>\n        <Typography>\n          {!allQuant\n            ? 'Not every track looks like a QuantitativeTrack. This could have unexpected behavior, confirm if it looks ok.'\n            : null}\n          Listing:\n        </Typography>\n        <ul>\n          {tracks.map(track => (\n            <li key={track.trackId}>\n              {readConfObject(track, 'name')} - {track.type}\n            </li>\n          ))}\n        </ul>\n        <TextField\n          value={val}\n          onChange={event => {\n            setVal(event.target.value)\n          }}\n          helperText=\"Track name\"\n        />\n        <Typography>Confirm creation of track?</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            onClose(false)\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            onClose(true, { name: val })\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmDialog\n"],"names":["t0","$","_c","tracks","onClose","val","setVal","useState","Date","now","allQuant","every","_temp","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","_jsxs","Typography","children","map","_temp2","_jsx","Symbol","for","event","target","value","TextField","onChange","helperText","DialogContent","Button","onClick","color","name","variant","autoFocus","DialogActions","Dialog","open","title","t","type","track","readConfObject","trackId"],"sourceRoot":""}