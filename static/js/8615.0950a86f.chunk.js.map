{"version":3,"file":"static/js/8615.0950a86f.chunk.js","mappings":"oOAUe,SAASA,EAAgBC,GAUtC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,SAAEG,EAAQ,SAAEC,EAAQ,UAAEC,GAAcJ,GAEnCK,EAAKC,IAAUC,EAAAA,EAAAA,UACpB,GAAGL,IAAaM,OAAOC,UAAYP,EAAW,OAEzCQ,EAAKC,IAAUJ,EAAAA,EAAAA,UACpB,GAAGJ,IAAaK,OAAOI,UAAYT,EAAW,MAG1CU,IACI,KAARR,GAAsB,KAARK,IAAeF,OAAOM,OAAOT,KAASG,OAAOM,OAAOJ,MAC7DA,GAAOL,EAGRU,IACU,QAAdX,GAA+B,KAARC,IAAeG,OAAOM,OAAOT,MAAQA,EAAM,EAEpE,OACEW,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASlB,EAAamB,MAAM,+BACvCJ,EAAAA,cAACK,EAAAA,EAAa,KACZL,EAAAA,cAACM,EAAAA,EAAU,KAAC,yBACVT,EAIE,KAHFG,EAAAA,cAACM,EAAAA,EAAU,CAACC,MAAM,SAAQ,uCAK1BR,EAIE,KAHFC,EAAAA,cAACM,EAAAA,EAAU,CAACC,MAAM,SAAQ,oDAK5BP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAOpB,EACPqB,SAAUC,IACRrB,EAAOqB,EAAMC,OAAOH,MAAM,EAE5BI,YAAY,oBAEdb,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAOf,EACPgB,SAAUC,IACRhB,EAAOgB,EAAMC,OAAOH,MAAM,EAE5BI,YAAY,qBAGhBb,EAAAA,cAACc,EAAAA,EAAa,KACZd,EAAAA,cAACe,EAAAA,EAAM,CACLC,QAAQ,YACRT,MAAM,UACNU,KAAK,SACLC,MAAO,CAAEC,WAAY,IACrBC,UAAWvB,EACXwB,QAASA,KACPrC,EAAMsC,YACI,KAARjC,GAAeG,OAAOM,OAAOT,QAAckC,GAANlC,GAEvCL,EAAMwC,YACI,KAAR9B,GAAeF,OAAOM,OAAOJ,QAAc6B,GAAN7B,GAEvCT,GAAa,GAEhB,WAMT,C","sources":["../../../plugins/wiggle/src/shared/SetMinMaxDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nexport default function SetMinMaxDialog(props: {\n  model: {\n    minScore: number\n    maxScore: number\n    scaleType: string\n    setMinScore: (arg?: number) => void\n    setMaxScore: (arg?: number) => void\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { minScore, maxScore, scaleType } = model\n\n  const [min, setMin] = useState(\n    `${minScore !== Number.MIN_VALUE ? minScore : ''}`,\n  )\n  const [max, setMax] = useState(\n    `${maxScore !== Number.MAX_VALUE ? maxScore : ''}`,\n  )\n\n  const ok =\n    min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n      ? +max > +min\n      : true\n\n  const logOk =\n    scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set min/max score for track\">\n      <DialogContent>\n        <Typography>Enter min/max score: </Typography>\n        {!ok ? (\n          <Typography color=\"error\">\n            Max is greater than or equal to min\n          </Typography>\n        ) : null}\n\n        {!logOk ? (\n          <Typography color=\"error\">\n            Min score should be greater than 0 for log scale\n          </Typography>\n        ) : null}\n\n        <TextField\n          value={min}\n          onChange={event => {\n            setMin(event.target.value)\n          }}\n          placeholder=\"Enter min score\"\n        />\n        <TextField\n          value={max}\n          onChange={event => {\n            setMax(event.target.value)\n          }}\n          placeholder=\"Enter max score\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ marginLeft: 20 }}\n          disabled={!ok}\n          onClick={() => {\n            model.setMinScore(\n              min !== '' && !Number.isNaN(+min) ? +min : undefined,\n            )\n            model.setMaxScore(\n              max !== '' && !Number.isNaN(+max) ? +max : undefined,\n            )\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["SetMinMaxDialog","props","model","handleClose","minScore","maxScore","scaleType","min","setMin","useState","Number","MIN_VALUE","max","setMax","MAX_VALUE","ok","isNaN","logOk","React","Dialog","open","onClose","title","DialogContent","Typography","color","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","type","style","marginLeft","disabled","onClick","setMinScore","undefined","setMaxScore"],"sourceRoot":""}