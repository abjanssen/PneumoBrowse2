{"version":3,"file":"static/js/3416.428b488c.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearReadVsRef/LinearReadVsRef.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  gatherOverlaps,\n  getContainingView,\n  getSession,\n} from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\nimport {\n  Button,\n  CircularProgress,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { Feature } from '@jbrowse/core/util'\n\nconst { featurizeSA, getClip, getLength, getLengthSansClipping, getTag } =\n  MismatchParser\n\ninterface ReducedFeature {\n  refName: string\n  start: number\n  clipPos: number\n  end: number\n  strand: number\n  seqLength: number\n  syntenyId?: number\n  uniqueId: string\n  mate: {\n    refName: string\n    start: number\n    end: number\n    syntenyId?: number\n    uniqueId?: string\n  }\n}\n\nconst useStyles = makeStyles()({\n  root: {\n    width: 300,\n  },\n})\n\nexport default function ReadVsRefDialog({\n  track,\n  feature: preFeature,\n  handleClose,\n}: {\n  feature: Feature\n  handleClose: () => void\n\n  track: any\n}) {\n  const { classes } = useStyles()\n\n  // window size stored as string, because it corresponds to a textfield which\n  // is parsed as number on submit\n  const [windowSizeText, setWindowSize] = useState('0')\n  const [error, setError] = useState<unknown>()\n  const [primaryFeature, setPrimaryFeature] = useState<Feature>()\n  const windowSize = +windowSizeText\n\n  // we need to fetch the primary alignment if the selected feature is 2048.\n  // this should be the first in the list of the SA tag\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      setError(undefined)\n      try {\n        if (preFeature.get('flags') & 2048) {\n          const SA: string = getTag(preFeature, 'SA') || ''\n          const primaryAln = SA.split(';')[0]!\n          const [saRef, saStart] = primaryAln.split(',')\n          const { rpcManager } = getSession(track)\n          const adapterConfig = getConf(track, 'adapter')\n          const sessionId = getRpcSessionId(track)\n\n          const feats = (await rpcManager.call(sessionId, 'CoreGetFeatures', {\n            adapterConfig,\n            sessionId,\n            regions: [\n              {\n                refName: saRef,\n                start: +saStart! - 1,\n                end: +saStart!,\n              },\n            ],\n          })) as Feature[]\n\n          const result = feats.find(\n            f =>\n              f.get('name') === preFeature.get('name') &&\n              !(f.get('flags') & 2048) &&\n              !(f.get('flags') & 256),\n          )\n          if (result) {\n            setPrimaryFeature(result)\n          } else {\n            throw new Error('primary feature not found')\n          }\n        } else {\n          setPrimaryFeature(preFeature)\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [preFeature, track])\n\n  function onSubmit() {\n    try {\n      if (!primaryFeature) {\n        return\n      }\n      const feature = primaryFeature\n      const session = getSession(track)\n      const view = getContainingView(track)\n      const cigar = feature.get('CIGAR') as string\n      const flags = feature.get('flags') as number\n      const origStrand = feature.get('strand') as number\n      const SA = (getTag(feature, 'SA') as string) || ''\n      const readName = feature.get('name') as string\n      const clipPos = getClip(cigar, 1)\n\n      const readAssembly = `${readName}_assembly_${Date.now()}`\n      const [trackAssembly] = getConf(track, 'assemblyNames')\n      const assemblyNames = [trackAssembly, readAssembly]\n      const trackId = `track-${Date.now()}`\n      const trackName = `${readName}_vs_${trackAssembly}`\n\n      // get the canonical refname for the read because if the\n      // read.get('refName') is chr1 and the actual fasta refName is 1 then no\n      // tracks can be opened on the top panel of the linear read vs ref\n      const { assemblyManager } = session\n      const assembly = assemblyManager.get(trackAssembly)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n\n      const suppAlns = featurizeSA(SA, feature.id(), origStrand, readName, true)\n\n      const feat = feature.toJSON()\n      feat.clipPos = clipPos\n      feat.strand = 1\n\n      feat.mate = {\n        refName: readName,\n        start: clipPos,\n        end: clipPos + getLengthSansClipping(cigar),\n      }\n\n      // if secondary alignment or supplementary, calculate length from SA[0]'s\n      // CIGAR which is the primary alignments. otherwise it is the primary\n      // alignment just use seq.length if primary alignment\n      const totalLength =\n        flags & 2048 ? getLength(suppAlns[0]!.CIGAR) : getLength(cigar)\n\n      const features = [feat, ...suppAlns] as ReducedFeature[]\n\n      for (const [idx, f] of features.entries()) {\n        f.refName = assembly.getCanonicalRefName(f.refName) || f.refName\n        f.syntenyId = idx\n        f.mate.syntenyId = idx\n        f.mate.uniqueId = `${f.uniqueId}_mate`\n      }\n      features.sort((a, b) => a.clipPos - b.clipPos)\n\n      const featSeq = feature.get('seq') as string | undefined\n\n      // the config feature store includes synthetic mate features\n      // mapped to the read assembly\n      const configFeatureStore = [...features, ...features.map(f => f.mate)]\n      const expand = 2 * windowSize\n      const refLen = features.reduce((a, f) => a + f.end - f.start + expand, 0)\n\n      const seqTrackId = `${readName}_${Date.now()}`\n      const sequenceTrackConf = getConf(assembly, 'sequence')\n      const lgvRegions = gatherOverlaps(\n        features.map(f => ({\n          ...f,\n          start: Math.max(0, f.start - windowSize),\n          end: f.end + windowSize,\n          assemblyName: trackAssembly,\n        })),\n      )\n\n      session.addTemporaryAssembly?.({\n        name: readAssembly,\n        sequence: {\n          type: 'ReferenceSequenceTrack',\n          name: 'Read sequence',\n          trackId: seqTrackId,\n          assemblyNames: [readAssembly],\n          adapter: {\n            type: 'FromConfigSequenceAdapter',\n            noAssemblyManager: true,\n            features: [\n              {\n                start: 0,\n                end: totalLength,\n                seq: featSeq || '', // can be empty if user clicks secondary read\n                refName: readName,\n                uniqueId: `${Math.random()}`,\n              },\n            ],\n          },\n        },\n      })\n\n      session.addView('LinearSyntenyView', {\n        type: 'LinearSyntenyView',\n        views: [\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: refLen / view.width,\n            displayedRegions: lgvRegions,\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                assemblyNames: [trackAssembly],\n                configuration: sequenceTrackConf.trackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: true,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            type: 'LinearGenomeView',\n            hideHeader: true,\n            offsetPx: 0,\n            bpPerPx: totalLength / view.width,\n            displayedRegions: [\n              {\n                assemblyName: readAssembly,\n                start: 0,\n                end: totalLength,\n                refName: readName,\n              },\n            ],\n            tracks: [\n              {\n                id: `${Math.random()}`,\n                type: 'ReferenceSequenceTrack',\n                configuration: seqTrackId,\n                displays: [\n                  {\n                    id: `${Math.random()}`,\n                    type: 'LinearReferenceSequenceDisplay',\n                    showReverse: true,\n                    showTranslation: false,\n                    height: 35,\n                    configuration: `${seqTrackId}-LinearReferenceSequenceDisplay`,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        viewTrackConfigs: [\n          {\n            type: 'SyntenyTrack',\n            assemblyNames,\n            adapter: {\n              type: 'FromConfigAdapter',\n              features: configFeatureStore,\n            },\n            trackId,\n            name: trackName,\n          },\n        ],\n        tracks: [\n          {\n            configuration: trackId,\n            type: 'SyntenyTrack',\n            displays: [\n              {\n                type: 'LinearSyntenyDisplay',\n                configuration: `${trackId}-LinearSyntenyDisplay`,\n              },\n            ],\n          },\n        ],\n        displayName: `${readName} vs ${trackAssembly}`,\n      })\n      handleClose()\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set window size\">\n      <DialogContent>\n        {error ? (\n          <Typography color=\"error\">{`${error}`}</Typography>\n        ) : !primaryFeature ? (\n          <div>\n            <Typography>\n              To accurately perform comparison we are fetching the primary\n              alignment. Loading primary feature...\n            </Typography>\n            <CircularProgress />\n          </div>\n        ) : (\n          <div className={classes.root}>\n            {primaryFeature.get('flags') & 256 ? (\n              <Typography style={{ color: 'orange' }}>\n                Note: You selected a secondary alignment (which generally does\n                not have SA tags or SEQ fields) so do a full reconstruction of\n                the alignment\n              </Typography>\n            ) : null}\n            <Typography>\n              Show an extra window size around each part of the split alignment.\n              Using a larger value can allow you to see more genomic context.\n            </Typography>\n\n            <TextField\n              value={windowSize}\n              onChange={event => {\n                setWindowSize(event.target.value)\n              }}\n              label=\"Set window size\"\n            />\n          </div>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\n          Cancel\n        </Button>\n        <Button\n          disabled={!primaryFeature}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onSubmit}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["featurizeSA","getClip","getLength","getLengthSansClipping","getTag","MismatchParser","useStyles","makeStyles","root","width","ReadVsRefDialog","track","feature","preFeature","handleClose","classes","windowSizeText","setWindowSize","useState","error","setError","primaryFeature","setPrimaryFeature","windowSize","useEffect","undefined","get","primaryAln","split","saRef","saStart","rpcManager","getSession","adapterConfig","getConf","sessionId","getRpcSessionId","result","call","regions","refName","start","end","find","f","Error","e","console","_jsxs","Dialog","open","onClose","title","children","_jsx","DialogContent","Typography","color","className","style","TextField","value","onChange","event","target","label","CircularProgress","DialogActions","Button","variant","onClick","disabled","session","view","getContainingView","cigar","flags","origStrand","SA","readName","clipPos","readAssembly","Date","now","trackAssembly","assemblyNames","trackId","trackName","assemblyManager","assembly","suppAlns","id","feat","toJSON","strand","mate","totalLength","CIGAR","features","idx","entries","getCanonicalRefName","syntenyId","uniqueId","sort","a","b","featSeq","configFeatureStore","map","expand","refLen","reduce","seqTrackId","sequenceTrackConf","lgvRegions","gatherOverlaps","Math","max","assemblyName","addTemporaryAssembly","name","sequence","type","adapter","noAssemblyManager","seq","random","addView","views","hideHeader","offsetPx","bpPerPx","displayedRegions","tracks","configuration","displays","showReverse","showTranslation","height","viewTrackConfigs","displayName"],"sourceRoot":""}