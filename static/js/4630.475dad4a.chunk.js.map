{"version":3,"file":"static/js/4630.475dad4a.chunk.js","mappings":"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","sources":["../../../packages/core/ui/ErrorMessageStackTraceDialog.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Typography,\n  alpha,\n} from '@mui/material'\nimport copy from 'copy-to-clipboard'\nimport { SourceMapConsumer } from 'source-map-js'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Dialog from './Dialog'\nimport ExternalLink from './ExternalLink'\nimport LoadingEllipses from './LoadingEllipses'\n\nasync function myfetch(uri: string) {\n  const res = await fetch(uri)\n  if (!res.ok) {\n    throw new Error(`HTTP ${res.status} fetching ${uri}: ${await res.text()}`)\n  }\n  return res\n}\n\nasync function myfetchjson(uri: string) {\n  const res = await myfetch(uri)\n  return res.json()\n}\n\nasync function myfetchtext(uri: string) {\n  const res = await myfetch(uri)\n  return res.text()\n}\n\n// produce a source-map resolved stack trace\n// reference code https://stackoverflow.com/a/77158517/2129219\nconst sourceMaps: Record<string, SourceMapConsumer> = {}\nasync function getSourceMapFromUri(uri: string) {\n  if (sourceMaps[uri] !== undefined) {\n    return sourceMaps[uri]\n  }\n  const uriQuery = new URL(uri).search\n  const currentScriptContent = await myfetchtext(uri)\n\n  let mapUri =\n    new RegExp(/\\/\\/# sourceMappingURL=(.*)/).exec(currentScriptContent)?.[1] ||\n    ''\n  mapUri = new URL(mapUri, uri).href + uriQuery\n\n  const data = await myfetchjson(mapUri)\n  const map = new SourceMapConsumer(data)\n  sourceMaps[uri] = map\n  return map\n}\n\nasync function mapStackTrace(stack: string) {\n  const stackLines = stack.split('\\n')\n  const mappedStack = []\n\n  for (const line of stackLines) {\n    const match = new RegExp(/(.*)(https?:\\/\\/.*):(\\d+):(\\d+)/).exec(line)\n    if (match === null) {\n      mappedStack.push(line)\n      continue\n    }\n\n    const uri = match[2]!\n    const consumer = await getSourceMapFromUri(uri)\n\n    const originalPosition = consumer.originalPositionFor({\n      line: Number.parseInt(match[3]!),\n      column: Number.parseInt(match[4]!),\n    })\n\n    if (\n      !originalPosition.source ||\n      !originalPosition.line ||\n      !originalPosition.column\n    ) {\n      mappedStack.push(line)\n      continue\n    }\n\n    mappedStack.push(\n      `${originalPosition.source}:${originalPosition.line}:${\n        originalPosition.column + 1\n      } (${match[1]!.trim()})`,\n    )\n  }\n\n  return mappedStack.join('\\n')\n}\n\nconst MAX_ERR_LEN = 10_000\n\n// Chrome has the error message in the stacktrace, firefox doesn't\nfunction stripMessage(trace: string, error: unknown) {\n  if (trace.startsWith('Error:')) {\n    // remove the error message, which can be very long due to mobx-state-tree\n    // stuff, to get just the stack trace\n    const err = `${error}`\n    return trace.slice(err.length)\n  } else {\n    return trace\n  }\n}\n\nconst useStyles = makeStyles()(theme => ({\n  pre: {\n    background: alpha(theme.palette.error.main, 0.2),\n    border: `1px solid ${theme.palette.divider}`,\n    overflow: 'auto',\n    margin: 20,\n    maxHeight: 300,\n  },\n}))\n\nfunction Contents({ text, extra }: { text: string; extra?: unknown }) {\n  const { classes } = useStyles()\n  const err = encodeURIComponent(\n    `${[\n      'I got this error from JBrowse, here is the stack trace:\\n',\n      '```',\n      text,\n      '```',\n      extra ? `supporting data: ${JSON.stringify(extra, null, 2)}` : '',\n    ].join('\\n')}\\n`,\n  )\n\n  const err2 = [\n    text,\n    extra ? `supporting data: ${JSON.stringify(extra, null, 2)}` : '',\n  ].join('\\n')\n\n  const email = 'jbrowse2@berkeley.edu'\n  const githubLink = `https://github.com/GMOD/jbrowse-components/issues/new?labels=bug&title=JBrowse+issue&body=${err}`\n  const emailLink = `mailto:${email}?subject=JBrowse%202%20error&body=${err}`\n\n  return (\n    <>\n      <Typography>\n        Post a new issue at{' '}\n        <ExternalLink href={githubLink}>GitHub</ExternalLink> or send an email\n        to <ExternalLink href={emailLink}>{email}</ExternalLink>{' '}\n      </Typography>\n      <pre className={classes.pre}>{err2}</pre>\n    </>\n  )\n}\n\nexport default function ErrorMessageStackTraceDialog({\n  error,\n  onClose,\n  extra,\n}: {\n  onClose: () => void\n  error: unknown\n  extra?: unknown\n}) {\n  const [mappedStackTrace, setMappedStackTrace] = useState<string>()\n  const [secondaryError, setSecondaryError] = useState<unknown>()\n  const [clicked, setClicked] = useState(false)\n  const stackTracePreProcessed = `${typeof error === 'object' && error !== null && 'stack' in error ? error.stack : ''}`\n  const errorText = error ? `${error}` : ''\n  const stackTrace = stripMessage(stackTracePreProcessed, errorText)\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        const res = await mapStackTrace(stackTrace)\n        setMappedStackTrace(res)\n      } catch (e) {\n        console.error(e)\n        setMappedStackTrace(stackTrace)\n        setSecondaryError(e)\n      }\n    })()\n  }, [stackTrace])\n\n  const errorBoxText = [\n    secondaryError\n      ? 'Error loading source map, showing raw stack trace below:'\n      : '',\n    errorText.length > MAX_ERR_LEN\n      ? `${errorText.slice(0, MAX_ERR_LEN)}...`\n      : errorText,\n    mappedStackTrace || 'No stack trace available',\n    // @ts-expect-error add version info at bottom if we are in jbrowse-web\n    window.JBrowseSession ? `JBrowse ${window.JBrowseSession.version}` : '',\n  ]\n    .filter(f => !!f)\n    .join('\\n')\n\n  return (\n    <Dialog open onClose={onClose} title=\"Stack trace\" maxWidth=\"xl\">\n      <DialogContent>\n        {mappedStackTrace === undefined ? (\n          <LoadingEllipses variant=\"h6\" />\n        ) : (\n          <Contents text={errorBoxText} extra={extra} />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            copy(errorBoxText)\n            setClicked(true)\n            setTimeout(() => {\n              setClicked(false)\n            }, 1000)\n          }}\n        >\n          {clicked ? 'Copied!' : 'Copy stack trace to clipboard'}\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["async","myfetch","uri","res","fetch","ok","Error","status","text","sourceMaps","getSourceMapFromUri","undefined","uriQuery","URL","search","currentScriptContent","myfetchtext","mapUri","RegExp","exec","href","data","json","myfetchjson","map","SourceMapConsumer","MAX_ERR_LEN","useStyles","makeStyles","theme","pre","background","alpha","palette","error","main","border","divider","overflow","margin","maxHeight","Contents","t0","$","_c","extra","classes","err","encodeURIComponent","JSON","stringify","join","t1","t2","err2","githubLink","emailLink","t3","t4","t5","t6","t7","_jsx","ExternalLink","children","_jsxs","Typography","className","_Fragment","ErrorMessageStackTraceDialog","onClose","mappedStackTrace","setMappedStackTrace","useState","secondaryError","setSecondaryError","clicked","setClicked","stackTracePreProcessed","stack","errorText","trace","startsWith","slice","length","stripMessage","stackTrace","stackLines","split","mappedStack","line","match","push","originalPosition","originalPositionFor","Number","parseInt","column","source","trim","mapStackTrace","e","console","useEffect","window","JBrowseSession","version","filter","_temp","errorBoxText","t8","t9","DialogContent","LoadingEllipses","variant","copy","setTimeout","t10","t11","t12","t13","t14","Button","color","onClick","DialogActions","Dialog","open","title","maxWidth","f"],"sourceRoot":""}