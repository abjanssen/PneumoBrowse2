{"version":3,"file":"static/js/8536.67de268f.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/util.ts","../../../node_modules/@mui/material/Toolbar/Toolbar.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/ArrayValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/DataGridDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/UriField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Attributes.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/material/Badge/useBadge.js","../../../node_modules/@mui/material/Toolbar/toolbarClasses.js"],"sourcesContent":["import { isObject, max, measureText } from '../../util'\nimport { ellipses } from '../util'\n\nexport function isEmpty(obj: Record<string, unknown>) {\n  return Object.keys(obj).length === 0\n}\n\nexport function generateTitle(name: unknown, id: unknown, type: unknown) {\n  return [ellipses(`${name || id || ''}`), `${type}`]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport function generateMaxWidth(array: unknown[][], prefix: string[]) {\n  return (\n    Math.ceil(\n      max(array.map(key => measureText([...prefix, key[0]].join('.'), 12))),\n    ) + 10\n  )\n}\n\n// pick using a path from an object, similar to _.get from lodash with special\n// logic for Descriptions from e.g. VCF headers\n//\n// @param arr  example ['a','b'], obj = {a:{b:'hello}}\n// @returns hello (with special addition to grab description also)\nexport function accessNested(arr: string[], obj: Record<string, unknown> = {}) {\n  let obj2: unknown = obj\n  for (const elt of arr) {\n    if (isObject(obj2)) {\n      obj2 = obj2[elt]\n    }\n  }\n  return typeof obj2 === 'string'\n    ? obj2\n    : isObject(obj2) && typeof obj2.Description === 'string'\n      ? obj2.Description\n      : undefined\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { isValidElement } from 'react'\n\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SanitizedHTML } from '../../ui'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes } = useStyles()\n  return value !== null && value !== undefined ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={value} />\n    </div>\n  ) : null\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport Attributes from './Attributes'\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n\n  fieldSubvalue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    padding: theme.spacing(0.5),\n    border: `1px solid ${theme.palette.action.selected}`,\n    boxSizing: 'border-box',\n    overflow: 'auto',\n  },\n}))\n\nexport default function ArrayValue({\n  name,\n  value,\n  description,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown[]\n  prefix?: string[]\n}) {\n  const { classes } = useStyles()\n  if (value.length === 1) {\n    return isObject(value[0]) ? (\n      <Attributes attributes={value[0]} prefix={[...prefix, name]} />\n    ) : (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        <BasicValue value={value[0]} />\n      </div>\n    )\n  } else if (value.every(val => isObject(val))) {\n    return (\n      <>\n        {value.map((val, i) => (\n          <Attributes\n            key={`${JSON.stringify(val)}-${i}`}\n            attributes={val as Record<string, unknown>}\n            prefix={[...prefix, `${name}-${i}`]}\n          />\n        ))}\n      </>\n    )\n  } else {\n    return (\n      <div className={classes.field}>\n        <FieldName prefix={prefix} description={description} name={name} />\n        {value.map((val, i) => (\n          <div\n            key={`${JSON.stringify(val)}-${i}`}\n            className={classes.fieldSubvalue}\n          >\n            <BasicValue value={val} />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n","import { useState } from 'react'\n\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\nimport { makeStyles } from 'tss-react/mui'\n\nimport FieldName from './FieldName'\nimport { SanitizedHTML } from '../../ui'\nimport { getStr, measureGridWidth } from '../../util'\n\nimport type { GridColDef } from '@mui/x-data-grid'\n\nconst useStyles = makeStyles()(theme => ({\n  margin: {\n    marginBottom: theme.spacing(4),\n  },\n\n  cell: {\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}))\n\ninterface Entry {\n  id: string\n  [key: string]: string\n}\n\nexport default function DataGridDetails({\n  value,\n  prefix,\n  name,\n}: {\n  name: string\n  prefix?: string[]\n  value: Record<string, unknown>[]\n}) {\n  const { classes } = useStyles()\n  const [checked, setChecked] = useState(false)\n  const keys = Object.keys(value[0]!).sort()\n  const unionKeys = new Set(keys)\n\n  // avoids key 'id' from being used in row data\n  const rows = Object.entries(value).map(([k, val]) => {\n    const { id, ...rest } = val\n    return {\n      id: k, // used by material UI\n      identifier: id, // renamed from id to identifier\n      ...rest,\n    } as Entry\n  })\n\n  for (const val of value) {\n    for (const k of Object.keys(val)) {\n      unionKeys.add(k)\n    }\n  }\n  // avoids key 'id' from being used in column names, and tries\n  // to make it at the start of the colNames array\n  let colNames: string[]\n  if (unionKeys.has('id')) {\n    unionKeys.delete('id')\n    colNames = ['identifier', ...unionKeys]\n  } else {\n    colNames = [...unionKeys]\n  }\n  const widths = colNames.map(e => measureGridWidth(rows.map(r => r[e])))\n  if (unionKeys.size < keys.length + 5) {\n    return (\n      <div className={classes.margin}>\n        <FieldName prefix={prefix} name={name} />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checked}\n              onChange={event => {\n                setChecked(event.target.checked)\n              }}\n            />\n          }\n          label={<Typography variant=\"body2\">Show options</Typography>}\n        />\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <DataGrid\n            disableRowSelectionOnClick\n            rows={rows}\n            rowHeight={20}\n            columnHeaderHeight={35}\n            hideFooter={rows.length < 25}\n            slots={{\n              toolbar: checked ? GridToolbar : null,\n            }}\n            slotProps={{\n              toolbar: {\n                printOptions: {\n                  disableToolbarButton: true,\n                },\n              },\n            }}\n            columns={colNames.map(\n              (val, index) =>\n                ({\n                  field: val,\n                  renderCell: params => {\n                    const value = params.value as string\n                    return (\n                      <div className={classes.cell}>\n                        <SanitizedHTML html={getStr(value || '')} />\n                      </div>\n                    )\n                  },\n                  width: widths[index],\n                }) satisfies GridColDef<(typeof rows)[0]>,\n            )}\n          />\n        </div>\n      </div>\n    )\n  }\n  return null\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function UriField({\n  value,\n  prefix,\n  name,\n}: {\n  value: { uri: string; baseUri?: string }\n  name: string\n  prefix: string[]\n}) {\n  const { classes } = useStyles()\n  const { uri, baseUri = '' } = value\n  let href: string\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return (\n    <div className={classes.field}>\n      <FieldName prefix={prefix} name={name} />\n      <BasicValue value={href} />\n    </div>\n  )\n}\n","import ArrayValue from './ArrayValue'\nimport DataGridDetails from './DataGridDetails'\nimport SimpleField from './SimpleField'\nimport UriAttribute from './UriField'\nimport { accessNested, generateMaxWidth } from './util'\nimport { isObject, isUriLocation } from '../../util'\n\nconst MAX_FIELD_NAME_WIDTH = 170\n\n// these are always omitted as too detailed\nconst globalOmit = [\n  '__jbrowsefmt',\n  'length',\n  'position',\n  'subfeatures',\n  'uniqueId',\n  'exonFrames',\n  'parentId',\n  'thickStart',\n  'thickEnd',\n]\n\nexport default function Attributes(props: {\n  attributes: {\n    [key: string]: unknown\n    __jbrowsefmt?: Record<string, unknown>\n  }\n  omit?: string[]\n  omitSingleLevel?: string[]\n  formatter?: (val: unknown, key: string) => React.ReactNode\n  descriptions?: Record<string, React.ReactNode>\n  prefix?: string[]\n  hideUris?: boolean\n}) {\n  const {\n    attributes,\n    omit = [],\n    omitSingleLevel = [],\n    descriptions,\n    formatter = val => val,\n    hideUris,\n    prefix = [],\n  } = props\n\n  const omits = new Set([...omit, ...globalOmit, ...omitSingleLevel])\n  const { __jbrowsefmt, ...rest } = attributes\n  const formattedAttributes = { ...rest, ...__jbrowsefmt }\n\n  const maxLabelWidth = generateMaxWidth(\n    Object.entries(formattedAttributes).filter(\n      ([k, v]) => v !== undefined && !omits.has(k),\n    ),\n    prefix,\n  )\n\n  return (\n    <>\n      {Object.entries(formattedAttributes)\n        .filter(([k, v]) => v !== undefined && !omits.has(k))\n        .map(([key, value]) => {\n          const description = accessNested([...prefix, key], descriptions)\n          if (Array.isArray(value)) {\n            // check if it looks like an array of objects, which could be used\n            // in data grid\n            return value.length > 1 && value.every(val => isObject(val)) ? (\n              <DataGridDetails\n                key={key}\n                name={key}\n                prefix={prefix}\n                value={value}\n              />\n            ) : (\n              <ArrayValue\n                key={key}\n                name={key}\n                value={value}\n                description={description}\n                prefix={prefix}\n              />\n            )\n          } else if (isObject(value)) {\n            const { omitSingleLevel, ...rest } = props\n            return isUriLocation(value) ? (\n              hideUris ? null : (\n                <UriAttribute\n                  key={key}\n                  name={key}\n                  prefix={prefix}\n                  value={value}\n                />\n              )\n            ) : (\n              <Attributes\n                key={key}\n                {...rest}\n                attributes={value}\n                descriptions={descriptions}\n                prefix={[...prefix, key]}\n              />\n            )\n          } else {\n            return (\n              <SimpleField\n                key={key}\n                name={key}\n                value={formatter(value, key)}\n                description={description}\n                prefix={prefix}\n                width={Math.min(maxLabelWidth, MAX_FIELD_NAME_WIDTH)}\n              />\n            )\n          }\n        })}\n    </>\n  )\n}\n","import { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;"],"names":["isEmpty","obj","Object","keys","length","generateTitle","name","id","type","ellipses","filter","f","join","generateMaxWidth","array","prefix","Math","ceil","max","map","key","measureText","accessNested","arr","obj2","elt","isObject","Description","undefined","ToolbarRoot","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","useStyles","makeStyles","fieldValue","wordBreak","maxHeight","fontSize","padding","overflow","BasicValue","value","isLink","exec","_jsx","children","isValidElement","Link","href","SanitizedHTML","html","JSON","stringify","String","field","flexWrap","SimpleField","description","width","_jsxs","FieldName","fieldSubvalue","border","palette","action","selected","boxSizing","ArrayValue","Attributes","attributes","every","val","_Fragment","i","margin","marginBottom","cell","whiteSpace","textOverflow","DataGridDetails","checked","setChecked","useState","sort","unionKeys","Set","rows","entries","k","rest","identifier","add","colNames","has","delete","widths","e","measureGridWidth","r","size","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","flexDirection","DataGrid","disableRowSelectionOnClick","rowHeight","columnHeaderHeight","hideFooter","GridToolbar","slotProps","printOptions","disableToolbarButton","columns","index","renderCell","params","getStr","UriField","uri","baseUri","URL","MAX_FIELD_NAME_WIDTH","globalOmit","omit","omitSingleLevel","descriptions","formatter","hideUris","omits","__jbrowsefmt","formattedAttributes","maxLabelWidth","v","Array","isArray","isUriLocation","UriAttribute","min","fieldDescription","background","mode","fieldName","minWidth","borderBottom","disabledBackground","marginRight","cx","Tooltip","title","placement","getBadgeUtilityClass","BadgeRoot","styled","verticalAlign","flexShrink","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","memoTheme","justifyContent","alignContent","fontFamily","typography","fontWeight","fontWeightMedium","pxToRem","RADIUS_STANDARD","lineHeight","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","createSimplePaletteValueFilter","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","components","componentsProps","overlapProp","colorProp","invisibleProp","maxProp","badgeContent","badgeContentProp","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","composeClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","clsx","badgeProps","getToolbarUtilityClass"],"sourceRoot":""}