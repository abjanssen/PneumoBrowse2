{"version":3,"file":"static/js/1281.1d836fc4.chunk.js","mappings":"kTAiBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,cAAe,CACbC,MAAO,UAmIX,GA/H6BC,EAAAA,EAAAA,WAAS,UAAU,MAC9CC,EAAK,YACLC,IAQA,MAAM,QAAEC,GAAYP,KACbQ,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAeC,IAAoBF,EAAAA,EAAAA,WAAS,IAC5CG,EAAeC,IAAoBJ,EAAAA,EAAAA,WAAS,IAC5CK,EAAiBC,IAAsBN,EAAAA,EAAAA,WAAS,GAEvD,IAAIO,EAEJ,IACE,IAAIC,OAAOV,EACb,CAAE,MAAOW,GACPF,EAAQE,CACV,CAEA,OACEC,EAAAA,cAACC,EAAAA,OAAM,CAACC,SAAS,KAAKC,MAAI,EAACC,QAASlB,EAAamB,MAAM,mBACrDL,EAAAA,cAACM,EAAAA,EAAa,CAACC,UAAWpB,EAAQL,eAChCkB,EAAAA,cAACQ,EAAAA,EAAU,KAAC,mKAKZR,EAAAA,cAACS,EAAAA,EAAS,CACRrB,MAAOA,EACPsB,SAAUX,IACRV,EAASU,EAAEY,OAAOvB,MAAM,EAE1BwB,WAAW,4BAEbZ,EAAAA,cAACa,EAAAA,EAAS,KACRb,EAAAA,cAACc,EAAAA,EAAgB,CACfC,QACEf,EAAAA,cAACgB,EAAAA,EAAQ,CACPC,QAAS1B,EACTmB,SAAUQ,IACR1B,EAAiB0B,EAAMP,OAAOM,QAAQ,IAI5CE,MAAM,0BAERnB,EAAAA,cAACc,EAAAA,EAAgB,CACfC,QACEf,EAAAA,cAACgB,EAAAA,EAAQ,CACPC,QAASxB,EACTiB,SAAUQ,IACRxB,EAAiBwB,EAAMP,OAAOM,QAAQ,IAI5CE,MAAM,0BAERnB,EAAAA,cAACc,EAAAA,EAAgB,CACfC,QACEf,EAAAA,cAACgB,EAAAA,EAAQ,CACPC,QAAStB,EACTe,SAAUQ,IACRtB,EAAmBsB,EAAMP,OAAOM,QAAQ,IAI9CE,MAAM,sBAGTtB,EAAQG,EAAAA,cAACQ,EAAAA,EAAU,CAACY,MAAM,SAAS,GAAGvB,KAAwB,MAEjEG,EAAAA,cAACqB,EAAAA,EAAa,KACZrB,EAAAA,cAACsB,EAAAA,EAAM,CACLC,QAASA,KACP,GAAInC,EAAO,CACT,MAAMoC,EAAU,qBAAoBC,KAAKC,MACnCC,GAAUC,EAAAA,EAAAA,YAAW3C,IACrB,gBAAE4C,GAAoBF,EACtBG,EAAe7C,EAAM8C,cAAc,IACrCC,EAAAA,EAAAA,wBAAuBL,KACzBA,EAAQM,aAAa,CACnBT,UACAU,KAAM,mBAAmB9C,IACzB2C,cAAe,CAACD,GAChBK,KAAM,eACNC,QAAS,CACPD,KAAM,wBACNE,OAAQjD,EACRG,gBACAE,gBACAE,kBACA2C,iBAAiBC,EAAAA,EAAAA,aACfV,EAAgBW,IAAIV,IAAeW,cAAcC,SAC9CN,YAITnD,EAAM0D,UAAUnB,GAEpB,CACAtC,GAAa,EAEf0D,QAAQ,YACRxB,MAAM,WACP,UAIDpB,EAAAA,cAACsB,EAAAA,EAAM,CACLC,QAASA,KACPrC,GAAa,EAEf0D,QAAQ,YACRxB,MAAM,aACP,UAMT,G","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/SequenceSearchDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormGroup,\n  FormControlLabel,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  dialogContent: {\n    width: '40em',\n  },\n})\n\nconst SequenceSearchDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: {\n    assemblyNames: string[]\n    showTrack: (trackId: string) => void\n  }\n  handleClose: () => void\n}) {\n  const { classes } = useStyles()\n  const [value, setValue] = useState('')\n  const [searchForward, setSearchForward] = useState(true)\n  const [searchReverse, setSearchReverse] = useState(true)\n  const [caseInsensitive, setCaseInsensitive] = useState(true)\n\n  let error: unknown\n\n  try {\n    new RegExp(value)\n  } catch (e) {\n    error = e\n  }\n\n  return (\n    <Dialog maxWidth=\"xl\" open onClose={handleClose} title=\"Sequence search\">\n      <DialogContent className={classes.dialogContent}>\n        <Typography>\n          Supply a sequence to search for. A track will be created with the\n          resulting matches once submitted. You can also supply regex style\n          expressions e.g. AACT(C|T).\n        </Typography>\n        <TextField\n          value={value}\n          onChange={e => {\n            setValue(e.target.value)\n          }}\n          helperText=\"Sequence search pattern\"\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={searchForward}\n                onChange={event => {\n                  setSearchForward(event.target.checked)\n                }}\n              />\n            }\n            label=\"Search forward strand\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={searchReverse}\n                onChange={event => {\n                  setSearchReverse(event.target.checked)\n                }}\n              />\n            }\n            label=\"Search reverse strand\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={caseInsensitive}\n                onChange={event => {\n                  setCaseInsensitive(event.target.checked)\n                }}\n              />\n            }\n            label=\"Case insensitive\"\n          />\n        </FormGroup>\n        {error ? <Typography color=\"error\">{`${error}`}</Typography> : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            if (value) {\n              const trackId = `sequence_search_${+Date.now()}`\n              const session = getSession(model)\n              const { assemblyManager } = session\n              const assemblyName = model.assemblyNames[0]!\n              if (isSessionWithAddTracks(session)) {\n                session.addTrackConf({\n                  trackId,\n                  name: `Sequence search ${value}`,\n                  assemblyNames: [assemblyName],\n                  type: 'FeatureTrack',\n                  adapter: {\n                    type: 'SequenceSearchAdapter',\n                    search: value,\n                    searchForward,\n                    searchReverse,\n                    caseInsensitive,\n                    sequenceAdapter: getSnapshot(\n                      assemblyManager.get(assemblyName)?.configuration.sequence\n                        .adapter,\n                    ),\n                  },\n                })\n                model.showTrack(trackId)\n              }\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Submit\n        </Button>\n\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SequenceSearchDialog\n"],"names":["useStyles","makeStyles","dialogContent","width","observer","model","handleClose","classes","value","setValue","useState","searchForward","setSearchForward","searchReverse","setSearchReverse","caseInsensitive","setCaseInsensitive","error","RegExp","e","React","Dialog","maxWidth","open","onClose","title","DialogContent","className","Typography","TextField","onChange","target","helperText","FormGroup","FormControlLabel","control","Checkbox","checked","event","label","color","DialogActions","Button","onClick","trackId","Date","now","session","getSession","assemblyManager","assemblyName","assemblyNames","isSessionWithAddTracks","addTrackConf","name","type","adapter","search","sequenceAdapter","getSnapshot","get","configuration","sequence","showTrack","variant"],"sourceRoot":""}