{"version":3,"file":"static/js/4788.d990c8a9.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/esm/AccordionSummary/accordionSummaryClasses.js","../../../node_modules/@mui/material/esm/AccordionDetails/accordionDetailsClasses.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../node_modules/@mui/material/esm/AccordionSummary/AccordionSummary.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCoreDetails.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import { isValidElement } from 'react'\n\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SanitizedHTML } from '../../ui'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n  formatter,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n  formatter?: (value: unknown, key: string) => React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return value != null ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={formatter ? formatter(value, name) : value} />\n    </div>\n  ) : null\n}\n","import { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    slots,\n    slotProps,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AccordionSummaryRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      focusRipple: false,\n      disableRipple: true,\n      disabled,\n      'aria-expanded': expanded,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onClick: event => {\n        handlers.onClick?.(event);\n        handleChange(event);\n      }\n    })\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AccordionSummaryContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ExpandIconWrapperSlot, expandIconWrapperSlotProps] = useSlot('expandIconWrapper', {\n    className: classes.expandIconWrapper,\n    elementType: AccordionSummaryExpandIconWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(ContentSlot, {\n      ...contentSlotProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(ExpandIconWrapperSlot, {\n      ...expandIconWrapperSlotProps,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    expandIconWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    content: PropTypes.elementType,\n    expandIconWrapper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\n\nimport type { BaseProps } from '../types'\n\nexport default function BaseCoreDetails(props: BaseProps) {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n"],"names":["AccordionDetailsRoot","name","slot","theme","padding","spacing","inProps","ref","props","className","other","ownerState","classes","root","useUtilityClasses","getAccordionSummaryUtilityClass","getAccordionDetailsUtilityClass","useStyles","makeStyles","fieldValue","wordBreak","maxHeight","fontSize","overflow","BasicValue","t0","$","_c","value","t1","t2","Symbol","for","exec","isLink","t3","t4","isValidElement","_jsx","Link","href","children","SanitizedHTML","html","isObject","JSON","stringify","String","field","display","flexWrap","SimpleField","description","prefix","width","formatter","_jsxs","FieldName","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","undefined","cx","val","join","Tooltip","placement","style","d","Position","feature","strand","strandMap","str","assembleLocString","_Fragment","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","coreRenderedDetails","type","Object","entries","map","key","filter","_temp","_temp2","name_0","value_0","AccordionSummaryRoot","transition","duration","transitions","shortest","minHeight","create","focusVisible","backgroundColor","vars","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","expanded","AccordionSummaryContent","textAlign","flexGrow","margin","AccordionSummaryExpandIconWrapper","color","active","transform","expandIcon","focusVisibleClassName","onClick","slots","slotProps","toggle","A","content","expandIconWrapper","externalForwardedProps","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","focusRipple","disableRipple","getSlotProps","handlers","event","handleChange","ContentSlot","contentSlotProps","ExpandIconWrapperSlot","expandIconWrapperSlotProps","expansionPanelDetails","icon","tertiary","contrastText","BaseCard","title","defaultExpanded","t5","t6","ExpandMore","Typography","variant","AccordionSummary","AccordionDetails","Accordion","BaseCoreDetails"],"sourceRoot":""}