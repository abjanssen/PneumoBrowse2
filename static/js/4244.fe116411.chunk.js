"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[4244],{84244:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var r=n(7552),a=n(49823),l=n(99546),i=n(91468),s=n(29499),o=n(36715),c=n(5401),u=n(1343),p=n(58507),m=n(31409),d=n.n(m),g=n(45465),h=n(36422);const f=(0,n(75785).n9)()((e=>({textAreaFont:{fontFamily:"Courier New"},mgap:{display:"flex",flexDirection:"column",gap:e.spacing(4)}})));function y({model:e,handleClose:t}){const{classes:n}=f(),[m,y]=(0,r.useState)(),[E,w]=(0,r.useState)(),[b,v]=(0,r.useState)("");return(0,r.useEffect)((()=>{(async()=>{try{w(void 0);const t=(0,l.getContainingView)(e);if(!t.initialized)return;const{rpcManager:n}=(0,l.getSession)(e),{sources:r,mafFilter:a,adapterConfig:s}=e,o=(0,i.getRpcSessionId)(e),c=await n.call(o,"MultiVariantGetGenotypeMatrix",{regions:t.dynamicBlocks.contentBlocks,sources:r,mafFilter:a,sessionId:o,adapterConfig:s}),u=Object.values(c),p=Object.keys(c),m=`try(library(fastcluster), silent=TRUE)\ninputMatrix<-matrix(c(${u.map((e=>e.genotypes.join(","))).join(",\n")}\n),nrow=${u.length},byrow=TRUE)\nrownames(inputMatrix)<-c(${p.map((e=>`'${e}'`)).join(",")})\nresultClusters<-hclust(dist(inputMatrix), method='single')\ncat(resultClusters$order,sep='\\n')`;y(m)}catch(t){!(0,l.isAbortException)(t)&&(0,h.isAlive)(e)&&(console.error(t),w(t))}})()}),[e]),r.createElement(a.Dialog,{open:!0,title:"Cluster by genotype",onClose:t},r.createElement(s.A,null,r.createElement("div",{className:n.mgap},r.createElement(o.A,null,"This page will produce an R script that will perform hierarchical clustering on the visible genotype data using `hclust`."),r.createElement(o.A,null,"You can then paste the results in this form to specify the row ordering."),m?r.createElement("div",null,r.createElement("div",null,"Step 1:"," ",r.createElement(c.A,{variant:"contained",onClick:()=>{(0,g.saveAs)(new Blob([m||""],{type:"text/plain;charset=utf-8"}),"cluster.R")}},"Download Rscript")," ","or"," ",r.createElement(c.A,{variant:"contained",onClick:()=>{d()(m||"")}},"Copy Rscript to clipboard"),r.createElement("div",null,r.createElement(u.A,{multiline:!0,fullWidth:!0,variant:"outlined",placeholder:"Step 2. Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)",rows:10,value:b,onChange:e=>{v(e.target.value)},slotProps:{input:{classes:{input:n.textAreaFont}}}})))):r.createElement(a.LoadingEllipses,{variant:"h6",title:"Generating genotype matrix"}),E?r.createElement(a.ErrorMessage,{error:E}):null)),r.createElement(p.A,null,r.createElement(c.A,{disabled:!m,variant:"contained",onClick:()=>{const{sources:n}=e;if(n)try{e.setLayout(b.split("\n").map((e=>e.trim())).filter((e=>!!e)).map((e=>+e)).map((e=>{const t=n[e-1];if(!t)throw new Error(`out of bounds at ${e}`);return t})))}catch(e){console.error(e),w(e)}t()}},"Apply clustering"),r.createElement(c.A,{variant:"contained",color:"secondary",onClick:()=>{t()}},"Cancel")))}}}]);
//# sourceMappingURL=4244.fe116411.chunk.js.map