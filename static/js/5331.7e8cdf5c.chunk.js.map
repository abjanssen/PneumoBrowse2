{"version":3,"file":"static/js/5331.7e8cdf5c.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/DropdownTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/FavoriteTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/RecentlyUsedTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabelMenu.tsx"],"sourcesContent":["import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\nimport { Badge } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst ShoppingCart = observer(function ({\n  model,\n}: {\n  model: {\n    clearSelection: () => void\n    selection: AnyConfigurationModel[]\n  }\n}) {\n  const session = getSession(model)\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const { adminMode, sessionTracks } = session\n  const s = new Set<string>(sessionTracks?.map(t => t.trackId))\n  const canEdit = (t: string) => adminMode || s.has(t)\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return selection.length ? (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Clear selection',\n          onClick: () => {\n            model.clearSelection()\n          },\n        },\n        ...(selection.every(elt => canEdit(elt.trackId))\n          ? [\n              {\n                label: 'Delete tracks',\n                onClick: () => {\n                  for (const s of selection) {\n                    // @ts-expect-error\n                    session.deleteTrackConf?.(s)\n                  }\n                },\n              },\n            ]\n          : []),\n\n        ...items.map(item => ({\n          ...item,\n          ...('onClick' in item\n            ? {\n                onClick: () => {\n                  item.onClick(model)\n                },\n              }\n            : {}),\n        })),\n      ]}\n    >\n      <Badge badgeContent={selection.length} color=\"primary\">\n        <ShoppingCartIcon />\n      </Badge>\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default ShoppingCart\n","import { useState } from 'react'\n\nimport {\n  getSession,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nconst HierarchicalFab = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return hasAddTrack || hasConnections ? (\n    <>\n      <Fab\n        color=\"secondary\"\n        className={classes.fab}\n        onClick={event => {\n          setAnchorEl(event.currentTarget)\n        }}\n      >\n        <AddIcon />\n      </Fab>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null)\n        }}\n      >\n        {hasConnections ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget(\n                    'AddConnectionWidget',\n                    'addConnectionWidget',\n                  ),\n                )\n              }\n            }}\n          >\n            Add connection\n          </MenuItem>\n        ) : null}\n        {hasAddTrack ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                    view: model.view.id,\n                  }),\n                )\n              }\n            }}\n          >\n            Add track\n          </MenuItem>\n        ) : null}\n      </Menu>\n    </>\n  ) : null\n})\n\nexport default HierarchicalFab\n","import { Suspense, lazy, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport {\n  getSession,\n  isSessionModelWithConnectionEditing,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { observer } from 'mobx-react'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\n// lazy components\nconst CloseConnectionDialog = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDialog = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDialog = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDialog = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: () => void\n  dereferenceTypeCount: Record<string, number>\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nconst HamburgerMenu = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDialogDetails, setDeleteDialogDetails] =\n    useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n  const [facetedOpen, setFacetedOpen] = useState(false)\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n    const result = session.prepareToBreakConnection?.(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDialogDetails({ name, connectionConf })\n    }\n  }\n\n  return (\n    <>\n      <CascadingMenuButton\n        menuItems={[\n          {\n            label: 'Open faceted track selector',\n            onClick: () => {\n              setFacetedOpen(true)\n            },\n          },\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Add track...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Connections...',\n            subMenu: [\n              ...(isSessionModelWithConnections(session)\n                ? [\n                    {\n                      label: 'Turn on/off connections...',\n                      onClick: () => {\n                        setConnectionToggleOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n              ...(isSessionModelWithConnectionEditing(session)\n                ? [\n                    {\n                      label: 'Add connection...',\n                      onClick: () => {\n                        if (isSessionModelWithWidgets(session)) {\n                          session.showWidget(\n                            session.addWidget(\n                              'AddConnectionWidget',\n                              'addConnectionWidget',\n                            ),\n                          )\n                        }\n                      },\n                    },\n                    {\n                      label: 'Delete connections...',\n                      onClick: () => {\n                        setConnectionManagerOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          },\n          {\n            label: 'Sort...',\n            type: 'subMenu',\n            subMenu: [\n              {\n                label: 'Sort tracks by name',\n                type: 'checkbox',\n                checked: model.activeSortTrackNames,\n                onClick: () => {\n                  model.setSortTrackNames(!model.activeSortTrackNames)\n                },\n              },\n              {\n                label: 'Sort categories by name',\n                type: 'checkbox',\n                checked: model.activeSortCategories,\n                onClick: () => {\n                  model.setSortCategories(!model.activeSortCategories)\n                },\n              },\n            ],\n          },\n          {\n            label: 'Collapse...',\n            type: 'subMenu',\n            subMenu: [\n              ...(model.hasAnySubcategories\n                ? [\n                    {\n                      label: 'Collapse subcategories',\n                      onClick: () => {\n                        model.collapseSubCategories()\n                      },\n                    },\n                  ]\n                : []),\n              {\n                label: 'Collapse top-level categories',\n                onClick: () => {\n                  model.collapseTopLevelCategories()\n                },\n              },\n              {\n                label: 'Expand all categories',\n                onClick: () => {\n                  model.expandAllCategories()\n                },\n              },\n            ],\n          },\n        ]}\n      >\n        <MenuIcon />\n      </CascadingMenuButton>\n      <Suspense fallback={null}>\n        {modalInfo ? (\n          <CloseConnectionDialog\n            modalInfo={modalInfo}\n            onClose={() => {\n              setModalInfo(undefined)\n            }}\n          />\n        ) : null}\n        {deleteDialogDetails ? (\n          <DeleteConnectionDialog\n            handleClose={() => {\n              setDeleteDialogDetails(undefined)\n            }}\n            deleteDialogDetails={deleteDialogDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDialog\n            handleClose={() => {\n              setConnectionManagerOpen(false)\n            }}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDialog\n            handleClose={() => {\n              setConnectionToggleOpen(false)\n            }}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => {\n              setFacetedOpen(false)\n            }}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n\nexport default HamburgerMenu\n","import { useState } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { observer } from 'mobx-react'\n\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst DropdownTrackSelector = observer(function ({\n  model,\n  tracks,\n  extraMenuItems,\n  children,\n  onClick,\n}: {\n  model: HierarchicalTrackSelectorModel\n  tracks: AnyConfigurationModel[]\n  extraMenuItems: MenuItem[]\n  onClick?: () => void\n  children: React.ReactElement\n}) {\n  const { view } = model\n  const [open, setOpen] = useState(false)\n  const session = getSession(model)\n  return view ? (\n    <CascadingMenuButton\n      closeAfterItemClick={false}\n      onClick={onClick}\n      menuItems={[\n        ...tracks.map(t => ({\n          type: 'checkbox' as const,\n          label: (\n            <>\n              <SanitizedHTML html={getTrackName(t, session)} />{' '}\n              <TrackLabelMenu\n                id={t.trackId}\n                trackId={t.trackId}\n                model={model}\n                conf={t}\n                setOpen={setOpen}\n                stopPropagation\n              />\n            </>\n          ),\n          checked: view.tracks.some(\n            (f: { configuration: AnyConfigurationModel }) =>\n              f.configuration === t,\n          ),\n          onClick: () => {\n            if (!open) {\n              if (model.view.toggleTrack(t.trackId)) {\n                model.addToRecentlyUsed(t.trackId)\n              }\n            }\n          },\n        })),\n        ...extraMenuItems,\n      ]}\n    >\n      {children}\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default DropdownTrackSelector\n","import GradeIcon from '@mui/icons-material/Grade'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n  margin: {\n    marginRight: 10,\n  },\n})\nconst FavoriteTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, favoriteTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setFavoritesCounter(0)\n      }}\n      tracks={favoriteTracks}\n      model={model}\n      extraMenuItems={\n        favoriteTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear favorites',\n                onClick: () => {\n                  model.clearFavorites()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No favorite tracks yet',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Favorite tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          color=\"secondary\"\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          className={classes.margin}\n          badgeContent={model.favoritesCounter}\n        >\n          <GradeIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default FavoriteTracks\n","import HistoryIcon from '@mui/icons-material/History'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n})\n\nconst RecentlyUsedTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, recentlyUsedCounter, recentlyUsedTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setRecentlyUsedCounter(0)\n      }}\n      model={model}\n      tracks={recentlyUsedTracks}\n      extraMenuItems={\n        recentlyUsedTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear recently used',\n                onClick: () => {\n                  model.clearRecentlyUsed()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No recently used',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Recently used tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          color=\"secondary\"\n          badgeContent={recentlyUsedCounter}\n        >\n          <HistoryIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default RecentlyUsedTracks\n","import ClearIcon from '@mui/icons-material/Clear'\nimport { IconButton, InputAdornment, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\nimport FavoriteTracks from './FavoriteTracks'\nimport RecentlyUsedTracks from './RecentlyUsedTracks'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst SearchTracksTextField = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText } = model\n  const { classes } = useStyles()\n  return (\n    <TextField\n      className={classes.searchBox}\n      label=\"Filter tracks\"\n      value={filterText}\n      onChange={event => {\n        model.setFilterText(event.target.value)\n      }}\n      fullWidth\n      slotProps={{\n        input: {\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => {\n                  model.clearFilterText()\n                }}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        },\n      }}\n    />\n  )\n})\n\nconst HierarchicalTrackSelectorHeader = observer(function ({\n  model,\n  setHeaderHeight,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n}) {\n  return (\n    <div\n      ref={ref => {\n        setHeaderHeight(ref?.getBoundingClientRect().height || 0)\n      }}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} />\n        <ShoppingCart model={model} />\n        <SearchTracksTextField model={model} />\n        <RecentlyUsedTracks model={model} />\n        <FavoriteTracks model={model} />\n      </div>\n    </div>\n  )\n})\n\nexport default HierarchicalTrackSelectorHeader\n","import type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  trackId: string\n  isLeaf: boolean\n  name: string\n  onChange: (trackId: string) => void\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  menuItems?: MenuItem[]\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  return subtree?.type === 'category'\n    ? subtree.children.flatMap(t =>\n        t.type === 'category' ? getAllChildren(t) : t.conf,\n      )\n    : []\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (const node of tree.children) {\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import { useState } from 'react'\n\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { getAllChildren, treeToMap } from '../util'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { menuItems = [], name, model, id, tree } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          data.toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography data-testid={`htsCategory-${name}`}>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Show all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.showTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            {\n              label: 'Hide all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.hideTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            ...menuItems,\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => {\n            setMenuEl(null)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { Checkbox, FormControlLabel, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { isUnsupported } from '../util'\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { NodeData } from '../util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n  selected: {\n    background: '#cccc',\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const {\n    checked,\n    conf,\n    model,\n    drawerPosition,\n    id,\n    trackId,\n    name,\n    selected,\n    onChange,\n  } = data\n  const description = readConfObject(conf, 'description')\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          onClick={event => {\n            if (event.ctrlKey || event.metaKey) {\n              if (selected) {\n                model.removeFromSelection([conf])\n              } else {\n                model.addToSelection([conf])\n              }\n              event.preventDefault()\n            }\n          }}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => {\n                onChange(trackId)\n              }}\n              disabled={isUnsupported(name)}\n              slotProps={{\n                input: {\n                  // @ts-expect-error\n                  'data-testid': `htsTrackEntry-${id}`,\n                },\n              }}\n            />\n          }\n          label={\n            <div\n              data-testid={`htsTrackLabel-${id}`}\n              className={selected ? classes.selected : undefined}\n            >\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <TrackLabelMenu model={model} trackId={trackId} id={id} conf={conf} />\n    </>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useCallback, useEffect, useMemo, useRef } from 'react'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\nimport Node from './TrackListNode'\n\nimport type { TreeNode } from '../../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = node.type === 'track'\n  const selected = isLeaf ? selection[node.trackId] : false\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => {\n        const trackTurnedOn = view.toggleTrack(trackId)\n        if (trackTurnedOn) {\n          model.addToRecentlyUsed(trackId)\n        }\n      },\n      toggleCollapse: (pathName: string) => {\n        model.toggleCategory(pathName)\n      },\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n\n  // doing this properly without ts-expect-error is tricky, react-vtree has\n  // some typescript examples that could help\n  const treeWalker = useCallback(\n    // @ts-expect-error\n    function* treeWalker() {\n      for (const child of tree.children) {\n        yield getNodeData(child, 0, extra, obj)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      while (true) {\n        // @ts-expect-error\n        const parentMeta = yield\n\n        // @ts-expect-error\n        for (const curr of parentMeta.node.children) {\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  /* biome-ignore lint/correctness/useExhaustiveDependencies: */\n  useEffect(() => {\n    // @ts-expect-error\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-expect-error */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n\nexport default HierarchicalTree\n","import { useState } from 'react'\n\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\nimport HierarchicalTree from './tree/HierarchicalTree'\n\nimport type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {args => (\n        <HierarchicalTree\n          height={(args.height || offset) - offset}\n          model={model}\n          tree={tree}\n        />\n      )}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    children\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [headerHeight, setHeaderHeight] = useState(0)\n  return (\n    <>\n      <HierarchicalHeader model={model} setHeaderHeight={setHeaderHeight} />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  )\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession } from '@jbrowse/core/util'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport FilledStarIcon from '@mui/icons-material/Star'\nimport StarIcon from '@mui/icons-material/StarBorderOutlined'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  cascadingStyle: {\n    padding: 0,\n  },\n})\n\nconst TrackLabelMenu = function ({\n  id,\n  trackId,\n  stopPropagation,\n  model,\n  setOpen,\n  conf,\n}: {\n  id: string\n  trackId: string\n  stopPropagation?: boolean\n  conf: AnyConfigurationModel\n  setOpen?: (arg: boolean) => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <CascadingMenuButton\n      className={classes.cascadingStyle}\n      stopPropagation={stopPropagation}\n      setOpen={setOpen}\n      data-testid={`htsTrackEntryMenu-${id}`}\n      menuItems={[\n        ...(getSession(model).getTrackActionMenuItems?.(conf) || []),\n        model.isFavorite(trackId)\n          ? {\n              label: 'Remove from favorites',\n              onClick: () => {\n                model.removeFromFavorites(trackId)\n              },\n              icon: StarIcon,\n            }\n          : {\n              label: 'Add to favorites',\n              onClick: () => {\n                model.addToFavorites(trackId)\n              },\n              icon: FilledStarIcon,\n            },\n        {\n          label: 'Add to selection',\n          onClick: () => {\n            model.addToSelection([conf])\n          },\n        },\n        ...(model.isSelected(conf)\n          ? [\n              {\n                label: 'Remove from selection',\n                onClick: () => {\n                  model.removeFromSelection([conf])\n                },\n              },\n            ]\n          : []),\n      ]}\n    >\n      <MoreHorizIcon />\n    </CascadingMenuButton>\n  )\n}\n\nexport default TrackLabelMenu\n"],"names":["observer","model","session","getSession","selection","pluginManager","getEnv","adminMode","sessionTracks","s","Set","map","t","trackId","items","evaluateExtensionPoint","length","_jsx","CascadingMenuButton","menuItems","label","onClick","clearSelection","every","elt","canEdit","has","deleteTrackConf","item","children","Badge","badgeContent","color","ShoppingCartIcon","useStyles","makeStyles","theme","fab","position","bottom","spacing","right","classes","anchorEl","setAnchorEl","useState","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","_jsxs","_Fragment","Fab","className","event","currentTarget","AddIcon","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","FacetedDialog","lazy","CloseConnectionDialog","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","modalInfo","setModalInfo","deleteDialogDetails","setDeleteDialogDetails","connectionToggleOpen","setConnectionToggleOpen","connectionManagerOpen","setConnectionManagerOpen","facetedOpen","setFacetedOpen","breakConnection","connectionConf","deletingConnection","name","readConfObject","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","subMenu","isSessionModelWithConnectionEditing","type","checked","activeSortTrackNames","setSortTrackNames","activeSortCategories","setSortCategories","hasAnySubcategories","collapseSubCategories","collapseTopLevelCategories","expandAllCategories","MenuIcon","Suspense","fallback","undefined","handleClose","tracks","extraMenuItems","setOpen","closeAfterItemClick","SanitizedHTML","html","getTrackName","TrackLabelMenu","conf","stopPropagation","some","f","configuration","toggleTrack","addToRecentlyUsed","smallBadge","height","margin","marginRight","favoriteTracks","DropdownTrackSelector","setFavoritesCounter","clearFavorites","Tooltip","title","badge","anchorOrigin","vertical","horizontal","favoritesCounter","GradeIcon","recentlyUsedCounter","recentlyUsedTracks","setRecentlyUsedCounter","clearRecentlyUsed","HistoryIcon","searchBox","SearchTracksTextField","filterText","TextField","value","onChange","setFilterText","target","fullWidth","slotProps","input","endAdornment","InputAdornment","IconButton","clearFilterText","ClearIcon","setHeaderHeight","ref","getBoundingClientRect","style","display","HamburgerMenu","ShoppingCart","RecentlyUsedTracks","FavoriteTracks","getAllChildren","subtree","flatMap","treeToMap","tree","Map","set","node","contrastColor","palette","tertiary","contrastText","accordionText","width","Category","t0","$","_c","isOpen","data","menuEl","setMenuEl","t1","t2","t3","toggleCollapse","t4","t5","t6","t7","t8","t9","t10","t11","ArrowDropDownIcon","ArrowRightIcon","Symbol","for","MoreHorizIcon","Typography","JBrowseMenu","r","get","addToSelection","r_0","removeFromSelection","entry","showTrack","entry_0","hideTrack","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","backgroundColor","action","selected","background","TrackLabel","drawerPosition","ctrlKey","metaKey","preventDefault","endsWith","isUnsupported","Checkbox","disabled","t12","t13","t14","t15","t16","t17","t18","FormControlLabel","control","placement","accordionBase","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","_","idx","left","Array","fill","whiteSpace","getNodeData","extra","defaultHeight","isOpenByDefault","treeRef","useRef","obj","useMemo","fromEntries","pathName","toggleCategory","treeWalker","useCallback","child","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","args","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","headerHeight","HierarchicalHeader","hierarchy","cascadingStyle","isFavorite","removeFromFavorites","icon","StarIcon","addToFavorites","FilledStarIcon","isSelected","getTrackActionMenuItems"],"sourceRoot":""}