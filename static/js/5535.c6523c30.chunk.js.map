{"version":3,"file":"static/js/5535.c6523c30.chunk.js","mappings":"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","sources":["../../../plugins/variants/src/VariantFeatureWidget/LaunchBreakendPanel/LaunchBreakendPanel.tsx"],"sourcesContent":["import { lazy } from 'react'\n\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util'\nimport { Link, Typography } from '@mui/material'\n\nimport type { VariantFeatureWidgetModel } from '../stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nfunction LocStringList({\n  locStrings,\n  model,\n}: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n}) {\n  const session = getSession(model)\n  return (\n    <div>\n      <Typography>Navigate to breakend endpoint in linear view:</Typography>\n      <ul>\n        {locStrings.map((locString, index) => (\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          <li key={`${locString}-${index}`}>\n            {locString}{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              (LGV)\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nfunction LaunchBreakpointSplitViewPanel({\n  locStrings,\n  model,\n  feature,\n}: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const session = getSession(model)\n  const simpleFeature = new SimpleFeature(feature)\n  const assemblyName = model.view?.displayedRegions[0]?.assemblyName\n  return (\n    <div>\n      <Typography>Launch split view</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={JSON.stringify(locString)}>\n            {`${feature.refName}:${feature.start} // ${locString}`}{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                session.queueDialog(handleClose => [\n                  BreakendMultiLevelOptionDialog,\n                  {\n                    handleClose,\n                    session,\n                    feature: simpleFeature,\n                    stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_multilevel`,\n                    view: model.view,\n                    assemblyName,\n                  },\n                ])\n              }}\n            >\n              (top/bottom)\n            </Link>{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                session.queueDialog(handleClose => [\n                  BreakendSingleLevelOptionDialog,\n                  {\n                    handleClose,\n                    session,\n                    feature: simpleFeature,\n                    stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_singlelevel`,\n                    view: model.view,\n                    assemblyName,\n                  },\n                ])\n              }}\n            >\n              (single row)\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default function LaunchBreakendPanel(props: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let hasBreakpointSplitView = false\n\n  try {\n    hasBreakpointSplitView = !!pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <LocStringList model={model} locStrings={locStrings} />\n      {hasBreakpointSplitView ? (\n        <LaunchBreakpointSplitViewPanel\n          model={model}\n          locStrings={locStrings}\n          feature={feature}\n        />\n      ) : null}\n    </BaseCard>\n  )\n}\n"],"names":["BreakendMultiLevelOptionDialog","lazy","BreakendSingleLevelOptionDialog","LocStringList","locStrings","model","session","getSession","_jsxs","children","_jsx","Typography","map","locString","index","Link","href","onClick","event","preventDefault","view","Error","navToLocString","e","console","error","notify","LaunchBreakpointSplitViewPanel","t0","$","_c","feature","t1","t2","SimpleFeature","simpleFeature","assemblyName","displayedRegions","t3","t4","t5","Symbol","for","id","refName","start","queueDialog","handleClose","stableViewId","event_0","handleClose_0","JSON","stringify","LaunchBreakendPanel","props","hasBreakpointSplitView","pluginManager","getEnv","getViewType","BaseCard","title"],"sourceRoot":""}