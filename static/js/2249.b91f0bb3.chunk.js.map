{"version":3,"file":"static/js/2249.b91f0bb3.chunk.js","mappings":"iLAMe,MAAMA,UACXC,EAAAA,YAGR,uBAAMC,GACJ,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,4BAAZH,EAAIG,IACxB,MAAO,GAET,MAAMC,QAAgBC,EAAAA,EAAAA,cAAaL,EAAKC,KAAKK,eAAeC,SAAS,QAC/DC,EAAYP,KAAKC,QAAQ,iBAC/B,OAAOE,EACJK,OACAC,MAAM,cACNC,QAAOC,KAAOA,IAAMA,EAAEC,WAAW,OACjCC,KAAIC,IACH,MAAMC,EAAUD,EAAIL,MAAM,OACnBO,GAAWD,EAAQE,OAAOV,EAAW,GAC5C,MAAO,CACLS,QAASA,EACTD,QAASA,EAAQL,QAAOC,KAAOA,EAAEH,SAClC,GAEP,CAEA,mBAAMU,GAAiB,E","sources":["../../../plugins/config/src/RefNameAliasAdapter/RefNameAliasAdapter.ts"],"sourcesContent":["import {\n  BaseRefNameAliasAdapter,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nexport default class RefNameAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter\n{\n  async getRefNameAliases() {\n    const loc = this.getConf('location')\n    if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n      return []\n    }\n    const results = await openLocation(loc, this.pluginManager).readFile('utf8')\n    const refColumn = this.getConf('refNameColumn')\n    return results\n      .trim()\n      .split(/\\n|\\r\\n|\\r/)\n      .filter(f => !!f && !f.startsWith('#'))\n      .map(row => {\n        const aliases = row.split('\\t')\n        const [refName] = aliases.splice(refColumn, 1)\n        return {\n          refName: refName!,\n          aliases: aliases.filter(f => !!f.trim()),\n        }\n      })\n  }\n\n  async freeResources() {}\n}\n"],"names":["RefNameAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","results","openLocation","pluginManager","readFile","refColumn","trim","split","filter","f","startsWith","map","row","aliases","refName","splice","freeResources"],"sourceRoot":""}