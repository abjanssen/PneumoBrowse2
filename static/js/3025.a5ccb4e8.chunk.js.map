{"version":3,"file":"static/js/3025.a5ccb4e8.chunk.js","mappings":"yLAIO,SAASA,EAAiBC,GAC/B,MAAMC,GAAQC,EAAAA,EAAAA,GAAcF,GACtBG,EAAOF,EAAMG,QACjBC,KAEIA,EAAKC,WAAW,MAChBD,EAAKC,WAAW,YAChBD,EAAKC,WAAW,YAGhBC,EAAiBN,EAAMO,UAASH,GAAQA,EAAKC,WAAW,OAExDG,EAAc,CAClB,UACA,QACA,MACA,UACA,YACA,UACA,OACA,QACA,SACA,cAEIC,EAAkBC,KAAKC,IAC3B,GACCT,EAAK,IAAIU,MAAM,OAAOC,QAAU,GAAKL,EAAYK,QAG9CC,EAAaR,GAAgBS,SAAS,MACxCT,EACGU,MAAM,GACNJ,MAAM,MACNI,MAAMR,EAAYK,QAClBI,KAAIC,GAAKA,EAAEC,SACdC,MAAMC,KAAK,CAAER,OAAQJ,IAAmB,CAACa,EAAIC,IAAM,SAASA,MAGhE,MAAO,CACLC,QAFe,IAAIhB,KAAgBM,GAEjBG,KAAIQ,IAAK,CAAGC,KAAMD,MACpCE,OAAQ,CACNC,KAAM1B,EAAKe,KAAI,CAACb,EAAMyB,KACpB,MAAMC,EAAO1B,EAAKQ,MAAM,MAExB,MAAO,CAELmB,SAAU,CACRC,QAASF,EAAK,GACdG,MAAOH,EAAK,GACZI,IAAKJ,EAAK,GACVK,YAAaL,EAAK,GAClBM,UAAWN,EAAK,GAChBO,QAASP,EAAK,GACdJ,KAAMI,EAAK,GACXQ,OAAQR,EAAK,IAAOA,EAAK,GACzBS,OAAQT,EAAK,GACbU,WAAYV,EAAK,MACdW,OAAOC,YACR5B,EAAWG,KAAI,CAAC0B,EAAGd,KACjB,MAAMe,EAAId,EAAKD,EAAMrB,EAAYK,QACjC,MAAO,CAAC8B,GAAGE,EAAAA,EAAAA,IAASD,IAAMA,EAAIA,EAAE,MAKtCE,QAAS,CACPC,SAAU,SAASlB,IACnBG,QAASF,EAAK,GACdG,OAAQH,EAAK,GACbI,KAAMJ,EAAK,GACXS,QAAQS,EAAAA,EAAAA,GAAYlB,EAAK,IACzBmB,KAAM,CACJjB,QAASF,EAAK,GACdG,OAAQH,EAAK,GACbI,KAAMJ,EAAK,GACXS,QAAQS,EAAAA,EAAAA,GAAYlB,EAAK,KAE3BJ,KAAMI,EAAK,GACXQ,MAAOR,EAAK,MACTW,OAAOC,YACR5B,EAAWG,KAAI,CAAC0B,EAAGd,KACjB,MAAMe,EAAId,EAAKD,EAAMrB,EAAYK,QACjC,MAAO,CAAC8B,GAAGE,EAAAA,EAAAA,IAASD,IAAMA,EAAIA,EAAE,MAIvC,KAIT,C,kBC9FO,SAASI,EAAYT,GAC1B,MAAe,MAAXA,EACK,EACa,MAAXA,GACD,OAER,CAEJ,CAEO,SAAStC,EAAcF,GAC5B,OAAO,IAAImD,YAAY,QACpBC,OAAOpD,GACPa,MAAM,cACNK,KAAImC,GAAKA,EAAEjC,SACXhB,QAAOiD,KAAOA,GACnB,C,0CChBO,SAASP,EAASQ,GACvB,MAAwB,iBAAVA,IAAuBC,OAAOC,MAAMF,EACpD,CACO,SAASG,EAAWH,GACzB,MAAwB,mBAAVA,CAChB,CACO,SAASI,EAASJ,GACvB,MAAwB,iBAAVA,GAAgC,OAAVA,CACtC,CACO,SAASK,IACd,IAIE,MAAMC,EAAM,+CAGZ,OAFAC,OAAOC,aAAaC,QAAQH,EAAKA,GACjCC,OAAOC,aAAaE,WAAWJ,IACxB,CACT,CAAE,MAAOK,GACP,OAAO,CACT,CACF,CACO,SAASC,EAAaZ,GAC3B,OAAOA,EAAMa,QAAQ,2BAA4B,OACnD,C,4GAMO,MAAMC,EAAQ,CAACd,EAAOe,EAAKzD,IAAQD,KAAKC,IAAIyD,EAAK1D,KAAK0D,IAAIzD,EAAK0C,IAK/D,SAASgB,EAAMhD,EAAMiD,GAC1B,OAAOlD,MAAMC,KAAK,CAChBR,OAAQyD,EAAKjD,IACZJ,KAAI,CAACsD,EAAGhD,IAAMF,EAAOE,GAC1B,CA6BO,SAASiD,EAAYC,EAAGC,GAC7B,GAAID,IAAMC,EACR,OAAO,EAET,GAAID,GAAKC,GAAkB,iBAAND,GAA+B,iBAANC,EAAgB,CAC5D,GAAID,EAAEE,cAAgBD,EAAEC,YACtB,OAAO,EAET,GAAIvD,MAAMwD,QAAQH,GAAI,CACpB,MAAM5D,EAAS4D,EAAE5D,OACjB,GAAIA,IAAW6D,EAAE7D,OACf,OAAO,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAC/B,IAAKiD,EAAYC,EAAElD,GAAImD,EAAEnD,IACvB,OAAO,EAGX,OAAO,CACT,CACA,GAAIkD,aAAaI,KAAOH,aAAaG,IAAK,CACxC,GAAIJ,EAAEK,OAASJ,EAAEI,KACf,OAAO,EAET,MAAMC,EAAW3D,MAAMC,KAAKoD,EAAEO,WAC9B,IAAK,IAAIzD,EAAI,EAAGA,EAAIwD,EAASlE,OAAQU,GAAK,EACxC,IAAKmD,EAAEO,IAAIF,EAASxD,GAAG,IACrB,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIwD,EAASlE,OAAQU,GAAK,EAAG,CAC3C,MAAM2D,EAASH,EAASxD,GACxB,IAAKiD,EAAYU,EAAO,GAAIR,EAAES,IAAID,EAAO,KACvC,OAAO,CAEX,CACA,OAAO,CACT,CACA,GAAIT,aAAaW,KAAOV,aAAaU,IAAK,CACxC,GAAIX,EAAEK,OAASJ,EAAEI,KACf,OAAO,EAET,MAAME,EAAU5D,MAAMC,KAAKoD,EAAEO,WAC7B,IAAK,IAAIzD,EAAI,EAAGA,EAAIyD,EAAQnE,OAAQU,GAAK,EACvC,IAAKmD,EAAEO,IAAID,EAAQzD,GAAG,IACpB,OAAO,EAGX,OAAO,CACT,CACA,GAAI8D,YAAYC,OAAOb,IAAMY,YAAYC,OAAOZ,GAAI,CAClD,MAAM7D,EAAS4D,EAAE5D,OACjB,GAAIA,IAAW6D,EAAE7D,OACf,OAAO,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAC/B,GAAIkD,EAAElD,KAAOmD,EAAEnD,GACb,OAAO,EAGX,OAAO,CACT,CACA,GAAIkD,EAAEE,cAAgBY,OACpB,OAAOd,EAAEe,SAAWd,EAAEc,QAAUf,EAAEgB,QAAUf,EAAEe,MAEhD,GAAIhB,EAAEiB,UAAYjD,OAAOkD,UAAUD,QACjC,OAAOjB,EAAEiB,YAAchB,EAAEgB,UAE3B,GAAIjB,EAAEmB,WAAanD,OAAOkD,UAAUC,SAClC,OAAOnB,EAAEmB,aAAelB,EAAEkB,WAE5B,MAAMC,EAAOpD,OAAOoD,KAAKpB,GACnB5D,EAASgF,EAAKhF,OACpB,GAAIA,IAAW4B,OAAOoD,KAAKnB,GAAG7D,OAC5B,OAAO,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAC/B,IAAKkB,OAAOkD,UAAUG,eAAeC,KAAKrB,EAAGmB,EAAKtE,IAChD,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAIV,EAAQU,GAAK,EAAG,CAClC,MAAMoC,EAAMkC,EAAKtE,GACjB,IAAKiD,EAAYC,EAAEd,GAAMe,EAAEf,IACzB,OAAO,CAEX,CACA,OAAO,CACT,CAIA,OAAOc,GAAMA,GAAKC,GAAMA,CAC1B,CAqBO,SAASsB,EAA4BC,GAC1C,MAAMC,GAnBYzB,EAmBQwB,EAlBnB,KAEL,IAAI/E,EAAIuD,GAAK,WAGb,OAFAvD,EAAIR,KAAKyF,KAAKjF,EAAIA,IAAM,GAAQ,EAAJA,GAC5BA,GAAKA,EAAIR,KAAKyF,KAAKjF,EAAIA,IAAM,EAAO,GAAJA,KACvBA,EAAIA,IAAM,MAAQ,GAAK,UAAU,GAN9C,IAAoBuD,EAoBlB,MAAO,CAACL,EAAKzD,IAAQyD,GAAOzD,EAAMyD,GAAO8B,GAC3C,CACO,SAASE,EAAUC,GACxB,MAA+B,mBAApBC,gBACFA,gBAAgBD,GAElBE,KAAKC,MAAMD,KAAKE,UAAUJ,GACnC,CAOO,SAASK,EAAenC,GAAI,C","sources":["../../../plugins/spreadsheet-view/src/SpreadsheetView/importAdapters/BedpeImport.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/importAdapters/util.ts","../../../node_modules/@mui/x-data-grid/utils/utils.js"],"sourcesContent":["import { isNumber } from '@mui/x-data-grid/internals'\n\nimport { bufferToLines, parseStrand } from './util'\n\nexport function parseBedPEBuffer(buffer: Uint8Array) {\n  const lines = bufferToLines(buffer)\n  const rest = lines.filter(\n    line =>\n      !(\n        line.startsWith('#') ||\n        line.startsWith('browser') ||\n        line.startsWith('track')\n      ),\n  )\n  const lastHeaderLine = lines.findLast(line => line.startsWith('#'))\n\n  const coreColumns = [\n    'refName',\n    'start',\n    'end',\n    'mateRef',\n    'mateStart',\n    'mateEnd',\n    'name',\n    'score',\n    'strand',\n    'mateStrand',\n  ]\n  const numExtraColumns = Math.max(\n    0,\n    (rest[0]?.split('\\t')?.length || 0) - coreColumns.length,\n  )\n\n  const extraNames = lastHeaderLine?.includes('\\t')\n    ? lastHeaderLine\n        .slice(1)\n        .split('\\t')\n        .slice(coreColumns.length)\n        .map(t => t.trim())\n    : Array.from({ length: numExtraColumns }, (_v, i) => `field_${i}`)\n\n  const colNames = [...coreColumns, ...extraNames]\n  return {\n    columns: colNames.map(c => ({ name: c })),\n    rowSet: {\n      rows: rest.map((line, idx) => {\n        const cols = line.split('\\t')\n\n        return {\n          // what is displayed\n          cellData: {\n            refName: cols[0],\n            start: cols[1],\n            end: cols[2],\n            mateRefName: cols[3],\n            mateStart: cols[4],\n            mateEnd: cols[5],\n            name: cols[6],\n            score: +cols[7]! || cols[7],\n            strand: cols[8],\n            mateStrand: cols[9],\n            ...Object.fromEntries(\n              extraNames.map((n, idx) => {\n                const r = cols[idx + coreColumns.length]\n                return [n, isNumber(r) ? +r : r]\n              }),\n            ),\n          },\n          // an actual simplefeatureserialized\n          feature: {\n            uniqueId: `bedpe-${idx}`,\n            refName: cols[0],\n            start: +cols[1]!,\n            end: +cols[2]!,\n            strand: parseStrand(cols[8]),\n            mate: {\n              refName: cols[3],\n              start: +cols[4]!,\n              end: +cols[5]!,\n              strand: parseStrand(cols[9]),\n            },\n            name: cols[6],\n            score: cols[7],\n            ...Object.fromEntries(\n              extraNames.map((n, idx) => {\n                const r = cols[idx + coreColumns.length]\n                return [n, isNumber(r) ? +r : r]\n              }),\n            ),\n          },\n        }\n      }),\n    },\n  }\n}\n","export function parseStrand(strand?: string) {\n  if (strand === '+') {\n    return 1\n  } else if (strand === '-') {\n    return -1\n  } else {\n    return undefined\n  }\n}\n\nexport function bufferToLines(buffer: Uint8Array) {\n  return new TextDecoder('utf8')\n    .decode(buffer)\n    .split(/\\n|\\r\\n|\\r/)\n    .map(f => f.trim())\n    .filter(f => !!f)\n}\n","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}"],"names":["parseBedPEBuffer","buffer","lines","bufferToLines","rest","filter","line","startsWith","lastHeaderLine","findLast","coreColumns","numExtraColumns","Math","max","split","length","extraNames","includes","slice","map","t","trim","Array","from","_v","i","columns","c","name","rowSet","rows","idx","cols","cellData","refName","start","end","mateRefName","mateStart","mateEnd","score","strand","mateStrand","Object","fromEntries","n","r","isNumber","feature","uniqueId","parseStrand","mate","TextDecoder","decode","f","value","Number","isNaN","isFunction","isObject","localStorageAvailable","key","window","localStorage","setItem","removeItem","err","escapeRegExp","replace","clamp","min","range","to","_","isDeepEqual","a","b","constructor","isArray","Map","size","entriesA","entries","has","entryA","get","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","toString","keys","hasOwnProperty","call","createRandomNumberGenerator","seed","random","imul","deepClone","obj","structuredClone","JSON","parse","stringify","eslintUseValue"],"sourceRoot":""}