{"version":3,"file":"static/js/1547.dfad52d2.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/Toolbar/Toolbar.js","../../../plugins/data-management/src/AssemblyManager/AssemblyAddForm.tsx","../../../plugins/data-management/src/AssemblyManager/AssemblyEditor.tsx","../../../node_modules/@mui/icons-material/esm/Create.js","../../../plugins/data-management/src/AssemblyManager/AssemblyTable.tsx","../../../plugins/data-management/src/AssemblyManager/AssemblyManager.tsx","../../../node_modules/@mui/material/esm/Badge/badgeClasses.js","../../../packages/core/ui/DataGridFlexContainer.tsx","../../../node_modules/@mui/material/esm/Toolbar/toolbarClasses.js","../../../node_modules/@mui/icons-material/esm/Delete.js","../../../node_modules/@mui/material/esm/Badge/Badge.js","../../../node_modules/@mui/material/esm/Badge/useBadge.js","../../../node_modules/@mui/system/esm/styled/styled.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import { useState } from 'react'\n\nimport { FileSelector } from '@jbrowse/core/ui'\nimport {\n  Alert,\n  Button,\n  DialogActions,\n  DialogContent,\n  MenuItem,\n  TextField,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type {\n  AbstractSessionModel,\n  FileLocation,\n} from '@jbrowse/core/util/types'\n\nconst AdapterSelector = observer(function ({\n  adapterSelection,\n  setAdapterSelection,\n  adapterTypes,\n}: {\n  adapterSelection: AdapterType\n  setAdapterSelection: (arg: AdapterType) => void\n  adapterTypes: readonly string[]\n}) {\n  return (\n    <TextField\n      value={adapterSelection}\n      variant=\"outlined\"\n      select\n      helperText=\"Type of adapter to use\"\n      fullWidth\n      onChange={event => {\n        setAdapterSelection(event.target.value as AdapterType)\n      }}\n    >\n      {adapterTypes.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst UnindexedFastaAdapterInput = observer(function ({\n  fastaLocation,\n  setFastaLocation,\n}: {\n  fastaLocation: FileLocation\n  setFastaLocation: (arg: FileLocation) => void\n}) {\n  return (\n    <>\n      <Alert severity=\"warning\" style={{ margin: 30 }}>\n        Note: use only relatively small files for this type, it is loaded into\n        memory\n      </Alert>\n      <div>\n        <FileSelector\n          inline\n          name=\"fastaLocation\"\n          location={fastaLocation}\n          setLocation={loc => {\n            setFastaLocation(loc)\n          }}\n        />\n      </div>\n    </>\n  )\n})\n\nconst IndexedFastaAdapterInput = observer(function ({\n  fastaLocation,\n  faiLocation,\n  setFaiLocation,\n  setFastaLocation,\n}: {\n  fastaLocation: FileLocation\n  faiLocation: FileLocation\n  setFastaLocation: (arg: FileLocation) => void\n  setFaiLocation: (arg: FileLocation) => void\n}) {\n  return (\n    <>\n      <div>\n        <FileSelector\n          inline\n          name=\"fastaLocation\"\n          location={fastaLocation}\n          setLocation={loc => {\n            setFastaLocation(loc)\n          }}\n        />\n      </div>\n      <div>\n        <FileSelector\n          inline\n          name=\"faiLocation\"\n          location={faiLocation}\n          setLocation={loc => {\n            setFaiLocation(loc)\n          }}\n        />\n      </div>\n    </>\n  )\n})\n\nconst BgzipFastaAdapterInput = observer(function ({\n  fastaLocation,\n  faiLocation,\n  gziLocation,\n  setFaiLocation,\n  setGziLocation,\n  setFastaLocation,\n}: {\n  fastaLocation: FileLocation\n  faiLocation: FileLocation\n  gziLocation: FileLocation\n  setGziLocation: (arg: FileLocation) => void\n  setFastaLocation: (arg: FileLocation) => void\n  setFaiLocation: (arg: FileLocation) => void\n}) {\n  return (\n    <>\n      <div>\n        <FileSelector\n          inline\n          name=\"fastaLocation\"\n          location={fastaLocation}\n          setLocation={loc => {\n            setFastaLocation(loc)\n          }}\n        />\n      </div>\n      <div>\n        <FileSelector\n          inline\n          name=\"faiLocation\"\n          location={faiLocation}\n          setLocation={loc => {\n            setFaiLocation(loc)\n          }}\n        />\n      </div>\n      <div>\n        <FileSelector\n          inline\n          name=\"gziLocation\"\n          location={gziLocation}\n          setLocation={loc => {\n            setGziLocation(loc)\n          }}\n        />\n      </div>\n    </>\n  )\n})\n\nconst TwoBitAdapterInput = observer(function ({\n  twoBitLocation,\n  chromSizesLocation,\n  setTwoBitLocation,\n  setChromSizesLocation,\n}: {\n  twoBitLocation: FileLocation\n  chromSizesLocation: FileLocation\n  setTwoBitLocation: (arg: FileLocation) => void\n  setChromSizesLocation: (arg: FileLocation) => void\n}) {\n  return (\n    <>\n      <div>\n        <FileSelector\n          inline\n          name=\"twoBitLocation\"\n          location={twoBitLocation}\n          setLocation={loc => {\n            setTwoBitLocation(loc)\n          }}\n        />\n      </div>\n      <div>\n        <FileSelector\n          inline\n          name=\"chromSizesLocation (optional, can be added to speed up loading 2bit files with many contigs)\"\n          location={chromSizesLocation}\n          setLocation={loc => {\n            setChromSizesLocation(loc)\n          }}\n        />\n      </div>\n    </>\n  )\n})\n\nconst blank = { uri: '' } as FileLocation\n\nconst adapterTypes = [\n  'IndexedFastaAdapter',\n  'BgzipFastaAdapter',\n  'UnindexedFastaAdapter',\n  'TwoBitAdapter',\n] as const\n\ntype AdapterType =\n  | 'IndexedFastaAdapter'\n  | 'BgzipFastaAdapter'\n  | 'UnindexedFastaAdapter'\n  | 'TwoBitAdapter'\n\nconst AssemblyAddForm = observer(function ({\n  session,\n  onClose,\n}: {\n  session: AbstractSessionModel\n  onClose: () => void\n}) {\n  const [assemblyName, setAssemblyName] = useState('')\n  const [assemblyDisplayName, setAssemblyDisplayName] = useState('')\n  const [adapterSelection, setAdapterSelection] = useState<AdapterType>(\n    adapterTypes[0],\n  )\n  const [fastaLocation, setFastaLocation] = useState(blank)\n  const [faiLocation, setFaiLocation] = useState(blank)\n  const [gziLocation, setGziLocation] = useState(blank)\n  const [twoBitLocation, setTwoBitLocation] = useState(blank)\n  const [chromSizesLocation, setChromSizesLocation] = useState(blank)\n\n  return (\n    <>\n      <DialogContent>\n        <TextField\n          id=\"assembly-name\"\n          label=\"Assembly name\"\n          helperText=\"The assembly name e.g. hg38\"\n          variant=\"outlined\"\n          value={assemblyName}\n          onChange={event => {\n            setAssemblyName(event.target.value)\n          }}\n          slotProps={{\n            htmlInput: { 'data-testid': 'assembly-name' },\n          }}\n        />\n        <TextField\n          id=\"assembly-name\"\n          label=\"Assembly display name\"\n          helperText='(optional) A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\"'\n          variant=\"outlined\"\n          value={assemblyDisplayName}\n          onChange={event => {\n            setAssemblyDisplayName(event.target.value)\n          }}\n          slotProps={{\n            htmlInput: {\n              'data-testid': 'assembly-display-name',\n            },\n          }}\n        />\n        <AdapterSelector\n          adapterSelection={adapterSelection}\n          adapterTypes={adapterTypes}\n          setAdapterSelection={setAdapterSelection}\n        />\n        {adapterSelection === 'IndexedFastaAdapter' ? (\n          <IndexedFastaAdapterInput\n            fastaLocation={fastaLocation}\n            faiLocation={faiLocation}\n            setFaiLocation={setFaiLocation}\n            setFastaLocation={setFastaLocation}\n          />\n        ) : adapterSelection === 'UnindexedFastaAdapter' ? (\n          <UnindexedFastaAdapterInput\n            fastaLocation={fastaLocation}\n            setFastaLocation={setFastaLocation}\n          />\n        ) : adapterSelection === 'TwoBitAdapter' ? (\n          <TwoBitAdapterInput\n            twoBitLocation={twoBitLocation}\n            chromSizesLocation={chromSizesLocation}\n            setTwoBitLocation={setTwoBitLocation}\n            setChromSizesLocation={setChromSizesLocation}\n          />\n        ) : (\n          <BgzipFastaAdapterInput\n            fastaLocation={fastaLocation}\n            gziLocation={gziLocation}\n            faiLocation={faiLocation}\n            setFaiLocation={setFaiLocation}\n            setGziLocation={setGziLocation}\n            setFastaLocation={setFastaLocation}\n          />\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (assemblyName === '') {\n              session.notify(\"Can't create an assembly without a name\")\n            } else {\n              onClose()\n\n              // @ts-expect-error\n              session.addAssembly({\n                name: assemblyName,\n                displayName: assemblyDisplayName,\n                sequence: {\n                  type: 'ReferenceSequenceTrack',\n                  trackId: `${assemblyName}-${performance.now()}`,\n                  adapter:\n                    adapterSelection === 'IndexedFastaAdapter'\n                      ? {\n                          type: 'IndexedFastaAdapter',\n                          fastaLocation,\n                          faiLocation,\n                        }\n                      : adapterSelection === 'BgzipFastaAdapter'\n                        ? {\n                            type: 'BgzipFastaAdapter',\n                            fastaLocation,\n                            faiLocation,\n                            gziLocation,\n                          }\n                        : adapterSelection === 'UnindexedFastaAdapter'\n                          ? {\n                              type: 'UnindexedFastaAdapter',\n                              fastaLocation,\n                            }\n                          : {\n                              type: 'TwoBitAdapter',\n                              twoBitLocation,\n                              chromSizesLocation,\n                            },\n                },\n              })\n              session.notify(`Added \"${assemblyName}\"`, 'success')\n            }\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            onClose()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </>\n  )\n})\n\nexport default AssemblyAddForm\n","import { ConfigurationEditor } from '@jbrowse/plugin-config'\nimport { Button, DialogActions, DialogContent } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  container: {\n    overflow: 'auto',\n    maxHeight: 600,\n  },\n})\nconst AssemblyEditor = observer(function ({\n  assembly,\n  onClose,\n}: {\n  assembly?: AnyConfigurationModel\n  onClose: () => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <DialogContent>\n        <div className={classes.container}>\n          {assembly ? (\n            <ConfigurationEditor model={{ target: assembly }} />\n          ) : (\n            <div>No assembly</div>\n          )}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            onClose()\n          }}\n        >\n          Back\n        </Button>\n      </DialogActions>\n    </>\n  )\n})\n\nexport default AssemblyEditor\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Create');","import { readConfObject } from '@jbrowse/core/configuration'\nimport DataGridFlexContainer from '@jbrowse/core/ui/DataGridFlexContainer'\nimport AddIcon from '@mui/icons-material/Add'\nimport CreateIcon from '@mui/icons-material/Create'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport { Button, DialogActions, DialogContent, IconButton } from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst AssemblyTable = observer(function ({\n  onEditAssembly,\n  onAddAssembly,\n  onClose,\n  session,\n}: {\n  onEditAssembly: (arg: AnyConfigurationModel) => void\n  onAddAssembly: () => void\n  onClose: () => void\n  session: AbstractSessionModel\n}) {\n  return (\n    <>\n      <DialogContent>\n        <DataGridFlexContainer>\n          <DataGrid\n            rowHeight={25}\n            columnHeaderHeight={35}\n            hideFooter={session.assemblies.length < 25}\n            rows={session.assemblies.map(assembly => ({\n              id: readConfObject(assembly, 'name'),\n              name: readConfObject(assembly, 'name'),\n              displayName: readConfObject(assembly, 'displayName'),\n              aliases: readConfObject(assembly, 'aliases'),\n              assembly,\n            }))}\n            columns={[\n              { field: 'name' },\n              { field: 'displayName' },\n              { field: 'aliases' },\n              {\n                field: 'actions',\n                renderCell: ({ row }) => {\n                  const { assembly, name } = row\n                  // @ts-expect-error\n                  const editable = session.sessionAssemblies.includes(assembly)\n                    ? true\n                    : session.adminMode\n                  return (\n                    <>\n                      <IconButton\n                        disabled={!editable}\n                        onClick={() => {\n                          onEditAssembly(assembly)\n                        }}\n                      >\n                        <CreateIcon />\n                      </IconButton>\n                      <IconButton\n                        data-testid={`${name}-delete`}\n                        disabled={!editable}\n                        onClick={() => {\n                          if (editable) {\n                            if (!session.removeAssembly) {\n                              session.notify(\n                                'Unable to find removeAssembly function',\n                              )\n                            } else {\n                              session.removeAssembly(name)\n                            }\n                          }\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </>\n                  )\n                },\n              },\n            ]}\n          />\n        </DataGridFlexContainer>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            onClose()\n          }}\n        >\n          Close\n        </Button>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            onAddAssembly()\n          }}\n        >\n          Add new assembly\n        </Button>\n      </DialogActions>\n    </>\n  )\n})\n\nexport default AssemblyTable\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport AssemblyAddForm from './AssemblyAddForm'\nimport AssemblyEditor from './AssemblyEditor'\nimport AssemblyTable from './AssemblyTable'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst AssemblyManager = observer(function ({\n  session,\n  onClose,\n}: {\n  session: AbstractSessionModel\n  onClose: () => void\n}) {\n  const [isFormOpen, setFormOpen] = useState(false)\n  const [editingAssembly, setEditingAssembly] =\n    useState<AnyConfigurationModel>()\n\n  return (\n    <Dialog\n      open\n      title=\"Assembly manager\"\n      onClose={() => {\n        onClose()\n      }}\n    >\n      {editingAssembly ? (\n        <AssemblyEditor\n          assembly={editingAssembly}\n          onClose={() => {\n            setEditingAssembly(undefined)\n          }}\n        />\n      ) : isFormOpen ? (\n        <AssemblyAddForm\n          session={session}\n          onClose={() => {\n            setFormOpen(false)\n          }}\n        />\n      ) : (\n        <AssemblyTable\n          session={session}\n          onClose={() => {\n            onClose()\n          }}\n          onAddAssembly={() => {\n            setFormOpen(true)\n          }}\n          onEditAssembly={arg => {\n            setEditingAssembly(arg)\n          }}\n        />\n      )}\n    </Dialog>\n  )\n})\n\nexport default AssemblyManager\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  flexContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n})\n\n// https://mui.com/x/react-data-grid/layout/#flex-parent-container\nexport default function DataGridFlexContainer({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return <div className={classes.flexContainer}>{children}</div>\n}\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root'\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const externalForwardedProps = {\n    slots: {\n      root: slots?.root ?? components.Root,\n      badge: slots?.badge ?? components.Badge\n    },\n    slotProps: {\n      root: slotProps?.root ?? componentsProps.root,\n      badge: slotProps?.badge ?? componentsProps.badge\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: BadgeRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    className: clsx(classes.root, className),\n    ref,\n    additionalProps: {\n      as: component\n    }\n  });\n  const [BadgeSlot, badgeProps] = useSlot('badge', {\n    elementType: BadgeBadge,\n    externalForwardedProps,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;"],"names":["ToolbarRoot","name","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","AdapterSelector","observer","adapterSelection","setAdapterSelection","adapterTypes","_jsx","TextField","value","select","helperText","fullWidth","onChange","event","target","children","map","str","MenuItem","UnindexedFastaAdapterInput","fastaLocation","setFastaLocation","_jsxs","_Fragment","Alert","severity","margin","FileSelector","inline","location","setLocation","loc","IndexedFastaAdapterInput","faiLocation","setFaiLocation","BgzipFastaAdapterInput","gziLocation","setGziLocation","TwoBitAdapterInput","twoBitLocation","chromSizesLocation","setTwoBitLocation","setChromSizesLocation","blank","uri","session","onClose","assemblyName","setAssemblyName","useState","assemblyDisplayName","setAssemblyDisplayName","DialogContent","id","label","slotProps","htmlInput","DialogActions","Button","color","onClick","notify","addAssembly","displayName","sequence","type","trackId","performance","now","adapter","useStyles","makeStyles","container","overflow","maxHeight","assembly","ConfigurationEditor","model","d","onEditAssembly","onAddAssembly","DataGridFlexContainer","DataGrid","rowHeight","columnHeaderHeight","hideFooter","assemblies","length","rows","readConfObject","aliases","columns","field","renderCell","row","editable","sessionAssemblies","includes","adminMode","IconButton","disabled","CreateIcon","removeAssembly","DeleteIcon","startIcon","AddIcon","isFormOpen","setFormOpen","editingAssembly","setEditingAssembly","Dialog","open","title","AssemblyEditor","undefined","AssemblyAddForm","AssemblyTable","arg","getBadgeUtilityClass","flexContainer","flexDirection","t0","$","_c","t1","getToolbarUtilityClass","BadgeRoot","styled","verticalAlign","flexShrink","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","invisible","memoTheme","flexWrap","justifyContent","alignContent","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","Object","entries","palette","filter","createSimplePaletteValueFilter","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","components","componentsProps","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","composeClasses","externalForwardedProps","Root","Badge","RootSlot","rootProps","useSlot","elementType","clsx","additionalProps","BadgeSlot","badgeProps"],"sourceRoot":""}