{"version":3,"file":"static/js/3678.9bc802af.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/TooltipContents.tsx","../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/Tooltip.tsx"],"sourcesContent":["import { forwardRef } from 'react'\n\nimport { toLocale } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCoverageBin } from '../../shared/types'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(() => ({\n  td: {\n    whiteSpace: 'nowrap',\n  },\n}))\n\nconst toP = (s = 0) => +(+s).toFixed(1)\n\nconst pct = (n: number, total = 1) => `${toP((n / (total || 1)) * 100)}%`\n\ninterface Props {\n  feature: Feature\n  model: {\n    visibleModifications: Map<string, { color: string }>\n  }\n}\n\nfunction ColorSquare({\n  base,\n  model,\n}: {\n  base: string\n  model: { visibleModifications: Map<string, { color: string }> }\n}) {\n  const { visibleModifications } = model\n  return base.startsWith('mod_') ? (\n    <div\n      style={{\n        width: 10,\n        height: 10,\n        background: visibleModifications.get(base.replace('mod_', ''))?.color,\n      }}\n    />\n  ) : null\n}\n\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2(props, reactRef) {\n    const { feature, model } = props\n    const { classes } = useStyles()\n    const start = feature.get('start') + 1\n    const end = feature.get('end')\n    const name = feature.get('refName')\n    const { refbase, readsCounted, depth, ref, ...info } = feature.get(\n      'snpinfo',\n    ) as BaseCoverageBin\n\n    return (\n      <div ref={reactRef}>\n        <table>\n          <caption>\n            {[\n              name,\n              start === end\n                ? toLocale(start)\n                : `${toLocale(start)}..${toLocale(end)}`,\n            ]\n              .filter(f => !!f)\n              .join(':')}\n          </caption>\n          <thead>\n            <tr>\n              <th />\n              <th>Base</th>\n              <th>Count</th>\n              <th>% of Total</th>\n              <th>Strands</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td />\n              <td>Total</td>\n              <td>{readsCounted}</td>\n              <td> </td>\n              <td> </td>\n            </tr>\n            <tr>\n              <td />\n              <td>REF {refbase ? `(${refbase.toUpperCase()})` : ''}</td>\n              <td>{ref.entryDepth}</td>\n              <td>{pct(ref.entryDepth, readsCounted)}</td>\n              <td>\n                {ref['-1'] ? `${ref['-1']}(-)` : ''}\n                {ref['1'] ? `${ref['1']}(+)` : ''}\n              </td>\n            </tr>\n\n            {Object.entries(info).map(([key, entry]) =>\n              Object.entries(entry).map(([base, score]) => (\n                <tr key={`${key}_${base}`}>\n                  <td>\n                    <ColorSquare model={model} base={base} />\n                  </td>\n                  <td>{base.toUpperCase()} </td>\n                  <td className={classes.td}>\n                    {[\n                      score.entryDepth,\n                      score.avgProbability !== undefined\n                        ? `(avg. ${pct(score.avgProbability)} prob.)`\n                        : '',\n                    ]\n                      .filter(f => !!f)\n                      .join(' ')}\n                  </td>\n\n                  <td>\n                    {base === 'depth' || base === 'skip'\n                      ? '---'\n                      : pct(score.entryDepth, readsCounted)}\n                  </td>\n                  <td>\n                    {score['-1'] ? `${score['-1']}(-)` : ''}\n                    {score['1'] ? `${score['1']}(+)` : ''}\n                  </td>\n                </tr>\n              )),\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  },\n)\n\nexport default TooltipContents\n","import { Tooltip } from '@jbrowse/plugin-wiggle'\nimport { observer } from 'mobx-react'\n\nimport TooltipContents from './TooltipContents'\n\nimport type { Feature } from '@jbrowse/core/util'\n\ntype Coord = [number, number]\n\nconst SNPCoverageTooltip = observer(function (props: {\n  model: {\n    featureUnderMouse?: Feature\n  }\n  height: number\n  offsetMouseCoord: Coord\n  clientMouseCoord: Coord\n  clientRect?: DOMRect\n}) {\n  const { model } = props\n  const { featureUnderMouse: feat } = model\n  return feat && feat.get('type') === 'skip' ? null : (\n    <Tooltip TooltipContents={TooltipContents} {...props} />\n  )\n})\n\nexport default SNPCoverageTooltip\n"],"names":["useStyles","makeStyles","td","whiteSpace","pct","n","total","toP","s","toFixed","ColorSquare","t0","$","_c","base","model","visibleModifications","t1","startsWith","_jsx","style","width","height","background","get","replace","color","forwardRef","props","reactRef","feature","classes","start","info","readsCounted","ref","refbase","t2","t3","end","name","t4","t5","t6","t7","depth","t8","t9","toLocale","filter","_temp","join","t10","t11","t12","t13","children","Symbol","for","_jsxs","t14","toUpperCase","t15","t16","t17","t18","entryDepth","t19","t20","t21","t22","t23","t24","t25","t26","key","entry","Object","entries","map","score","className","undefined","avgProbability","_temp2","f","f_0","observer","featureUnderMouse","feat","Tooltip","TooltipContents"],"sourceRoot":""}