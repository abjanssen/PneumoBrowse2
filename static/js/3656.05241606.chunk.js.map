{"version":3,"file":"static/js/3656.05241606.chunk.js","mappings":"8RAiBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAaC,IAAS,CACtCC,UAAW,CACTC,OAAQ,OACRC,SAAU,WACVC,SAAU,SACVC,YAAYC,EAAAA,EAAAA,GAAON,EAAMO,QAAQN,UAAUO,MAAMC,MAAM,KAAMC,eAE/DC,SAAU,CACRC,OAAON,EAAAA,EAAAA,GAAON,EAAMO,QAAQN,UAAUO,MAAMK,OAAO,IAAKH,eAE1DI,GAAI,CACFC,OAAQ,MAqHZ,GAjHkBC,EAAAA,EAAAA,UAAS,UAAU,MACnCC,EAAK,UACLhB,IAUA,MAAM,QAAEiB,GAAYpB,KACbqB,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAC3BC,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAUC,EAAAA,EAAAA,YAAWR,IACrB,gBAAES,GAAoBF,EAEtBG,EAAmBA,KACvBV,EAAMW,gBAAgB3B,IAGxB,SAAS4B,IACPT,GAAQ,EACV,CAGA,MAsBMU,EAAMJ,EAAgBK,IAAI9B,EAAU+B,cAEpCC,EAxBaC,KAMjB,MAAMC,EAAIlB,EAAMmB,OAAO,CACrBC,QAASH,EAAEG,QACXC,MAAOJ,EAAEK,QAELC,EAAIvB,EAAMmB,OAAO,CACrBC,QAASH,EAAEG,QACXC,MAAOJ,EAAEO,MAEX,OAAON,GAAKK,EACR,CACEE,MAAOC,KAAKC,IAAID,KAAKE,IAAIL,EAAEM,SAAWX,EAAEW,UAAW,GACnDC,KAAMJ,KAAKK,IAAIb,EAAEW,SAAUN,EAAEM,UAAY7B,EAAM6B,eAEjDG,GAKIC,CAAU,IACfjD,EACHoC,QAASP,GAAKqB,oBAAoBlD,EAAUoC,UAAYpC,EAAUoC,UAGpE,OAAOJ,GACLmB,EAAAA,EAAAA,MAAA,OACEC,UAAWnC,EAAQjB,UACnBqD,MAAO,CACLP,KAAMd,EAAEc,KACRL,MAAOT,EAAES,OACTa,SAAA,EAEFC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,iCAAiCC,OAAK,EAAAJ,UACnDC,EAAAA,EAAAA,KAACI,EAAAA,EAAU,CACTC,IAAKvC,EACL+B,UAAWnC,EAAQJ,GACnBgD,QAASA,KACP1C,GAAQ,IACRmC,UAEFC,EAAAA,EAAAA,KAACO,EAAAA,EAAQ,CAACC,SAAS,QAAQX,UAAWnC,EAAQP,gBAGlD6C,EAAAA,EAAAA,KAACS,EAAAA,KAAI,CACH3C,SAAUA,EAAS4C,QACnBC,gBAAiBA,CAACC,EAAQC,KACxBA,EAAS7C,GACTK,KAEFV,KAAMA,EACNmD,QAASzC,EACT0C,UAAW,CACT,CACEC,MAAO,oBACPC,KAAMC,EAAAA,EACNZ,QAASA,KACPnC,MAGJ,CACE6C,MAAO,8BACPC,KAAME,EAAAA,EACNb,QAASA,KACP,IAAIc,EAAiBpD,EAAQqD,QAAQ9C,IAAI,gBACpC6C,IACHA,EAAiBpD,EAAQsD,UACvB,qBACA,iBAIJF,EAAeG,YAAY9E,GAC3B0B,YAMR,IACN,E","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/Highlight.tsx"],"sourcesContent":["import { useRef, useState } from 'react'\n\nimport { Menu } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { colord } from '@jbrowse/core/util/colord'\nimport BookmarkIcon from '@mui/icons-material/Bookmark'\nimport CloseIcon from '@mui/icons-material/Close'\nimport LinkIcon from '@mui/icons-material/Link'\nimport { IconButton, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '../model'\nimport type { Region, SessionWithWidgets } from '@jbrowse/core/util'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  highlight: {\n    height: '100%',\n    position: 'absolute',\n    overflow: 'hidden',\n    background: colord(theme.palette.highlight.main).alpha(0.35).toRgbString(),\n  },\n  linkIcon: {\n    color: colord(theme.palette.highlight.main).darken(0.2).toRgbString(),\n  },\n  z3: {\n    zIndex: 3,\n  },\n}))\n\nconst Highlight = observer(function ({\n  model,\n  highlight,\n}: {\n  model: LGV\n  highlight: {\n    assemblyName: string\n    refName: string\n    start: number\n    end: number\n  }\n}) {\n  const { classes } = useStyles()\n  const [open, setOpen] = useState(false)\n  const anchorEl = useRef(null)\n  const session = getSession(model) as SessionWithWidgets\n  const { assemblyManager } = session\n\n  const dismissHighlight = () => {\n    model.removeHighlight(highlight)\n  }\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  // coords\n  const mapCoords = (r: {\n    assemblyName: string\n    refName: string\n    start: number\n    end: number\n  }) => {\n    const s = model.bpToPx({\n      refName: r.refName,\n      coord: r.start,\n    })\n    const e = model.bpToPx({\n      refName: r.refName,\n      coord: r.end,\n    })\n    return s && e\n      ? {\n          width: Math.max(Math.abs(e.offsetPx - s.offsetPx), 3),\n          left: Math.min(s.offsetPx, e.offsetPx) - model.offsetPx,\n        }\n      : undefined\n  }\n\n  const asm = assemblyManager.get(highlight.assemblyName)\n\n  const h = mapCoords({\n    ...highlight,\n    refName: asm?.getCanonicalRefName(highlight.refName) ?? highlight.refName,\n  })\n\n  return h ? (\n    <div\n      className={classes.highlight}\n      style={{\n        left: h.left,\n        width: h.width,\n      }}\n    >\n      <Tooltip title=\"Highlighted from URL parameter\" arrow>\n        <IconButton\n          ref={anchorEl}\n          className={classes.z3}\n          onClick={() => {\n            setOpen(true)\n          }}\n        >\n          <LinkIcon fontSize=\"small\" className={classes.linkIcon} />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl.current}\n        onMenuItemClick={(_event, callback) => {\n          callback(session)\n          handleClose()\n        }}\n        open={open}\n        onClose={handleClose}\n        menuItems={[\n          {\n            label: 'Dismiss highlight',\n            icon: CloseIcon,\n            onClick: () => {\n              dismissHighlight()\n            },\n          },\n          {\n            label: 'Bookmark highlighted region',\n            icon: BookmarkIcon,\n            onClick: () => {\n              let bookmarkWidget = session.widgets.get('GridBookmark')\n              if (!bookmarkWidget) {\n                bookmarkWidget = session.addWidget(\n                  'GridBookmarkWidget',\n                  'GridBookmark',\n                )\n              }\n              // @ts-expect-error\n              bookmarkWidget.addBookmark(highlight as Region)\n              dismissHighlight()\n            },\n          },\n        ]}\n      />\n    </div>\n  ) : null\n})\n\nexport default Highlight\n"],"names":["useStyles","makeStyles","theme","highlight","height","position","overflow","background","colord","palette","main","alpha","toRgbString","linkIcon","color","darken","z3","zIndex","observer","model","classes","open","setOpen","useState","anchorEl","useRef","session","getSession","assemblyManager","dismissHighlight","removeHighlight","handleClose","asm","get","assemblyName","h","r","s","bpToPx","refName","coord","start","e","end","width","Math","max","abs","offsetPx","left","min","undefined","mapCoords","getCanonicalRefName","_jsxs","className","style","children","_jsx","Tooltip","title","arrow","IconButton","ref","onClick","LinkIcon","fontSize","Menu","current","onMenuItemClick","_event","callback","onClose","menuItems","label","icon","CloseIcon","BookmarkIcon","bookmarkWidget","widgets","addWidget","addBookmark"],"sourceRoot":""}