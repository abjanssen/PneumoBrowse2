{"version":3,"file":"static/js/4788.97dc2f34.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/esm/AccordionSummary/accordionSummaryClasses.js","../../../node_modules/@mui/material/esm/AccordionDetails/accordionDetailsClasses.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BasicValue.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FieldName.tsx","../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../node_modules/@mui/material/esm/AccordionSummary/AccordionSummary.js","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCoreDetails.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import { isValidElement } from 'react'\n\nimport { Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SanitizedHTML } from '../../ui'\nimport { isObject } from '../../util'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldValue: {\n    wordBreak: 'break-word',\n    maxHeight: 300,\n    fontSize: 12,\n    padding: theme.spacing(0.5),\n    overflow: 'auto',\n  },\n}))\n\nexport default function BasicValue({ value }: { value: unknown }) {\n  const { classes } = useStyles()\n  const isLink = /^https?:\\/\\//.exec(`${value}`)\n  return (\n    <div className={classes.fieldValue}>\n      {isValidElement(value) ? (\n        value\n      ) : isLink ? (\n        <Link href={`${value}`}>{`${value}`}</Link>\n      ) : (\n        <SanitizedHTML\n          html={isObject(value) ? JSON.stringify(value) : String(value)}\n        />\n      )}\n    </div>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport BasicValue from './BasicValue'\nimport FieldName from './FieldName'\n\nconst useStyles = makeStyles()({\n  field: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n})\n\nexport default function SimpleField({\n  name,\n  value,\n  description,\n  prefix,\n  width,\n  formatter,\n}: {\n  description?: React.ReactNode\n  name: string\n  value: unknown\n  prefix?: string[]\n  width?: number\n  formatter?: (value: unknown, key: string) => React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return value != null ? (\n    <div className={classes.field}>\n      <FieldName\n        prefix={prefix}\n        description={description}\n        name={name}\n        width={width}\n      />\n      <BasicValue value={formatter ? formatter(value, name) : value} />\n    </div>\n  ) : null\n}\n","import { Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  fieldDescription: {\n    '&:hover': {\n      background: theme.palette.mode === 'dark' ? '#e65100' : 'yellow',\n    },\n  },\n  fieldName: {\n    wordBreak: 'break-all',\n    minWidth: 90,\n    borderBottom: '1px solid #0003',\n    fontSize: 12,\n    background: theme.palette.action.disabledBackground,\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.5),\n  },\n}))\n\nexport default function FieldName({\n  description,\n  name,\n  width,\n  prefix = [],\n}: {\n  description?: React.ReactNode\n  name: string\n  prefix?: string[]\n  width?: number\n}) {\n  const { classes, cx } = useStyles()\n  const val = [...prefix, name].join('.')\n  return description ? (\n    <Tooltip title={description} placement=\"left\">\n      <div className={cx(classes.fieldDescription, classes.fieldName)}>\n        {val}\n      </div>\n    </Tooltip>\n  ) : (\n    <div className={classes.fieldName} style={{ width: width }}>\n      {val}\n    </div>\n  )\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper'\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    slots,\n    slotProps,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AccordionSummaryRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      focusRipple: false,\n      disableRipple: true,\n      disabled,\n      'aria-expanded': expanded,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onClick: event => {\n        handlers.onClick?.(event);\n        handleChange(event);\n      }\n    })\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: AccordionSummaryContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ExpandIconWrapperSlot, expandIconWrapperSlotProps] = useSlot('expandIconWrapper', {\n    className: classes.expandIconWrapper,\n    elementType: AccordionSummaryExpandIconWrapper,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(ContentSlot, {\n      ...contentSlotProps,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(ExpandIconWrapperSlot, {\n      ...expandIconWrapperSlotProps,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    expandIconWrapper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    content: PropTypes.elementType,\n    expandIconWrapper: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\n\nimport type { BaseProps } from '../types'\n\nexport default function BaseCoreDetails(props: BaseProps) {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n"],"names":["AccordionDetailsRoot","name","slot","theme","padding","spacing","inProps","ref","props","className","other","ownerState","classes","root","useUtilityClasses","getAccordionSummaryUtilityClass","getAccordionDetailsUtilityClass","useStyles","makeStyles","fieldValue","wordBreak","maxHeight","fontSize","overflow","BasicValue","t0","$","_c","value","t1","exec","isLink","t2","t3","isValidElement","_jsx","Link","href","children","SanitizedHTML","html","isObject","JSON","stringify","String","field","display","flexWrap","SimpleField","description","prefix","width","formatter","_jsxs","FieldName","fieldDescription","background","palette","mode","fieldName","minWidth","borderBottom","action","disabledBackground","marginRight","undefined","cx","val","join","t4","Tooltip","placement","style","d","Position","feature","strand","strandMap","str","assembleLocString","_Fragment","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","coreRenderedDetails","type","Object","entries","map","key","filter","_temp","_temp2","name_0","value_0","AccordionSummaryRoot","transition","duration","transitions","shortest","minHeight","create","focusVisible","backgroundColor","vars","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","expanded","AccordionSummaryContent","textAlign","flexGrow","margin","AccordionSummaryExpandIconWrapper","color","active","transform","expandIcon","focusVisibleClassName","onClick","slots","slotProps","toggle","A","content","expandIconWrapper","externalForwardedProps","RootSlot","rootSlotProps","shouldForwardComponentProp","elementType","additionalProps","focusRipple","disableRipple","getSlotProps","handlers","event","handleChange","ContentSlot","contentSlotProps","ExpandIconWrapperSlot","expandIconWrapperSlotProps","expansionPanelDetails","icon","tertiary","contrastText","BaseCard","title","defaultExpanded","t5","t6","ExpandMore","Typography","variant","AccordionSummary","AccordionDetails","Accordion","BaseCoreDetails"],"sourceRoot":""}