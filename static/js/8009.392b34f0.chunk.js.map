{"version":3,"file":"static/js/8009.392b34f0.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/esm/Create.js","../../../plugins/data-management/src/AssemblyManager/AssemblyTable.tsx","../../../plugins/data-management/src/AssemblyManager/AssemblyAddForm.tsx","../../../plugins/data-management/src/AssemblyManager/AssemblyEditor.tsx","../../../plugins/data-management/src/AssemblyManager/AssemblyManager.tsx","../../../node_modules/@mui/icons-material/esm/Delete.js","../../../node_modules/@mui/material/Table/Table.js","../../../node_modules/@mui/material/Table/TableContext.js","../../../node_modules/@mui/material/Table/Tablelvl2Context.js","../../../node_modules/@mui/material/Table/tableClasses.js","../../../node_modules/@mui/material/TableBody/TableBody.js","../../../node_modules/@mui/material/TableBody/tableBodyClasses.js","../../../node_modules/@mui/material/TableCell/TableCell.js","../../../node_modules/@mui/material/TableCell/tableCellClasses.js","../../../node_modules/@mui/material/TableContainer/TableContainer.js","../../../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../../../node_modules/@mui/material/TableHead/TableHead.js","../../../node_modules/@mui/material/TableHead/tableHeadClasses.js","../../../node_modules/@mui/material/TableRow/TableRow.js","../../../node_modules/@mui/material/TableRow/tableRowClasses.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Create');","import React from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@mui/material'\nimport {\n  readConfObject,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\n\nimport CreateIcon from '@mui/icons-material/Create'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nconst AssemblyTable = observer(function ({\n  rootModel,\n  setIsAssemblyBeingEdited,\n  setAssemblyBeingEdited,\n}: {\n  rootModel: {\n    jbrowse: {\n      removeAssemblyConf: (arg: string) => void\n      assemblies: AnyConfigurationModel[]\n    }\n  }\n  setIsAssemblyBeingEdited(arg: boolean): void\n  setAssemblyBeingEdited(arg: AnyConfigurationModel): void\n}) {\n  function removeAssembly(name: string) {\n    rootModel.jbrowse.removeAssemblyConf(name)\n  }\n\n  const { assemblies } = rootModel.jbrowse\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Display name</TableCell>\n            <TableCell>Aliases</TableCell>\n            <TableCell>Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {assemblies.map(assembly => {\n            const name = readConfObject(assembly, 'name')\n            const displayName = readConfObject(assembly, 'displayName')\n            const aliases = readConfObject(assembly, 'aliases')\n            return (\n              <TableRow key={name}>\n                <TableCell>{name}</TableCell>\n                <TableCell>{displayName}</TableCell>\n                <TableCell>{aliases ? aliases.toString() : ''}</TableCell>\n                <TableCell>\n                  <IconButton\n                    data-testid={`${name}-edit`}\n                    onClick={() => {\n                      setIsAssemblyBeingEdited(true)\n                      setAssemblyBeingEdited(assembly)\n                    }}\n                  >\n                    <CreateIcon color=\"primary\" />\n                  </IconButton>\n                  <IconButton\n                    data-testid={`${name}-delete`}\n                    onClick={() => {\n                      removeAssembly(name)\n                    }}\n                  >\n                    <DeleteIcon color=\"error\" />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n})\n\nexport default AssemblyTable\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Button, Grid, MenuItem, Paper, TextField } from '@mui/material'\nimport { FileSelector } from '@jbrowse/core/ui'\nimport { AbstractRootModel, FileLocation } from '@jbrowse/core/util/types'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\nconst AdapterSelector = observer(function ({\n  adapterSelection,\n  setAdapterSelection,\n  adapterTypes,\n}: {\n  adapterSelection: string\n  setAdapterSelection: (arg: string) => void\n  adapterTypes: readonly string[]\n}) {\n  return (\n    <TextField\n      value={adapterSelection}\n      label=\"Type\"\n      select\n      helperText=\"Type of adapter to use\"\n      fullWidth\n      onChange={event => {\n        setAdapterSelection(event.target.value)\n      }}\n    >\n      {adapterTypes.map(str => (\n        <MenuItem key={str} value={str}>\n          {str}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nconst AdapterInput = observer(function ({\n  adapterSelection,\n  fastaLocation,\n  faiLocation,\n  gziLocation,\n  twoBitLocation,\n  chromSizesLocation,\n  setFaiLocation,\n  setGziLocation,\n  setTwoBitLocation,\n  setFastaLocation,\n  setChromSizesLocation,\n}: {\n  adapterSelection: string\n  fastaLocation: FileLocation\n  faiLocation: FileLocation\n  gziLocation: FileLocation\n  twoBitLocation: FileLocation\n  chromSizesLocation: FileLocation\n  setGziLocation: (arg: FileLocation) => void\n  setTwoBitLocation: (arg: FileLocation) => void\n  setChromSizesLocation: (arg: FileLocation) => void\n  setFastaLocation: (arg: FileLocation) => void\n  setFaiLocation: (arg: FileLocation) => void\n}) {\n  if (\n    adapterSelection === 'IndexedFastaAdapter' ||\n    adapterSelection === 'BgzipFastaAdapter'\n  ) {\n    return (\n      <Grid container spacing={2}>\n        <Grid item>\n          <FileSelector\n            name=\"fastaLocation\"\n            location={fastaLocation}\n            setLocation={loc => {\n              setFastaLocation(loc)\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <FileSelector\n            name=\"faiLocation\"\n            location={faiLocation}\n            setLocation={loc => {\n              setFaiLocation(loc)\n            }}\n          />\n        </Grid>\n        {adapterSelection === 'BgzipFastaAdapter' ? (\n          <Grid item>\n            <FileSelector\n              name=\"gziLocation\"\n              location={gziLocation}\n              setLocation={loc => {\n                setGziLocation(loc)\n              }}\n            />\n          </Grid>\n        ) : null}\n      </Grid>\n    )\n  }\n\n  if (adapterSelection === 'TwoBitAdapter') {\n    return (\n      <Grid container spacing={2}>\n        <Grid item>\n          <FileSelector\n            name=\"twoBitLocation\"\n            location={twoBitLocation}\n            setLocation={loc => {\n              setTwoBitLocation(loc)\n            }}\n          />\n        </Grid>\n        <Grid item>\n          <FileSelector\n            name=\"chromSizesLocation (optional, can be added to speed up loading 2bit files with many contigs)\"\n            location={chromSizesLocation}\n            setLocation={loc => {\n              setChromSizesLocation(loc)\n            }}\n          />\n        </Grid>\n      </Grid>\n    )\n  }\n\n  return null\n})\n\nconst blank = { uri: '' } as FileLocation\n\nconst adapterTypes = [\n  'IndexedFastaAdapter',\n  'BgzipFastaAdapter',\n  'TwoBitAdapter',\n] as const\n\nconst AssemblyAddForm = observer(function ({\n  rootModel,\n  setFormOpen,\n}: {\n  rootModel: AbstractRootModel\n  setFormOpen: (arg: boolean) => void\n}) {\n  const [assemblyName, setAssemblyName] = useState('')\n  const [assemblyDisplayName, setAssemblyDisplayName] = useState('')\n  const [adapterSelection, setAdapterSelection] = useState(\n    adapterTypes[0] as string,\n  )\n  const [fastaLocation, setFastaLocation] = useState(blank)\n  const [faiLocation, setFaiLocation] = useState(blank)\n  const [gziLocation, setGziLocation] = useState(blank)\n  const [twoBitLocation, setTwoBitLocation] = useState(blank)\n  const [chromSizesLocation, setChromSizesLocation] = useState(blank)\n\n  function createAssembly() {\n    if (assemblyName === '') {\n      rootModel.session?.notify(\"Can't create an assembly without a name\")\n    } else {\n      setFormOpen(false)\n      let newAssembly: Record<string, unknown>\n      if (adapterSelection === 'IndexedFastaAdapter') {\n        newAssembly = {\n          name: assemblyName,\n          displayName: assemblyDisplayName,\n          sequence: {\n            adapter: {\n              type: 'IndexedFastaAdapter',\n              fastaLocation,\n              faiLocation,\n            },\n          },\n        }\n      } else if (adapterSelection === 'BgzipFastaAdapter') {\n        newAssembly = {\n          name: assemblyName,\n          displayName: assemblyDisplayName,\n          sequence: {\n            adapter: {\n              type: 'BgzipFastaAdapter',\n              fastaLocation,\n              faiLocation,\n              gziLocation,\n            },\n          },\n        }\n      } else if (adapterSelection === 'TwoBitAdapter') {\n        newAssembly = {\n          name: assemblyName,\n          displayName: assemblyDisplayName,\n          sequence: {\n            adapter: {\n              type: 'TwoBitAdapter',\n              twoBitLocation,\n              chromSizesLocation,\n            },\n          },\n        }\n      } else {\n        throw new Error(`unknown ${adapterSelection}`)\n      }\n      rootModel.jbrowse.addAssemblyConf(newAssembly)\n      rootModel.session?.notify(\n        `Successfully added ${assemblyName} assembly to JBrowse 2`,\n        'success',\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Paper>\n        <TextField\n          id=\"assembly-name\"\n          label=\"Assembly name\"\n          helperText=\"The assembly name e.g. hg38\"\n          variant=\"outlined\"\n          value={assemblyName}\n          onChange={event => {\n            setAssemblyName(event.target.value)\n          }}\n          slotProps={{\n            htmlInput: { 'data-testid': 'assembly-name' },\n          }}\n        />\n        <TextField\n          id=\"assembly-name\"\n          label=\"Assembly display name\"\n          helperText='A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\"'\n          variant=\"outlined\"\n          value={assemblyDisplayName}\n          onChange={event => {\n            setAssemblyDisplayName(event.target.value)\n          }}\n          slotProps={{\n            htmlInput: { 'data-testid': 'assembly-display-name' },\n          }}\n        />\n        <AdapterSelector\n          adapterSelection={adapterSelection}\n          adapterTypes={adapterTypes}\n          setAdapterSelection={setAdapterSelection}\n        />\n        <AdapterInput\n          adapterSelection={adapterSelection}\n          fastaLocation={fastaLocation}\n          faiLocation={faiLocation}\n          gziLocation={gziLocation}\n          twoBitLocation={twoBitLocation}\n          chromSizesLocation={chromSizesLocation}\n          setFaiLocation={setFaiLocation}\n          setGziLocation={setGziLocation}\n          setTwoBitLocation={setTwoBitLocation}\n          setFastaLocation={setFastaLocation}\n          setChromSizesLocation={setChromSizesLocation}\n        />\n      </Paper>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        startIcon={<AddIcon />}\n        onClick={createAssembly}\n      >\n        Create new assembly\n      </Button>\n    </div>\n  )\n})\n\nexport default AssemblyAddForm\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { ConfigurationEditor } from '@jbrowse/plugin-config'\nimport { makeStyles } from 'tss-react/mui'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  container: {\n    overflow: 'auto',\n    maxHeight: 600,\n  },\n})\nconst AssemblyEditor = observer(function ({\n  assembly,\n}: {\n  assembly?: AnyConfigurationModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.container}>\n      {assembly ? (\n        <ConfigurationEditor model={{ target: assembly }} />\n      ) : (\n        <div>No assembly</div>\n      )}\n    </div>\n  )\n})\n\nexport default AssemblyEditor\n","import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { Button, DialogActions, DialogContent } from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\n// icons\nimport AddIcon from '@mui/icons-material/Add'\n\n// locals\nimport AssemblyTable from './AssemblyTable'\nimport AssemblyAddForm from './AssemblyAddForm'\nimport AssemblyEditor from './AssemblyEditor'\n\nconst AssemblyManager = observer(function ({\n  rootModel,\n  onClose,\n}: {\n  rootModel: any\n  onClose: (arg: boolean) => void\n}) {\n  const [isFormOpen, setFormOpen] = useState(false)\n  const [isAssemblyBeingEdited, setIsAssemblyBeingEdited] = useState(false)\n  const [assemblyBeingEdited, setAssemblyBeingEdited] =\n    useState<AnyConfigurationModel>()\n\n  const showAssemblyTable = !isFormOpen && !isAssemblyBeingEdited\n\n  return (\n    <Dialog\n      open\n      onClose={() => {\n        onClose(false)\n      }}\n      title=\"Assembly manager\"\n    >\n      <DialogContent>\n        {showAssemblyTable ? (\n          <AssemblyTable\n            rootModel={rootModel}\n            setIsAssemblyBeingEdited={setIsAssemblyBeingEdited}\n            setAssemblyBeingEdited={setAssemblyBeingEdited}\n          />\n        ) : null}\n        {isAssemblyBeingEdited ? (\n          <AssemblyEditor assembly={assemblyBeingEdited} />\n        ) : null}\n        {isFormOpen ? (\n          <AssemblyAddForm rootModel={rootModel} setFormOpen={setFormOpen} />\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        {isFormOpen ? (\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setFormOpen(false)\n            }}\n          >\n            Back\n          </Button>\n        ) : null}\n        {isAssemblyBeingEdited ? (\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setIsAssemblyBeingEdited(false)\n            }}\n          >\n            Back\n          </Button>\n        ) : null}\n        {showAssemblyTable ? (\n          <>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => {\n                onClose(false)\n              }}\n            >\n              Close\n            </Button>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => {\n                setFormOpen(true)\n              }}\n            >\n              Add new assembly\n            </Button>\n          </>\n        ) : null}\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default AssemblyManager\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from \"./TableContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableUtilityClass } from \"./tableClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': {\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      borderCollapse: 'separate'\n    }\n  }]\n})));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    padding,\n    size,\n    stickyHeader\n  };\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, {\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableBodyUtilityClass } from \"./tableBodyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, {\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableContainerUtilityClass } from \"./tableContainerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, {\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableHeadUtilityClass } from \"./tableHeadClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableRowClasses, { getTableRowUtilityClass } from \"./tableRowClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n})));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false,\n    ...other\n  } = props;\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const ownerState = {\n    ...props,\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Should be valid `<tr>` children such as `TableCell`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;"],"names":["createSvgIcon","d","observer","rootModel","setIsAssemblyBeingEdited","setAssemblyBeingEdited","assemblies","jbrowse","React","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","assembly","name","readConfObject","displayName","aliases","key","toString","IconButton","onClick","CreateIcon","color","removeAssemblyConf","removeAssembly","DeleteIcon","AdapterSelector","adapterSelection","setAdapterSelection","adapterTypes","TextField","value","label","select","helperText","fullWidth","onChange","event","target","str","MenuItem","AdapterInput","fastaLocation","faiLocation","gziLocation","twoBitLocation","chromSizesLocation","setFaiLocation","setGziLocation","setTwoBitLocation","setFastaLocation","setChromSizesLocation","Grid","container","spacing","item","FileSelector","location","setLocation","loc","blank","uri","setFormOpen","assemblyName","setAssemblyName","useState","assemblyDisplayName","setAssemblyDisplayName","id","variant","slotProps","htmlInput","Button","startIcon","AddIcon","session","notify","newAssembly","sequence","adapter","type","Error","addAssemblyConf","useStyles","makeStyles","overflow","maxHeight","classes","className","ConfigurationEditor","model","onClose","isFormOpen","isAssemblyBeingEdited","assemblyBeingEdited","showAssemblyTable","Dialog","open","title","DialogContent","AssemblyTable","AssemblyEditor","AssemblyAddForm","DialogActions","TableRoot","slot","overridesResolver","props","styles","ownerState","root","stickyHeader","theme","display","width","borderCollapse","borderSpacing","typography","body2","padding","vars","palette","text","secondary","textAlign","captionSide","variants","style","defaultComponent","inProps","ref","size","other","slots","useUtilityClasses","table","Provider","children","as","role","getTableUtilityClass","TableBodyRoot","tablelvl2","getTableBodyUtilityClass","TableCellRoot","align","verticalAlign","borderBottom","border","mode","divider","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","fontSize","paddingCheckbox","flexDirection","position","top","zIndex","backgroundColor","background","default","componentProp","paddingProp","scope","scopeProp","sizeProp","sortDirection","variantProp","isHeadCell","undefined","ariaSort","getTableCellUtilityClass","TableContainerRoot","overflowX","getTableContainerUtilityClass","TableHeadRoot","getTableHeadUtilityClass","TableRowRoot","head","footer","outline","hover","action","selected","mainChannel","selectedOpacity","main","hoverOpacity","getTableRowUtilityClass"],"sourceRoot":""}