{"version":3,"file":"static/js/4755.8d938db2.chunk.js","mappings":"sSAqBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,cAAe,CACbC,QAAS,OACTC,cAAe,UAEjBC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYP,EAAMQ,YAAYC,OAAO,YAAa,CAChDC,SAAUV,EAAMQ,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAqHf,GAjH8BQ,EAAAA,EAAAA,WAAS,UAAU,QAC/CC,EAAO,MACPC,IAKA,MAAM,QAAEC,EAAO,GAAEC,GAAOnB,KACjBoB,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAqBC,IAA0BR,EAAAA,EAAAA,WAAS,IACzD,QAAES,IAAYC,EAAAA,EAAAA,YAAWf,GACzBgB,EAAQC,QACXd,GAAiBG,GAAiBE,GAAgBE,GAGrD,SAASQ,IACHf,GAAiBG,EACnBQ,EAAQK,UAAU,CAAEC,KAAMjB,EAAekB,OAAQf,IACxCE,EACTM,EAAQK,UAAU,CAAEG,OAAQd,IACnBE,GACTI,EAAQK,UAAU,CAAEI,OAAQb,GAEhC,CAEA,OACEc,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAAC3B,QAASA,EAAS4B,MAAM,qBACnCH,EAAAA,cAAA,QAAMI,SAAUV,GACdM,EAAAA,cAACK,EAAAA,EAAa,CAACC,UAAW7B,EAAQf,eAChCsC,EAAAA,cAACO,EAAAA,EAAiB,KAAC,0GAInBP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAM,cACNC,QAAQ,WACRC,MAAOhC,EACPiC,SAAUC,IACRjC,EAAiBiC,EAAMC,OAAOH,MAAM,IAGxCX,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAM,aACNC,QAAQ,WACRC,MAAO7B,EACP8B,SAAUC,IACR9B,EAAgB8B,EAAMC,OAAOH,MAAM,IAGvCX,EAAAA,cAACO,EAAAA,EAAiB,CAChBQ,QAASA,KACP1B,GAAwBD,EAAoB,GAG9CY,EAAAA,cAACgB,EAAAA,EAAU,CACTV,UAAW5B,EAAGD,EAAQZ,OAAQ,CAC5B,CAACY,EAAQJ,YAAae,IAExB,gBAAeA,EACf,aAAW,aAEXY,EAAAA,cAACiB,EAAAA,EAAc,OACJ,oBAGfjB,EAAAA,cAACkB,EAAAA,EAAQ,CAACC,GAAI/B,GACZY,EAAAA,cAAA,OAAKM,UAAW7B,EAAQf,eACtBsC,EAAAA,cAACO,EAAAA,EAAiB,KAAC,6PAMnBP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAM,gBACNC,QAAQ,WACRC,MAAO3B,EACP4B,SAAUC,IACR5B,EAAgB4B,EAAMC,OAAOH,MAAM,IAGvCX,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAM,gBACNC,QAAQ,WACRC,MAAOzB,EACP0B,SAAUC,IACR1B,EAAgB0B,EAAMC,OAAOH,MAAM,OAM7CX,EAAAA,cAACoB,EAAAA,EAAa,KACZpB,EAAAA,cAACqB,EAAAA,EAAM,CAACX,QAAQ,YAAYK,QAASxC,GAAS,UAG9CyB,EAAAA,cAACqB,EAAAA,EAAM,CACLX,QAAQ,YACRY,MAAM,UACNP,QAASrB,EACT6B,UAAW/B,GACZ,YAOX,G","sources":["../../../plugins/data-management/src/PluginStoreWidget/components/AddCustomPluginDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  Collapse,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  TextField,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\n\n// icons\nimport IconButton from '@mui/material/IconButton'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\n// locals\nimport { PluginStoreModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  dialogContent: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n}))\n\nconst AddCustomPluginDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: PluginStoreModel\n}) {\n  const { classes, cx } = useStyles()\n  const [umdPluginName, setUMDPluginName] = useState('')\n  const [umdPluginUrl, setUMDPluginUrl] = useState('')\n  const [esmPluginUrl, setESMPluginUrl] = useState('')\n  const [cjsPluginUrl, setCJSPluginUrl] = useState('')\n  const [advancedOptionsOpen, setAdvancedOptionsOpen] = useState(false)\n  const { jbrowse } = getSession(model)\n  const ready = Boolean(\n    (umdPluginName && umdPluginUrl) || esmPluginUrl || cjsPluginUrl,\n  )\n\n  function handleSubmit() {\n    if (umdPluginName && umdPluginUrl) {\n      jbrowse.addPlugin({ name: umdPluginName, umdUrl: umdPluginUrl })\n    } else if (esmPluginUrl) {\n      jbrowse.addPlugin({ esmUrl: esmPluginUrl })\n    } else if (cjsPluginUrl) {\n      jbrowse.addPlugin({ cjsUrl: cjsPluginUrl })\n    }\n  }\n\n  return (\n    <Dialog open onClose={onClose} title=\"Add custom plugin\">\n      <form onSubmit={handleSubmit}>\n        <DialogContent className={classes.dialogContent}>\n          <DialogContentText>\n            Enter the name of the plugin and its URL. The name should match what\n            is defined in the plugin&apos;s build.\n          </DialogContentText>\n          <TextField\n            label=\"Plugin name\"\n            variant=\"outlined\"\n            value={umdPluginName}\n            onChange={event => {\n              setUMDPluginName(event.target.value)\n            }}\n          />\n          <TextField\n            label=\"Plugin URL\"\n            variant=\"outlined\"\n            value={umdPluginUrl}\n            onChange={event => {\n              setUMDPluginUrl(event.target.value)\n            }}\n          />\n          <DialogContentText\n            onClick={() => {\n              setAdvancedOptionsOpen(!advancedOptionsOpen)\n            }}\n          >\n            <IconButton\n              className={cx(classes.expand, {\n                [classes.expandOpen]: advancedOptionsOpen,\n              })}\n              aria-expanded={advancedOptionsOpen}\n              aria-label=\"show more\"\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n            Advanced options\n          </DialogContentText>\n          <Collapse in={advancedOptionsOpen}>\n            <div className={classes.dialogContent}>\n              <DialogContentText>\n                The above fields assume that the plugin is built in UMD format.\n                If your plugin is in another format, or you have additional\n                builds you want to add (such as a CJS build for using NodeJS\n                APIs in desktop), you can enter the URLs for those builds below.\n              </DialogContentText>\n              <TextField\n                label=\"ESM build URL\"\n                variant=\"outlined\"\n                value={esmPluginUrl}\n                onChange={event => {\n                  setESMPluginUrl(event.target.value)\n                }}\n              />\n              <TextField\n                label=\"CJS build URL\"\n                variant=\"outlined\"\n                value={cjsPluginUrl}\n                onChange={event => {\n                  setCJSPluginUrl(event.target.value)\n                }}\n              />\n            </div>\n          </Collapse>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={onClose}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n            disabled={!ready}\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n})\n\nexport default AddCustomPluginDialog\n"],"names":["useStyles","makeStyles","theme","dialogContent","display","flexDirection","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","observer","onClose","model","classes","cx","umdPluginName","setUMDPluginName","useState","umdPluginUrl","setUMDPluginUrl","esmPluginUrl","setESMPluginUrl","cjsPluginUrl","setCJSPluginUrl","advancedOptionsOpen","setAdvancedOptionsOpen","jbrowse","getSession","ready","Boolean","handleSubmit","addPlugin","name","umdUrl","esmUrl","cjsUrl","React","Dialog","open","title","onSubmit","DialogContent","className","DialogContentText","TextField","label","variant","value","onChange","event","target","onClick","IconButton","ExpandMoreIcon","Collapse","in","DialogActions","Button","color","disabled"],"sourceRoot":""}