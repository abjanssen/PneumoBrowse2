{"version":3,"file":"static/js/8136.14c46c6e.chunk.js","mappings":"kRAoBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,MAAO,CACLC,QAAS,WAUb,SAASC,EAASC,GAChB,OAAOA,EAAIC,KAAI,EAAGC,KAAIC,cAAaC,MAAW,IACzCA,EACHD,SAAUA,EAASF,KAAI,EAAGC,QAAOE,KAAWA,OAEhD,CAEA,SAASC,GAAU,QACjBC,EAAO,MACPC,EAAK,SACLC,IAMA,MAAM,QAAEC,GAAYd,IACpB,OACEe,EAAAA,cAACC,EAAAA,EAAgB,CACfC,UAAWH,EAAQZ,MACnBgB,QAASH,EAAAA,cAACI,EAAAA,EAAQ,CAACR,QAASA,EAASE,SAAUA,IAC/CD,MAAOA,GAGb,CAEA,MAyFA,GAzF6BQ,EAAAA,EAAAA,WAAS,UAAU,MAC9CC,EAAK,YACLC,EAAW,GACXC,EAAE,GACFC,IAQA,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,GAErC,OACEZ,EAAAA,cAACe,EAAAA,OAAM,CAACC,MAAI,EAACC,QAASV,EAAaW,MAAM,iCACvClB,EAAAA,cAACmB,EAAAA,EAAa,KACZnB,EAAAA,cAACL,EAAS,CACRC,QAASc,EACTZ,SAAUsB,IACRT,EAAcS,EAAMC,OAAOzB,QAAQ,EAErCC,MAAM,kCAERG,EAAAA,cAACL,EAAS,CACRC,QAASiB,EACTf,SAAUsB,IACRN,EAAUM,EAAMC,OAAOzB,QAAQ,EAEjCC,MAAM,yDAGVG,EAAAA,cAACsB,EAAAA,EAAa,KACZtB,EAAAA,cAACuB,EAAAA,EAAM,CACLC,QAASA,KACP,MAAM,KAAEC,GAASnB,EACXoB,GAAUC,EAAAA,EAAAA,YAAWrB,GAC3B,IACE,MAAMsB,EC3Fb,UAAgC,GACrCpB,EAAE,GACFC,EAAE,KACFgB,IAMA,MAAM,aAAEI,GAAiBJ,EAAKK,iBAAiB,IACzC,gBAAEC,IAAoBJ,EAAAA,EAAAA,YAAWF,GACjCO,EAAWD,EAAgBE,IAAIJ,GACrC,IAAKG,EACH,MAAM,IAAIE,MAAM,YAAYL,eAE9B,IAAKG,EAASG,QACZ,MAAM,IAAID,MAAM,YAAYL,wBAE9B,MAAMO,EAAYJ,EAASG,QAAQE,MAAKC,GAAKA,EAAEC,UAAY/B,EAAG+B,UACxDC,EAAeR,EAASG,QAAQE,MAAKC,GAAKA,EAAEC,UAAY9B,EAAG8B,UAEjE,IAAKH,IAAcI,EACjB,MAAM,IAAIN,MACR,2EAGJ,MAAMO,EAAkB,CAAC,IAAKL,GAAa,IAAKA,IAC1CM,EAAqB,CAAC,IAAKF,GAAgB,IAAKA,IAEhDG,EAAkB,IAAdnC,EAAGoC,OAAepC,EAAGqC,IAAMrC,EAAGsC,MAClCC,EAAkB,IAAdtC,EAAGmC,OAAenC,EAAGqC,MAAQrC,EAAGoC,IAO1C,OALAJ,EAAgB,GAAII,IAAMF,EAC1BF,EAAgB,GAAIK,MAAQH,EAAI,EAChCD,EAAmB,GAAIG,IAAME,EAC7BL,EAAmB,GAAII,MAAQC,EAAI,EAE5B,CACLC,KAAM,sBACNC,MAAO,CACL,CACED,KAAM,mBACNlB,iBAAkBW,EAClBS,YAAY,EACZC,QARU,GASVC,UAAWhB,EAAUU,MAAQH,GATnB,IAWZ,CACEK,KAAM,mBACNlB,iBAAkBY,EAClBQ,YAAY,EACZC,QAfU,GAgBVC,UAAWZ,EAAaM,MAAQC,GAhBtB,KAmBdM,YAAa,wBAEjB,CDkCmCC,CAAuB,CAAE7B,OAAMjB,KAAIC,OAClDwC,EAAQrB,EAAaqB,MACrBM,EAAQN,EAAM,GACdO,EAAQP,EAAM,GAEdQ,GAAaC,EAAAA,EAAAA,aAAYjC,EAAKkC,QAEpCjC,EAAQkC,QAAQ,sBAAuB,IAClChC,EACHqB,MAAO,CACL,IACKM,EACHI,OAAQtE,EAASoE,GACjBL,SAAUG,EAAMH,SAAW3B,EAAKoC,MAAQ,EAAI,KAE9C,IACKL,EACHG,OAAQtE,EACNwB,EAAS,IAAI4C,GAAYK,UAAYL,GAEvCL,SAAUI,EAAMJ,SAAW3B,EAAKoC,MAAQ,EAAI,OAIpD,CAAE,MAAOd,GACPgB,QAAQC,MAAMjB,GACdrB,EAAQuC,OAAO,GAAGlB,IACpB,CACAxC,GAAa,EAEf2D,QAAQ,YACRC,MAAM,UACNC,WAAS,GACV,MAGDpE,EAAAA,cAACuB,EAAAA,EAAM,CACLC,QAASA,KACPjB,GAAa,EAEf4D,MAAM,YACND,QAAQ,aACT,WAMT,G","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/BreakendOptionDialog.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/launchBreakpointSplitView.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  FormControlLabel,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { getSession } from '@jbrowse/core/util'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\n// locals\nimport { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport { getBreakpointSplitView } from './launchBreakpointSplitView'\nimport { getSnapshot } from 'mobx-state-tree'\nimport { ReducedFeature } from './getSAFeatures'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\ninterface Track {\n  id: string\n  displays: { id: string; [key: string]: unknown }[]\n  [key: string]: unknown\n}\n\nfunction stripIds(arr: Track[]) {\n  return arr.map(({ id, displays, ...rest }) => ({\n    ...rest,\n    displays: displays.map(({ id, ...rest }) => rest),\n  }))\n}\n\nfunction Checkbox2({\n  checked,\n  label,\n  onChange,\n}: {\n  checked: boolean\n  label: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <FormControlLabel\n      className={classes.block}\n      control={<Checkbox checked={checked} onChange={onChange} />}\n      label={label}\n    />\n  )\n}\n\nconst BreakendOptionDialog = observer(function ({\n  model,\n  handleClose,\n  f1,\n  f2,\n}: {\n  model: AlignmentFeatureWidgetModel\n  handleClose: () => void\n  f1: ReducedFeature\n  f2: ReducedFeature\n  viewType: ViewType\n}) {\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirror, setMirror] = useState(true)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Breakpoint split view options\">\n      <DialogContent>\n        <Checkbox2\n          checked={copyTracks}\n          onChange={event => {\n            setCopyTracks(event.target.checked)\n          }}\n          label=\"Copy tracks into the new view\"\n        />\n        <Checkbox2\n          checked={mirror}\n          onChange={event => {\n            setMirror(event.target.checked)\n          }}\n          label=\"Mirror tracks vertically in vertically stacked view\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            const { view } = model\n            const session = getSession(model)\n            try {\n              const viewSnapshot = getBreakpointSplitView({ view, f1, f2 })\n              const views = viewSnapshot.views\n              const view1 = views[0]!\n              const view2 = views[1]!\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n              const viewTracks = getSnapshot(view.tracks) as Track[]\n\n              session.addView('BreakpointSplitView', {\n                ...viewSnapshot,\n                views: [\n                  {\n                    ...view1,\n                    tracks: stripIds(viewTracks),\n                    offsetPx: view1.offsetPx - view.width / 2 + 100,\n                  },\n                  {\n                    ...view2,\n                    tracks: stripIds(\n                      mirror ? [...viewTracks].reverse() : viewTracks,\n                    ),\n                    offsetPx: view2.offsetPx - view.width / 2 + 100,\n                  },\n                ],\n              })\n            } catch (e) {\n              console.error(e)\n              session.notify(`${e}`)\n            }\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default BreakendOptionDialog\n","import { getSession } from '@jbrowse/core/util'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { ReducedFeature } from './getSAFeatures'\n\nexport function getBreakpointSplitView({\n  f1,\n  f2,\n  view,\n}: {\n  f1: ReducedFeature\n  f2: ReducedFeature\n  view: LinearGenomeViewModel\n}) {\n  const { assemblyName } = view.displayedRegions[0]!\n  const { assemblyManager } = getSession(view)\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const topRegion = assembly.regions.find(f => f.refName === f1.refName)\n  const bottomRegion = assembly.regions.find(f => f.refName === f2.refName)\n\n  if (!topRegion || !bottomRegion) {\n    throw new Error(\n      'unable to find the refName for the top or bottom of the breakpoint view',\n    )\n  }\n  const topMarkedRegion = [{ ...topRegion }, { ...topRegion }]\n  const bottomMarkedRegion = [{ ...bottomRegion }, { ...bottomRegion }]\n\n  const s = f1.strand === 1 ? f1.end : f1.start\n  const e = f2.strand === 1 ? f2.start : f2.end\n\n  topMarkedRegion[0]!.end = s\n  topMarkedRegion[1]!.start = s + 1\n  bottomMarkedRegion[0]!.end = e\n  bottomMarkedRegion[1]!.start = e + 1\n  const bpPerPx = 10\n  return {\n    type: 'BreakpointSplitView',\n    views: [\n      {\n        type: 'LinearGenomeView',\n        displayedRegions: topMarkedRegion,\n        hideHeader: true,\n        bpPerPx,\n        offsetPx: (topRegion.start + s) / bpPerPx,\n      },\n      {\n        type: 'LinearGenomeView',\n        displayedRegions: bottomMarkedRegion,\n        hideHeader: true,\n        bpPerPx,\n        offsetPx: (bottomRegion.start + e) / bpPerPx,\n      },\n    ],\n    displayName: 'breakend split detail',\n  }\n}\n"],"names":["useStyles","makeStyles","block","display","stripIds","arr","map","id","displays","rest","Checkbox2","checked","label","onChange","classes","React","FormControlLabel","className","control","Checkbox","observer","model","handleClose","f1","f2","copyTracks","setCopyTracks","useState","mirror","setMirror","Dialog","open","onClose","title","DialogContent","event","target","DialogActions","Button","onClick","view","session","getSession","viewSnapshot","assemblyName","displayedRegions","assemblyManager","assembly","get","Error","regions","topRegion","find","f","refName","bottomRegion","topMarkedRegion","bottomMarkedRegion","s","strand","end","start","e","type","views","hideHeader","bpPerPx","offsetPx","displayName","getBreakpointSplitView","view1","view2","viewTracks","getSnapshot","tracks","addView","width","reverse","console","error","notify","variant","color","autoFocus"],"sourceRoot":""}