{"version":3,"file":"static/js/8976.fb704145.chunk.js","mappings":"iPAQe,SAASA,GAAkC,KACxDC,EAAI,QACJC,IAKA,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,EAASJ,EAAQK,KAAIC,IAAKC,EAAAA,EAAAA,kBAAiBR,EAAKM,KAAIG,GAAKA,EAAEF,EAAEG,YAEnE,OAAOV,EAAKW,QACVC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,OAAOF,EAAAA,EAAAA,KAACG,EAAAA,EAAU,CAACC,QAAQ,QAAOL,SAAC,iBACnCM,SACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACPlB,QAASA,EACTmB,SAAUC,IACRnB,EAAWmB,EAAMC,OAAOrB,QAAQ,OAMxCY,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CACPC,UAAW,GACXC,WAAY1B,EAAKW,OAAS,IAC1BX,KAAMA,EACN2B,YAAazB,EACbD,QAASA,EAAQK,KACf,CAACsB,EAAGC,KAAC,IAEED,EACHE,MAAOzB,EAAOwB,YAKtB,IACN,CC3Ce,SAASE,GAA2B,KACjDC,EAAI,OACJC,EAAM,MACNC,IAMA,OAAOF,EAAKrB,QACVG,EAAAA,EAAAA,KAACqB,EAAAA,QAAQ,CAACD,MAAOA,EAAMrB,UACrBC,EAAAA,EAAAA,KAACf,EAAiC,CAChCC,KAAMgC,EAAK1B,KAAI,CAAC8B,EAAKC,KAAO,CAC1BA,QACGC,OAAOC,YAAYH,EAAII,MAAM,KAAKlC,KAAI,CAACC,EAAGsB,IAAM,CAACI,EAAOJ,GAAItB,UAEjEN,QAASgC,EAAO3B,KAAIsB,IAAK,CAAGlB,MAAOkB,UAGrC,IACN,C","sources":["../../../plugins/variants/src/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGridWrapper.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantConsequence/VariantConsequenceDataGrid.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { measureGridWidth } from '@jbrowse/core/util'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport { DataGrid } from '@mui/x-data-grid'\n\nimport type { GridColDef, GridValidRowModel } from '@mui/x-data-grid'\n\nexport default function VariantConsequenceDataGridWrapper({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const [checked, setChecked] = useState(false)\n  const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])))\n\n  return rows.length ? (\n    <div>\n      <FormControlLabel\n        label={<Typography variant=\"body2\">Show options</Typography>}\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => {\n              setChecked(event.target.checked)\n            }}\n          />\n        }\n      />\n\n      <DataGrid\n        rowHeight={25}\n        hideFooter={rows.length < 100}\n        rows={rows}\n        showToolbar={checked}\n        columns={columns.map(\n          (c, i) =>\n            ({\n              ...c,\n              width: widths[i],\n            }) satisfies GridColDef<(typeof rows)[0]>,\n        )}\n      />\n    </div>\n  ) : null\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\n\nimport VariantConsequenceDataGridWrapper from './VariantConsequenceDataGridWrapper'\n\nexport default function VariantConsequenceDataGrid({\n  data,\n  fields,\n  title,\n}: {\n  data: string[]\n  fields: string[]\n  title: string\n}) {\n  return data.length ? (\n    <BaseCard title={title}>\n      <VariantConsequenceDataGridWrapper\n        rows={data.map((elt, id) => ({\n          id,\n          ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n        }))}\n        columns={fields.map(c => ({ field: c }))}\n      />\n    </BaseCard>\n  ) : null\n}\n"],"names":["VariantConsequenceDataGridWrapper","rows","columns","checked","setChecked","useState","widths","map","e","measureGridWidth","r","field","length","_jsxs","children","_jsx","FormControlLabel","label","Typography","variant","control","Checkbox","onChange","event","target","DataGrid","rowHeight","hideFooter","showToolbar","c","i","width","VariantConsequenceDataGrid","data","fields","title","BaseCard","elt","id","Object","fromEntries","split"],"sourceRoot":""}