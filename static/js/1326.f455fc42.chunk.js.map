{"version":3,"file":"static/js/1326.f455fc42.chunk.js","mappings":"wQAeA,MA4DA,GA5DiCA,EAAAA,EAAAA,UAAS,UAAU,QAClDC,EAAO,MACPC,IAKA,MAAM,kBAAEC,GAAsBD,EACxBE,EAAwC,IAA7BD,EAAkBE,QAC5BC,EAAOC,IAAYC,EAAAA,EAAAA,UACxBL,EAAkB,IAAIM,WAAa,6BAGrC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAI,EAACX,QAASA,EAASY,MAAM,sBAAqBC,SAAA,EACxDJ,EAAAA,EAAAA,MAACK,EAAAA,EAAa,CAAAD,SAAA,EACZE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAIJ,SAAC,6BACzBE,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,SAAS,OAAMN,SACnBV,GACCY,EAAAA,EAAAA,KAAA,QAAAF,SAAM,+DAIN,4CAGFV,EAOE,MANFY,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CACVf,MAAOA,EACPgB,SAAUC,IACRhB,EAASgB,UAKjBb,EAAAA,EAAAA,MAACc,EAAAA,EAAa,CAAAV,SAAA,EACZE,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLP,QAAQ,YACRZ,MAAM,YACNoB,QAASA,KACPzB,KACAa,SACH,YAGDE,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLP,QAAQ,YACRZ,MAAM,UACNoB,QAASA,KACPxB,EAAMyB,6BAA6BrB,GACnCL,KACAa,SACH,iBAMT,E","sources":["../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/dialogs/EditHighlightColorDialog.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { ColorPicker } from '@jbrowse/core/ui/ColorPicker'\nimport {\n  Alert,\n  Button,\n  DialogActions,\n  DialogContent,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { GridBookmarkModel } from '../../model'\n\nconst EditHighlightColorDialog = observer(function ({\n  onClose,\n  model,\n}: {\n  onClose: () => void\n  model: GridBookmarkModel\n}) {\n  const { selectedBookmarks } = model\n  const editNone = selectedBookmarks.length === 0\n  const [color, setColor] = useState(\n    selectedBookmarks[0]?.highlight ?? 'rgba(247, 129, 192, 0.35)',\n  )\n\n  return (\n    <Dialog open onClose={onClose} title=\"Highlight bookmarks\">\n      <DialogContent>\n        <Typography variant=\"h6\">Bulk highlight selector</Typography>\n        <Alert severity=\"info\">\n          {editNone ? (\n            <span>\n              Use the checkboxes to select individual bookmarks to edit.\n            </span>\n          ) : (\n            'Only selected bookmarks will be edited.'\n          )}\n        </Alert>\n        {!editNone ? (\n          <ColorPicker\n            color={color}\n            onChange={event => {\n              setColor(event)\n            }}\n          />\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            onClose()\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            model.updateBulkBookmarkHighlights(color)\n            onClose()\n          }}\n        >\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default EditHighlightColorDialog\n"],"names":["observer","onClose","model","selectedBookmarks","editNone","length","color","setColor","useState","highlight","_jsxs","Dialog","open","title","children","DialogContent","_jsx","Typography","variant","Alert","severity","ColorPicker","onChange","event","DialogActions","Button","onClick","updateBulkBookmarkHighlights"],"sourceRoot":""}