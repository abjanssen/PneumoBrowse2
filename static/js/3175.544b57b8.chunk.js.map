{"version":3,"file":"static/js/3175.544b57b8.chunk.js","mappings":"iLAKe,MAAMA,UACXC,EAAAA,YAGR,uBAAMC,GACJ,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,oCAAZH,EAAIG,IACxB,MAAO,GAET,MAAMC,EAAWH,KAAKC,QAAQ,uBAExBG,SADgBC,EAAAA,EAAAA,cAAaN,EAAKC,KAAKM,eAAeC,SAAS,SAElEC,MAAM,cACNC,QAAOC,KAAOA,EAAEC,SAChBC,KAAIC,GAAOA,EAAIL,MAAM,QAElBM,EAAIV,EAAM,IAAM,GAChBW,EAAOD,EAAEE,QAAQ,yBACjBC,EAAOH,EAAEE,QAAQ,wBACjBE,EAAOJ,EAAEE,QAAQ,mBACjBG,EAAOL,EAAEE,QAAQ,iBACvB,IAAc,IAAVD,IAAyB,IAAVE,IAAyB,IAAVC,EAChC,MAAM,IAAIE,MACR,oHAGJ,OAAOhB,EACJiB,MAAM,GACNZ,QAAOa,KAAUA,EAAKJ,MAAWI,EAAKH,KACtCP,KAAIU,IAAQ,CACXC,QAAUD,EAAKJ,IAASI,EAAKH,GAC7BK,QAAS,CAACF,EAAKP,GAAOO,EAAKL,GAAOK,EAAKJ,GAAOI,EAAKH,IAAOV,QACvDC,KAAqBA,IAExBP,eAEDM,QAAOC,KAAOA,EAAEa,SACrB,CAEA,mBAAME,GAAiB,E","sources":["../../../plugins/config/src/NcbiSequenceReportAliasAdapter/NcbiSequenceReportAliasAdapter.ts"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nimport type { BaseRefNameAliasAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport default class NcbiSequenceReportAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter\n{\n  async getRefNameAliases() {\n    const loc = this.getConf('location')\n    if (loc.uri === '' || loc.uri === '/path/to/my/sequence_report.tsv') {\n      return []\n    }\n    const override = this.getConf('useUcscNameOverride')\n    const results = await openLocation(loc, this.pluginManager).readFile('utf8')\n    const lines = results\n      .split(/\\n|\\r\\n|\\r/)\n      .filter(f => !!f.trim())\n      .map(row => row.split('\\t'))\n\n    const r = lines[0] || []\n    const idx0 = r.indexOf('GenBank seq accession')\n    const idx1 = r.indexOf('RefSeq seq accession')\n    const idx2 = r.indexOf('UCSC style name')\n    const idx3 = r.indexOf('Sequence name')\n    if (idx0 === -1 || idx1 === -1 || idx2 === -1) {\n      throw new Error(\n        'Header line must include \"GenBank seq accession\", \"RefSeq seq accession\", \"UCSC style name\", and \"Sequence name\"',\n      )\n    }\n    return lines\n      .slice(1)\n      .filter(cols => !!cols[idx2] || !!cols[idx3])\n      .map(cols => ({\n        refName: (cols[idx2] || cols[idx3])!,\n        aliases: [cols[idx0], cols[idx1], cols[idx2], cols[idx3]].filter(\n          (f): f is string => !!f,\n        ),\n        override,\n      }))\n      .filter(f => !!f.refName)\n  }\n\n  async freeResources() {}\n}\n"],"names":["NcbiSequenceReportAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","override","lines","openLocation","pluginManager","readFile","split","filter","f","trim","map","row","r","idx0","indexOf","idx1","idx2","idx3","Error","slice","cols","refName","aliases","freeResources"],"sourceRoot":""}