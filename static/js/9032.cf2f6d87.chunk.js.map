{"version":3,"file":"static/js/9032.cf2f6d87.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/AboutWidget/components/AboutWidget.tsx","../../../node_modules/@mui/material/Link/getTextDecoration.js","../../../node_modules/@mui/material/Link/Link.js","../../../node_modules/@mui/material/Link/linkClasses.js"],"sourcesContent":["import React from 'react'\nimport { observer } from 'mobx-react'\nimport { IAnyStateTreeNode, getEnv } from 'mobx-state-tree'\nimport { getSession } from '@jbrowse/core/util'\nimport { Typography, Link } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport PluginManager from '@jbrowse/core/PluginManager'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n  },\n  subtitle: {\n    margin: theme.spacing(1),\n  },\n  pluginList: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(5),\n  },\n}))\n\nconst AboutWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const { classes } = useStyles()\n  const { version } = getSession(model)\n  const { pluginManager } = getEnv(model)\n  const { plugins } = pluginManager as PluginManager\n  const corePlugins = new Set(\n    plugins\n      .filter(p => pluginManager.pluginMetadata[p.name]?.isCore)\n      .map(p => p.name),\n  )\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\" align=\"center\">\n        JBrowse 2\n      </Typography>\n      <Typography variant=\"h6\" align=\"center\" className={classes.subtitle}>\n        {version}\n      </Typography>\n      <Typography align=\"center\">\n        JBrowse is a{' '}\n        <Link href=\"http://gmod.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          GMOD\n        </Link>{' '}\n        project\n      </Typography>\n      <br />\n      <Typography align=\"center\">\n        Â© 2019-2022 The Evolutionary Software Foundation\n      </Typography>\n      <div className={classes.pluginList}>\n        <Typography>External plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => !corePlugins.has(plugin.name))\n            .map(plugin => {\n              const { url, name, version = '' } = plugin\n              const text = `${name} ${version || ''}`\n              return (\n                <li key={plugin.name}>\n                  {plugin.url ? (\n                    <Link target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {text}\n                    </Link>\n                  ) : (\n                    <Typography>{text}</Typography>\n                  )}\n                </li>\n              )\n            })}\n        </ul>\n        <Typography>Core plugins loaded</Typography>\n        <ul>\n          {plugins\n            .filter(plugin => corePlugins.has(plugin.name))\n            .map(plugin => (\n              <li key={plugin.name}>\n                <Typography>\n                  {plugin.name} {plugin.version || ''}\n                </Typography>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  )\n})\n\nexport default AboutWidget\n","import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha } from '@mui/system/colorManipulator';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\nimport getTextDecoration from \"./getTextDecoration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    variants: [{\n      props: {\n        underline: 'none'\n      },\n      style: {\n        textDecoration: 'none'\n      }\n    }, {\n      props: {\n        underline: 'hover'\n      },\n      style: {\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline'\n        }\n      }\n    }, {\n      props: {\n        underline: 'always'\n      },\n      style: {\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecorationColor: 'inherit'\n        }\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color !== 'inherit',\n      style: {\n        textDecorationColor: 'var(--Link-underlineColor)'\n      }\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n      props: {\n        underline: 'always',\n        color\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.4)` : alpha(theme.palette[color].main, 0.4)\n      }\n    })), {\n      props: {\n        underline: 'always',\n        color: 'textPrimary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textSecondary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.secondaryChannel} / 0.4)` : alpha(theme.palette.text.secondary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textDisabled'\n      },\n      style: {\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\n      }\n    }, {\n      props: {\n        component: 'button'\n      },\n      style: {\n        position: 'relative',\n        WebkitTapHighlightColor: 'transparent',\n        backgroundColor: 'transparent',\n        // Reset default value\n        // We disable the focus ring for mouse, touch and keyboard users.\n        outline: 0,\n        border: 0,\n        margin: 0,\n        // Remove the margin in Safari\n        borderRadius: 0,\n        padding: 0,\n        // Remove the padding in Firefox\n        cursor: 'pointer',\n        userSelect: 'none',\n        verticalAlign: 'middle',\n        MozAppearance: 'none',\n        // Reset\n        WebkitAppearance: 'none',\n        // Reset\n        '&::-moz-focus-inner': {\n          borderStyle: 'none' // Remove Firefox dotted outline.\n        },\n        [`&.${linkClasses.focusVisible}`]: {\n          outline: 'auto'\n        }\n      }\n    }]\n  };\n}));\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: ref,\n    ownerState: ownerState,\n    variant: variant,\n    ...other,\n    sx: [...(v6Colors[color] === undefined ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    style: {\n      ...other.style,\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\n        '--Link-underlineColor': getTextDecoration({\n          theme,\n          ownerState\n        })\n      })\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // âââââââââââââââââââââââââââââââ Warning âââââââââââââââââââââââââââââââ\n  // â These PropTypes are generated from the TypeScript type definitions. â\n  // â    To update them, edit the d.ts file and run `pnpm proptypes`.     â\n  // âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;"],"names":["useStyles","makeStyles","theme","root","margin","spacing","paddingTop","subtitle","pluginList","marginTop","observer","model","classes","version","getSession","pluginManager","getEnv","plugins","corePlugins","Set","filter","p","pluginMetadata","name","isCore","map","React","className","Typography","variant","align","Link","href","target","rel","plugin","has","url","text","key","ownerState","transformedColor","color","channelColor","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","LinkRoot","styled","slot","overridesResolver","props","styles","capitalize","underline","component","button","memoTheme","variants","style","textDecoration","textDecorationColor","Object","entries","palette","createSimplePaletteValueFilter","vars","mainChannel","main","primaryChannel","secondaryChannel","disabled","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","focusVisible","inProps","ref","useTheme","onBlur","onFocus","TypographyClasses","sx","other","setFocusVisible","slots","composeClasses","useUtilityClasses","clsx","event","isFocusVisible","undefined","Array","isArray","getLinkUtilityClass"],"sourceRoot":""}