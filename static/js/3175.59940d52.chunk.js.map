{"version":3,"file":"static/js/3175.59940d52.chunk.js","mappings":"iLAKe,MAAMA,UACXC,EAAAA,YAGR,uBAAMC,GACJ,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,oCAAZH,EAAIG,IACxB,MAAO,GAET,MAAMC,EAAWH,KAAKC,QAAQ,mBAExBG,SADgBC,EAAAA,EAAAA,cAAaN,EAAKC,KAAKM,eAAeC,SAAS,SAElEC,MAAM,cACNC,OAAOC,KAAOA,EAAEC,QAChBC,IAAIC,GAAOA,EAAIL,MAAM,OAElBM,EAAIV,EAAM,IAAM,GAChBW,EAAaD,EAAEE,QAAQ,yBACvBC,EAAYH,EAAEE,QAAQ,wBACtBE,EAAUJ,EAAEE,QAAQ,mBACpBG,EAAaL,EAAEE,QAAQ,iBAC7B,IAAoB,IAAhBD,IAAoC,IAAfE,IAAiC,IAAbC,EAC3C,MAAM,IAAIE,MACR,oHAGJ,OAAOhB,EACJiB,MAAM,GACNZ,OAAOa,KAAUA,EAAKJ,MAAcI,EAAKH,IACzCP,IAAIU,IAAQ,CACXC,QAAUD,EAAKJ,IAAYI,EAAKH,GAChCK,QAAS,CACPF,EAAKP,GACLO,EAAKL,GACLK,EAAKJ,GACLI,EAAKH,IACLV,OAAQC,KAAqBA,GAC/BP,cAEDM,OAAOC,KAAOA,EAAEa,QACrB,E","sources":["../../../plugins/config/src/NcbiSequenceReportAliasAdapter/NcbiSequenceReportAliasAdapter.ts"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nimport type { BaseRefNameAliasAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport default class NcbiSequenceReportAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter\n{\n  async getRefNameAliases() {\n    const loc = this.getConf('location')\n    if (loc.uri === '' || loc.uri === '/path/to/my/sequence_report.tsv') {\n      return []\n    }\n    const override = this.getConf('useNameOverride')\n    const results = await openLocation(loc, this.pluginManager).readFile('utf8')\n    const lines = results\n      .split(/\\n|\\r\\n|\\r/)\n      .filter(f => !!f.trim())\n      .map(row => row.split('\\t'))\n\n    const r = lines[0] || []\n    const genBankIdx = r.indexOf('GenBank seq accession')\n    const refSeqIdx = r.indexOf('RefSeq seq accession')\n    const ucscIdx = r.indexOf('UCSC style name')\n    const seqNameIdx = r.indexOf('Sequence name')\n    if (genBankIdx === -1 || refSeqIdx === -1 || ucscIdx === -1) {\n      throw new Error(\n        'Header line must include \"GenBank seq accession\", \"RefSeq seq accession\", \"UCSC style name\", and \"Sequence name\"',\n      )\n    }\n    return lines\n      .slice(1)\n      .filter(cols => !!cols[ucscIdx] || !!cols[seqNameIdx])\n      .map(cols => ({\n        refName: (cols[ucscIdx] || cols[seqNameIdx])!,\n        aliases: [\n          cols[genBankIdx],\n          cols[refSeqIdx],\n          cols[ucscIdx],\n          cols[seqNameIdx],\n        ].filter((f): f is string => !!f),\n        override,\n      }))\n      .filter(f => !!f.refName)\n  }\n}\n"],"names":["NcbiSequenceReportAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","override","lines","openLocation","pluginManager","readFile","split","filter","f","trim","map","row","r","genBankIdx","indexOf","refSeqIdx","ucscIdx","seqNameIdx","Error","slice","cols","refName","aliases"],"sourceRoot":""}