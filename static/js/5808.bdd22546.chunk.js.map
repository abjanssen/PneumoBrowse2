{"version":3,"file":"static/js/5808.bdd22546.chunk.js","mappings":"6PAQe,SAASA,GAAkC,KACxDC,EAAI,QACJC,IAKA,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,EAASJ,EAAQK,KAAIC,IAAKC,EAAAA,EAAAA,kBAAiBR,EAAKM,KAAIG,GAAKA,EAAEF,EAAEG,YAEnE,OAAOV,EAAKW,QACVC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACfC,SACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACPf,QAASA,EACTgB,SAAUC,IACRhB,EAAWgB,EAAMC,OAAOlB,QAAQ,IAItCmB,OAAOP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,QAAQ,QAAOV,SAAC,oBAGrCC,EAAAA,EAAAA,KAACU,EAAAA,EAAQ,CACPC,UAAW,GACXzB,KAAMA,EACNC,QAASA,EAAQK,KAAI,CAACoB,EAAGC,KAAM,IAC1BD,EACHE,MAAOvB,EAAOsB,OAEhBE,MAAO,CACLC,QAAS5B,EAAU6B,EAAAA,EAAc,WAIrC,IACN,CCzCe,SAASC,GAA2B,KACjDC,EAAI,OACJC,EAAM,MACNC,IAMA,OAAOF,EAAKtB,QACVG,EAAAA,EAAAA,KAACsB,EAAAA,QAAQ,CAACD,MAAOA,EAAMtB,UACrBC,EAAAA,EAAAA,KAACf,EAAiC,CAChCC,KAAMiC,EAAK3B,KAAI,CAAC+B,EAAKC,KAAO,CAC1BA,QACGC,OAAOC,YAAYH,EAAII,MAAM,KAAKnC,KAAI,CAACC,EAAGoB,IAAM,CAACO,EAAOP,GAAIpB,UAEjEN,QAASiC,EAAO5B,KAAIoB,IAAK,CAAGhB,MAAOgB,UAGrC,IACN,C","sources":["../../../plugins/variants/src/VariantFeatureWidget/VariantConsequenceDataGridWrapper.tsx","../../../plugins/variants/src/VariantFeatureWidget/VariantConsequenceDataGrid.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { measureGridWidth } from '@jbrowse/core/util'\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material'\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid'\n\nimport type { GridColDef, GridValidRowModel } from '@mui/x-data-grid'\n\nexport default function VariantConsequenceDataGridWrapper({\n  rows,\n  columns,\n}: {\n  rows: GridValidRowModel[]\n  columns: GridColDef[]\n}) {\n  const [checked, setChecked] = useState(false)\n  const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])))\n\n  return rows.length ? (\n    <div>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={checked}\n            onChange={event => {\n              setChecked(event.target.checked)\n            }}\n          />\n        }\n        label={<Typography variant=\"body2\">Show options</Typography>}\n      />\n\n      <DataGrid\n        rowHeight={25}\n        rows={rows}\n        columns={columns.map((c, i) => ({\n          ...c,\n          width: widths[i],\n        }))}\n        slots={{\n          toolbar: checked ? GridToolbar : null,\n        }}\n      />\n    </div>\n  ) : null\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\n\nimport VariantConsequenceDataGridWrapper from './VariantConsequenceDataGridWrapper'\n\nexport default function VariantConsequenceDataGrid({\n  data,\n  fields,\n  title,\n}: {\n  data: string[]\n  fields: string[]\n  title: string\n}) {\n  return data.length ? (\n    <BaseCard title={title}>\n      <VariantConsequenceDataGridWrapper\n        rows={data.map((elt, id) => ({\n          id,\n          ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n        }))}\n        columns={fields.map(c => ({ field: c }))}\n      />\n    </BaseCard>\n  ) : null\n}\n"],"names":["VariantConsequenceDataGridWrapper","rows","columns","checked","setChecked","useState","widths","map","e","measureGridWidth","r","field","length","_jsxs","children","_jsx","FormControlLabel","control","Checkbox","onChange","event","target","label","Typography","variant","DataGrid","rowHeight","c","i","width","slots","toolbar","GridToolbar","VariantConsequenceDataGrid","data","fields","title","BaseCard","elt","id","Object","fromEntries","split"],"sourceRoot":""}