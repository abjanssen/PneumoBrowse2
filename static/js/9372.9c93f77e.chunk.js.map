{"version":3,"file":"static/js/9372.9c93f77e.chunk.js","mappings":"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","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/ImportFormRefNameAutocomplete.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ImportForm.tsx","../../../node_modules/@mui/system/esm/styled/styled.js","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js","../../../node_modules/@mui/system/esm/Grid/traverseBreakpoints.js","../../../node_modules/@mui/system/esm/Grid/gridGenerator.js","../../../node_modules/@mui/system/esm/Grid/createGrid.js","../../../node_modules/@mui/material/Grid2/Grid2.js"],"sourcesContent":["import { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport { fetchResults } from './util'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\ntype LGV = LinearGenomeViewModel\n\nconst ImportFormRefNameAutocomplete = observer(function ({\n  model,\n  selectedAsm,\n  value,\n  setValue,\n  setOption,\n}: {\n  value: string\n  setValue: (arg: string) => void\n  model: LGV\n  selectedAsm: string\n  setOption: (arg: BaseResult) => void\n}) {\n  const session = getSession(model)\n  const { assemblyManager, textSearchManager } = session\n  const { rankSearchResults } = model\n  const searchScope = model.searchScope(selectedAsm)\n  const assembly = assemblyManager.get(selectedAsm)\n  return (\n    <RefNameAutocomplete\n      fetchResults={queryString =>\n        fetchResults({\n          queryString,\n          assembly,\n          textSearchManager,\n          rankSearchResults,\n          searchScope,\n        })\n      }\n      model={model}\n      assemblyName={selectedAsm}\n      value={value}\n      minWidth={270}\n      onChange={str => {\n        setValue(str)\n      }}\n      onSelect={val => {\n        setOption(val)\n      }}\n      TextFieldProps={{\n        variant: 'outlined',\n        helperText: 'Enter sequence name, feature name, or location',\n      }}\n    />\n  )\n})\n\nexport default ImportFormRefNameAutocomplete\n","import { useEffect, useState } from 'react'\n\nimport { AssemblySelector, ErrorMessage } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport CloseIcon from '@mui/icons-material/Close'\nimport {\n  Button,\n  CircularProgress,\n  Container,\n  FormControl,\n  Grid2 as Grid,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ImportFormRefNameAutocomplete from './ImportFormRefNameAutocomplete'\nimport { handleSelectedRegion, navToOption } from '../../searchUtils'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(2),\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  container: {\n    padding: theme.spacing(4),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nconst LinearGenomeViewImportForm = observer(function ({\n  model,\n}: {\n  model: LGV\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames, assemblyManager } = session\n  const { error } = model\n  const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0]!)\n  const [option, setOption] = useState<BaseResult>()\n  const assembly = assemblyManager.get(selectedAsm)\n  const assemblyError = assemblyNames.length\n    ? assembly?.error\n    : 'No configured assemblies'\n  const displayError = assemblyError || error\n  const [value, setValue] = useState('')\n  const regions = assembly?.regions\n  const assemblyLoaded = !!regions\n  const r0 = regions ? regions[0]?.refName || '' : ''\n\n  // useEffect resets to an \"initial state\" of displaying first region from\n  // assembly after assembly change. needs to react to selectedAsm as well as\n  // r0 because changing assembly will run setValue('') and then r0 may not\n  // change if assembly names are the same across assemblies, but it still\n  // needs to be reset\n  /* biome-ignore lint/correctness/useExhaustiveDependencies: */\n  useEffect(() => {\n    setValue(r0)\n  }, [r0, selectedAsm])\n\n  // implementation notes:\n  // having this wrapped in a form allows intuitive use of enter key to submit\n  return (\n    <div className={classes.container}>\n      {displayError ? <ErrorMessage error={displayError} /> : null}\n      <Container className={classes.importFormContainer}>\n        <form\n          onSubmit={async event => {\n            event.preventDefault()\n            model.setError(undefined)\n            if (value) {\n              // has it's own error handling\n              try {\n                if (\n                  option?.getDisplayString() === value &&\n                  option.hasLocation()\n                ) {\n                  await navToOption({\n                    option,\n                    model,\n                    assemblyName: selectedAsm,\n                  })\n                } else if (option?.results?.length) {\n                  model.setSearchResults(\n                    option.results,\n                    option.getLabel(),\n                    selectedAsm,\n                  )\n                } else if (assembly) {\n                  await handleSelectedRegion({ input: value, assembly, model })\n                }\n              } catch (e) {\n                console.error(e)\n                session.notify(`${e}`, 'warning')\n              }\n            }\n          }}\n        >\n          <Grid\n            container\n            spacing={1}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <FormControl>\n              <AssemblySelector\n                onChange={val => {\n                  setSelectedAsm(val)\n                }}\n                localStorageKey=\"lgv\"\n                session={session}\n                selected={selectedAsm}\n              />\n            </FormControl>\n            {selectedAsm ? (\n              assemblyError ? (\n                <CloseIcon style={{ color: 'red' }} />\n              ) : assemblyLoaded ? (\n                <FormControl>\n                  <ImportFormRefNameAutocomplete\n                    value={value}\n                    setValue={setValue}\n                    selectedAsm={selectedAsm}\n                    setOption={setOption}\n                    model={model}\n                  />\n                </FormControl>\n              ) : (\n                <CircularProgress size={20} disableShrink />\n              )\n            ) : null}\n            <FormControl>\n              <Button\n                type=\"submit\"\n                disabled={!value}\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Open\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Button\n                disabled={!value}\n                className={classes.button}\n                onClick={() => {\n                  model.setError(undefined)\n                  model.showAllRegionsInAssembly(selectedAsm)\n                }}\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Show all regions in assembly\n              </Button>\n            </FormControl>\n          </Grid>\n        </form>\n      </Container>\n    </div>\n  )\n})\n\nexport default LinearGenomeViewImportForm\n","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","export const filterBreakpointKeys = (breakpointsKeys, responsiveKeys) => breakpointsKeys.filter(key => responsiveKeys.includes(key));\nexport const traverseBreakpoints = (breakpoints, responsive, iterator) => {\n  const smallestBreakpoint = breakpoints.keys[0]; // the keys is sorted from smallest to largest by `createBreakpoints`.\n\n  if (Array.isArray(responsive)) {\n    responsive.forEach((breakpointValue, index) => {\n      iterator((responsiveStyles, style) => {\n        if (index <= breakpoints.keys.length - 1) {\n          if (index === 0) {\n            Object.assign(responsiveStyles, style);\n          } else {\n            responsiveStyles[breakpoints.up(breakpoints.keys[index])] = style;\n          }\n        }\n      }, breakpointValue);\n    });\n  } else if (responsive && typeof responsive === 'object') {\n    // prevent null\n    // responsive could be a very big object, pick the smallest responsive values\n\n    const keys = Object.keys(responsive).length > breakpoints.keys.length ? breakpoints.keys : filterBreakpointKeys(breakpoints.keys, Object.keys(responsive));\n    keys.forEach(key => {\n      if (breakpoints.keys.includes(key)) {\n        // @ts-ignore already checked that responsive is an object\n        const breakpointValue = responsive[key];\n        if (breakpointValue !== undefined) {\n          iterator((responsiveStyles, style) => {\n            if (smallestBreakpoint === key) {\n              Object.assign(responsiveStyles, style);\n            } else {\n              responsiveStyles[breakpoints.up(key)] = style;\n            }\n          }, breakpointValue);\n        }\n      }\n    });\n  } else if (typeof responsive === 'number' || typeof responsive === 'string') {\n    iterator((responsiveStyles, style) => {\n      Object.assign(responsiveStyles, style);\n    }, responsive);\n  }\n};","import { traverseBreakpoints } from \"./traverseBreakpoints.js\";\nfunction getSelfSpacingVar(axis) {\n  return `--Grid-${axis}Spacing`;\n}\nfunction getParentSpacingVar(axis) {\n  return `--Grid-parent-${axis}Spacing`;\n}\nconst selfColumnsVar = '--Grid-columns';\nconst parentColumnsVar = '--Grid-parent-columns';\nexport const generateGridSizeStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.size, (appendStyle, value) => {\n    let style = {};\n    if (value === 'grow') {\n      style = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    }\n    if (value === 'auto') {\n      style = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        flexGrow: 0,\n        flexBasis: 'auto',\n        width: `calc(100% * ${value} / var(${parentColumnsVar}) - (var(${parentColumnsVar}) - ${value}) * (var(${getParentSpacingVar('column')}) / var(${parentColumnsVar})))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridOffsetStyles = ({\n  theme,\n  ownerState\n}) => {\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.offset, (appendStyle, value) => {\n    let style = {};\n    if (value === 'auto') {\n      style = {\n        marginLeft: 'auto'\n      };\n    }\n    if (typeof value === 'number') {\n      style = {\n        marginLeft: value === 0 ? '0px' : `calc(100% * ${value} / var(${parentColumnsVar}) + var(${getParentSpacingVar('column')}) * ${value} / var(${parentColumnsVar}))`\n      };\n    }\n    appendStyle(styles, style);\n  });\n  return styles;\n};\nexport const generateGridColumnsStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {\n    [selfColumnsVar]: 12\n  };\n  traverseBreakpoints(theme.breakpoints, ownerState.columns, (appendStyle, value) => {\n    const columns = value ?? 12;\n    appendStyle(styles, {\n      [selfColumnsVar]: columns,\n      '> *': {\n        [parentColumnsVar]: columns\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridRowSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.rowSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('row')]: spacing,\n      '> *': {\n        [getParentSpacingVar('row')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridColumnSpacingStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.columnSpacing, (appendStyle, value) => {\n    const spacing = typeof value === 'string' ? value : theme.spacing?.(value);\n    appendStyle(styles, {\n      [getSelfSpacingVar('column')]: spacing,\n      '> *': {\n        [getParentSpacingVar('column')]: spacing\n      }\n    });\n  });\n  return styles;\n};\nexport const generateGridDirectionStyles = ({\n  theme,\n  ownerState\n}) => {\n  if (!ownerState.container) {\n    return {};\n  }\n  const styles = {};\n  traverseBreakpoints(theme.breakpoints, ownerState.direction, (appendStyle, value) => {\n    appendStyle(styles, {\n      flexDirection: value\n    });\n  });\n  return styles;\n};\nexport const generateGridStyles = ({\n  ownerState\n}) => {\n  return {\n    minWidth: 0,\n    boxSizing: 'border-box',\n    ...(ownerState.container && {\n      display: 'flex',\n      flexWrap: 'wrap',\n      ...(ownerState.wrap && ownerState.wrap !== 'wrap' && {\n        flexWrap: ownerState.wrap\n      }),\n      gap: `var(${getSelfSpacingVar('row')}) var(${getSelfSpacingVar('column')})`\n    })\n  };\n};\nexport const generateSizeClassNames = size => {\n  const classNames = [];\n  Object.entries(size).forEach(([key, value]) => {\n    if (value !== false && value !== undefined) {\n      classNames.push(`grid-${key}-${String(value)}`);\n    }\n  });\n  return classNames;\n};\nexport const generateSpacingClassNames = (spacing, smallestBreakpoint = 'xs') => {\n  function isValidSpacing(val) {\n    if (val === undefined) {\n      return false;\n    }\n    return typeof val === 'string' && !Number.isNaN(Number(val)) || typeof val === 'number' && val > 0;\n  }\n  if (isValidSpacing(spacing)) {\n    return [`spacing-${smallestBreakpoint}-${String(spacing)}`];\n  }\n  if (typeof spacing === 'object' && !Array.isArray(spacing)) {\n    const classNames = [];\n    Object.entries(spacing).forEach(([key, value]) => {\n      if (isValidSpacing(value)) {\n        classNames.push(`spacing-${key}-${String(value)}`);\n      }\n    });\n    return classNames;\n  }\n  return [];\n};\nexport const generateDirectionClasses = direction => {\n  if (direction === undefined) {\n    return [];\n  }\n  if (typeof direction === 'object') {\n    return Object.entries(direction).map(([key, value]) => `direction-${key}-${value}`);\n  }\n  return [`direction-xs-${String(direction)}`];\n};","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isMuiElement from '@mui/utils/isMuiElement';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport useThemeSystem from \"../useTheme/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { generateGridStyles, generateGridSizeStyles, generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridDirectionStyles, generateGridOffsetStyles, generateSizeClassNames, generateSpacingClassNames, generateDirectionClasses } from \"./gridGenerator.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiGrid',\n    defaultTheme\n  });\n}\nexport default function createGrid(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    useTheme = useThemeSystem,\n    componentName = 'MuiGrid'\n  } = options;\n  const useUtilityClasses = (ownerState, theme) => {\n    const {\n      container,\n      direction,\n      spacing,\n      wrap,\n      size\n    } = ownerState;\n    const slots = {\n      root: ['root', container && 'container', wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...generateDirectionClasses(direction), ...generateSizeClassNames(size), ...(container ? generateSpacingClassNames(spacing, theme.breakpoints.keys[0]) : [])]\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  function parseResponsiveProp(propValue, breakpoints, shouldUseValue = () => true) {\n    const parsedProp = {};\n    if (propValue === null) {\n      return parsedProp;\n    }\n    if (Array.isArray(propValue)) {\n      propValue.forEach((value, index) => {\n        if (value !== null && shouldUseValue(value) && breakpoints.keys[index]) {\n          parsedProp[breakpoints.keys[index]] = value;\n        }\n      });\n    } else if (typeof propValue === 'object') {\n      Object.keys(propValue).forEach(key => {\n        const value = propValue[key];\n        if (value !== null && value !== undefined && shouldUseValue(value)) {\n          parsedProp[key] = value;\n        }\n      });\n    } else {\n      parsedProp[breakpoints.keys[0]] = propValue;\n    }\n    return parsedProp;\n  }\n  const GridRoot = createStyledComponent(generateGridColumnsStyles, generateGridColumnSpacingStyles, generateGridRowSpacingStyles, generateGridSizeStyles, generateGridDirectionStyles, generateGridStyles, generateGridOffsetStyles);\n  const Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const theme = useTheme();\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      className,\n      children,\n      columns: columnsProp = 12,\n      container = false,\n      component = 'div',\n      direction = 'row',\n      wrap = 'wrap',\n      size: sizeProp = {},\n      offset: offsetProp = {},\n      spacing: spacingProp = 0,\n      rowSpacing: rowSpacingProp = spacingProp,\n      columnSpacing: columnSpacingProp = spacingProp,\n      unstable_level: level = 0,\n      ...other\n    } = props;\n    const size = parseResponsiveProp(sizeProp, theme.breakpoints, val => val !== false);\n    const offset = parseResponsiveProp(offsetProp, theme.breakpoints);\n    const columns = inProps.columns ?? (level ? undefined : columnsProp);\n    const spacing = inProps.spacing ?? (level ? undefined : spacingProp);\n    const rowSpacing = inProps.rowSpacing ?? inProps.spacing ?? (level ? undefined : rowSpacingProp);\n    const columnSpacing = inProps.columnSpacing ?? inProps.spacing ?? (level ? undefined : columnSpacingProp);\n    const ownerState = {\n      ...props,\n      level,\n      columns,\n      container,\n      direction,\n      wrap,\n      spacing,\n      rowSpacing,\n      columnSpacing,\n      size,\n      offset\n    };\n    const classes = useUtilityClasses(ownerState, theme);\n    return /*#__PURE__*/_jsx(GridRoot, {\n      ref: ref,\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ...other,\n      children: React.Children.map(children, child => {\n        if (/*#__PURE__*/React.isValidElement(child) && isMuiElement(child, ['Grid']) && container && child.props.container) {\n          return /*#__PURE__*/React.cloneElement(child, {\n            unstable_level: child.props?.unstable_level ?? level + 1\n          });\n        }\n        return child;\n      })\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n    columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    component: PropTypes.elementType,\n    container: PropTypes.bool,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    offset: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n    rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n    wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n  } : void 0;\n\n  // @ts-ignore internal logic for nested grid\n  Grid.muiName = 'Grid';\n  return Grid;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createGrid as createGrid2 } from '@mui/system/Grid';\nimport requirePropFactory from \"../utils/requirePropFactory.js\";\nimport { styled } from \"../styles/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useTheme from \"../styles/useTheme.js\";\n/**\n *\n * Demos:\n *\n * - [Grid version 2](https://mui.com/material-ui/react-grid2/)\n *\n * API:\n *\n * - [Grid2 API](https://mui.com/material-ui/api/grid-2/)\n */\nconst Grid2 = createGrid2({\n  createStyledComponent: styled('div', {\n    name: 'MuiGrid2',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, ownerState.container && styles.container];\n    }\n  }),\n  componentName: 'MuiGrid2',\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiGrid2'\n  }),\n  useTheme\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid2.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Defines the offset value for the type `item` components.\n   */\n  offset: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Defines the size of the the type `item` components.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])), PropTypes.object]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @internal\n   * The level of the grid starts from `0` and increases when the grid nests\n   * inside another grid. Nesting is defined as a container Grid being a direct\n   * child of a container Grid.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid container> // level 1\n   *     <Grid container> // level 2\n   * ```\n   *\n   * Only consecutive grid is considered nesting. A grid container will start at\n   * `0` if there are non-Grid container element above it.\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <div>\n   *     <Grid container> // level 0\n   * ```\n   *\n   * ```js\n   * <Grid container> // level 0\n   *   <Grid>\n   *     <Grid container> // level 0\n   * ```\n   */\n  unstable_level: PropTypes.number,\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap'])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const Component = Grid2;\n  const requireProp = requirePropFactory('Grid2', Component);\n  // eslint-disable-next-line no-useless-concat\n  Component['propTypes' + ''] = {\n    // eslint-disable-next-line react/forbid-foreign-prop-types\n    ...Component.propTypes,\n    direction: requireProp('container'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container')\n  };\n}\nexport default Grid2;"],"names":["observer","model","selectedAsm","value","setValue","setOption","session","getSession","assemblyManager","textSearchManager","rankSearchResults","searchScope","assembly","get","_jsx","RefNameAutocomplete","fetchResults","queryString","assemblyName","minWidth","onChange","str","onSelect","val","TextFieldProps","variant","helperText","useStyles","makeStyles","theme","importFormContainer","padding","spacing","button","margin","container","classes","assemblyNames","error","setSelectedAsm","useState","option","assemblyError","length","displayError","regions","assemblyLoaded","r0","refName","useEffect","_jsxs","className","children","ErrorMessage","Container","onSubmit","async","event","preventDefault","setError","undefined","getDisplayString","hasLocation","navToOption","results","setSearchResults","getLabel","handleSelectedRegion","input","e","console","notify","Grid","justifyContent","alignItems","FormControl","AssemblySelector","localStorageKey","selected","CloseIcon","style","color","ImportFormRefNameAutocomplete","CircularProgress","size","disableShrink","Button","type","disabled","onClick","showAllRegionsInAssembly","defaultTheme","createTheme","defaultCreateStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","options","createStyledComponent","componentName","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","ref","component","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","traverseBreakpoints","responsive","iterator","smallestBreakpoint","breakpointsKeys","responsiveKeys","Array","isArray","forEach","breakpointValue","index","responsiveStyles","assign","filter","key","includes","getSelfSpacingVar","axis","getParentSpacingVar","selfColumnsVar","parentColumnsVar","generateGridSizeStyles","appendStyle","flexBasis","flexGrow","flexShrink","generateGridOffsetStyles","offset","generateGridColumnsStyles","columns","generateGridRowSpacingStyles","rowSpacing","generateGridColumnSpacingStyles","columnSpacing","generateGridDirectionStyles","direction","flexDirection","generateGridStyles","display","flexWrap","wrap","gap","generateSizeClassNames","classNames","entries","push","generateSpacingClassNames","isValidSpacing","Number","isNaN","generateDirectionClasses","map","Grid2","useTheme","parseResponsiveProp","propValue","shouldUseValue","parsedProp","GridRoot","themeProps","extendSxProp","columnsProp","sizeProp","offsetProp","spacingProp","rowSpacingProp","columnSpacingProp","unstable_level","level","child","isMuiElement","muiName","createGrid"],"sourceRoot":""}