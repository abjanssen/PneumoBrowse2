{"version":3,"file":"static/js/558.1758d9e7.chunk.js","mappings":"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UiE,CACZ,CAAE,MAAO/O,GACP,IAAIgP,EAAAA,EAAAA,IAAsBhP,GAAQ,CAChC,MAAMiP,EACJvX,KAAKW,cAAc+V,WAAWc,+BAC5B,4BAA4B,IAAIC,IAAInP,EAAMoP,KAAKC,SAC/C,CAAC,EACDrP,EAAMoP,KAEV,MAAM,IAAIE,EAAAA,GACR,yCACAL,EAAa5M,kBAEjB,CACA,MAAMrC,CACR,CACA,OAAO8K,CACT,CAEA,4BAAcoD,CACZqB,EACAxB,GAEA,MAAMyB,EAAO,GAGbC,EAAUF,GAAOG,KACXC,EAAAA,EAAAA,IAAcD,IAChBF,EAAKpQ,KAAKsQ,EACZ,IAEF,IAAK,MAAM7M,KAAO2M,QACV9X,KAAKyW,0BAA0BtL,EAAKkL,GAE5C,OAAOwB,CACT,E,wTChHF,SACE,OACA,kBACA,QACA,oBACA,YACA,mBACA,aACA,mBACA,sBACA,0BACA,gBACA,oBACA,gBAEA,uBACA,2BACA,8BACA,qCACA,qCACA,qCACA,0BACA,+BACA,iCACA,2BACA,gCACA,6BACA,0BACA,wBACA,gCACA,2BACA,gCACA,yBACA,gCACA,mCACA,gCACA,+BACA,8BACA,qCACA,6BACA,sCACA,yBACA,6BACA,8BACA,2BACA,kCACA,gCACA,kCACA,sCACA,4BACA,2BACA,wBACA,yBACA,gCACA,8BACA,gCACA,qCACA,mCACA,8BACA,yBACA,0BACA,yBACA,yBACA,+BACA,0BACA,8BACA,+BACA,mCACA,yBACA,mCACA,yBACA,6BACA,mCACA,4CACA,iCACA,kCACA,iCACA,yBACA,6BACA,6BACA,0BACA,iCACA,kCACA,+BACA,mCACA,0BACA,4BACA,2BACA,2BACA,0BACA,+BACA,2BACA,sCACA,2BACA,6BACA,2BACA,6BACA,oCACA,8BACA,oCACA,kCACA,0BACA,yBACA,+BACA,kCACA,8BACA,6BACA,4BACA,4BACA,2BACA,wBACA,0BACA,8BACA,8BACA,mCACA,gCACA,8BACA,oCACA,6BACA,mCACA,yBACA,8BACA,qCACA,iCACA,sCACA,4BACA,4BACA,+BACA,0BACA,iCACA,iCACA,iCACA,sBACA,2BACA,6BACA,uBACA,4BACA,yBACA,sBACA,oBACA,4BACA,uBACA,4BACA,qBACA,4BACA,+BACA,4BACA,2BACA,0BACA,iCACA,yBACA,kCACA,qBACA,yBACA,0BACA,uBACA,8BACA,4BACA,8BACA,kCACA,wBACA,uBACA,oBACA,qBACA,4BACA,0BACA,4BACA,iCACA,+BACA,0BACA,qBACA,sBACA,qBACA,qBACA,2BACA,sBACA,0BACA,2BACA,+BACA,qBACA,+BACA,qBACA,yBACA,+BACA,wCACA,6BACA,8BACA,6BACA,qBACA,yBACA,yBACA,sBACA,6BACA,8BACA,2BACA,+BACA,sBACA,wBACA,uBACA,uBACA,sBACA,2BACA,uBACA,kCACA,uBACA,yBACA,uBACA,yBACA,gCACA,0BACA,gCACA,8BACA,sBACA,qBACA,2BACA,8BACA,0BACA,yBACA,wBACA,wBACA,uBACA,oBACA,sBACA,0BACA,0BACA,+BACA,4BACA,0BACA,gCACA,yBACA,+BACA,qBACA,0BACA,iCACA,6BACA,kCACA,wBACA,wBACA,2BACA,gCACA,qCACA,gCACA,yBACA,mBACA,uBACA,sCACA,+CACA,kDACA,kDACA,gDACA,iDAEA,6CACA,uEACA,0EACA,gEACA,oEACA,6DACA,8BACA,+BACA,mBACA,qBACA,2BACA,6BACA,4BACA,qCACA,wBACA,oCACA,0BACA,oDACA,2C,uOCjOF,MAAMK,EAAU,CACdC,WAAW1R,EAAAA,EAAAA,OAAK,IAAM,0DACtB2R,kBAAkB3R,EAAAA,EAAAA,OAAK,IAAM,kCAC7B4R,kBAAkB5R,EAAAA,EAAAA,OAAK,IAAM,kCAC7B6R,kBAAkB7R,EAAAA,EAAAA,OAAK,IAAM,kCAC7B8R,OAAO9R,EAAAA,EAAAA,OAAK,IAAM,kCAClB+R,YAAY/R,EAAAA,EAAAA,OAAK,IAAM,kCACvBgS,cAAchS,EAAAA,EAAAA,OAAK,IAAM,kCACzBiS,QAAQjS,EAAAA,EAAAA,OAAK,IAAM,kCACnBkS,aAAalS,EAAAA,EAAAA,OAAK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","sources":["../../../packages/core/pluggableElementTypes/renderers/ServerSideRendererType.tsx","../../../packages/core/BaseFeatureWidget/util.tsx","../../../plugins/data-management/src/PluginStoreWidget/model.ts","../../../plugins/data-management/src/PluginStoreWidget/index.ts","../../../packages/core/pluggableElementTypes/models/baseConnectionConfig.ts","../../../packages/core/pluggableElementTypes/models/BaseConnectionModelFactory.ts","../../../packages/core/pluggableElementTypes/models/BaseDisplayModel.tsx","../../../packages/core/pluggableElementTypes/models/baseInternetAccountConfig.ts","../../../packages/core/pluggableElementTypes/models/InternetAccountModel.ts","../../../packages/core/pluggableElementTypes/models/BaseTrackModel.ts","../../../packages/core/pluggableElementTypes/models/baseTrackConfig.ts","../../../packages/core/util/layouts/MultiLayout.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/Tooltip.tsx","../../../packages/core/util/map-obj.ts","../../../packages/core/pluggableElementTypes/RpcMethodType.ts","../../../packages/core/ReExports/list.ts","../../../packages/core/ReExports/modules.tsx","../../../packages/core/data_adapters/dataAdapterCache.ts","../../../packages/core/util/dedupe.ts","../../../plugins/linear-genome-view/src/searchUtils.ts","../../../packages/core/util/simpleFeature.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/faceted/util.ts","../../../packages/core/pluggableElementTypes/models/BaseViewModel.ts","../../../packages/core/pluggableElementTypes/TextSearchAdapterType.ts","../../../packages/core/TextSearch/BaseResults.ts","../../../packages/core/ui/BaseTooltip.tsx","../../../packages/core/BaseFeatureWidget/configSchema.ts","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/model.ts","../../../packages/core/BaseFeatureWidget/stateModelFactory.ts","../../../plugins/wiggle/src/BigWigAdapter/configSchema.ts","../../../plugins/wiggle/src/CreateMultiWiggleExtension/index.ts","../../../plugins/wiggle/src/WiggleBaseRenderer.tsx","../../../plugins/wiggle/src/DensityRenderer/DensityRenderer.ts","../../../plugins/wiggle/src/configSchema.ts","../../../plugins/wiggle/src/DensityRenderer/configSchema.ts","../../../plugins/wiggle/src/WiggleRendering.tsx","../../../plugins/wiggle/src/LinePlotRenderer/configSchema.ts","../../../plugins/wiggle/src/LinePlotRenderer/LinePlotRenderer.ts","../../../plugins/wiggle/src/shared/SharedWiggleConfigSchema.ts","../../../plugins/wiggle/src/shared/SharedWiggleMixin.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/model.ts","../../../plugins/wiggle/src/MultiDensityRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiWiggleRendering.tsx","../../../plugins/wiggle/src/MultiDensityRenderer/MultiDensityRenderer.ts","../../../plugins/wiggle/src/MultiLineRenderer/MultiLineRenderer.ts","../../../plugins/wiggle/src/MultiLineRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/model.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/MultiRowLineRenderer.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/MultiRowXYPlotRenderer.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/MultiWiggleAdapter/configSchema.ts","../../../plugins/wiggle/src/MultiXYPlotRenderer/MultiXYPlotRenderer.ts","../../../plugins/wiggle/src/MultiXYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/WiggleRPC/MultiWiggleGetSources.ts","../../../plugins/wiggle/src/WiggleRPC/WiggleGetMultiRegionQuantitativeStats.ts","../../../plugins/wiggle/src/WiggleRPC/WiggleGetGlobalQuantitativeStats.ts","../../../plugins/wiggle/src/WiggleRPC/MultiWiggleGetScoreMatrix.ts","../../../plugins/wiggle/src/XYPlotRenderer/XYPlotRenderer.ts","../../../plugins/wiggle/src/XYPlotRenderer/configSchema.ts","../../../plugins/wiggle/src/index.ts","../../../plugins/wiggle/src/MultiWiggleAdapter/index.ts","../../../plugins/wiggle/src/BigWigAdapter/index.ts","../../../plugins/wiggle/src/QuantitativeTrack/index.ts","../../../plugins/wiggle/src/QuantitativeTrack/configSchema.ts","../../../plugins/wiggle/src/MultiQuantitativeTrack/index.ts","../../../plugins/wiggle/src/MultiQuantitativeTrack/configSchema.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/index.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/configSchema.ts","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/index.ts","../../../plugins/wiggle/src/MultiLinearWiggleDisplay/configSchema.ts","../../../plugins/wiggle/src/LinePlotRenderer/index.ts","../../../plugins/wiggle/src/XYPlotRenderer/index.ts","../../../plugins/wiggle/src/DensityRenderer/index.ts","../../../plugins/wiggle/src/MultiXYPlotRenderer/index.ts","../../../plugins/wiggle/src/MultiRowXYPlotRenderer/index.ts","../../../plugins/wiggle/src/MultiDensityRenderer/index.ts","../../../plugins/wiggle/src/MultiLineRenderer/index.ts","../../../plugins/wiggle/src/MultiRowLineRenderer/index.ts","../../../plugins/wiggle/src/MultiWiggleAddTrackWorkflow/index.ts","../../../plugins/wiggle/src/GuessAdapter/index.ts","../../../packages/core/Plugin.ts","../../../packages/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions.ts","../../../packages/core/ui/FileSelector/UrlChooser.tsx","../../../packages/core/util/offscreenCanvasPonyfill.tsx","../../../packages/core/util/aborting.ts","../../../packages/core/ui/RedErrorMessageBox.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/util.ts","../../../packages/core/util/mst-reflection.ts","../../../packages/core/pluggableElementTypes/renderers/ServerSideRenderedContent.tsx","../../../packages/core/util/idMaker.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/util.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/configSchema.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/stateModelFactory.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/index.ts","../../../plugins/alignments/src/AlignmentsTrack/index.ts","../../../plugins/alignments/src/AlignmentsTrack/configSchemaF.ts","../../../plugins/alignments/src/BamAdapter/configSchema.ts","../../../plugins/alignments/src/BamAdapter/index.ts","../../../plugins/alignments/src/CramAdapter/configSchema.ts","../../../plugins/alignments/src/CramAdapter/index.ts","../../../plugins/alignments/src/GuessAlignmentsTypes/index.ts","../../../plugins/alignments/src/HtsgetBamAdapter/configSchema.ts","../../../plugins/alignments/src/HtsgetBamAdapter/index.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/components/AlignmentsDisplay.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/util.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/model.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/alignmentsModel.tsx","../../../plugins/alignments/src/LinearAlignmentsDisplay/index.ts","../../../plugins/alignments/src/LinearAlignmentsDisplay/configSchema.ts","../../../plugins/alignments/src/LinearPileupDisplay/configSchema.ts","../../../plugins/alignments/src/LinearPileupDisplay/components/LinearPileupDisplayBlurb.tsx","../../../plugins/alignments/src/LinearPileupDisplay/SharedLinearPileupDisplayMixin.ts","../../../plugins/alignments/src/LinearPileupDisplay/model.ts","../../../plugins/alignments/src/LinearPileupDisplay/index.ts","../../../plugins/alignments/src/LinearReadArcsDisplay/model.ts","../../../plugins/alignments/src/LinearReadArcsDisplay/index.ts","../../../plugins/alignments/src/LinearReadArcsDisplay/configSchema.ts","../../../plugins/alignments/src/LinearReadCloudDisplay/configSchema.ts","../../../plugins/alignments/src/LinearReadCloudDisplay/model.ts","../../../plugins/alignments/src/LinearReadCloudDisplay/index.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/model.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/index.ts","../../../plugins/alignments/src/LinearSNPCoverageDisplay/configSchema.ts","../../../plugins/alignments/src/PileupRPC/base.ts","../../../plugins/alignments/src/PileupRPC/methods/GetReducedFeatures.ts","../../../plugins/alignments/src/PileupRPC/util.ts","../../../plugins/alignments/src/PileupRPC/methods/GetVisibleModifications.ts","../../../plugins/alignments/src/PileupRPC/methods/GetGlobalValueForTag.ts","../../../plugins/alignments/src/PileupRPC/index.ts","../../../plugins/alignments/src/PileupRenderer/PileupLayoutSession.ts","../../../plugins/alignments/src/PileupRenderer/PileupRenderer.ts","../../../plugins/alignments/src/PileupRenderer/layoutFeatures.ts","../../../plugins/alignments/src/PileupRenderer/sortUtil.ts","../../../plugins/alignments/src/PileupRenderer/layoutFeature.ts","../../../plugins/alignments/src/PileupRenderer/components/PileupRendering.tsx","../../../plugins/alignments/src/PileupRenderer/configSchema.ts","../../../plugins/alignments/src/PileupRenderer/index.ts","../../../plugins/alignments/src/SNPCoverageAdapter/configSchema.ts","../../../plugins/alignments/src/SNPCoverageAdapter/index.ts","../../../plugins/alignments/src/SNPCoverageRenderer/SNPCoverageRenderer.ts","../../../plugins/alignments/src/SNPCoverageRenderer/configSchema.ts","../../../plugins/alignments/src/SNPCoverageRenderer/index.ts","../../../plugins/alignments/src/index.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/util.ts","../../../packages/core/pluggableElementTypes/renderers/LayoutSession.ts","../../../packages/core/util/blobToDataURL.ts","../../../plugins/data-management/src/UCSCTrackHub/configSchema.ts","../../../plugins/data-management/src/UCSCTrackHub/model.ts","../../../plugins/data-management/src/UCSCTrackHub/index.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewScalebarPolygon.tsx","../../../packages/core/util/range.ts","../../../packages/core/util/nanoid.js","../../../packages/core/pluggableElementTypes/AddTrackWorkflowType.ts","../../../packages/sv-core/src/Checkbox2.tsx","../../../packages/sv-core/src/util.ts","../../../packages/sv-core/src/navToMultiLevelBreak.ts","../../../packages/sv-core/src/BreakendMultiLevelOptionDialog.tsx","../../../packages/sv-core/src/BreakendSingleLevelOptionDialog.tsx","../../../packages/sv-core/src/navToSingleLevelBreak.ts","../../../plugins/arc/src/ArcRenderer/ArcRenderer.ts","../../../plugins/arc/src/ArcRenderer/ArcRendering.tsx","../../../plugins/arc/src/ArcRenderer/configSchema.ts","../../../plugins/arc/src/LinearArcDisplay/model.ts","../../../plugins/arc/src/LinearPairedArcDisplay/model.ts","../../../plugins/arc/src/index.ts","../../../plugins/arc/src/ArcRenderer/index.ts","../../../plugins/arc/src/LinearArcDisplay/index.ts","../../../plugins/arc/src/LinearArcDisplay/configSchema.ts","../../../plugins/arc/src/LinearPairedArcDisplay/index.ts","../../../plugins/arc/src/LinearPairedArcDisplay/configSchema.ts","../../../plugins/authentication/src/OAuthModel/configSchema.ts","../../../plugins/authentication/src/DropboxOAuthModel/configSchema.ts","../../../plugins/authentication/src/OAuthModel/util.ts","../../../plugins/authentication/src/util.ts","../../../plugins/authentication/src/OAuthModel/model.tsx","../../../plugins/authentication/src/DropboxOAuthModel/DropboxIcon.tsx","../../../plugins/authentication/src/DropboxOAuthModel/util.ts","../../../plugins/authentication/src/DropboxOAuthModel/model.tsx","../../../plugins/authentication/src/ExternalTokenModel/configSchema.ts","../../../plugins/authentication/src/ExternalTokenModel/ExternalTokenEntryForm.tsx","../../../plugins/authentication/src/ExternalTokenModel/model.tsx","../../../plugins/authentication/src/GoogleDriveOAuthModel/configSchema.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/GoogleDriveFilehandle.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/GoogleDriveIcon.tsx","../../../plugins/authentication/src/GoogleDriveOAuthModel/util.ts","../../../plugins/authentication/src/GoogleDriveOAuthModel/model.tsx","../../../plugins/authentication/src/HTTPBasicModel/configSchema.ts","../../../plugins/authentication/src/HTTPBasicModel/HTTPBasicLoginForm.tsx","../../../plugins/authentication/src/HTTPBasicModel/model.tsx","../../../plugins/authentication/src/index.ts","../../../plugins/bed/src/BedAdapter/configSchema.ts","../../../plugins/bed/src/BedGraphAdapter/configSchema.ts","../../../plugins/bed/src/BedGraphTabixAdapter/configSchema.ts","../../../plugins/bed/src/BedTabixAdapter/configSchema.ts","../../../plugins/bed/src/BedpeAdapter/configSchema.ts","../../../plugins/bed/src/BigBedAdapter/configSchema.ts","../../../plugins/bed/src/index.ts","../../../plugins/bed/src/BigBedAdapter/index.ts","../../../plugins/bed/src/BedAdapter/index.ts","../../../plugins/bed/src/BedpeAdapter/index.ts","../../../plugins/bed/src/BedTabixAdapter/index.ts","../../../plugins/bed/src/BedGraphAdapter/index.ts","../../../plugins/bed/src/BedGraphTabixAdapter/index.ts","../../../plugins/bed/src/GuessAdapter/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointAlignmentsFeatureDetail/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/model.ts","../../../plugins/breakpoint-split-view/src/index.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/index.ts","../../../plugins/comparative-adapters/src/BlastTabularAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/ChainAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/syntenyTypes.ts","../../../plugins/comparative-adapters/src/ComparativeAddTrackComponent/index.tsx","../../../plugins/comparative-adapters/src/DeltaAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MCScanAddTrackComponent/index.tsx","../../../plugins/comparative-adapters/src/MCScanAnchorsAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MCScanSimpleAnchorsAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/MashMapAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/PAFAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/PairwiseIndexedPAFAdapter/configSchema.ts","../../../plugins/comparative-adapters/src/index.ts","../../../plugins/comparative-adapters/src/PAFAdapter/index.ts","../../../plugins/comparative-adapters/src/PairwiseIndexedPAFAdapter/index.ts","../../../plugins/comparative-adapters/src/DeltaAdapter/index.ts","../../../plugins/comparative-adapters/src/ChainAdapter/index.ts","../../../plugins/comparative-adapters/src/MCScanAnchorsAdapter/index.ts","../../../plugins/comparative-adapters/src/MCScanSimpleAnchorsAdapter/index.ts","../../../plugins/comparative-adapters/src/MashMapAdapter/index.ts","../../../plugins/comparative-adapters/src/BlastTabularAdapter/index.ts","../../../plugins/comparative-adapters/src/GuessAdapter/index.ts","../../../plugins/dotplot-view/src/ComparativeRenderer/index.ts","../../../plugins/dotplot-view/src/DotplotDisplay/components/DotplotDisplay.tsx","../../../plugins/dotplot-view/src/ServerSideRenderedBlockContent.tsx","../../../plugins/dotplot-view/src/DotplotDisplay/renderDotplotBlock.ts","../../../plugins/dotplot-view/src/DotplotDisplay/stateModelFactory.tsx","../../../plugins/dotplot-view/src/DotplotReadVsRef/DotplotReadVsRef.ts","../../../plugins/dotplot-view/src/DotplotView/1dview.ts","../../../plugins/dotplot-view/src/DotplotView/model.ts","../../../plugins/dotplot-view/src/DotplotRenderer/DotplotRenderer.ts","../../../plugins/dotplot-view/src/DotplotRenderer/components/DotplotRendering.tsx","../../../plugins/dotplot-view/src/DotplotRenderer/configSchema.ts","../../../plugins/dotplot-view/src/index.ts","../../../plugins/dotplot-view/src/DotplotDisplay/index.ts","../../../plugins/dotplot-view/src/DotplotView/index.ts","../../../plugins/dotplot-view/src/DotplotRenderer/index.ts","../../../plugins/dotplot-view/src/LaunchDotplotView.ts","../../../plugins/dotplot-view/src/DotplotReadVsRef/index.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/shared.ts","../../../plugins/gccontent/src/index.ts","../../../plugins/gccontent/src/GCContentTrack/index.ts","../../../plugins/gccontent/src/GCContentAdapter/index.ts","../../../plugins/gccontent/src/GCContentAdapter/configSchema.ts","../../../plugins/gccontent/src/GCContentTrack/configSchema.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/index.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/config1.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/stateModel1.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/config2.ts","../../../plugins/gccontent/src/LinearGCContentDisplay/stateModel2.ts","../../../plugins/gff3/src/Gff3Adapter/configSchema.ts","../../../plugins/gff3/src/Gff3TabixAdapter/configSchema.ts","../../../plugins/gff3/src/index.ts","../../../plugins/gff3/src/Gff3TabixAdapter/index.ts","../../../plugins/gff3/src/Gff3Adapter/index.ts","../../../plugins/gff3/src/GuessGff3/index.ts","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/Highlight/Highlight.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/Highlight/OverviewHighlight.tsx","../../../plugins/grid-bookmark/src/GridBookmarkWidget/model.ts","../../../plugins/grid-bookmark/src/GridBookmarkWidget/index.ts","../../../plugins/grid-bookmark/src/index.ts","../../../plugins/grid-bookmark/src/GridBookmarkWidget/components/Highlight/index.tsx","../../../plugins/gtf/src/GtfAdapter/configSchema.ts","../../../plugins/gtf/src/index.ts","../../../plugins/gtf/src/GtfAdapter/index.ts","../../../plugins/gtf/src/GuessAdapter/index.ts","../../../plugins/hic/src/HicAdapter/configSchema.ts","../../../plugins/hic/src/HicRenderer/HicRenderer.tsx","../../../plugins/hic/src/HicRenderer/components/HicRendering.tsx","../../../plugins/hic/src/HicRenderer/configSchema.ts","../../../plugins/hic/src/LinearHicDisplay/model.ts","../../../plugins/hic/src/index.ts","../../../plugins/hic/src/HicAdapter/index.ts","../../../plugins/hic/src/HicRenderer/index.ts","../../../plugins/hic/src/HicTrack/index.ts","../../../plugins/hic/src/HicTrack/configSchema.ts","../../../plugins/hic/src/LinearHicDisplay/index.ts","../../../plugins/hic/src/LinearHicDisplay/configSchema.ts","../../../plugins/hic/src/GuessAdapter/index.ts","../../../plugins/jobs-management/src/JobsListWidget/jobModel.ts","../../../plugins/jobs-management/src/JobsListWidget/index.ts","../../../plugins/jobs-management/src/index.ts","../../../plugins/jobs-management/src/JobsListWidget/model.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/configSchema.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/model.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/configSchema.ts","../../../plugins/legacy-jbrowse/src/index.ts","../../../plugins/legacy-jbrowse/src/NCListAdapter/index.ts","../../../plugins/legacy-jbrowse/src/GuessNCList/index.ts","../../../plugins/legacy-jbrowse/src/JBrowse1TextSearchAdapter/index.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/index.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/model.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/stateModelFactory.ts","../../../plugins/linear-comparative-view/src/LinearComparativeView/model.ts","../../../plugins/linear-comparative-view/src/LinearReadVsRef/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/model.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/Icons.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/model.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyViewHelper/stateModelFactory.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyViewHelper/index.tsx","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/index.ts","../../../plugins/linear-comparative-view/src/index.ts","../../../plugins/linear-comparative-view/src/LinearComparativeView/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/index.ts","../../../plugins/linear-comparative-view/src/LinearComparativeDisplay/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/index.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/configSchemaF.ts","../../../plugins/linear-comparative-view/src/LGVSyntenyDisplay/index.ts","../../../plugins/linear-comparative-view/src/LaunchLinearSyntenyView.ts","../../../plugins/linear-comparative-view/src/SyntenyTrack/index.tsx","../../../plugins/linear-comparative-view/src/SyntenyTrack/configSchema.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/model.ts","../../../plugins/lollipop/src/LollipopRenderer/Layout.ts","../../../plugins/lollipop/src/LollipopRenderer/FloatingLayoutSession.ts","../../../plugins/lollipop/src/LollipopRenderer/LollipopRenderer.ts","../../../plugins/lollipop/src/LollipopRenderer/components/ScoreText.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/Lollipop.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/Stick.tsx","../../../plugins/lollipop/src/LollipopRenderer/components/LollipopRendering.tsx","../../../plugins/lollipop/src/LollipopRenderer/configSchema.ts","../../../plugins/lollipop/src/index.ts","../../../plugins/lollipop/src/LollipopRenderer/index.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/index.ts","../../../plugins/lollipop/src/LinearLollipopDisplay/configSchema.ts","../../../plugins/menus/src/AboutWidget/index.ts","../../../plugins/menus/src/HelpWidget/index.ts","../../../plugins/menus/src/ImportSessionWidget/index.ts","../../../plugins/menus/src/SessionManager/index.ts","../../../plugins/menus/src/index.ts","../../../plugins/rdf/src/SPARQLAdapter/configSchema.ts","../../../plugins/rdf/src/index.ts","../../../plugins/rdf/src/SPARQLAdapter/index.ts","../../../plugins/sequence/src/BgzipFastaAdapter/configSchema.ts","../../../plugins/sequence/src/ChromSizesAdapter/configSchema.ts","../../../plugins/sequence/src/DivSequenceRenderer/components/DivSequenceRendering.tsx","../../../plugins/sequence/src/DivSequenceRenderer/configSchema.ts","../../../plugins/sequence/src/DivSequenceRenderer/index.ts","../../../plugins/sequence/src/IndexedFastaAdapter/configSchema.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/configSchema.ts","../../../plugins/sequence/src/SequenceSearchAdapter/configSchema.ts","../../../plugins/sequence/src/TwoBitAdapter/configSchema.ts","../../../plugins/sequence/src/UnindexedFastaAdapter/configSchema.ts","../../../plugins/sequence/src/index.ts","../../../plugins/sequence/src/TwoBitAdapter/index.ts","../../../plugins/sequence/src/BgzipFastaAdapter/index.ts","../../../plugins/sequence/src/ChromSizesAdapter/index.ts","../../../plugins/sequence/src/IndexedFastaAdapter/index.ts","../../../plugins/sequence/src/UnindexedFastaAdapter/index.ts","../../../plugins/sequence/src/SequenceSearchAdapter/index.ts","../../../plugins/sequence/src/ReferenceSequenceTrack/index.ts","../../../plugins/sequence/src/ReferenceSequenceTrack/configSchema.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/index.ts","../../../plugins/sequence/src/LinearReferenceSequenceDisplay/model.ts","../../../plugins/sequence/src/createExtensionPoints.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/ImportWizard.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/util.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/FeatureMenu.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/LocationCell.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/SpreadsheetViewModel.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/SpreadsheetModel.tsx","../../../plugins/spreadsheet-view/src/index.ts","../../../plugins/spreadsheet-view/src/SpreadsheetView/index.ts","../../../plugins/spreadsheet-view/src/LaunchSpreadsheetView/index.ts","../../../plugins/sv-inspector/src/SvInspectorView/index.ts","../../../plugins/sv-inspector/src/index.ts","../../../plugins/sv-inspector/src/SvInspectorView/model.ts","../../../plugins/sv-inspector/src/LaunchSvInspectorView/index.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureLabel.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/FeatureGlyph.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgOverlay.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Arrow.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Box.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Segments.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/ProcessedTranscript.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/Subfeatures.tsx","../../../plugins/svg/src/SvgFeatureRenderer/components/util.ts","../../../plugins/svg/src/SvgFeatureRenderer/components/SvgFeatureRendering.tsx","../../../plugins/svg/src/SvgFeatureRenderer/configSchema.ts","../../../plugins/svg/src/index.ts","../../../plugins/trix/src/TrixTextSearchAdapter/configSchema.ts","../../../plugins/trix/src/index.ts","corePlugins.ts","../../../packages/core/configuration/util.ts","../../../packages/core/pluggableElementTypes/PluggableElementBase.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BlockMsg.tsx","../../../plugins/variants/src/LinearVariantDisplay/model.ts","../../../plugins/variants/src/shared/MultiVariantBaseModel.tsx","../../../plugins/variants/src/MultiLinearVariantDisplay/model.ts","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/components/Crosshair.tsx","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/components/VariantDisplayComponent.tsx","../../../plugins/variants/src/MultiLinearVariantMatrixRenderer/configSchema.ts","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/configSchema.ts","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/model.ts","../../../plugins/variants/src/MultiLinearVariantMatrixRenderer/LinearVariantMatrixRenderer.ts","../../../plugins/variants/src/MultiLinearVariantMatrixRenderer/components/LinearVariantMatrixRendering.tsx","../../../plugins/variants/src/MultiLinearVariantRenderer/MultiVariantRenderer.ts","../../../plugins/variants/src/MultiLinearVariantRenderer/components/MultiVariantRendering.tsx","../../../plugins/variants/src/MultiLinearVariantRenderer/configSchema.ts","../../../plugins/variants/src/SplitVcfTabixAdapter/configSchema.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/Chord.tsx","../../../plugins/variants/src/StructuralVariantChordRenderer/ReactComponent.tsx","../../../plugins/variants/src/StructuralVariantChordRenderer/configSchema.ts","../../../plugins/variants/src/VariantFeatureWidget/configSchema.ts","../../../plugins/variants/src/VariantFeatureWidget/stateModelFactory.ts","../../../plugins/variants/src/VariantRPC/MultiVariantGetGenotypeMatrix.ts","../../../plugins/variants/src/VariantRPC/MultiVariantGetSimplifiedFeatures.ts","../../../plugins/variants/src/VariantRPC/MultiVariantGetSources.ts","../../../plugins/variants/src/VcfAdapter/configSchema.ts","../../../plugins/variants/src/VcfTabixAdapter/configSchema.ts","../../../plugins/variants/src/index.ts","../../../plugins/variants/src/VariantTrack/index.ts","../../../plugins/variants/src/VcfAdapter/index.ts","../../../plugins/variants/src/VcfTabixAdapter/index.ts","../../../plugins/variants/src/SplitVcfTabixAdapter/index.ts","../../../plugins/variants/src/VariantFeatureWidget/index.ts","../../../plugins/variants/src/VariantTrack/configSchema.ts","../../../plugins/variants/src/extensionPoints.ts","../../../plugins/variants/src/LinearVariantDisplay/index.ts","../../../plugins/variants/src/LinearVariantDisplay/configSchema.ts","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/index.ts","../../../plugins/variants/src/MultiLinearVariantDisplay/index.ts","../../../plugins/variants/src/MultiLinearVariantDisplay/configSchema.ts","../../../plugins/variants/src/shared/SharedVariantConfigSchema.ts","../../../plugins/variants/src/MultiLinearVariantRenderer/index.ts","../../../plugins/variants/src/MultiLinearVariantMatrixRenderer/index.ts","../../../plugins/variants/src/StructuralVariantChordRenderer/index.ts","../../../plugins/variants/src/ChordVariantDisplay/index.ts","../../../plugins/variants/src/ChordVariantDisplay/models/configSchema.ts","../../../plugins/variants/src/ChordVariantDisplay/models/stateModelFactory.ts","../../../packages/core/util/stopToken.ts","../../../packages/core/ui/LoadingEllipses.tsx","../../../packages/core/util/stats.ts","../../../packages/core/util/useMeasure.ts","../../../packages/core/ui/colors.ts","../../../packages/core/configuration/configurationSlot.ts","../../../packages/core/configuration/configurationSchema.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/Block.tsx","../../../packages/core/util/jexlStrings.ts","../../../packages/core/ui/FileSelector/LocalFileChooser.tsx","../../../packages/core/data_adapters/BaseAdapter/util.ts","../../../packages/core/data_adapters/BaseAdapter/BaseAdapter.ts","../../../packages/core/data_adapters/BaseAdapter/BaseFeatureDataAdapter.ts","../../../packages/core/data_adapters/BaseAdapter/BaseSequenceAdapter.ts","../../../packages/core/pluggableElementTypes/AdapterType.ts","../../../plugins/circular-view/src/CircularView/viewportVisibleRegion.ts","../../../plugins/circular-view/src/CircularView/slices.ts","../../../plugins/circular-view/src/CircularView/model.ts","../../../plugins/circular-view/src/BaseChordDisplay/components/DisplayError.tsx","../../../plugins/circular-view/src/BaseChordDisplay/components/Loading.tsx","../../../plugins/circular-view/src/BaseChordDisplay/components/BaseChordDisplay.tsx","../../../plugins/circular-view/src/BaseChordDisplay/configSchema.ts","../../../plugins/circular-view/src/BaseChordDisplay/renderReaction.ts","../../../plugins/circular-view/src/BaseChordDisplay/model.tsx","../../../plugins/circular-view/src/index.ts","../../../plugins/circular-view/src/CircularView/index.ts","../../../plugins/circular-view/src/LaunchCircularView/index.ts","../../../plugins/alignments/src/MismatchParser/getNextRefPos.ts","../../../plugins/breakpoint-split-view/src/BreakpointSplitView/util.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/util.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/configSchema.ts","../../../packages/core/util/compositeMap.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/TooLargeMessage.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/FeatureDensityMixin.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/autorunFeatureDensityStats.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/TrackHeightMixin.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/BaseLinearDisplayModel.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/LinearBlocks.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BaseLinearDisplay.tsx","../../../plugins/linear-genome-view/src/LinearBareDisplay/configSchema.ts","../../../plugins/linear-genome-view/src/LinearBareDisplay/model.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/configSchema.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/model.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/HeaderPanControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/HeaderRegionWidth.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/HeaderTrackSelectorButton.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/HeaderZoomControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewHighlight.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewRubberband.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewScalebarTickLabels.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/OverviewScalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/EndAdornment.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchBox.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Header.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/MiniControls.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/model.ts","../../../plugins/linear-genome-view/src/index.ts","../../../plugins/linear-genome-view/src/FeatureTrack/index.ts","../../../plugins/linear-genome-view/src/FeatureTrack/configSchema.ts","../../../plugins/linear-genome-view/src/BasicTrack/index.ts","../../../plugins/linear-genome-view/src/BasicTrack/configSchema.ts","../../../plugins/linear-genome-view/src/LinearBasicDisplay/index.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/index.ts","../../../plugins/linear-genome-view/src/LinearBareDisplay/index.ts","../../../plugins/linear-genome-view/src/LaunchLinearGenomeView/index.ts","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/BlockLoadingMessage.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/components/ServerSideRenderedBlockContent.tsx","../../../plugins/linear-genome-view/src/BaseLinearDisplay/models/serverSideRenderedBlock.ts","../../../packages/core/util/jexl.ts","../../../plugins/variants/src/VcfFeature/util.ts","../../../plugins/variants/src/VcfFeature/index.ts","../../../packages/core/util/makeAbortableReaction.ts","../../../packages/core/ui/FatalErrorDialog.tsx","../../../packages/core/pluggableElementTypes/DisplayType.ts","../../../packages/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType.ts","../../../plugins/wiggle/src/LinearWiggleDisplay/components/Tooltip.tsx","../../../packages/core/ui/ErrorBoundary.tsx","../../../packages/core/pluggableElementTypes/TrackType.ts","../../../plugins/config/src/ConfigurationEditorWidget/components/HeadingComponent.tsx","../../../plugins/config/src/ConfigurationEditorWidget/model.ts","../../../plugins/config/src/ConfigurationEditorWidget/index.ts","../../../plugins/config/src/FromConfigAdapter/configSchema.ts","../../../plugins/config/src/FromConfigRegionsAdapter/configSchema.ts","../../../plugins/config/src/FromConfigSequenceAdapter/configSchema.ts","../../../plugins/config/src/NcbiSequenceReportAliasAdapter/configSchema.ts","../../../plugins/config/src/RefNameAliasAdapter/configSchema.ts","../../../plugins/config/src/index.ts","../../../plugins/config/src/FromConfigAdapter/index.ts","../../../plugins/config/src/FromConfigRegionsAdapter/index.ts","../../../plugins/config/src/FromConfigSequenceAdapter/index.ts","../../../plugins/config/src/RefNameAliasAdapter/index.ts","../../../plugins/config/src/NcbiSequenceReportAliasAdapter/index.ts","../../../plugins/data-management/src/AddTrackWidget/model.ts","../../../plugins/data-management/src/AddTrackWidget/index.ts","../../../packages/core/pluggableElementTypes/ViewType.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Gridlines.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabelDragHandle.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabelMenu.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabel.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackLabelContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackRenderingContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TrackContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/VerticalGuide.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/useRangeSelect.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Rubberband.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ScalebarCoordinateTicks.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ScalebarCoordinateLabels.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/ScalebarRefNameLabels.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Scalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/TracksContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/useSideScroll.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/useWheelScroll.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/LinearGenomeViewContainer.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/LinearGenomeView.tsx","../../../packages/core/util/rxjs.ts","../../../packages/core/pluggableElementTypes/WidgetType.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/configSchema.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/facetedUtil.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/facetedModel.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/filterTracks.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/generateHierarchy.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/model.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/index.ts","../../../plugins/data-management/src/AddConnectionWidget/model.ts","../../../plugins/data-management/src/AddConnectionWidget/index.ts","../../../packages/core/data_adapters/CytobandAdapter/configSchema.ts","../../../packages/core/rpc/methods/CoreGetRefNames.ts","../../../packages/core/rpc/methods/CoreGetFeatureDetails.ts","../../../packages/core/rpc/methods/CoreGetMetadata.ts","../../../packages/core/rpc/methods/CoreGetFileInfo.ts","../../../packages/core/rpc/methods/CoreGetFeatures.ts","../../../packages/core/rpc/methods/util.ts","../../../packages/core/rpc/methods/CoreRender.ts","../../../packages/core/rpc/methods/CoreFreeResources.ts","../../../packages/core/rpc/methods/CoreGetFeatureDensityStats.ts","../../../packages/core/CorePlugin.ts","../../../packages/core/data_adapters/CytobandAdapter/index.ts","../../../packages/core/PluginManager.ts","../../../plugins/variants/src/MultiLinearVariantMatrixDisplay/components/LinesConnectingMatrixToGenomicPosition.tsx","../../../plugins/wiggle/src/util.ts","../../../packages/core/util/layouts/PrecomputedLayout.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/consts.ts","../../../packages/core/util/blockTypes.ts","../../../packages/core/util/color/cssColorsLevel4.ts","../../../packages/core/util/color/index.ts","../../../plugins/alignments/src/shared/getUniqueTags.ts","../../../packages/core/data_adapters/util.ts","../../../packages/core/TextSearch/TextSearchManager.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/Cytobands.tsx","../../../packages/core/util/layouts/GranularRectLayout.ts","../../../plugins/variants/src/shared/minorAlleleFrequencyUtils.ts","../../../plugins/alignments/src/util.ts","../../../packages/core/util/colord.ts","../../../packages/core/util/layouts/PrecomputedMultiLayout.js","../../../packages/core/util/layouts/SceneGraph.ts","../../../plugins/wiggle/src/Tooltip.tsx","../../../packages/core/util/calculateStaticBlocks.ts","../../../plugins/variants/src/shared/components/RectBg.tsx","../../../plugins/variants/src/shared/components/ColorLegend.tsx","../../../plugins/variants/src/shared/components/LegendBar.tsx","../../../plugins/dotplot-view/src/DotplotView/components/util.ts","../../../plugins/wiggle/src/shared/YScaleBar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RubberbandSpan.tsx","../../../plugins/alignments/src/shared/util.ts","../../../packages/core/pluggableElementTypes/ConnectionType.ts","../../../packages/core/pluggableElementTypes/InternetAccountType.ts","../../../packages/core/util/types/index.ts","../../../packages/core/pluggableElementTypes/renderers/FeatureRendererType.ts","../../../plugins/alignments/src/ModificationParser/index.ts","../../../packages/core/pluggableElementTypes/renderers/util/serializableFilterChain.ts","../../../packages/core/util/calculateDynamicBlocks.ts","../../../packages/core/pluggableElementTypes/renderers/RpcRenderedSvgGroup.tsx","../../../packages/core/pluggableElementTypes/renderers/CircularChordRendererType.tsx","../../../packages/core/util/Base1DUtils.ts","../../../packages/core/pluggableElementTypes/renderers/RendererType.tsx","../../../plugins/alignments/src/MismatchParser/cigarToMismatches.ts","../../../plugins/alignments/src/MismatchParser/mdToMismatches.ts","../../../plugins/alignments/src/MismatchParser/index.ts","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/AutocompleteTextField.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/index.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/RefNameAutocomplete/util.ts","../../../plugins/variants/src/shared/components/MultiVariantTooltip.tsx","../../../packages/core/util/Base1DViewModel.ts","../../../packages/core/pluggableElementTypes/renderers/BoxRendererType.ts","../../../packages/core/util/offscreenCanvasUtils.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGBackground.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGRegionSeparators.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGRuler.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGScalebar.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGHeader.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGTrackLabel.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGTracks.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/svgcomponents/SVGLinearGenomeView.tsx","../../../plugins/wiggle/src/LinearWiggleDisplay/components/WiggleDisplayComponent.tsx","../../../plugins/alignments/src/shared/getUniqueModifications.ts","../../../packages/core/util/io/RemoteFileWithRangeCache.ts","../../../packages/core/util/io/index.ts"],"sourcesContent":["import { ThemeProvider } from '@mui/material/styles'\nimport { getSnapshot, isStateTreeNode } from 'mobx-state-tree'\nimport { renderToString } from 'react-dom/server'\n\nimport RendererType from './RendererType'\nimport ServerSideRenderedContent from './ServerSideRenderedContent'\nimport { createJBrowseTheme } from '../../ui'\nimport SerializableFilterChain from './util/serializableFilterChain'\nimport { getSerializedSvg, updateStatus } from '../../util'\nimport { checkStopToken } from '../../util/stopToken'\n\nimport type { RenderProps, RenderResults } from './RendererType'\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { SerializedFilterChain } from './util/serializableFilterChain'\nimport type RpcManager from '../../rpc/RpcManager'\nimport type { ThemeOptions } from '@mui/material'\nimport type { SnapshotIn, SnapshotOrInstance } from 'mobx-state-tree'\n\ninterface BaseRenderArgs extends RenderProps {\n  sessionId: string\n  // Note that stopToken serialization happens after serializeArgsInClient and\n  // deserialization happens before deserializeArgsInWorker\n  stopToken?: string\n  theme: ThemeOptions\n  exportSVG?: {\n    rasterizeLayers?: boolean\n  }\n}\n\nexport interface RenderArgs extends BaseRenderArgs {\n  config: SnapshotOrInstance<AnyConfigurationModel>\n  filters?: SerializableFilterChain\n}\n\nexport interface RenderArgsSerialized extends BaseRenderArgs {\n  statusCallback?: (arg: string) => void\n  config: SnapshotIn<AnyConfigurationModel>\n  filters?: SerializedFilterChain\n}\nexport interface RenderArgsDeserialized extends BaseRenderArgs {\n  config: AnyConfigurationModel\n  filters?: SerializableFilterChain\n}\n\nexport interface ResultsSerialized extends Omit<RenderResults, 'reactElement'> {\n  html: string\n}\n\nexport interface ResultsSerializedSvgExport extends ResultsSerialized {\n  canvasRecordedData: unknown\n  width: number\n  height: number\n  reactElement: unknown\n}\n\nexport type ResultsDeserialized = RenderResults\n\nfunction isSvgExport(e: ResultsSerialized): e is ResultsSerializedSvgExport {\n  return 'canvasRecordedData' in e\n}\n\nexport default class ServerSideRenderer extends RendererType {\n  /**\n   * directly modifies the render arguments to prepare them to be serialized and\n   * sent to the worker.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n  serializeArgsInClient(args: RenderArgs): RenderArgsSerialized {\n    return {\n      ...args,\n      config: isStateTreeNode(args.config)\n        ? getSnapshot(args.config)\n        : args.config,\n      filters: args.filters?.toJSON().filters,\n    }\n  }\n\n  /**\n   * Deserialize the render results from the worker in the client. Includes\n   * hydrating of the React HTML string, and not hydrating the result if SVG is\n   * being rendered\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    res: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    // if we are rendering svg, we skip hydration\n    if (args.exportSVG) {\n      // only return the res if the renderer explicitly has\n      // this.supportsSVG support to avoid garbage being rendered in SVG\n      // document\n      return {\n        ...res,\n        html: this.supportsSVG\n          ? res.html\n          : '<text y=\"12\" fill=\"black\">SVG export not supported for this track</text>',\n      }\n    }\n\n    // get res using ServerSideRenderedContent\n    return {\n      ...res,\n      reactElement: (\n        <ServerSideRenderedContent\n          {...args}\n          {...res}\n          RenderingComponent={this.ReactComponent}\n        />\n      ),\n    }\n  }\n\n  /**\n   * modifies the passed arguments object to inflate arguments as necessary.\n   * called in the worker process.\n   *\n   * @param args - the converted arguments to modify\n   */\n  deserializeArgsInWorker(args: RenderArgsSerialized): RenderArgsDeserialized {\n    const deserialized = { ...args } as unknown as RenderArgsDeserialized\n    deserialized.config = this.configSchema.create(args.config || {}, {\n      pluginManager: this.pluginManager,\n    })\n    deserialized.filters = args.filters\n      ? new SerializableFilterChain({\n          filters: args.filters,\n        })\n      : undefined\n\n    return deserialized\n  }\n\n  /**\n   * Serialize results of the render to send them to the client. Includes\n   * rendering React to an HTML string.\n   *\n   * @param results - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const html = renderToString(\n      <ThemeProvider theme={createJBrowseTheme(args.theme)}>\n        {results.reactElement}\n      </ThemeProvider>,\n    )\n    results.reactElement = undefined\n    return { ...results, html }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then calls\n   * \"CoreRender\" with the RPC manager.\n   *\n   * @param rpcManager - RPC manager\n   * @param args - render args\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const results = (await rpcManager.call(\n      args.sessionId,\n      'CoreRender',\n      args,\n    )) as ResultsSerialized\n\n    if (isSvgExport(results)) {\n      results.html = await getSerializedSvg(results)\n      results.reactElement = undefined\n    }\n    return results\n  }\n\n  /**\n   * Render method called on the worker. `render` is called here in server-side\n   * rendering\n   *\n   * @param args - serialized render args\n   */\n  async renderInWorker(args: RenderArgsSerialized): Promise<ResultsSerialized> {\n    const { stopToken, statusCallback = () => {} } = args\n    const deserializedArgs = this.deserializeArgsInWorker(args)\n\n    const results = await updateStatus('Rendering plot', statusCallback, () =>\n      this.render(deserializedArgs),\n    )\n    checkStopToken(stopToken)\n\n    // serialize the results for passing back to the main thread.\n    // these will be transmitted to the main process, and will come out\n    // as the result of renderRegionWithWorker.\n    return updateStatus('Serializing results', statusCallback, () =>\n      this.serializeResultsInWorker(results, deserializedArgs),\n    )\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const serializedArgs = this.serializeArgsInClient(args)\n    const { sessionId } = args\n\n    await rpcManager.call(sessionId, 'CoreFreeResources', serializedArgs)\n  }\n}\n\nexport { type RenderResults } from './RendererType'\n","export interface Feat {\n  start: number\n  end: number\n  type?: string\n  name?: string\n  id?: string\n}\nexport interface ParentFeat extends Feat {\n  uniqueId: string\n  strand?: number\n  refName: string\n  subfeatures?: Feat[]\n  parentId?: string\n}\nexport interface SeqState {\n  seq: string\n  upstream?: string\n  downstream?: string\n}\n\nexport interface ErrorState {\n  error: string\n}\n\nexport function stitch(subfeats: Feat[], sequence: string) {\n  return subfeats.map(sub => sequence.slice(sub.start, sub.end)).join('')\n}\n\n// filter items if they have the same \"ID\" or location\nfunction getItemId(feat: Feat) {\n  return `${feat.start}-${feat.end}`\n}\n\n// filters if successive elements share same start/end\nexport function dedupe(list: Feat[]) {\n  return list.filter(\n    (item, pos, ary) => !pos || getItemId(item) !== getItemId(ary[pos - 1]!),\n  )\n}\n\nexport function revlist(list: Feat[], seqlen: number) {\n  return list\n    .map(sub => ({\n      ...sub,\n      start: seqlen - sub.end,\n      end: seqlen - sub.start,\n    }))\n    .sort((a, b) => a.start - b.start)\n}\n\nexport function calculateUTRs(cds: Feat[], exons: Feat[]) {\n  // checking length ensures the .at below are valid\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n\n  const lastCds = cds.at(-1)!\n  const firstCdsIdx = exons.findIndex(\n    exon => exon.end >= firstCds.start && exon.start <= firstCds.start,\n  )\n  const lastCdsIdx = exons.findIndex(\n    exon => exon.end >= lastCds.end && exon.start <= lastCds.end,\n  )\n  const lastCdsExon = exons[lastCdsIdx]!\n  const firstCdsExon = exons[firstCdsIdx]!\n\n  const fiveUTRs = [\n    ...exons.slice(0, firstCdsIdx),\n    { start: firstCdsExon.start, end: firstCds.start },\n  ].map(elt => ({ ...elt, type: 'five_prime_UTR' }))\n\n  const threeUTRs = [\n    { start: lastCds.end, end: lastCdsExon.end },\n    ...exons.slice(lastCdsIdx + 1),\n  ].map(elt => ({ ...elt, type: 'three_prime_UTR' }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\n// calculates UTRs using impliedUTRs logic, but there are no exon subfeatures\nexport function calculateUTRs2(cds: Feat[], parentFeat: Feat) {\n  if (!cds.length) {\n    return []\n  }\n\n  const firstCds = cds.at(0)!\n  const lastCds = cds.at(-1)!\n  const fiveUTRs = [{ start: parentFeat.start, end: firstCds.start }].map(\n    elt => ({ ...elt, type: 'five_prime_UTR' }),\n  )\n\n  const threeUTRs = [{ start: lastCds.end, end: parentFeat.end }].map(elt => ({\n    ...elt,\n    type: 'three_prime_UTR',\n  }))\n\n  return [...fiveUTRs, ...threeUTRs]\n}\n\nexport function ellipses(slug: string) {\n  return slug.length > 20 ? `${slug.slice(0, 20)}...` : slug\n}\n\nexport function replaceUndefinedWithNull(obj: Record<string, unknown>) {\n  return JSON.parse(JSON.stringify(obj, (_, v) => (v === undefined ? null : v)))\n}\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('PluginStoreModel', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('PluginStoreWidget'),\n      /**\n       * #property\n       */\n      filterText: '',\n      /**\n       * #property\n       */\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      clearFilterText() {\n        self.filterText = ''\n      },\n      /**\n       * #action\n       */\n      setFilterText(newText: string) {\n        self.filterText = newText\n      },\n    }))\n}\n\nexport type PluginStoreStateModel = ReturnType<typeof stateModelFactory>\nexport type PluginStoreModel = Instance<PluginStoreStateModel>\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('PluginStoreWidget', {})\n\nexport default function PluginStoreWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'PluginStoreWidget',\n      heading: 'Plugin store',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/PluginStoreWidget')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '../../configuration'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config BaseConnection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseConnectionConfig = ConfigurationSchema(\n  'BaseConnection',\n  {\n    /**\n     * #slot\n     */\n    name: {\n      type: 'string',\n      defaultValue: 'nameOfConnection',\n      description: 'a unique name for this connection',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'optional list of names of assemblies in this connection',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'connectionId',\n  },\n)\n\nexport default BaseConnectionConfig\nexport type BaseConnectionConfigSchema = typeof BaseConnectionConfig\nexport type BaseConnectionConfigModel = Instance<BaseConnectionConfigSchema>\n","import { cast, types } from 'mobx-state-tree'\n\nimport configSchema from './baseConnectionConfig'\nimport { ConfigurationReference } from '../../configuration'\n\nimport type PluginManager from '../../PluginManager'\nimport type { AnyConfigurationModel } from '../../configuration'\n\ntype TrackConf = AnyConfigurationModel | Record<string, unknown>\n\n/**\n * #stateModel BaseConnectionModel\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('Connection', {\n      /**\n       * #property\n       */\n      name: types.identifier,\n      /**\n       * #property\n       */\n      tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .actions(() => ({\n      /**\n       * #action\n       */\n      connect(_arg: AnyConfigurationModel) {},\n    }))\n    .actions(self => ({\n      afterAttach() {\n        if (self.tracks.length === 0) {\n          self.connect(self.configuration)\n        }\n      },\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: TrackConf) {\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      /**\n       * #action\n       */\n      addTrackConfs(trackConfs: TrackConf[]) {\n        self.tracks.push(...trackConfs)\n      },\n      /**\n       * #action\n       */\n      setTrackConfs(trackConfs: AnyConfigurationModel[]) {\n        self.tracks = cast(trackConfs)\n      },\n      /**\n       * #action\n       */\n      clear() {},\n    }))\n}\n\nexport type BaseConnectionModel = ReturnType<typeof stateModelFactory>\nexport default stateModelFactory\n","import type React from 'react'\n\nimport { getParent, isRoot, types } from 'mobx-state-tree'\n\nimport { getConf } from '../../configuration'\nimport { getContainingView, getEnv } from '../../util'\nimport { getParentRenderProps } from '../../util/tracks'\nimport { ElementId } from '../../util/types/mst'\n\nimport type { MenuItem } from '../../ui'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel BaseDisplay\n * #category display\n */\nfunction stateModelFactory() {\n  return types\n    .model('BaseDisplay', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.string,\n      /**\n       * #property\n       */\n      rpcDriverName: types.maybe(types.string),\n    })\n    .volatile(() => ({\n      rendererTypeName: '',\n      error: undefined as unknown,\n      message: undefined as string | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get RenderingComponent(): React.FC<{\n        model: typeof self\n        onHorizontalScroll?: () => void\n        blockState?: Record<string, any>\n      }> {\n        const { pluginManager } = getEnv(self)\n        return pluginManager.getDisplayType(self.type)!\n          .ReactComponent as React.FC<{\n          model: typeof self\n          onHorizontalScroll?: () => void\n          blockState?: Record<string, any>\n        }>\n      },\n\n      /**\n       * #getter\n       */\n      get DisplayBlurb(): React.FC<{ model: typeof self }> | null {\n        return null\n      },\n\n      /**\n       * #getter\n       */\n      get adapterConfig() {\n        return getConf(this.parentTrack, 'adapter')\n      },\n\n      /**\n       * #getter\n       */\n      get parentTrack() {\n        let track = getParent<any>(self)\n        while (!(track.configuration && getConf(track, 'trackId'))) {\n          if (isRoot(track)) {\n            throw new Error(`No parent track found for ${self.type} ${self.id}`)\n          }\n          track = getParent<any>(track)\n        }\n        return track\n      },\n\n      /**\n       * #method\n       * the react props that are passed to the Renderer when data\n       * is rendered in this display\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          notReady: getContainingView(self).minimized,\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n        }\n      },\n\n      /**\n       * #getter\n       * the pluggable element type object for this display's renderer\n       */\n      get rendererType() {\n        const { pluginManager } = getEnv(self)\n        return pluginManager.getRendererType(self.rendererTypeName)!\n      },\n\n      /**\n       * #getter\n       * if a display-level message should be displayed instead, make this\n       * return a react component\n       */\n      get DisplayMessageComponent() {\n        return undefined as undefined | React.FC<any>\n      },\n      /**\n       * #method\n       */\n      trackMenuItems(): MenuItem[] {\n        return []\n      },\n\n      /**\n       * #getter\n       */\n      get viewMenuActions(): MenuItem[] {\n        return []\n      },\n      /**\n       * #method\n       * @param region -\n       * @returns falsy if the region is fine to try rendering. Otherwise,\n       * return a react node + string of text. string of text describes why it\n       * cannot be rendered react node allows user to force load at current\n       * setting\n       */\n      regionCannotBeRendered(/* region */) {\n        return null\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setMessage(arg?: string) {\n        self.message = arg\n      },\n      /**\n       * #action\n       */\n      setError(error?: unknown) {\n        self.error = error\n      },\n      /**\n       * #action\n       */\n      setRpcDriverName(rpcDriverName: string) {\n        self.rpcDriverName = rpcDriverName\n      },\n      /**\n       * #action\n       * base display reload does nothing, see specialized displays for details\n       */\n      reload() {},\n    }))\n}\n\nexport const BaseDisplay = stateModelFactory()\nexport type BaseDisplayStateModel = typeof BaseDisplay\nexport type BaseDisplayModel = Instance<BaseDisplayStateModel>\n","import { ConfigurationSchema } from '../../configuration'\n\n/**\n * #config BaseInternetAccount\n * the \"base\" internet account type\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const BaseInternetAccountConfig = ConfigurationSchema(\n  'InternetAccount',\n  {\n    /**\n     * #slot\n     */\n    name: {\n      description: 'descriptive name of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    description: {\n      description: 'a description of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    authHeader: {\n      description: 'request header for credentials',\n      type: 'string',\n      defaultValue: 'Authorization',\n    },\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'internetAccountId',\n    explicitlyTyped: true,\n  },\n)\n","import type React from 'react'\n\nimport { types } from 'mobx-state-tree'\n\nimport { BaseInternetAccountConfig } from './baseInternetAccountConfig'\nimport { ConfigurationReference, getConf } from '../../configuration'\nimport { RemoteFileWithRangeCache } from '../../util/io'\nimport { ElementId } from '../../util/types/mst'\n\nimport type { AnyReactComponentType, UriLocation } from '../../util/types'\nimport type { Instance } from 'mobx-state-tree'\n\nconst inWebWorker = typeof sessionStorage === 'undefined'\n\n/**\n * #stateModel BaseInternetAccountModel\n * #category internetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const InternetAccount = types\n  .model('InternetAccount', {\n    /**\n     * #property\n     */\n    id: ElementId,\n    /**\n     * #property\n     */\n    type: types.string,\n    /**\n     * #property\n     */\n    configuration: ConfigurationReference(BaseInternetAccountConfig),\n  })\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get name(): string {\n      return getConf(self, 'name')\n    },\n    /**\n     * #getter\n     */\n    get description(): string {\n      return getConf(self, 'description')\n    },\n    /**\n     * #getter\n     */\n    get internetAccountId(): string {\n      return getConf(self, 'internetAccountId') // NOTE: this is the explicitIdentifier of the config schema\n    },\n    /**\n     * #getter\n     */\n    get authHeader(): string {\n      return getConf(self, 'authHeader')\n    },\n    /**\n     * #getter\n     */\n    get tokenType(): string {\n      return getConf(self, 'tokenType')\n    },\n    /**\n     * #getter\n     */\n    get domains(): string[] {\n      return getConf(self, 'domains')\n    },\n    /**\n     * #getter\n     * Can use this to customize what is displayed in fileSelector's toggle box\n     */\n    get toggleContents(): React.ReactNode {\n      return null\n    },\n    /**\n     * #getter\n     * Can use this to customize what the fileSelector. It takes a prop called\n     * `setLocation` that should be used to set a UriLocation\n     */\n    get SelectorComponent(): AnyReactComponentType | undefined {\n      return undefined\n    },\n    /**\n     * #getter\n     * Can use this to add a label to the UrlChooser. Has no effect if a custom\n     * SelectorComponent is supplied\n     */\n    get selectorLabel(): string | undefined {\n      return undefined\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     * Determine whether this internetAccount provides credentials for a URL\n     * @param location  - UriLocation of resource\n     * @returns true or false\n     */\n    handlesLocation(location: UriLocation) {\n      return self.domains.some(domain => location.uri.includes(domain))\n    },\n    /**\n     * #getter\n     * The key used to store this internetAccount's token in sessionStorage\n     */\n    get tokenKey() {\n      return `${self.internetAccountId}-token`\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Must be implemented by a model extending or composing this one. Pass the\n     * user's token to `resolve`.\n     * @param resolve - Pass the token to this function\n     * @param reject - If there is an error getting the token, call this function\n     */\n    getTokenFromUser(\n      _resolve: (token: string) => void,\n      _reject: (error: Error) => void,\n    ): void {\n      throw new Error('getTokenFromUser must be implemented by extending model')\n    },\n    /**\n     * #action\n     */\n    storeToken(token: string) {\n      sessionStorage.setItem(self.tokenKey, token)\n    },\n    /**\n     * #action\n     */\n    removeToken() {\n      sessionStorage.removeItem(self.tokenKey)\n    },\n    /**\n     * #action\n     */\n    retrieveToken() {\n      return sessionStorage.getItem(self.tokenKey)\n    },\n    /**\n     * #action\n     * This can be used by an internetAccount to validate a token works before\n     * it is used. This is run when preAuthorizationInformation is requested,\n     * so it can be used to check that a token is valid before sending it to a\n     * worker thread. It expects the token to be returned so that this action\n     * can also be used to generate a new token (e.g. by using a refresh token)\n     * if the original one was invalid. Should throw an error if a token is\n     * invalid.\n     *\n     * @param token - Auth token\n     * @param loc - UriLocation of the resource\n     * @returns - Valid auth token\n     */\n    async validateToken(token: string, _loc: UriLocation) {\n      return token\n    },\n  }))\n  .actions(self => {\n    let tokenPromise: Promise<string> | undefined = undefined\n    return {\n      /**\n       * #action\n       * Try to get the token from the location pre-auth, from local storage,\n       * or from a previously cached promise. If token is not available, uses\n       * `getTokenFromUser`.\n       *\n       * @param location - UriLocation of the resource\n       * @returns A promise for the token\n       */\n      async getToken(location?: UriLocation): Promise<string> {\n        if (tokenPromise) {\n          return tokenPromise\n        }\n        let token = location?.internetAccountPreAuthorization?.authInfo?.token\n        if (token) {\n          tokenPromise = Promise.resolve(token)\n          return tokenPromise\n        }\n        if (inWebWorker) {\n          throw new Error(\n            'Did not get internet account pre-authorization info in worker',\n          )\n        }\n        token = self.retrieveToken()\n        if (token) {\n          tokenPromise = Promise.resolve(token)\n          return tokenPromise\n        }\n        tokenPromise = new Promise((resolve, reject) => {\n          self.getTokenFromUser(\n            token => {\n              self.storeToken(token)\n              resolve(token)\n            },\n            error => {\n              self.removeToken()\n              reject(error)\n            },\n          )\n        })\n        return tokenPromise\n      },\n    }\n  })\n  .actions(self => ({\n    /**\n     * #action\n     */\n    addAuthHeaderToInit(init?: RequestInit, token?: string) {\n      return {\n        ...init,\n        headers: new Headers({\n          // eslint-disable-next-line @typescript-eslint/no-misused-spread\n          ...init?.headers,\n          ...(token\n            ? {\n                [self.authHeader]: self.tokenType\n                  ? `${self.tokenType} ${token}`\n                  : token,\n              }\n            : {}),\n        }),\n      }\n    },\n    /**\n     * #action\n     * Gets the token and returns it along with the information needed to\n     * create a new internetAccount.\n     *\n     * @param location - UriLocation of the resource\n     * @returns\n     */\n    async getPreAuthorizationInformation(location: UriLocation) {\n      const authToken = await self.getToken(location)\n      let validatedToken: string | undefined\n      try {\n        validatedToken = await self.validateToken(authToken, location)\n      } catch (error) {\n        self.removeToken()\n        throw error\n      }\n      return {\n        internetAccountType: self.type,\n        authInfo: {\n          token: validatedToken,\n          configuration: getConf(self),\n        },\n      }\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Get a fetch method that will add any needed authentication headers to\n     * the request before sending it. If location is provided, it will be\n     * checked to see if it includes a token in it pre-auth information.\n     *\n     * @param loc - UriLocation of the resource\n     * @returns A function that can be used to fetch\n     */\n    getFetcher(loc?: UriLocation) {\n      return async (input: RequestInfo, init?: RequestInit) => {\n        const authToken = await self.getToken(loc)\n        const newInit = self.addAuthHeaderToInit(init, authToken)\n        return fetch(input, newInit)\n      }\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * Gets a filehandle that uses a fetch that adds auth headers\n     * @param location - UriLocation of the resource\n     * @returns A filehandle\n     */\n    openLocation(location: UriLocation) {\n      return new RemoteFileWithRangeCache(location.uri, {\n        fetch: self.getFetcher(location),\n      })\n    },\n  }))\n\nexport type BaseInternetAccountStateModel = typeof InternetAccount\nexport type BaseInternetAccountModel = Instance<BaseInternetAccountStateModel>\n","import { transaction } from 'mobx'\nimport { getRoot, resolveIdentifier, types } from 'mobx-state-tree'\n\nimport { ConfigurationReference, getConf } from '../../configuration'\nimport { adapterConfigCacheKey } from '../../data_adapters/util'\nimport { getContainingView, getEnv, getSession } from '../../util'\nimport { isSessionModelWithConfigEditing } from '../../util/types'\nimport { ElementId } from '../../util/types/mst'\n\nimport type PluginManager from '../../PluginManager'\nimport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '../../configuration'\nimport type { MenuItem } from '../../ui'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\nexport function getCompatibleDisplays(self: IAnyStateTreeNode) {\n  const { pluginManager } = getEnv(self)\n  const view = getContainingView(self)\n  const viewType = pluginManager.getViewType(view.type)!\n  const compatTypes = new Set(viewType.displayTypes.map(d => d.name))\n  const displays = self.configuration.displays as AnyConfigurationModel[]\n  return displays.filter(d => compatTypes.has(d.type))\n}\n\n/**\n * #stateModel BaseTrackModel\n * #category track\n *\n * these MST models only exist for tracks that are *shown*. they should contain\n * only UI state for the track, and have a reference to a track configuration.\n * note that multiple displayed tracks could use the same configuration.\n */\nexport function createBaseTrackModel(\n  pm: PluginManager,\n  trackType: string,\n  baseTrackConfig: AnyConfigurationSchemaType,\n) {\n  return types\n    .model(trackType, {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal(trackType),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(baseTrackConfig),\n      /**\n       * #property\n       */\n      minimized: false,\n      /**\n       * #property\n       */\n      pinned: false,\n      /**\n       * #property\n       */\n      displays: types.array(pm.pluggableMstType('display', 'stateModel')),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       * determines which webworker to send the track to, currently based on trackId\n       */\n      get rpcSessionId() {\n        const adapter = getConf(self, 'adapter')\n        return adapter\n          ? adapterConfigCacheKey(adapter)\n          : self.configuration.trackId\n      },\n      /**\n       * #getter\n       */\n      get name() {\n        return getConf(self, 'name')\n      },\n      /**\n       * #getter\n       */\n      get textSearchAdapter() {\n        return getConf(self, 'textSearchAdapter')\n      },\n\n      /**\n       * #getter\n       */\n      get adapterConfig() {\n        return getConf(self, 'adapter')\n      },\n\n      /**\n       * #getter\n       */\n      get adapterType() {\n        const adapterConfig = getConf(self, 'adapter')\n        if (!adapterConfig) {\n          throw new Error(`no adapter configuration provided for ${self.type}`)\n        }\n        const adapterType = pm.getAdapterType(adapterConfig.type)\n        if (!adapterType) {\n          throw new Error(`unknown adapter type ${adapterConfig.type}`)\n        }\n        return adapterType\n      },\n\n      /**\n       * #getter\n       */\n      get viewMenuActions(): MenuItem[] {\n        return self.displays.flatMap(d => d.viewMenuActions)\n      },\n\n      /**\n       * #getter\n       */\n      get canConfigure() {\n        const session = getSession(self)\n        const { sessionTracks, adminMode } = session\n        return (\n          isSessionModelWithConfigEditing(session) &&\n          (adminMode ||\n            sessionTracks?.find(t => t.trackId === self.configuration.trackId))\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setPinned(flag: boolean) {\n        self.pinned = flag\n      },\n      /**\n       * #action\n       */\n      setMinimized(flag: boolean) {\n        self.minimized = flag\n      },\n\n      /**\n       * #action\n       */\n      showDisplay(displayId: string, initialSnapshot = {}) {\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), displayId)\n        const displayType = pm.getDisplayType(conf.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${conf.type}`)\n        }\n        const display = displayType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n        })\n        self.displays.push(display)\n      },\n\n      /**\n       * #action\n       */\n      hideDisplay(displayId: string) {\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), displayId)\n        const t = self.displays.filter(d => d.configuration === conf)\n        transaction(() => {\n          t.forEach(d => self.displays.remove(d))\n        })\n        return t.length\n      },\n\n      /**\n       * #action\n       */\n      replaceDisplay(oldId: string, newId: string, initialSnapshot = {}) {\n        const idx = self.displays.findIndex(\n          d => d.configuration.displayId === oldId,\n        )\n        if (idx === -1) {\n          throw new Error(`could not find display id ${oldId} to replace`)\n        }\n        const schema = pm.pluggableConfigSchemaType('display')\n        const conf = resolveIdentifier(schema, getRoot(self), newId)\n        const displayType = pm.getDisplayType(conf.type)\n        if (!displayType) {\n          throw new Error(`unknown display type ${conf.type}`)\n        }\n        self.displays.splice(idx, 1, {\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n        })\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems() {\n        const menuItems: MenuItem[] = self.displays.flatMap(d =>\n          d.trackMenuItems(),\n        )\n        const shownId = self.displays[0].configuration.displayId\n        const compatDisp = getCompatibleDisplays(self)\n\n        return [\n          ...menuItems,\n          ...(compatDisp.length > 1\n            ? [\n                {\n                  type: 'subMenu',\n                  label: 'Display types',\n                  priority: -1000,\n                  subMenu: compatDisp.map(d => ({\n                    type: 'radio',\n                    label: pm.getDisplayType(d.type)!.displayName,\n                    checked: d.displayId === shownId,\n                    onClick: () => {\n                      self.replaceDisplay(shownId, d.displayId)\n                    },\n                  })),\n                },\n              ]\n            : []),\n        ]\n      },\n    }))\n}\n\nexport type BaseTrackStateModel = ReturnType<typeof createBaseTrackModel>\nexport type BaseTrackModel = Instance<BaseTrackStateModel>\n","import { types } from 'mobx-state-tree'\n\nimport { ConfigurationSchema } from '../../configuration'\n\nimport type PluginManager from '../../PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config BaseTrack\n */\nexport function createBaseTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'BaseTrack',\n    {\n      /**\n       * #slot\n       */\n      name: {\n        description: 'descriptive name of the track',\n        type: 'string',\n        defaultValue: 'Track',\n      },\n      /**\n       * #slot\n       */\n      assemblyNames: {\n        description: 'name of the assembly (or assemblies) track belongs to',\n        type: 'stringArray',\n        defaultValue: ['assemblyName'],\n      },\n      /**\n       * #slot\n       */\n      description: {\n        description: 'a description of the track',\n        type: 'string',\n        defaultValue: '',\n      },\n      /**\n       * #slot\n       */\n      category: {\n        description: 'the category and sub-categories of a track',\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      /**\n       * #slot\n       */\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n      /**\n       * #slot\n       */\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n\n      textSearching: ConfigurationSchema('textSearching', {\n        /**\n         * #slot textSearching.indexedAttributes\n         */\n        indexingAttributes: {\n          type: 'stringArray',\n          description:\n            'list of which feature attributes to index for text searching',\n          defaultValue: ['Name', 'ID'],\n        },\n        /**\n         * #slot textSearching.indexingFeatureTypesToExclude\n         */\n        indexingFeatureTypesToExclude: {\n          type: 'stringArray',\n          description: 'list of feature types to exclude in text search index',\n          defaultValue: ['CDS', 'exon'],\n        },\n\n        /**\n         * #slot textSearching.textSearchAdapter\n         */\n        textSearchAdapter: pluginManager.pluggableConfigSchemaType(\n          'text search adapter',\n        ),\n      }),\n\n      /**\n       * #slot\n       */\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n\n      formatDetails: ConfigurationSchema('FormatDetails', {\n        /**\n         * #slot formatDetails.feature\n         */\n        feature: {\n          type: 'frozen',\n          description: 'adds extra fields to the feature details',\n          defaultValue: {},\n          contextVariable: ['feature'],\n        },\n        /**\n         * #slot formatDetails.subfeatures\n         */\n        subfeatures: {\n          type: 'frozen',\n          description: 'adds extra fields to the subfeatures of a feature',\n          defaultValue: {},\n          contextVariable: ['feature'],\n        },\n        /**\n         * #slot formatDetails.depth\n         */\n        depth: {\n          type: 'number',\n          defaultValue: 2,\n          description:\n            'depth of subfeatures to iterate the formatter on formatDetails.subfeatures (e.g. you may not want to format the exon/cds subfeatures, so limited to 2',\n        },\n        /**\n         * #slot formatDetails.maxDepth\n         */\n        maxDepth: {\n          type: 'number',\n          defaultValue: 99999,\n          description: 'Maximum depth to render subfeatures',\n        },\n      }),\n      formatAbout: ConfigurationSchema('FormatAbout', {\n        /**\n         * #slot formatAbout.config\n         */\n        config: {\n          type: 'frozen',\n          description: 'formats configuration object in about dialog',\n          defaultValue: {},\n          contextVariable: ['config'],\n        },\n\n        /**\n         * #slot formatAbout.hideUris\n         */\n        hideUris: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n      }),\n    },\n    {\n      preProcessSnapshot: s2 => {\n        const snap = pluginManager.evaluateExtensionPoint(\n          'Core-preProcessTrackConfig',\n          structuredClone(s2),\n        ) as {\n          trackId: string\n          name: string\n          type: string\n          displays: { type: string; displayId: string }[]\n        }\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          const configDisplayTypes = new Set(displays.map(d => d.type))\n          pluginManager.getTrackType(snap.type)!.displayTypes.forEach(d => {\n            if (!configDisplayTypes.has(d.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${d.name}`,\n                type: d.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n\n      actions: (self: any) => ({\n        addDisplayConf(conf: { type: string; displayId: string }) {\n          const { type } = conf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            (d: any) => d?.displayId === conf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(conf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n\nexport type BaseTrackConfigSchema = ReturnType<typeof createBaseTrackConfig>\nexport type BaseTrackConfig = Instance<BaseTrackConfigSchema>\n","import type { BaseLayout, SerializedLayout } from './BaseLayout'\n\nexport default class MultiLayout<SUB_LAYOUT_CLASS extends BaseLayout<T>, T> {\n  subLayouts = new Map<string, SUB_LAYOUT_CLASS>()\n\n  /**\n   * layout class that just keeps a number of named sub-layouts.\n   * basically just a fancier\n   * `{ layout1: new GranularRectLayout(), layout2: new GranularRectLayout() ...}`\n   */\n  constructor(\n    public SubLayoutClass: new (...args: any[]) => SUB_LAYOUT_CLASS,\n    public subLayoutConstructorArgs: Record<string, any> = {},\n  ) {}\n\n  getDataByID(id: string): unknown {\n    for (const layout of this.subLayouts.values()) {\n      // @ts-expect-error\n      const r = layout.getDataByID(id)\n      if (r) {\n        return r\n      }\n    }\n    return undefined\n  }\n\n  getSublayout(layoutName: string): SUB_LAYOUT_CLASS {\n    let subLayout = this.subLayouts.get(layoutName)\n    if (subLayout === undefined) {\n      subLayout = new this.SubLayoutClass(this.subLayoutConstructorArgs)\n      this.subLayouts.set(layoutName, subLayout)\n      return subLayout\n    }\n\n    return subLayout\n  }\n\n  addRect(\n    layoutName: string,\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data: Record<string, T> = {},\n  ) {\n    return this.getSublayout(layoutName).addRect(id, left, right, height, data)\n  }\n\n  discardRange(layoutName: string, left: number, right: number) {\n    return this.subLayouts.get(layoutName)?.discardRange(left, right)\n  }\n\n  toJSON() {\n    const data: Record<string, SerializedLayout> = {}\n    for (const [layoutName, sublayout] of this.subLayouts.entries()) {\n      data[layoutName] = sublayout.toJSON()\n    }\n    return data\n  }\n}\n","import { forwardRef, isValidElement } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\nimport BaseTooltip from '@jbrowse/core/ui/BaseTooltip'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\ninterface Props {\n  message: React.ReactNode | string\n}\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2({ message }, ref) {\n    return (\n      <div ref={ref}>\n        {isValidElement(message) ? (\n          message\n        ) : message ? (\n          <SanitizedHTML html={String(message)} />\n        ) : null}\n      </div>\n    )\n  },\n)\n\ntype Coord = [number, number]\n\nconst Tooltip = observer(function ({\n  model,\n  clientMouseCoord,\n}: {\n  model: {\n    featureUnderMouse: Feature | undefined\n    configuration: AnyConfigurationModel\n  }\n  clientMouseCoord: Coord\n}) {\n  const { featureUnderMouse } = model\n  const x = clientMouseCoord[0] + 15\n  const y = clientMouseCoord[1]\n\n  const contents = featureUnderMouse\n    ? getConf(model, 'mouseover', { feature: featureUnderMouse })\n    : undefined\n\n  return featureUnderMouse && contents ? (\n    <BaseTooltip clientPoint={{ x, y }}>\n      <TooltipContents message={contents} />\n    </BaseTooltip>\n  ) : null\n})\n\nexport default Tooltip\n","// adapted from map-obj (MIT), with modifications to pass the \"whole object\"\n// from an array of objects into itself\nconst isObject = (value: unknown) => typeof value === 'object' && value !== null\n\n// Customized for this use-case\nconst isObjectCustom = (value: unknown) =>\n  isObject(value) &&\n  !(value instanceof RegExp) &&\n  !(value instanceof Error) &&\n  !(value instanceof Date) &&\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  !(globalThis.Blob && value instanceof globalThis.Blob)\n\ntype Obj = Record<string, unknown>\n\nexport default function map(\n  object: Obj,\n  mapper: (val: unknown) => void,\n  isSeen = new WeakSet(),\n) {\n  if (isSeen.has(object)) {\n    return\n  }\n\n  isSeen.add(object)\n\n  const mapArray = (array: unknown[]) => {\n    array.forEach(element => {\n      mapper(element)\n      if (isObject(element)) {\n        map(element as Record<string, unknown>, mapper, isSeen)\n      }\n    })\n  }\n\n  if (Array.isArray(object)) {\n    mapArray(object)\n  }\n\n  for (const value of Object.values(object)) {\n    mapper(value)\n\n    if (isObjectCustom(value)) {\n      if (Array.isArray(value)) {\n        mapArray(value)\n      } else {\n        map(value as Obj, mapper, isSeen)\n      }\n    }\n  }\n}\n","import PluggableElementBase from './PluggableElementBase'\nimport mapObject from '../util/map-obj'\nimport { getBlobMap, setBlobMap } from '../util/tracks'\nimport {\n  RetryError,\n  isAppRootModel,\n  isAuthNeededException,\n  isUriLocation,\n} from '../util/types'\n\nimport type PluginManager from '../PluginManager'\nimport type { UriLocation } from '../util/types'\n\nexport type RpcMethodConstructor = new (pm: PluginManager) => RpcMethodType\n\nexport default abstract class RpcMethodType extends PluggableElementBase {\n  constructor(public pluginManager: PluginManager) {\n    super()\n  }\n\n  async serializeArguments(\n    args: Record<string, unknown>,\n    rpcDriverClassName: string,\n  ): Promise<Record<string, unknown>> {\n    const blobMap = getBlobMap()\n    await this.augmentLocationObjects(args, rpcDriverClassName)\n    return { ...args, blobMap }\n  }\n\n  async serializeNewAuthArguments(\n    loc: UriLocation,\n    rpcDriverClassName: string,\n  ) {\n    const rootModel = this.pluginManager.rootModel\n\n    // args dont need auth or already have auth\n    if (!isAppRootModel(rootModel) || loc.internetAccountPreAuthorization) {\n      return loc\n    }\n\n    const account = rootModel.findAppropriateInternetAccount(loc)\n\n    // mutating loc object is not allowed in MainThreadRpcDriver, and is only\n    // needed for web worker RPC\n    if (account && rpcDriverClassName !== 'MainThreadRpcDriver') {\n      loc.internetAccountPreAuthorization =\n        await account.getPreAuthorizationInformation(loc)\n    }\n    return loc\n  }\n\n  async deserializeArguments<T>(\n    args: T & { blobMap?: Record<string, File> },\n    _rpcDriverClassName: string,\n  ): Promise<T> {\n    if (args.blobMap) {\n      setBlobMap(args.blobMap)\n    }\n\n    return args\n  }\n\n  abstract execute(\n    serializedArgs: unknown,\n    rpcDriverClassName: string,\n  ): Promise<unknown>\n\n  async serializeReturn(\n    originalReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ) {\n    return originalReturn\n  }\n\n  async deserializeReturn(\n    serializedReturn: unknown,\n    _args: unknown,\n    _rpcDriverClassName: string,\n  ) {\n    let r: unknown\n    try {\n      r = await serializedReturn\n    } catch (error) {\n      if (isAuthNeededException(error)) {\n        const retryAccount = // @ts-expect-error\n          this.pluginManager.rootModel?.createEphemeralInternetAccount(\n            `HTTPBasicInternetAccount-${new URL(error.url).origin}`,\n            {},\n            error.url,\n          )\n        throw new RetryError(\n          'Retrying with created internet account',\n          retryAccount.internetAccountId,\n        )\n      }\n      throw error\n    }\n    return r\n  }\n\n  private async augmentLocationObjects(\n    thing: Record<string, unknown>,\n    rpcDriverClassName: string,\n  ) {\n    const uris = [] as UriLocation[]\n\n    // using map-obj avoids cycles, seen in circular view svg export\n    mapObject(thing, val => {\n      if (isUriLocation(val)) {\n        uris.push(val)\n      }\n    })\n    for (const uri of uris) {\n      await this.serializeNewAuthArguments(uri, rpcDriverClassName)\n    }\n    return thing\n  }\n}\n","/**\n * Used by plugin build systems to determine if a module is provided by JBrowse\n * globally and thus doesn't need to be bundled. A check in ./modules.tsx makes\n * sure this is in sync with the re-exported modules.\n */\nexport default [\n  'mobx',\n  'mobx-state-tree',\n  'react',\n  'react/jsx-runtime',\n  'react-dom',\n  'react-dom/client',\n  'mobx-react',\n  '@mui/x-data-grid',\n  '@mui/material/utils',\n  '@material-ui/core/utils',\n  'tss-react/mui',\n  '@material-ui/core',\n  '@mui/material',\n\n  '@mui/material/styles',\n  '@material-ui/core/styles',\n  '@material-ui/core/Accordion',\n  '@material-ui/core/AccordionActions',\n  '@material-ui/core/AccordionDetails',\n  '@material-ui/core/AccordionSummary',\n  '@material-ui/core/Alert',\n  '@material-ui/core/AlertTitle',\n  '@material-ui/core/Autocomplete',\n  '@material-ui/core/Avatar',\n  '@material-ui/core/AvatarGroup',\n  '@material-ui/core/Backdrop',\n  '@material-ui/core/Badge',\n  '@material-ui/core/Box',\n  '@material-ui/core/Breadcrumbs',\n  '@material-ui/core/Button',\n  '@material-ui/core/ButtonGroup',\n  '@material-ui/core/Card',\n  '@material-ui/core/CardActions',\n  '@material-ui/core/CardActionArea',\n  '@material-ui/core/CardContent',\n  '@material-ui/core/CardHeader',\n  '@material-ui/core/CardMedia',\n  '@material-ui/core/CircularProgress',\n  '@material-ui/core/Collapse',\n  '@material-ui/core/ClickAwayListener',\n  '@material-ui/core/Chip',\n  '@material-ui/core/Checkbox',\n  '@material-ui/core/Container',\n  '@material-ui/core/Dialog',\n  '@material-ui/core/DialogActions',\n  '@material-ui/core/DialogTitle',\n  '@material-ui/core/DialogContent',\n  '@material-ui/core/DialogContentText',\n  '@material-ui/core/Divider',\n  '@material-ui/core/Drawer',\n  '@material-ui/core/Fab',\n  '@material-ui/core/Fade',\n  '@material-ui/core/FilledInput',\n  '@material-ui/core/FormLabel',\n  '@material-ui/core/FormControl',\n  '@material-ui/core/FormControlLabel',\n  '@material-ui/core/FormHelperText',\n  '@material-ui/core/FormGroup',\n  '@material-ui/core/Grid',\n  '@material-ui/core/Grid2',\n  '@material-ui/core/Grow',\n  '@material-ui/core/Icon',\n  '@material-ui/core/IconButton',\n  '@material-ui/core/Input',\n  '@material-ui/core/InputBase',\n  '@material-ui/core/InputLabel',\n  '@material-ui/core/InputAdornment',\n  '@material-ui/core/Link',\n  '@material-ui/core/LinearProgress',\n  '@material-ui/core/List',\n  '@material-ui/core/ListItem',\n  '@material-ui/core/ListItemAvatar',\n  '@material-ui/core/ListItemSecondaryAction',\n  '@material-ui/core/ListItemIcon',\n  '@material-ui/core/ListSubheader',\n  '@material-ui/core/ListItemText',\n  '@material-ui/core/Menu',\n  '@material-ui/core/MenuItem',\n  '@material-ui/core/MenuList',\n  '@material-ui/core/Modal',\n  '@material-ui/core/NativeSelect',\n  '@material-ui/core/OutlinedInput',\n  '@material-ui/core/Pagination',\n  '@material-ui/core/PaginationItem',\n  '@material-ui/core/Paper',\n  '@material-ui/core/Popover',\n  '@material-ui/core/Popper',\n  '@material-ui/core/Portal',\n  '@material-ui/core/Radio',\n  '@material-ui/core/RadioGroup',\n  '@material-ui/core/Rating',\n  '@material-ui/core/ScopedCssBaseline',\n  '@material-ui/core/Select',\n  '@material-ui/core/Skeleton',\n  '@material-ui/core/Slider',\n  '@material-ui/core/Snackbar',\n  '@material-ui/core/SnackbarContent',\n  '@material-ui/core/SpeedDial',\n  '@material-ui/core/SpeedDialAction',\n  '@material-ui/core/SpeedDialIcon',\n  '@material-ui/core/Stack',\n  '@material-ui/core/Step',\n  '@material-ui/core/StepButton',\n  '@material-ui/core/StepConnector',\n  '@material-ui/core/StepLabel',\n  '@material-ui/core/StepIcon',\n  '@material-ui/core/Stepper',\n  '@material-ui/core/SvgIcon',\n  '@material-ui/core/Switch',\n  '@material-ui/core/Tab',\n  '@material-ui/core/Table',\n  '@material-ui/core/TableBody',\n  '@material-ui/core/TableCell',\n  '@material-ui/core/TableContainer',\n  '@material-ui/core/TableFooter',\n  '@material-ui/core/TableHead',\n  '@material-ui/core/TablePagination',\n  '@material-ui/core/TableRow',\n  '@material-ui/core/TableSortLabel',\n  '@material-ui/core/Tabs',\n  '@material-ui/core/TextField',\n  '@material-ui/core/TextareaAutosize',\n  '@material-ui/core/ToggleButton',\n  '@material-ui/core/ToggleButtonGroup',\n  '@material-ui/core/Toolbar',\n  '@material-ui/core/Tooltip',\n  '@material-ui/core/Typography',\n  '@mui/material/Accordion',\n  '@mui/material/AccordionActions',\n  '@mui/material/AccordionDetails',\n  '@mui/material/AccordionSummary',\n  '@mui/material/Alert',\n  '@mui/material/AlertTitle',\n  '@mui/material/Autocomplete',\n  '@mui/material/Avatar',\n  '@mui/material/AvatarGroup',\n  '@mui/material/Backdrop',\n  '@mui/material/Badge',\n  '@mui/material/Box',\n  '@mui/material/Breadcrumbs',\n  '@mui/material/Button',\n  '@mui/material/ButtonGroup',\n  '@mui/material/Card',\n  '@mui/material/CardActions',\n  '@mui/material/CardActionArea',\n  '@mui/material/CardContent',\n  '@mui/material/CardHeader',\n  '@mui/material/CardMedia',\n  '@mui/material/CircularProgress',\n  '@mui/material/Collapse',\n  '@mui/material/ClickAwayListener',\n  '@mui/material/Chip',\n  '@mui/material/Checkbox',\n  '@mui/material/Container',\n  '@mui/material/Dialog',\n  '@mui/material/DialogActions',\n  '@mui/material/DialogTitle',\n  '@mui/material/DialogContent',\n  '@mui/material/DialogContentText',\n  '@mui/material/Divider',\n  '@mui/material/Drawer',\n  '@mui/material/Fab',\n  '@mui/material/Fade',\n  '@mui/material/FilledInput',\n  '@mui/material/FormLabel',\n  '@mui/material/FormControl',\n  '@mui/material/FormControlLabel',\n  '@mui/material/FormHelperText',\n  '@mui/material/FormGroup',\n  '@mui/material/Grid',\n  '@mui/material/Grid2',\n  '@mui/material/Grow',\n  '@mui/material/Icon',\n  '@mui/material/IconButton',\n  '@mui/material/Input',\n  '@mui/material/InputBase',\n  '@mui/material/InputLabel',\n  '@mui/material/InputAdornment',\n  '@mui/material/Link',\n  '@mui/material/LinearProgress',\n  '@mui/material/List',\n  '@mui/material/ListItem',\n  '@mui/material/ListItemAvatar',\n  '@mui/material/ListItemSecondaryAction',\n  '@mui/material/ListItemIcon',\n  '@mui/material/ListSubheader',\n  '@mui/material/ListItemText',\n  '@mui/material/Menu',\n  '@mui/material/MenuItem',\n  '@mui/material/MenuList',\n  '@mui/material/Modal',\n  '@mui/material/NativeSelect',\n  '@mui/material/OutlinedInput',\n  '@mui/material/Pagination',\n  '@mui/material/PaginationItem',\n  '@mui/material/Paper',\n  '@mui/material/Popover',\n  '@mui/material/Popper',\n  '@mui/material/Portal',\n  '@mui/material/Radio',\n  '@mui/material/RadioGroup',\n  '@mui/material/Rating',\n  '@mui/material/ScopedCssBaseline',\n  '@mui/material/Select',\n  '@mui/material/Skeleton',\n  '@mui/material/Slider',\n  '@mui/material/Snackbar',\n  '@mui/material/SnackbarContent',\n  '@mui/material/SpeedDial',\n  '@mui/material/SpeedDialAction',\n  '@mui/material/SpeedDialIcon',\n  '@mui/material/Stack',\n  '@mui/material/Step',\n  '@mui/material/StepButton',\n  '@mui/material/StepConnector',\n  '@mui/material/StepLabel',\n  '@mui/material/StepIcon',\n  '@mui/material/Stepper',\n  '@mui/material/SvgIcon',\n  '@mui/material/Switch',\n  '@mui/material/Tab',\n  '@mui/material/Table',\n  '@mui/material/TableBody',\n  '@mui/material/TableCell',\n  '@mui/material/TableContainer',\n  '@mui/material/TableFooter',\n  '@mui/material/TableHead',\n  '@mui/material/TablePagination',\n  '@mui/material/TableRow',\n  '@mui/material/TableSortLabel',\n  '@mui/material/Tabs',\n  '@mui/material/TextField',\n  '@mui/material/TextareaAutosize',\n  '@mui/material/ToggleButton',\n  '@mui/material/ToggleButtonGroup',\n  '@mui/material/Toolbar',\n  '@mui/material/Tooltip',\n  '@mui/material/Typography',\n  '@material-ui/lab/ToggleButton',\n  '@material-ui/lab/ToggleButtonGroup',\n  '@material-ui/lab/Autocomplete',\n  '@material-ui/lab/Alert',\n  '@material-ui/lab',\n  '@jbrowse/core/Plugin',\n  '@jbrowse/core/pluggableElementTypes',\n  '@jbrowse/core/pluggableElementTypes/ViewType',\n  '@jbrowse/core/pluggableElementTypes/AdapterType',\n  '@jbrowse/core/pluggableElementTypes/DisplayType',\n  '@jbrowse/core/pluggableElementTypes/TrackType',\n  '@jbrowse/core/pluggableElementTypes/WidgetType',\n\n  '@jbrowse/core/pluggableElementTypes/models',\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType',\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType',\n  '@jbrowse/core/configuration',\n  '@jbrowse/core/util/types/mst',\n  '@jbrowse/core/ui',\n  '@jbrowse/core/util',\n  '@jbrowse/core/util/color',\n  '@jbrowse/core/util/layouts',\n  '@jbrowse/core/util/tracks',\n  '@jbrowse/core/util/Base1DViewModel',\n  '@jbrowse/core/util/io',\n  '@jbrowse/core/util/mst-reflection',\n  '@jbrowse/core/util/rxjs',\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail',\n  '@jbrowse/core/data_adapters/BaseAdapter',\n]\n","/* eslint-disable react-refresh/only-export-components */\n// this is all the stuff that the pluginManager re-exports for plugins to use\nimport type { LazyExoticComponent } from 'react'\nimport * as React from 'react'\nimport { Suspense, forwardRef, lazy } from 'react'\n\nimport { alpha, createTheme, useTheme } from '@mui/material'\nimport * as MUIStyles from '@mui/material/styles'\nimport * as MUIUtils from '@mui/material/utils'\nimport {\n  useGridApiContext,\n  useGridApiRef,\n  useGridRootProps,\n} from '@mui/x-data-grid'\nimport * as mobx from 'mobx'\nimport * as mxreact from 'mobx-react'\nimport * as mst from 'mobx-state-tree'\nimport * as ReactJSXRuntime from 'react/jsx-runtime'\nimport * as ReactDom from 'react-dom'\nimport * as ReactDomClient from 'react-dom/client'\nimport { makeStyles } from 'tss-react/mui'\n\n// material-ui lab\nimport Plugin from '../Plugin'\nimport * as Configuration from '../configuration'\nimport * as BaseAdapterExports from '../data_adapters/BaseAdapter'\nimport * as pluggableElementTypes from '../pluggableElementTypes'\nimport reExportsList from './list'\nimport AdapterType from '../pluggableElementTypes/AdapterType'\nimport DisplayType from '../pluggableElementTypes/DisplayType'\nimport TrackType from '../pluggableElementTypes/TrackType'\nimport ViewType from '../pluggableElementTypes/ViewType'\nimport WidgetType from '../pluggableElementTypes/WidgetType'\nimport * as pluggableElementTypeModels from '../pluggableElementTypes/models'\nimport * as BoxRendererType from '../pluggableElementTypes/renderers/BoxRendererType'\nimport CircularChordRendererType from '../pluggableElementTypes/renderers/CircularChordRendererType'\nimport * as FeatureRendererType from '../pluggableElementTypes/renderers/FeatureRendererType'\nimport * as RendererType from '../pluggableElementTypes/renderers/RendererType'\nimport * as ServerSideRendererType from '../pluggableElementTypes/renderers/ServerSideRendererType'\nimport * as coreUi from '../ui'\nimport * as coreUtil from '../util'\nimport Base1DView from '../util/Base1DViewModel'\nimport * as coreColor from '../util/color'\nimport * as coreIo from '../util/io'\nimport * as coreLayouts from '../util/layouts'\nimport * as coreMstReflection from '../util/mst-reflection'\nimport * as rxjs from '../util/rxjs'\nimport * as trackUtils from '../util/tracks'\nimport * as mstTypes from '../util/types/mst'\n\nconst Entries = {\n  Accordion: lazy(() => import('@mui/material/Accordion')),\n  AccordionActions: lazy(() => import('@mui/material/AccordionActions')),\n  AccordionDetails: lazy(() => import('@mui/material/AccordionDetails')),\n  AccordionSummary: lazy(() => import('@mui/material/AccordionSummary')),\n  Alert: lazy(() => import('@mui/material/Alert')),\n  AlertTitle: lazy(() => import('@mui/material/AlertTitle')),\n  Autocomplete: lazy(() => import('@mui/material/Autocomplete')),\n  Avatar: lazy(() => import('@mui/material/Avatar')),\n  AvatarGroup: lazy(() => import('@mui/material/AvatarGroup')),\n  Backdrop: lazy(() => import('@mui/material/Backdrop')),\n  Badge: lazy(() => import('@mui/material/Badge')),\n  Box: lazy(() => import('@mui/material/Box')),\n  Breadcrumbs: lazy(() => import('@mui/material/Breadcrumbs')),\n  Button: lazy(() => import('@mui/material/Button')),\n  ButtonGroup: lazy(() => import('@mui/material/ButtonGroup')),\n  Card: lazy(() => import('@mui/material/Card')),\n  CardActions: lazy(() => import('@mui/material/CardActions')),\n  CardActionArea: lazy(() => import('@mui/material/CardActionArea')),\n  CardContent: lazy(() => import('@mui/material/CardContent')),\n  CardHeader: lazy(() => import('@mui/material/CardHeader')),\n  CardMedia: lazy(() => import('@mui/material/CardMedia')),\n  CircularProgress: lazy(() => import('@mui/material/CircularProgress')),\n  Collapse: lazy(() => import('@mui/material/Collapse')),\n  ClickAwayListener: lazy(() => import('@mui/material/ClickAwayListener')),\n  Chip: lazy(() => import('@mui/material/Chip')),\n  Checkbox: lazy(() => import('@mui/material/Checkbox')),\n  Container: lazy(() => import('@mui/material/Container')),\n  Dialog: lazy(() => import('@mui/material/Dialog')),\n  DialogActions: lazy(() => import('@mui/material/DialogActions')),\n  DialogTitle: lazy(() => import('@mui/material/DialogTitle')),\n  DialogContent: lazy(() => import('@mui/material/DialogContent')),\n  DialogContentText: lazy(() => import('@mui/material/DialogContentText')),\n  Divider: lazy(() => import('@mui/material/Divider')),\n  Drawer: lazy(() => import('@mui/material/Drawer')),\n  Fab: lazy(() => import('@mui/material/Fab')),\n  Fade: lazy(() => import('@mui/material/Fade')),\n  FilledInput: lazy(() => import('@mui/material/FilledInput')),\n  FormLabel: lazy(() => import('@mui/material/FormLabel')),\n  FormControl: lazy(() => import('@mui/material/FormControl')),\n  FormControlLabel: lazy(() => import('@mui/material/FormControlLabel')),\n  FormHelperText: lazy(() => import('@mui/material/FormHelperText')),\n  FormGroup: lazy(() => import('@mui/material/FormGroup')),\n  Grid: lazy(() => import('@mui/material/Grid')),\n  Grid2: lazy(() => import('@mui/material/Grid2')),\n  Grow: lazy(() => import('@mui/material/Grow')),\n  Icon: lazy(() => import('@mui/material/Icon')),\n  IconButton: lazy(() => import('@mui/material/IconButton')),\n  Input: lazy(() => import('@mui/material/Input')),\n  InputBase: lazy(() => import('@mui/material/InputBase')),\n  InputLabel: lazy(() => import('@mui/material/InputLabel')),\n  InputAdornment: lazy(() => import('@mui/material/InputAdornment')),\n  Link: lazy(() => import('@mui/material/Link')),\n  LinearProgress: lazy(() => import('@mui/material/LinearProgress')),\n  List: lazy(() => import('@mui/material/List')),\n  ListItem: lazy(() => import('@mui/material/ListItem')),\n  ListItemAvatar: lazy(() => import('@mui/material/ListItemAvatar')),\n  ListItemSecondaryAction: lazy(\n    () => import('@mui/material/ListItemSecondaryAction'),\n  ),\n  ListItemIcon: lazy(() => import('@mui/material/ListItemIcon')),\n  ListSubheader: lazy(() => import('@mui/material/ListSubheader')),\n  ListItemText: lazy(() => import('@mui/material/ListItemText')),\n  Menu: lazy(() => import('@mui/material/Menu')),\n  MenuItem: lazy(() => import('@mui/material/MenuItem')),\n  MenuList: lazy(() => import('@mui/material/MenuList')),\n  Modal: lazy(() => import('@mui/material/Modal')),\n  NativeSelect: lazy(() => import('@mui/material/NativeSelect')),\n  OutlinedInput: lazy(() => import('@mui/material/OutlinedInput')),\n  Pagination: lazy(() => import('@mui/material/Pagination')),\n  PaginationItem: lazy(() => import('@mui/material/PaginationItem')),\n  Paper: lazy(() => import('@mui/material/Paper')),\n  Popover: lazy(() => import('@mui/material/Popover')),\n  Popper: lazy(() => import('@mui/material/Popper')),\n  Portal: lazy(() => import('@mui/material/Portal')),\n  Radio: lazy(() => import('@mui/material/Radio')),\n  RadioGroup: lazy(() => import('@mui/material/RadioGroup')),\n  Rating: lazy(() => import('@mui/material/Rating')),\n  ScopedCssBaseline: lazy(() => import('@mui/material/ScopedCssBaseline')),\n  Select: lazy(() => import('@mui/material/Select')),\n  Skeleton: lazy(() => import('@mui/material/Skeleton')),\n  Slider: lazy(() => import('@mui/material/Slider')),\n  Snackbar: lazy(() => import('@mui/material/Snackbar')),\n  SnackbarContent: lazy(() => import('@mui/material/SnackbarContent')),\n  SpeedDial: lazy(() => import('@mui/material/SpeedDial')),\n  SpeedDialAction: lazy(() => import('@mui/material/SpeedDialAction')),\n  SpeedDialIcon: lazy(() => import('@mui/material/SpeedDialIcon')),\n  Stack: lazy(() => import('@mui/material/Stack')),\n  Step: lazy(() => import('@mui/material/Step')),\n  StepButton: lazy(() => import('@mui/material/StepButton')),\n  StepConnector: lazy(() => import('@mui/material/StepConnector')),\n  StepLabel: lazy(() => import('@mui/material/StepLabel')),\n  StepIcon: lazy(() => import('@mui/material/StepIcon')),\n  Stepper: lazy(() => import('@mui/material/Stepper')),\n  SvgIcon: lazy(() => import('@mui/material/SvgIcon')),\n  Switch: lazy(() => import('@mui/material/Switch')),\n  Tab: lazy(() => import('@mui/material/Tab')),\n  Table: lazy(() => import('@mui/material/Table')),\n  TableBody: lazy(() => import('@mui/material/TableBody')),\n  TableCell: lazy(() => import('@mui/material/TableCell')),\n  TableContainer: lazy(() => import('@mui/material/TableContainer')),\n  TableFooter: lazy(() => import('@mui/material/TableFooter')),\n  TableHead: lazy(() => import('@mui/material/TableHead')),\n  TablePagination: lazy(() => import('@mui/material/TablePagination')),\n  TableRow: lazy(() => import('@mui/material/TableRow')),\n  TableSortLabel: lazy(() => import('@mui/material/TableSortLabel')),\n  Tabs: lazy(() => import('@mui/material/Tabs')),\n  TextField: lazy(() => import('@mui/material/TextField')),\n  TextareaAutosize: lazy(() => import('@mui/material/TextareaAutosize')),\n  ToggleButton: lazy(() => import('@mui/material/ToggleButton')),\n  ToggleButtonGroup: lazy(() => import('@mui/material/ToggleButtonGroup')),\n  Toolbar: lazy(() => import('@mui/material/Toolbar')),\n  Tooltip: lazy(() => import('@mui/material/Tooltip')),\n  Typography: lazy(() => import('@mui/material/Typography')),\n}\n\nconst LazyMUICore = Object.fromEntries(\n  Object.entries(Entries).map(([key, ReactComponent]) => {\n    const Component = forwardRef((props: any, ref) => (\n      <Suspense fallback={null}>\n        {/* @ts-expect-error */}\n        <ReactComponent {...props} ref={ref} />\n      </Suspense>\n    ))\n    Component.displayName = key\n    return [key, Component]\n  }),\n)\n\nconst MaterialPrefixMUI = Object.fromEntries(\n  Object.entries(LazyMUICore).map(([key, value]) => [\n    `@material-ui/core/${key}`,\n    value,\n  ]),\n)\n\nconst MuiPrefixMUI = Object.fromEntries(\n  Object.entries(LazyMUICore).map(([key, value]) => [\n    `@mui/material/${key}`,\n    value,\n  ]),\n)\n\nconst Attributes = lazy(\n  () => import('../BaseFeatureWidget/BaseFeatureDetail/Attributes'),\n)\nconst FeatureDetails = lazy(\n  () => import('../BaseFeatureWidget/BaseFeatureDetail/FeatureDetails'),\n)\nconst BaseCard = lazy(\n  () => import('../BaseFeatureWidget/BaseFeatureDetail/BaseCard'),\n)\nconst BaseAttributes = lazy(\n  () => import('../BaseFeatureWidget/BaseFeatureDetail/BaseAttributes'),\n)\nconst BaseCoreDetails = lazy(\n  () => import('../BaseFeatureWidget/BaseFeatureDetail/BaseCoreDetails'),\n)\n\nconst DataGridEntries: Record<string, LazyExoticComponent<any>> = {\n  DataGrid: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.DataGrid })),\n  ),\n  GridActionsCellItem: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridActionsCellItem,\n    })),\n  ),\n  GridAddIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridAddIcon,\n    })),\n  ),\n  GridArrowDownwardIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridArrowDownwardIcon,\n    })),\n  ),\n  GridArrowUpwardIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridArrowUpwardIcon,\n    })),\n  ),\n  GridCellCheckboxForwardRef: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCellCheckboxForwardRef,\n    })),\n  ),\n  GridCellCheckboxRenderer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCellCheckboxRenderer,\n    })),\n  ),\n  GridCheckCircleIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCheckCircleIcon,\n    })),\n  ),\n  GridCheckIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCheckIcon,\n    })),\n  ),\n  GridCloseIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridCloseIcon,\n    })),\n  ),\n  GridColumnHeaderSeparator: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnHeaderSeparator,\n    })),\n  ),\n  GridColumnHeaderSortIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnHeaderSortIcon,\n    })),\n  ),\n  GridColumnIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnIcon,\n    })),\n  ),\n  GridColumnMenu: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnMenu,\n    })),\n  ),\n  GridColumnMenuContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridColumnMenuContainer,\n    })),\n  ),\n  GridDragIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridDragIcon,\n    })),\n  ),\n  GridExpandMoreIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridExpandMoreIcon,\n    })),\n  ),\n  GridFilterAltIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterAltIcon,\n    })),\n  ),\n  GridFilterForm: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterForm,\n    })),\n  ),\n  GridFilterListIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterListIcon,\n    })),\n  ),\n  GridFilterPanel: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFilterPanel,\n    })),\n  ),\n  GridFooter: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridFooter })),\n  ),\n  GridFooterContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridFooterContainer,\n    })),\n  ),\n  GridHeader: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridHeader })),\n  ),\n  GridHeaderCheckbox: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridHeaderCheckbox,\n    })),\n  ),\n  GridKeyboardArrowRight: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridKeyboardArrowRight,\n    })),\n  ),\n  GridLoadIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridLoadIcon,\n    })),\n  ),\n  GridLoadingOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridLoadingOverlay,\n    })),\n  ),\n  GridMenuIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridMenuIcon,\n    })),\n  ),\n  GridMoreVertIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridMoreVertIcon,\n    })),\n  ),\n  GridNoRowsOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridNoRowsOverlay,\n    })),\n  ),\n  GridOverlay: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridOverlay,\n    })),\n  ),\n  GridPagination: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridPagination,\n    })),\n  ),\n  GridPanel: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridPanel })),\n  ),\n  GridPanelWrapper: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridPanelWrapper,\n    })),\n  ),\n  GridRemoveIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridRemoveIcon,\n    })),\n  ),\n  GridRoot: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({ default: module.GridRoot })),\n  ),\n  GridRowCount: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridRowCount,\n    })),\n  ),\n  GridSaveAltIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSaveAltIcon,\n    })),\n  ),\n  GridSearchIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSearchIcon,\n    })),\n  ),\n  GridSelectedRowCount: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSelectedRowCount,\n    })),\n  ),\n  GridSeparatorIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridSeparatorIcon,\n    })),\n  ),\n  GridTableRowsIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridTableRowsIcon,\n    })),\n  ),\n  GridToolbar: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbar,\n    })),\n  ),\n  GridToolbarColumnsButton: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarColumnsButton,\n    })),\n  ),\n  GridToolbarContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarContainer,\n    })),\n  ),\n  GridToolbarDensitySelector: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarDensitySelector,\n    })),\n  ),\n  GridToolbarExport: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarExport,\n    })),\n  ),\n  GridToolbarExportContainer: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarExportContainer,\n    })),\n  ),\n  GridToolbarFilterButton: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridToolbarFilterButton,\n    })),\n  ),\n  GridTripleDotsVerticalIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridTripleDotsVerticalIcon,\n    })),\n  ),\n  GridViewHeadlineIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridViewHeadlineIcon,\n    })),\n  ),\n  GridViewStreamIcon: lazy(() =>\n    import('@mui/x-data-grid').then(module => ({\n      default: module.GridViewStreamIcon,\n    })),\n  ),\n}\n\nconst LazyDataGridComponents = Object.fromEntries(\n  Object.entries(DataGridEntries).map(([key, ReactComponent]) => {\n    const Component = forwardRef((props: any, ref) => (\n      <Suspense fallback={null}>\n        <ReactComponent {...props} ref={ref} />\n      </Suspense>\n    ))\n    Component.displayName = key\n    return [key, Component]\n  }),\n)\n\nconst LazyAttributes = forwardRef((props: any, ref) => (\n  <Suspense fallback={null}>\n    <Attributes {...props} ref={ref} />\n  </Suspense>\n))\nLazyAttributes.displayName = 'Attributes'\n\nconst LazyFeatureDetails = forwardRef((props: any, ref) => (\n  <Suspense fallback={null}>\n    <FeatureDetails {...props} ref={ref} />\n  </Suspense>\n))\nLazyFeatureDetails.displayName = 'FeatureDetails'\n\nconst LazyBaseCard = forwardRef((props: any, ref) => (\n  <Suspense fallback={null}>\n    <BaseCard {...props} ref={ref} />\n  </Suspense>\n))\nLazyBaseCard.displayName = 'BaseCard'\n\nconst libs = {\n  mobx,\n  'mobx-state-tree': mst,\n  react: React,\n  'react/jsx-runtime': ReactJSXRuntime,\n  'react-dom': ReactDom,\n  'react-dom/client': ReactDomClient,\n  'mobx-react': mxreact,\n  '@mui/x-data-grid': {\n    useGridApiContext,\n    useGridApiRef,\n    useGridRootProps,\n    ...LazyDataGridComponents,\n  },\n\n  // special case so plugins can easily use @mui/icons-material; don't remove\n  '@mui/material/utils': MUIUtils,\n  '@material-ui/core/utils': MUIUtils,\n  'tss-react/mui': { makeStyles },\n\n  '@material-ui/core': {\n    ...LazyMUICore,\n    useTheme,\n    alpha,\n\n    makeStyles: (args: any) => {\n      const useStyles = makeStyles()(args)\n      return () => useStyles().classes\n    },\n  },\n  '@mui/material': {\n    ...LazyMUICore,\n    alpha,\n    useTheme,\n    createTheme,\n  },\n\n  // end special case\n  // material-ui subcomponents, should get rid of these\n  '@mui/material/styles': {\n    MUIStyles,\n\n    makeStyles: (args: any) => {\n      const useStyles = makeStyles()(args)\n      return () => useStyles().classes\n    },\n  },\n  '@material-ui/core/styles': {\n    MUIStyles,\n\n    makeStyles: (args: any) => {\n      const useStyles = makeStyles()(args)\n      return () => useStyles().classes\n    },\n  },\n  ...MaterialPrefixMUI,\n  ...MuiPrefixMUI,\n\n  // these are core in @mui/material, but used to be in @material-ui/lab\n  '@material-ui/lab/ToggleButton': Entries.ToggleButton,\n  '@material-ui/lab/ToggleButtonGroup': Entries.ToggleButtonGroup,\n  '@material-ui/lab/Autocomplete': Entries.Autocomplete,\n  '@material-ui/lab/Alert': Entries.Alert,\n  '@material-ui/lab': {\n    Alert: Entries.Alert,\n    Autocomplete: Entries.Autocomplete,\n    ToggleButton: Entries.ToggleButton,\n    ToggleButtonGroup: Entries.ToggleButtonGroup,\n  },\n\n  '@jbrowse/core/Plugin': Plugin,\n  '@jbrowse/core/pluggableElementTypes': pluggableElementTypes,\n  '@jbrowse/core/pluggableElementTypes/ViewType': ViewType,\n  '@jbrowse/core/pluggableElementTypes/AdapterType': AdapterType,\n  '@jbrowse/core/pluggableElementTypes/DisplayType': DisplayType,\n  '@jbrowse/core/pluggableElementTypes/TrackType': TrackType,\n  '@jbrowse/core/pluggableElementTypes/WidgetType': WidgetType,\n  '@jbrowse/core/pluggableElementTypes/models': pluggableElementTypeModels,\n  '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType':\n    ServerSideRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType':\n    CircularChordRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType':\n    BoxRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType':\n    FeatureRendererType,\n  '@jbrowse/core/pluggableElementTypes/renderers/RendererType': RendererType,\n  '@jbrowse/core/configuration': Configuration,\n  '@jbrowse/core/util/types/mst': mstTypes,\n  '@jbrowse/core/ui': coreUi,\n  '@jbrowse/core/util': coreUtil,\n  '@jbrowse/core/util/color': coreColor,\n  '@jbrowse/core/util/layouts': coreLayouts,\n  '@jbrowse/core/util/tracks': trackUtils,\n  '@jbrowse/core/util/Base1DViewModel': Base1DView,\n  '@jbrowse/core/util/io': coreIo,\n  '@jbrowse/core/util/mst-reflection': coreMstReflection,\n  '@jbrowse/core/util/rxjs': rxjs,\n\n  '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail': {\n    Attributes: LazyAttributes,\n    FeatureDetails: LazyFeatureDetails,\n    BaseCard: LazyBaseCard,\n    BaseCoreDetails,\n    BaseAttributes,\n  },\n  '@jbrowse/core/data_adapters/BaseAdapter': BaseAdapterExports,\n}\n\nconst libsList = Object.keys(libs)\n\n// make sure that all the items in the ReExports/list array (used by build\n// systems and such) are included here, and vice versa\nconst inLibsOnly = libsList.filter(mod => !reExportsList.includes(mod))\nif (inLibsOnly.length > 0) {\n  throw new Error(\n    `The following modules are in the modules libs, but not the re-exports list: ${inLibsOnly.join(\n      ', ',\n    )}`,\n  )\n}\nconst inReExportsOnly = reExportsList.filter(mod => !libsList.includes(mod))\nif (inReExportsOnly.length) {\n  throw new Error(\n    `The following modules are in the re-exports list, but not the modules libs: ${inReExportsOnly.join(\n      ', ',\n    )}`,\n  )\n}\n\nexport default libs\n","import { adapterConfigCacheKey } from './util'\n\nimport type PluginManager from '../PluginManager'\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { AnyDataAdapter } from './BaseAdapter'\nimport type { SnapshotIn } from 'mobx-state-tree'\n\ntype ConfigSnap = SnapshotIn<AnyConfigurationSchemaType>\n\ninterface AdapterCacheEntry {\n  dataAdapter: AnyDataAdapter\n  sessionIds: Set<string>\n}\n\nlet adapterCache: Record<string, AdapterCacheEntry> = {}\n\n/**\n * instantiate a data adapter, or return an already-instantiated one if we have\n * one with the same configuration\n *\n * @param pluginManager\n *\n * @param sessionId - session ID of the associated worker session. used for\n * reference counting\n *\n * @param adapterConfigSnapshot - plain-JS configuration snapshot for the\n * adapter\n */\nexport async function getAdapter(\n  pluginManager: PluginManager,\n  sessionId: string,\n  adapterConfigSnapshot: SnapshotIn<AnyConfigurationSchemaType>,\n): Promise<AdapterCacheEntry> {\n  // cache the adapter object\n  const cacheKey = adapterConfigCacheKey(adapterConfigSnapshot)\n  if (!adapterCache[cacheKey]) {\n    const adapterType = adapterConfigSnapshot?.type\n\n    if (!adapterType) {\n      throw new Error(\n        `could not determine adapter type from adapter config snapshot ${JSON.stringify(\n          adapterConfigSnapshot,\n        )}`,\n      )\n    }\n    const dataAdapterType = pluginManager.getAdapterType(adapterType)\n    if (!dataAdapterType) {\n      throw new Error(`unknown data adapter type ${adapterType}`)\n    }\n\n    // instantiate the data adapter's config schema so it gets its defaults,\n    // callbacks, etc\n    const adapterConfig = dataAdapterType.configSchema.create(\n      adapterConfigSnapshot,\n      { pluginManager },\n    )\n\n    const getSubAdapter = getAdapter.bind(null, pluginManager, sessionId)\n    const CLASS = await dataAdapterType.getAdapterClass()\n    const dataAdapter = new CLASS(adapterConfig, getSubAdapter, pluginManager)\n\n    // store it in our cache\n    adapterCache[cacheKey] = {\n      dataAdapter,\n      sessionIds: new Set([sessionId]),\n    }\n  }\n\n  const cacheEntry = adapterCache[cacheKey]\n  cacheEntry.sessionIds.add(sessionId)\n\n  return cacheEntry\n}\n\n/**\n * this is a callback that is passed to adapters that allows them to get any\n * sub-adapters that they need internally, staying with the same worker session\n * ID\n */\nexport type getSubAdapterType = (\n  adapterConfigSnap: ConfigSnap,\n) => ReturnType<typeof getAdapter>\n\nexport function freeAdapterResources(args: Record<string, any>) {\n  const specKeys = Object.keys(args)\n\n  // TODO: little hacky...should make it an explicit command but:\n  // if we don't specify a range, delete any adapters that are only associated\n  // with that session\n  if (specKeys.length === 1 && specKeys[0] === 'sessionId') {\n    const { sessionId } = args\n    Object.entries(adapterCache).forEach(([cacheKey, cacheEntry]) => {\n      cacheEntry.sessionIds.delete(sessionId)\n      if (cacheEntry.sessionIds.size === 0) {\n        delete adapterCache[cacheKey]\n      }\n    })\n  } else {\n    // otherwise call freeResources on all the cached data adapters\n    Object.values(adapterCache).forEach(cacheEntry => {\n      const regions = args.regions || (args.region ? [args.region] : [])\n      for (const region of regions) {\n        if (region.refName !== undefined) {\n          cacheEntry.dataAdapter.freeResources(region)\n        }\n      }\n    })\n  }\n}\n\nexport function clearAdapterCache() {\n  adapterCache = {}\n}\n","type Hasher<T> = (input: T) => string\n\n// from https://github.com/seriousManual/dedupe/blob/master/LICENSE\nexport function dedupe<T>(list: T[], hasher: Hasher<T> = JSON.stringify) {\n  const clone: T[] = []\n  const lookup = new Set<string>()\n\n  for (const entry of list) {\n    const hashed = hasher(entry)\n\n    if (!lookup.has(hashed)) {\n      clone.push(entry)\n      lookup.add(hashed)\n    }\n  }\n\n  return clone\n}\n","import BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { dedupe, getSession } from '@jbrowse/core/util'\n\nimport type { LinearGenomeViewModel } from './LinearGenomeView'\nimport type { SearchScope } from '@jbrowse/core/TextSearch/TextSearchManager'\nimport type { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport type { SearchType } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { TextSearchManager } from '@jbrowse/core/util'\n\nexport async function navToOption({\n  option,\n  model,\n  assemblyName,\n}: {\n  model: LinearGenomeViewModel\n  option: BaseResult\n  assemblyName: string\n}) {\n  const location = option.getLocation()\n  const trackId = option.getTrackId()\n  if (location) {\n    await model.navToLocString(location, assemblyName)\n    if (trackId) {\n      model.showTrack(trackId)\n    }\n  }\n}\n\n// gets a string as input, or use stored option results from previous query,\n// then re-query and\n// 1) if it has multiple results: pop a dialog\n// 2) if it's a single result navigate to it\n// 3) else assume it's a locstring and navigate to it\nexport async function handleSelectedRegion({\n  input,\n  model,\n  assembly,\n}: {\n  input: string\n  model: LinearGenomeViewModel\n  assembly: Assembly\n}) {\n  const allRefs = assembly.allRefNamesWithLowerCase || []\n  const assemblyName = assembly.name\n  if (input.split(' ').every(entry => checkRef(entry, allRefs))) {\n    await model.navToLocString(input, assembly.name)\n  } else {\n    const searchScope = model.searchScope(assemblyName)\n    const { textSearchManager } = getSession(model)\n    const results = await fetchResults({\n      queryString: input,\n      searchType: 'exact',\n      searchScope,\n      rankSearchResults: model.rankSearchResults,\n      textSearchManager,\n      assembly,\n    })\n\n    if (results.length > 1) {\n      model.setSearchResults(results, input.toLowerCase(), assemblyName)\n    } else if (results.length === 1) {\n      await navToOption({\n        option: results[0]!,\n        model,\n        assemblyName,\n      })\n    } else {\n      await model.navToLocString(input, assemblyName)\n    }\n  }\n}\n\nexport function checkRef(str: string, allRefs: string[]) {\n  const [ref, rest] = splitLast(str, ':')\n  return (\n    allRefs.includes(str) ||\n    (allRefs.includes(ref) && !Number.isNaN(Number.parseInt(rest, 10)))\n  )\n}\n\nexport async function fetchResults({\n  queryString,\n  searchType,\n  searchScope,\n  rankSearchResults,\n  textSearchManager,\n  assembly,\n}: {\n  queryString: string\n  searchScope: SearchScope\n  rankSearchResults: (results: BaseResult[]) => BaseResult[]\n  searchType?: SearchType\n  textSearchManager?: TextSearchManager\n  assembly?: Assembly\n}) {\n  if (!textSearchManager) {\n    console.warn('No text search manager')\n  }\n\n  const textSearchResults = await textSearchManager?.search(\n    {\n      queryString,\n      searchType,\n    },\n    searchScope,\n    rankSearchResults,\n  )\n\n  const refNameResults = assembly?.allRefNames\n    ?.filter(ref => ref.toLowerCase().startsWith(queryString.toLowerCase()))\n    .slice(0, 10)\n    .map(r => new BaseResult({ label: r }))\n\n  return dedupe(\n    [...(refNameResults || []), ...(textSearchResults || [])],\n    elt => elt.getId(),\n  )\n}\n\n// splits on the last instance of a character\nexport function splitLast(str: string, split: string): [string, string] {\n  const lastIndex = str.lastIndexOf(split)\n  if (lastIndex === -1) {\n    return [str, '']\n  }\n  const before = str.slice(0, lastIndex)\n  const after = str.slice(lastIndex + 1)\n  return [before, after]\n}\n","/**\n * Abstract feature object\n */\nexport interface Feature {\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n  get(name: 'refName'): string\n  get(name: 'start' | 'end'): number\n  get(name: 'subfeatures'): Feature[] | undefined\n\n  get(name: string): any\n  /**\n   * Get the unique ID of this feature.\n   */\n  id(): string\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  parent(): Feature | undefined\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  children(): Feature[] | undefined\n\n  /**\n   * Convert to JSON\n   */\n  toJSON(): SimpleFeatureSerialized\n}\n\nexport function isFeature(thing: unknown): thing is Feature {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    typeof (thing as Feature).get === 'function' &&\n    typeof (thing as Feature).id === 'function'\n  )\n}\n\nexport interface SimpleFeatureArgs {\n  /** key-value data, must include 'start' and 'end' */\n  data: Record<string, unknown>\n  /** optional parent feature */\n  parent?: Feature\n  /** unique identifier. can also be in data.uniqueId */\n  id: string | number // thing that can be stringified easily\n}\n\n// subfeatures do not have to have uniqueId\nexport interface SimpleFeatureSerializedNoId {\n  [key: string]: unknown\n  parentId?: string\n  start: number\n  end: number\n  refName: string\n  type?: string\n  subfeatures?: SimpleFeatureSerializedNoId[]\n}\n\n// base serialized feature has to have a uniqueId\nexport interface SimpleFeatureSerialized extends SimpleFeatureSerializedNoId {\n  subfeatures?: SimpleFeatureSerializedNoId[]\n  uniqueId: string\n}\n\nfunction isSimpleFeatureSerialized(\n  args: SimpleFeatureSerialized | SimpleFeatureArgs,\n): args is SimpleFeatureSerialized {\n  return 'uniqueId' in args && typeof args.data !== 'object'\n}\n\n/**\n * Simple implementation of a feature object.\n */\nexport default class SimpleFeature implements Feature {\n  private data: Record<string, any>\n\n  private subfeatures?: SimpleFeature[]\n\n  private parentHandle?: Feature\n\n  private uniqueId: string\n\n  /**\n   * @param args - SimpleFeature args\n   *\n   * Note: args.data.subfeatures can be an array of these same args,\n   * which will be inflated to more instances of this class.\n   */\n  public constructor(args: SimpleFeatureArgs | SimpleFeatureSerialized) {\n    if (isSimpleFeatureSerialized(args)) {\n      this.data = args\n    } else {\n      this.data = args.data\n      // load handle from args.parent (not args.data.parent) this reason is\n      // because if args is an object, it likely isn't properly loaded with\n      // parent as a Feature reference (probably a raw parent ID or something\n      // instead)\n      this.parentHandle = args.parent\n    }\n\n    // the feature id comes from args.id, args.data.uniqueId, or args.uniqueId\n    // due to this initialization\n    const id = isSimpleFeatureSerialized(args) ? args.uniqueId : args.id\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (id === undefined || id === null) {\n      throw new Error(\n        'SimpleFeature requires a unique `id` or `data.uniqueId` attribute',\n      )\n    }\n    this.uniqueId = String(id)\n\n    if (!(this.data.aliases || this.data.end - this.data.start >= 0)) {\n      throw new Error(\n        `invalid feature data, end less than start. end: ${this.data.end} start: ${this.data.start}`,\n      )\n    }\n    if (this.data.subfeatures) {\n      this.subfeatures = this.data.subfeatures?.map((f: any, i: number) =>\n        typeof f.get !== 'function'\n          ? new SimpleFeature({\n              id: f.uniqueId || `${id}-${i}`,\n              data: {\n                strand: this.data.strand,\n                ...f,\n              } as Record<string, any>,\n              parent: this,\n            })\n          : f,\n      )\n    }\n  }\n\n  /**\n   * Get a piece of data about the feature.  All features must have\n   * 'start' and 'end', but everything else is optional.\n   */\n\n  public get(name: string): any {\n    return name === 'subfeatures'\n      ? this.subfeatures\n      : name === 'parent'\n        ? this.parent()\n        : this.data[name]\n  }\n\n  /**\n   * Set an item of data.\n   */\n\n  public set(name: string, val: any): void {\n    this.data[name] = val\n  }\n\n  /**\n   * Get an array listing which data keys are present in this feature.\n   */\n  public tags(): string[] {\n    return Object.keys(this.data)\n  }\n\n  /**\n   * Get the unique ID of this feature.\n   */\n  public id(): string {\n    return this.uniqueId\n  }\n\n  /**\n   * Get this feature's parent feature, or undefined if none.\n   */\n  public parent(): Feature | undefined {\n    return this.parentHandle\n  }\n\n  /**\n   * Get an array of child features, or undefined if none.\n   */\n  public children(): Feature[] | undefined {\n    return this.get('subfeatures')\n  }\n\n  public toJSON(): SimpleFeatureSerialized {\n    const d = { ...this.data, uniqueId: this.id() } as SimpleFeatureSerialized\n    const p = this.parent()\n    if (p) {\n      d.parentId = p.id()\n    }\n    const c = this.children()\n    if (c) {\n      d.subfeatures = c.map(child => child.toJSON())\n    }\n    return d\n  }\n\n  public static fromJSON(json: SimpleFeatureSerialized) {\n    return new SimpleFeature({ ...json })\n  }\n}\n","export interface Row {\n  id: string\n  metadata?: Record<string, unknown>\n  [key: string]: unknown\n}\n\nexport function getRowStr(facet: string, row: Row) {\n  return `${\n    (facet.startsWith('metadata.')\n      ? row.metadata?.[facet.replace('metadata.', '')]\n      : row[facet]) || ''\n  }`\n}\n","import { types } from 'mobx-state-tree'\n\nimport { ElementId, Region } from '../../util/types/mst'\n\nimport type { MenuItem } from '../../ui'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel BaseViewModel\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseViewModel = types\n  .model('BaseView', {\n    /**\n     * #property\n     */\n    id: ElementId,\n\n    /**\n     * #property\n     * displayName is displayed in the header of the view, or assembly names\n     * being used if none is specified\n     */\n    displayName: types.maybe(types.string),\n\n    /**\n     * #property\n     */\n    minimized: false,\n  })\n  .volatile(() => ({\n    width: 800,\n  }))\n  .views(() => ({\n    /**\n     * #getter\n     */\n    menuItems(): MenuItem[] {\n      return []\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setDisplayName(name: string) {\n      self.displayName = name\n    },\n\n    /**\n     * #action\n     * width is an important attribute of the view model, when it becomes set,\n     * it often indicates when the app can start drawing to it. certain views\n     * like lgv are strict about this because if it tries to draw before it\n     * knows the width it should draw to, it may start fetching data for\n     * regions it doesn't need to\n     *\n     * setWidth is updated by a ResizeObserver generally, the views often need\n     * to know how wide they are to properly draw genomic regions\n     */\n    setWidth(newWidth: number) {\n      self.width = newWidth\n    },\n\n    /**\n     * #action\n     */\n    setMinimized(flag: boolean) {\n      self.minimized = flag\n    },\n  }))\n\nexport default BaseViewModel\n\nexport type IBaseViewModel = Instance<typeof BaseViewModel>\n\nexport const BaseViewModelWithDisplayedRegions = BaseViewModel.props({\n  displayedRegions: types.array(Region),\n})\nexport type IBaseViewModelWithDisplayedRegions = Instance<\n  typeof BaseViewModelWithDisplayedRegions\n>\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport default class TextSearchAdapterType extends PluggableElementBase {\n  getAdapterClass: () => Promise<AnyAdapter>\n\n  configSchema: AnyConfigurationSchemaType\n\n  description?: string\n\n  constructor(\n    stuff: {\n      name: string\n      displayName?: string\n      description?: string\n      configSchema: AnyConfigurationSchemaType\n    } & (\n      | {\n          AdapterClass: AnyAdapter\n        }\n      | {\n          getAdapterClass: () => Promise<AnyAdapter>\n        }\n    ),\n  ) {\n    super(stuff)\n    this.description = stuff.description\n    this.configSchema = stuff.configSchema\n    this.getAdapterClass =\n      'getAdapterClass' in stuff\n        ? stuff.getAdapterClass\n        : async () => stuff.AdapterClass\n  }\n}\n","import type React from 'react'\n\nimport type { SearchType } from '../data_adapters/BaseAdapter'\nimport type TextSearchAdapterType from '../pluggableElementTypes/TextSearchAdapterType'\n\nexport interface BaseResultArgs {\n  label: string\n\n  displayString?: string\n\n  renderingComponent?: React.ReactElement\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  locString?: string\n\n  refName?: string\n\n  trackId?: string\n\n  score?: number\n\n  results?: BaseResult[]\n}\n\nexport default class BaseResult {\n  label: string\n\n  renderingComponent?: React.ReactElement\n\n  displayString?: string\n\n  matchedAttribute?: string\n\n  matchedObject?: object\n\n  textSearchAdapter?: TextSearchAdapterType\n\n  relevance?: SearchType\n\n  trackId?: string\n\n  score: number\n\n  locString?: string\n\n  results?: BaseResult[]\n  constructor(args: BaseResultArgs) {\n    this.label = args.label\n    this.locString = args.locString\n    this.renderingComponent = args.renderingComponent\n    this.displayString = args.displayString\n    this.matchedAttribute = args.matchedAttribute\n    this.matchedObject = args.matchedObject\n    this.textSearchAdapter = args.textSearchAdapter\n    this.relevance = args.relevance\n    this.trackId = args.trackId\n    this.score = args.score || 1\n    this.results = args.results || []\n  }\n\n  getLabel() {\n    return this.label\n  }\n\n  getDisplayString() {\n    return this.displayString || this.label\n  }\n\n  getRenderingComponent() {\n    return this.renderingComponent\n  }\n\n  getTrackId() {\n    return this.trackId\n  }\n\n  getScore() {\n    return this.score\n  }\n\n  updateScore(newScore: number) {\n    this.score = newScore\n    return this.score\n  }\n\n  getId() {\n    return `${this.getLabel()}-${this.getLocation()}-${this.getTrackId()}`\n  }\n\n  hasLocation() {\n    return !!this.locString\n  }\n\n  getLocation() {\n    return this.locString\n  }\n\n  getComboResults() {\n    return this.results\n  }\n}\n\nexport class RefSequenceResult extends BaseResult {\n  refName: string\n\n  constructor(args: BaseResultArgs) {\n    super(args)\n    this.refName = args.refName ?? ''\n  }\n\n  getLocation() {\n    return this.refName\n  }\n}\n","import {\n  offset,\n  useClientPoint,\n  useFloating,\n  useInteractions,\n} from '@floating-ui/react'\nimport { Portal, alpha, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.fontSize,\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\nexport default function BaseTooltip({\n  clientPoint: clientPointCoords,\n  children,\n  placement = 'right',\n}: {\n  placement?: 'left' | 'right'\n  clientPoint?: { x: number; y: number }\n  children: React.ReactNode\n}) {\n  const theme = useTheme()\n  const popperTheme = theme.components?.MuiPopper\n  const { classes } = useStyles()\n  const { refs, floatingStyles, context } = useFloating({\n    placement,\n    strategy: 'fixed',\n    middleware: [offset(5)],\n  })\n\n  const clientPoint = useClientPoint(context, clientPointCoords)\n  const { getFloatingProps } = useInteractions([clientPoint])\n  return (\n    <Portal container={popperTheme?.defaultProps?.container}>\n      <div\n        className={classes.tooltip}\n        ref={refs.setFloating}\n        style={{\n          ...floatingStyles,\n          zIndex: 100000,\n          // workaround for tooltips flashing at top left corner of screen\n          // when first appearing\n          visibility:\n            floatingStyles.transform === 'translate(0px, 0px)'\n              ? 'hidden'\n              : undefined,\n          pointerEvents: 'none',\n        }}\n        {...getFloatingProps()}\n      >\n        {children}\n      </div>\n    </Portal>\n  )\n}\n","import { ConfigurationSchema } from '../configuration'\n\nconst configSchema = ConfigurationSchema('BaseFeatureWidget', {})\nexport { configSchema }\n","import { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport {\n  localStorageGetBoolean,\n  localStorageGetItem,\n  localStorageGetNumber,\n  localStorageSetItem,\n} from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { Instance } from 'mobx-state-tree'\n\nfunction localStorageSetNumber(key: string, value: number) {\n  localStorageSetItem(key, JSON.stringify(value))\n}\n\nfunction localStorageSetBoolean(key: string, value: boolean) {\n  localStorageSetItem(key, JSON.stringify(value))\n}\n\nconst p = 'sequenceFeatureDetails'\n\nexport function SequenceFeatureDetailsF() {\n  return types\n    .model('SequenceFeatureDetails')\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      showCoordinatesSetting:\n        localStorageGetItem(`${p}-showCoordinatesSetting`) || 'none',\n      /**\n       * #volatile\n       */\n      intronBp: localStorageGetNumber(`${p}-intronBp`, 10),\n      /**\n       * #volatile\n       */\n      upDownBp: localStorageGetNumber(`${p}-upDownBp`, 100),\n      /**\n       * #volatile\n       */\n      upperCaseCDS: localStorageGetBoolean(`${p}-upperCaseCDS`, true),\n      /**\n       * #volatile\n       */\n      charactersPerRow: 100,\n      /**\n       * #volatile\n       */\n      feature: undefined as SimpleFeatureSerialized | undefined,\n      /**\n       * #volatile\n       */\n      mode: '',\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFeature(f: SimpleFeatureSerialized) {\n        self.feature = f\n      },\n      /**\n       * #action\n       */\n      setUpDownBp(f: number) {\n        self.upDownBp = f\n      },\n      /**\n       * #action\n       */\n      setIntronBp(f: number) {\n        self.intronBp = f\n      },\n      /**\n       * #action\n       */\n      setUpperCaseCDS(f: boolean) {\n        self.upperCaseCDS = f\n      },\n      /**\n       * #action\n       */\n      setShowCoordinates(f: 'none' | 'relative' | 'genomic') {\n        self.showCoordinatesSetting = f\n      },\n      /**\n       * #action\n       */\n      setMode(mode: string) {\n        self.mode = mode\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get showCoordinates() {\n        return self.showCoordinatesSetting !== 'none'\n      },\n      /**\n       * #getter\n       */\n      get showGenomicCoordsOption() {\n        return (\n          self.mode === 'gene' ||\n          self.mode === 'gene_updownstream' ||\n          self.mode === 'genomic' ||\n          self.mode === 'genomic_sequence_updownstream'\n        )\n      },\n      /**\n       * #getter\n       */\n      get hasCDS() {\n        return self.feature?.subfeatures?.some(sub => sub.type === 'CDS')\n      },\n      /**\n       * #getter\n       */\n      get hasExon() {\n        return self.feature?.subfeatures?.some(sub => sub.type === 'exon')\n      },\n      /**\n       * #getter\n       */\n      get hasExonOrCDS() {\n        return this.hasExon || this.hasCDS\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetNumber(`${p}-upDownBp`, self.upDownBp)\n            localStorageSetNumber(`${p}-intronBp`, self.intronBp)\n            localStorageSetBoolean(`${p}-upperCaseCDS`, self.upperCaseCDS)\n            localStorageSetItem(\n              `${p}-showCoordinatesSetting`,\n              self.showCoordinatesSetting,\n            )\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(() => {\n            self.setMode(\n              self.hasCDS ? 'cds' : self.hasExon ? 'cdna' : 'genomic',\n            )\n          }),\n        )\n      },\n    }))\n}\n\nexport type SequenceFeatureDetailsStateModel = ReturnType<\n  typeof SequenceFeatureDetailsF\n>\nexport type SequenceFeatureDetailsModel =\n  Instance<SequenceFeatureDetailsStateModel>\n","import { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport { getConf } from '../configuration'\nimport { getSession } from '../util'\nimport { SequenceFeatureDetailsF } from './SequenceFeatureDetails/model'\nimport { replaceUndefinedWithNull } from './util'\nimport { ElementId } from '../util/types/mst'\n\nimport type PluginManager from '../PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\ninterface Feat {\n  subfeatures?: Record<string, unknown>[]\n}\n\nfunction formatSubfeatures(\n  obj: Feat,\n  depth: number,\n  parse: (obj: Record<string, unknown>) => void,\n  currentDepth = 0,\n  returnObj = {} as Record<string, unknown>,\n) {\n  if (depth <= currentDepth) {\n    return\n  }\n  obj.subfeatures?.map(sub => {\n    formatSubfeatures(sub, depth, parse, currentDepth + 1, returnObj)\n    parse(sub)\n  })\n}\n\n/**\n * #stateModel BaseFeatureWidget\n * displays data about features, allowing configuration callbacks to modify the\n * contents of what is displayed\n *\n * see: formatDetails-\\>feature,formatDetails-\\>subfeatures\n */\nexport function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('BaseFeatureWidget', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('BaseFeatureWidget'),\n      /**\n       * #property\n       */\n      featureData: types.frozen(),\n      /**\n       * #property\n       */\n      formattedFields: types.frozen(),\n      /**\n       * #property\n       */\n      unformattedFeatureData: types.frozen(),\n      /**\n       * #property\n       */\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      /**\n       * #property\n       */\n      track: types.safeReference(\n        pluginManager.pluggableMstType('track', 'stateModel'),\n      ),\n      /**\n       * #property\n       */\n      trackId: types.maybe(types.string),\n      /**\n       * #property\n       */\n      trackType: types.maybe(types.string),\n      /**\n       * #property\n       */\n      maxDepth: types.maybe(types.number),\n\n      /**\n       * #property\n       */\n      sequenceFeatureDetails: types.optional(SequenceFeatureDetailsF(), {}),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      error: undefined as unknown,\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFeatureData(featureData: Record<string, unknown>) {\n        self.unformattedFeatureData = featureData\n      },\n      /**\n       * #action\n       */\n      clearFeatureData() {\n        self.featureData = undefined\n      },\n      /**\n       * #action\n       */\n      setFormattedData(feat: Record<string, unknown>) {\n        self.featureData = feat\n      },\n      /**\n       * #action\n       */\n      setExtra(type?: string, trackId?: string, maxDepth?: number) {\n        self.trackId = trackId\n        self.trackType = type\n        self.maxDepth = maxDepth\n      },\n      /**\n       * #action\n       */\n      setError(e: unknown) {\n        self.error = e\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        addDisposer(\n          self,\n          autorun(() => {\n            try {\n              const { unformattedFeatureData, track } = self\n              const session = getSession(self)\n              if (track) {\n                self.setExtra(\n                  track.type,\n                  track.configuration.trackId,\n                  getConf(track, ['formatDetails', 'maxDepth']),\n                )\n              }\n              if (unformattedFeatureData) {\n                const feature = structuredClone(unformattedFeatureData)\n\n                const combine = (\n                  arg2: string,\n                  feature: Record<string, unknown>,\n                ) => ({\n                  ...getConf(session, ['formatDetails', arg2], { feature }),\n                  ...getConf(track, ['formatDetails', arg2], { feature }),\n                })\n\n                if (track) {\n                  feature.__jbrowsefmt = combine('feature', feature)\n\n                  formatSubfeatures(\n                    feature,\n                    getConf(track, ['formatDetails', 'depth']),\n                    sub => {\n                      sub.__jbrowsefmt = combine('subfeatures', sub)\n                    },\n                  )\n                }\n\n                self.setFormattedData(feature)\n              }\n            } catch (e) {\n              console.error(e)\n              self.setError(e)\n            }\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // @ts-expect-error\n      const { featureData, finalizedFeatureData, ...rest } = snap\n      return {\n        unformattedFeatureData: featureData,\n        featureData: finalizedFeatureData,\n        ...rest,\n      }\n    })\n    .postProcessSnapshot(snap => {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const { unformattedFeatureData, featureData, ...rest } = snap as Omit<\n        typeof snap,\n        symbol\n      >\n      // finalizedFeatureData avoids running formatter twice if loading from\n      // snapshot\n      return {\n        // replacing undefined with null helps with allowing fields to be\n        // hidden, setting null is not allowed by jexl so we set it to\n        // undefined to hide. see config guide. this replacement happens both\n        // here and when displaying the featureData in base feature widget\n        finalizedFeatureData: replaceUndefinedWithNull(featureData),\n        ...rest,\n      }\n    })\n}\n\nexport type BaseFeatureWidgetStateModel = ReturnType<typeof stateModelFactory>\nexport type BaseFeatureWidgetModel = Instance<BaseFeatureWidgetStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BigWigAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BigWigAdapter = ConfigurationSchema(\n  'BigWigAdapter',\n  {\n    /**\n     * #slot\n     */\n    bigWigLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bw',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot\n     */\n    source: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Used for multiwiggle',\n    },\n\n    /**\n     * #slot\n     */\n    resolutionMultiplier: {\n      type: 'number',\n      defaultValue: 1,\n      description: 'Initial resolution multiplier',\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      return snap.uri\n        ? {\n            ...snap,\n            bigWigLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default BigWigAdapter\n","import { lazy } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { getSession, isSessionWithAddTracks } from '@jbrowse/core/util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { HierarchicalTrackSelectorModel } from '@jbrowse/plugin-data-management'\n\n// lazies\nconst ConfirmDialog = lazy(() => import('./ConfirmDialog'))\n\nfunction makeTrack({\n  model,\n  arg,\n}: {\n  model: HierarchicalTrackSelectorModel\n  arg: {\n    name: string\n  }\n}) {\n  const tracks = model.selection\n  const trackIds = tracks.map(c => readConfObject(c, 'name'))\n  const subadapters = tracks\n    .map(c => readConfObject(c, 'adapter'))\n    .map((c, idx) => ({ ...c, source: trackIds[idx] }))\n  const now = +Date.now()\n  const trackId = `multitrack-${now}-sessionTrack`\n\n  const session = getSession(model)\n  if (isSessionWithAddTracks(session)) {\n    session.addTrackConf({\n      type: 'MultiQuantitativeTrack',\n      trackId,\n      name: arg.name,\n      assemblyNames: [\n        ...new Set(tracks.flatMap(c => readConfObject(c, 'assemblyNames'))),\n      ],\n      adapter: {\n        type: 'MultiWiggleAdapter',\n        subadapters,\n      },\n    })\n    model.view.showTrack(trackId)\n  }\n}\n\nexport default function CreateMultiWiggleExtensionF(pm: PluginManager) {\n  pm.addToExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    (items: unknown[], props: Record<string, unknown>) => {\n      const { session } = props\n      return [\n        ...items,\n        ...(isSessionWithAddTracks(session)\n          ? [\n              {\n                label: 'Create multi-wiggle track',\n                onClick: (model: HierarchicalTrackSelectorModel) => {\n                  const tracks = model.selection\n\n                  getSession(model).queueDialog(handleClose => [\n                    ConfirmDialog,\n                    {\n                      tracks,\n                      onClose: (arg: boolean, arg1?: { name: string }) => {\n                        if (arg && arg1) {\n                          makeTrack({ model, arg: arg1 })\n                        }\n                        handleClose()\n                      },\n                    },\n                  ])\n                },\n              },\n            ]\n          : []),\n      ]\n    },\n  )\n}\n","import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util'\n\nimport type { ScaleOpts, Source } from './util'\nimport type {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { ThemeOptions } from '@mui/material'\n\nexport interface RenderArgs extends FeatureRenderArgs {\n  scaleOpts: ScaleOpts\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  height: number\n  highResolutionScaling: number\n  scaleOpts: ScaleOpts\n  displayCrossHatches: boolean\n  ticks: { values: number[] }\n  inverted: boolean\n  themeOptions: ThemeOptions\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: Map<string, Feature>\n  inverted: boolean\n}\n\nexport interface MultiRenderArgsDeserialized\n  extends RenderArgsDeserializedWithFeatures {\n  sources: Source[]\n}\n\nexport default abstract class WiggleBaseRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { inverted, height, regions, bpPerPx } = renderProps\n    const region = regions[0]!\n    const width = (region.end - region.start) / bpPerPx\n\n    // @ts-expect-error\n    const { reducedFeatures, ...rest } = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      ctx =>\n        this.draw(ctx, {\n          ...renderProps,\n          features,\n          inverted,\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...rest,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...rest,\n      features: reducedFeatures\n        ? new Map<string, Feature>(\n            reducedFeatures.map((r: Feature) => [r.id(), r]),\n          )\n        : results.features,\n      height,\n      width,\n      containsNoTransferables: true,\n    }\n  }\n\n  /**\n   * draw features to context given props, to be used by derived renderer\n   * classes\n   */\n  abstract draw<T extends RenderArgsDeserializedWithFeatures>(\n    ctx: CanvasRenderingContext2D,\n\n    props: T,\n  ): Promise<Record<string, unknown> | undefined>\n}\n\nexport type {\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsDeserialized,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n","import WiggleBaseRenderer from '../WiggleBaseRenderer'\n\nimport type { RenderArgsDeserializedWithFeatures } from '../WiggleBaseRenderer'\n\nexport default class DensityRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { drawDensity } = await import('../drawDensity')\n    return drawDensity(ctx, props)\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config WiggleRenderer\n * this is the \"base wiggle renderer config schema\"\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst WiggleRenderer = ConfigurationSchema(\n  'WiggleRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of track, overrides posColor and negColor',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    posColor: {\n      type: 'color',\n      description: 'the color to use when the score is positive',\n      defaultValue: 'blue',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    negColor: {\n      type: 'color',\n      description: 'the color to use when the score is negative',\n      defaultValue: 'red',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    /**\n     * #slot\n     */\n    bicolorPivot: {\n      type: 'stringEnum',\n      model: types.enumeration('Scale type', [\n        'numeric',\n        'mean',\n        'z_score',\n        'none',\n      ]),\n      description: 'type of bicolor pivot',\n      defaultValue: 'numeric',\n    },\n    /**\n     * #slot\n     */\n    bicolorPivotValue: {\n      type: 'number',\n      defaultValue: 0,\n      description: 'value to use for bicolor pivot',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default WiggleRenderer\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config DensityRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'DensityRenderer',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { useRef } from 'react'\n\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Region } from '@jbrowse/core/util/types'\n\nconst WiggleRendering = observer(function (props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  blockKey: string\n  onMouseLeave?: (event: React.MouseEvent) => void\n  onMouseMove?: (event: React.MouseEvent, arg?: string) => void\n  onFeatureClick?: (event: React.MouseEvent, arg?: string) => void\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    onMouseLeave,\n    onMouseMove,\n    onFeatureClick,\n  } = props\n  const region = regions[0]!\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number) {\n    // calculates feature under mouse\n    let offset = 0\n    if (ref.current) {\n      offset = ref.current.getBoundingClientRect().left\n    }\n    const offsetX = eventClientX - offset\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n    let featureUnderMouse: Feature | undefined\n    for (const feature of features.values()) {\n      // bpPerPx added to the end to accommodate \"reduced features\" (one feature per px)\n      if (\n        clientBp <= feature.get('end') + bpPerPx &&\n        clientBp >= feature.get('start')\n      ) {\n        featureUnderMouse = feature\n        break\n      }\n    }\n    return featureUnderMouse\n  }\n  return (\n    <div\n      ref={ref}\n      data-testid=\"wiggle-rendering-test\"\n      onMouseMove={e => onMouseMove?.(e, getFeatureUnderMouse(e.clientX)?.id())}\n      onClick={e => onFeatureClick?.(e, getFeatureUnderMouse(e.clientX)?.id())}\n      onMouseLeave={e => onMouseLeave?.(e)}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n})\n\nexport default WiggleRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config LinePlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'LinePlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { readConfObject } from '@jbrowse/core/configuration'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\n\nimport type { RenderArgsDeserializedWithFeatures } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class LinePlotRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { config } = props\n    const c = readConfObject(config, 'color')\n    const { drawLine } = await import('../drawLine')\n\n    return drawLine(ctx, {\n      ...props,\n      offset: YSCALEBAR_LABEL_OFFSET,\n      colorCallback:\n        c === '#f0f'\n          ? () => 'grey'\n          : (feature: Feature) => readConfObject(config, 'color', { feature }),\n    })\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config SharedWiggleDisplay\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport default function sharedWiggleConfigFactory() {\n  return ConfigurationSchema(\n    'SharedWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', [\n          'global',\n          'local',\n          'globalsd',\n          'localsd',\n          'zscore',\n        ]),\n        description:\n          'global/local using their min/max values or w/ standard deviations (globalsd/localsd)',\n      },\n\n      /**\n       * #slot\n       */\n      minimalTicks: {\n        type: 'boolean',\n        defaultValue: false,\n        description: 'use the minimal amount of ticks',\n      },\n\n      /**\n       * #slot\n       */\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      /**\n       * #slot\n       */\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      /**\n       * #slot\n       */\n      numStdDev: {\n        type: 'number',\n        description:\n          'number of standard deviations to use for autoscale types globalsd or localsd',\n        defaultValue: 3,\n      },\n      /**\n       * #slot\n       */\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n\n      /**\n       * #slot\n       */\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getEnv, getSession, isSelectionContainer } from '@jbrowse/core/util'\nimport { stopStopToken } from '@jbrowse/core/util/stopToken'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport { getNiceDomain } from '../util'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\n// lazies\nconst SetMinMaxDialog = lazy(() => import('./SetMinMaxDialog'))\n\n/**\n * #stateModel SharedWiggleMixin\n */\nexport default function SharedWiggleMixin(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        selectedRendering: types.optional(types.string, ''),\n        /**\n         * #property\n         */\n        resolution: types.optional(types.number, 1),\n        /**\n         * #property\n         */\n        fill: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        minSize: types.maybe(types.number),\n        /**\n         * #property\n         */\n        color: types.maybe(types.string),\n        /**\n         * #property\n         */\n        posColor: types.maybe(types.string),\n        /**\n         * #property\n         */\n        negColor: types.maybe(types.string),\n        /**\n         * #property\n         */\n        summaryScoreMode: types.maybe(types.string),\n        /**\n         * #property\n         */\n        rendererTypeNameState: types.maybe(types.string),\n        /**\n         * #property\n         */\n        scale: types.maybe(types.string),\n        /**\n         * #property\n         */\n        autoscale: types.maybe(types.string),\n        /**\n         * #property\n         */\n        displayCrossHatches: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        constraints: types.optional(\n          types.model({\n            max: types.maybe(types.number),\n            min: types.maybe(types.number),\n          }),\n          {},\n        ),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      message: undefined as undefined | string,\n      /**\n       * #volatile\n       */\n      stats: undefined as\n        | { currStatsBpPerPx: number; scoreMin: number; scoreMax: number }\n        | undefined,\n      /**\n       * #volatile\n       */\n      statsFetchInProgress: undefined as undefined | string,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      updateQuantitativeStats(stats: {\n        currStatsBpPerPx: number\n        scoreMin: number\n        scoreMax: number\n      }) {\n        const { currStatsBpPerPx, scoreMin, scoreMax } = stats\n        const EPSILON = 0.000001\n        if (\n          !self.stats ||\n          Math.abs(self.stats.scoreMax - scoreMax) > EPSILON ||\n          Math.abs(self.stats.scoreMin - scoreMin) > EPSILON\n        ) {\n          self.stats = {\n            currStatsBpPerPx,\n            scoreMin,\n            scoreMax,\n          }\n        }\n      },\n      /**\n       * #action\n       */\n      setColor(color?: string) {\n        self.color = color\n      },\n      /**\n       * #action\n       */\n      setPosColor(color?: string) {\n        self.posColor = color\n      },\n      /**\n       * #action\n       */\n      setNegColor(color?: string) {\n        self.negColor = color\n      },\n\n      /**\n       * #action\n       */\n      setStatsLoading(arg?: string) {\n        if (self.statsFetchInProgress) {\n          stopStopToken(self.statsFetchInProgress)\n        }\n        self.statsFetchInProgress = arg\n      },\n\n      /**\n       * #action\n       * this overrides the BaseLinearDisplayModel to avoid popping up a\n       * feature detail display, but still sets the feature selection on the\n       * model so listeners can detect a click\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n\n      /**\n       * #action\n       */\n      setResolution(res: number) {\n        self.resolution = res\n      },\n\n      /**\n       * #action\n       */\n      setFill(fill: number) {\n        if (fill === 0) {\n          self.fill = true\n          self.minSize = 0\n        } else if (fill === 1) {\n          self.fill = false\n          self.minSize = 1\n        } else if (fill === 2) {\n          self.fill = false\n          self.minSize = 2\n        }\n      },\n\n      /**\n       * #action\n       */\n      toggleLogScale() {\n        self.scale = self.scale === 'log' ? 'linear' : 'log'\n      },\n\n      /**\n       * #action\n       */\n      setScaleType(scale?: string) {\n        self.scale = scale\n      },\n\n      /**\n       * #action\n       */\n      setSummaryScoreMode(val: string) {\n        self.summaryScoreMode = val\n      },\n\n      /**\n       * #action\n       */\n      setAutoscale(val: string) {\n        self.autoscale = val\n      },\n\n      /**\n       * #action\n       */\n      setMaxScore(val?: number) {\n        self.constraints.max = val\n      },\n\n      /**\n       * #action\n       */\n      setRendererType(val: string) {\n        self.rendererTypeNameState = val\n      },\n\n      /**\n       * #action\n       */\n      setMinScore(val?: number) {\n        self.constraints.min = val\n      },\n\n      /**\n       * #action\n       */\n      toggleCrossHatches() {\n        self.displayCrossHatches = !self.displayCrossHatches\n      },\n\n      /**\n       * #action\n       */\n      setCrossHatches(cross: boolean) {\n        self.displayCrossHatches = cross\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterTypeName() {\n        return self.adapterConfig.type\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeNameSimple() {\n        return self.rendererTypeNameState ?? getConf(self, 'defaultRendering')\n      },\n\n      /**\n       * #getter\n       * subclasses can define these, as snpcoverage track does\n       */\n      get filters() {\n        return undefined\n      },\n\n      /**\n       * #getter\n       */\n      get scaleType() {\n        return self.scale ?? getConf(self, 'scaleType')\n      },\n\n      /**\n       * #getter\n       */\n      get maxScore() {\n        return self.constraints.max ?? getConf(self, 'maxScore')\n      },\n\n      /**\n       * #getter\n       */\n      get minScore() {\n        return self.constraints.min ?? getConf(self, 'minScore')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterCapabilities() {\n        const type = self.adapterTypeName\n        const { pluginManager } = getEnv(self)\n        return pluginManager.getAdapterType(type)!.adapterCapabilities\n      },\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const {\n          color,\n          displayCrossHatches,\n          fill,\n          minSize,\n          negColor,\n          posColor,\n          summaryScoreMode,\n          scaleType,\n          rendererTypeName,\n        } = self\n        const configBlob = getConf(self, ['renderers', rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            ...(scaleType ? { scaleType } : {}),\n            ...(fill !== undefined ? { filled: fill } : {}),\n            ...(displayCrossHatches !== undefined\n              ? { displayCrossHatches }\n              : {}),\n            ...(summaryScoreMode !== undefined ? { summaryScoreMode } : {}),\n            ...(color !== undefined ? { color } : {}),\n            ...(negColor !== undefined ? { negColor } : {}),\n            ...(posColor !== undefined ? { posColor } : {}),\n            ...(minSize !== undefined ? { minSize } : {}),\n          },\n          getEnv(self),\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get autoscaleType() {\n        return self.autoscale ?? getConf(self, 'autoscale')\n      },\n    }))\n    .views(self => {\n      let oldDomain: [number, number] = [0, 0]\n      return {\n        /**\n         * #getter\n         */\n        get domain() {\n          const { stats, scaleType, minScore, maxScore } = self\n          if (!stats) {\n            return undefined\n          }\n\n          const ret = getNiceDomain({\n            domain: [stats.scoreMin, stats.scoreMax],\n            bounds: [minScore, maxScore],\n            scaleType,\n          })\n\n          // avoid weird scalebar if log value and empty region displayed\n          if (scaleType === 'log' && ret[1] === Number.MIN_VALUE) {\n            return [0, Number.MIN_VALUE]\n          }\n\n          // avoid returning a new object if it matches the old value\n          if (JSON.stringify(oldDomain) !== JSON.stringify(ret)) {\n            oldDomain = ret\n          }\n\n          return oldDomain\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get filled(): boolean {\n        const { fill, rendererConfig } = self\n        return fill ?? readConfObject(rendererConfig, 'filled')\n      },\n      /**\n       * #getter\n       */\n      get summaryScoreModeSetting(): string {\n        const { summaryScoreMode: mode, rendererConfig } = self\n        return mode ?? readConfObject(rendererConfig, 'summaryScoreMode')\n      },\n\n      /**\n       * #getter\n       */\n      get scaleOpts() {\n        return {\n          domain: self.domain,\n          stats: self.stats,\n          autoscaleType: self.autoscaleType,\n          scaleType: self.scaleType,\n          inverted: getConf(self, 'inverted'),\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get canHaveFill() {\n        return self.rendererTypeName === 'XYPlotRenderer'\n      },\n\n      /**\n       * #getter\n       */\n      get displayCrossHatchesSetting(): boolean {\n        const { displayCrossHatches: hatches, rendererConfig } = self\n        return hatches ?? readConfObject(rendererConfig, 'displayCrossHatches')\n      },\n      /**\n       * #getter\n       */\n      get hasResolution() {\n        return self.adapterCapabilities.includes('hasResolution')\n      },\n\n      /**\n       * #getter\n       */\n      get hasGlobalStats() {\n        return self.adapterCapabilities.includes('hasGlobalStats')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      scoreTrackMenuItems() {\n        return [\n          ...(self.hasResolution\n            ? [\n                {\n                  label: 'Resolution',\n                  subMenu: [\n                    {\n                      label: 'Finer resolution',\n                      onClick: () => {\n                        self.setResolution(self.resolution * 5)\n                      },\n                    },\n                    {\n                      label: 'Coarser resolution',\n                      onClick: () => {\n                        self.setResolution(self.resolution / 5)\n                      },\n                    },\n                  ],\n                },\n                {\n                  label: 'Summary score mode',\n                  subMenu: ['min', 'max', 'avg', 'whiskers'].map(elt => ({\n                    label: elt,\n                    type: 'radio',\n                    checked: self.summaryScoreModeSetting === elt,\n                    onClick: () => {\n                      self.setSummaryScoreMode(elt)\n                    },\n                  })),\n                },\n              ]\n            : []),\n          {\n            label:\n              self.scaleType === 'log' ? 'Set linear scale' : 'Set log scale',\n            onClick: () => {\n              self.toggleLogScale()\n            },\n          },\n          {\n            label: 'Autoscale type',\n            subMenu: [\n              ['local', 'Local'],\n              ...(self.hasGlobalStats\n                ? ([\n                    ['global', 'Global'],\n                    ['globalsd', 'Global ± 3σ'],\n                  ] as const)\n                : []),\n              ['localsd', 'Local ± 3σ'],\n            ].map(([val, label]) => ({\n              label,\n              type: 'radio',\n              checked: self.autoscaleType === val,\n              onClick: () => {\n                self.setAutoscale(val)\n              },\n            })),\n          },\n          {\n            label: 'Set min/max score',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                SetMinMaxDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n        ]\n      },\n    }))\n    .actions(self => {\n      const { reload: superReload } = self\n      return {\n        /**\n         * #action\n         */\n        async reload() {\n          self.setError()\n          superReload()\n        },\n      }\n    })\n}\n","import { lazy } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport EqualizerIcon from '@mui/icons-material/Equalizer'\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport { types } from 'mobx-state-tree'\nimport { axisPropsFromTickScale } from 'react-d3-axis-mod'\n\nimport SharedWiggleMixin from '../shared/SharedWiggleMixin'\nimport { YSCALEBAR_LABEL_OFFSET, getScale } from '../util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { AnyReactComponentType } from '@jbrowse/core/util'\nimport type {\n  ExportSvgDisplayOptions,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst Tooltip = lazy(() => import('./components/Tooltip'))\nconst SetColorDialog = lazy(() => import('./components/SetColorDialog'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'XYPlotRenderer'],\n  ['density', 'DensityRenderer'],\n  ['line', 'LinePlotRenderer'],\n])\n\n/**\n * #stateModel LinearWiggleDisplay\n * extends\n * - [SharedWiggleMixin](../sharedwigglemixin)\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearWiggleDisplay',\n      SharedWiggleMixin(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearWiggleDisplay'),\n        /**\n         * #property\n         */\n        invertedSetting: types.maybe(types.boolean),\n      }),\n    )\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setInverted(arg: boolean) {\n        self.invertedSetting = arg\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get TooltipComponent() {\n        return Tooltip as AnyReactComponentType\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        const name = self.rendererTypeNameSimple\n        const rendererType = rendererTypes.get(name)\n        if (!rendererType) {\n          throw new Error(`unknown renderer ${name}`)\n        }\n        return rendererType\n      },\n      /**\n       * #getter\n       * unused currently\n       */\n      get quantitativeStatsRelevantToCurrentZoom() {\n        const view = getContainingView(self) as LinearGenomeViewModel\n        return self.stats?.currStatsBpPerPx === view.bpPerPx\n      },\n\n      /**\n       * #getter\n       */\n      get graphType() {\n        return (\n          self.rendererTypeName === 'XYPlotRenderer' ||\n          self.rendererTypeName === 'LinePlotRenderer'\n        )\n      },\n      /**\n       * #getter\n       */\n      get inverted() {\n        return self.invertedSetting ?? getConf(self, 'inverted')\n      },\n    }))\n\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        adapterProps() {\n          const superProps = superRenderProps()\n          const { filters, resolution, scaleOpts } = self\n          return {\n            ...superProps,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.rendererConfig,\n            displayCrossHatches: self.displayCrossHatchesSetting,\n            scaleOpts,\n            resolution,\n            filters,\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get ticks() {\n          const { inverted, scaleType, domain, height } = self\n          const minimalTicks = getConf(self, 'minimalTicks')\n          if (domain) {\n            const ticks = axisPropsFromTickScale(\n              getScale({\n                scaleType,\n                domain,\n                range: [\n                  height - YSCALEBAR_LABEL_OFFSET,\n                  YSCALEBAR_LABEL_OFFSET,\n                ],\n                inverted,\n              }),\n              4,\n            )\n            return height < 100 || minimalTicks\n              ? { ...ticks, values: domain }\n              : ticks\n          } else {\n            return undefined\n          }\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #method\n       */\n      renderProps() {\n        const { inverted, ticks, height } = self\n        const superProps = self.adapterProps()\n        return {\n          ...self.adapterProps(),\n          notReady: superProps.notReady || !self.stats,\n          height,\n          ticks,\n          inverted,\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get fillSetting() {\n        if (self.filled) {\n          return 0\n        } else if (self.minSize === 1) {\n          return 1\n        } else {\n          return 2\n        }\n      },\n      /**\n       * #getter\n       */\n      get quantitativeStatsReady() {\n        const view = getContainingView(self) as LinearGenomeViewModel\n        return (\n          view.initialized && self.statsReadyAndRegionNotTooLarge && !self.error\n        )\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      const hasRenderings = getConf(self, 'defaultRendering')\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Score',\n              icon: EqualizerIcon,\n              subMenu: self.scoreTrackMenuItems(),\n            },\n            ...(self.graphType\n              ? [\n                  {\n                    label: 'Inverted',\n                    type: 'checkbox',\n                    checked: self.inverted,\n                    onClick: () => {\n                      self.setInverted(!self.inverted)\n                    },\n                  },\n                ]\n              : []),\n\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: 'Fill mode',\n                    subMenu: ['filled', 'no fill', 'no fill w/ emphasis'].map(\n                      (elt, idx) => ({\n                        label: elt,\n                        type: 'radio',\n                        checked: self.fillSetting === idx,\n                        onClick: () => {\n                          self.setFill(idx)\n                        },\n                      }),\n                    ),\n                  },\n                ]\n              : []),\n\n            ...(hasRenderings\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: ['xyplot', 'density', 'line'].map(key => ({\n                      label: key,\n                      type: 'radio',\n                      checked: self.rendererTypeNameSimple === key,\n                      onClick: () => {\n                        self.setRendererType(key)\n                      },\n                    })),\n                  },\n                ]\n              : []),\n\n            {\n              label: 'Color',\n              icon: PaletteIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetColorDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n\n            ...(self.graphType\n              ? [\n                  {\n                    type: 'checkbox',\n                    icon: VisibilityIcon,\n                    label: 'Show cross hatches',\n                    checked: self.displayCrossHatchesSetting,\n                    onClick: () => {\n                      self.toggleCrossHatches()\n                    },\n                  },\n                ]\n              : []),\n          ]\n        },\n      }\n    })\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n\n      return {\n        afterAttach() {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          ;(async () => {\n            const { getQuantitativeStatsAutorun } = await import(\n              '../getQuantitativeStatsAutorun'\n            )\n            getQuantitativeStatsAutorun(self)\n          })()\n        },\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiDensityRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiDensityRenderer',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { useRef } from 'react'\n\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { SimpleFeature } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { Source } from './util'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Region } from '@jbrowse/core/util/types'\n\nconst MultiWiggleRendering = observer(function (props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  blockKey: string\n  sources: Source[]\n  displayModel?: { isMultiRow: boolean }\n  onMouseLeave?: (event: React.MouseEvent) => void\n  onMouseMove?: (event: React.MouseEvent, arg?: Feature) => void\n  onFeatureClick?: (event: React.MouseEvent, arg?: Feature) => void\n}) {\n  const {\n    regions,\n    features,\n    bpPerPx,\n    width,\n    height,\n    sources,\n    onMouseLeave = () => {},\n    onMouseMove = () => {},\n    onFeatureClick = () => {},\n    displayModel,\n  } = props\n  const region = regions[0]!\n  const ref = useRef<HTMLDivElement>(null)\n  const { isMultiRow } = displayModel || {}\n\n  function getFeatureUnderMouse(eventClientX: number, eventClientY: number) {\n    if (!ref.current) {\n      return\n    }\n    const rect = ref.current.getBoundingClientRect()\n    const offsetX = eventClientX - rect.left\n    const offsetY = eventClientY - rect.top\n    const source = sources[Math.floor((offsetY / height) * sources.length)]\n    if (!source) {\n      return\n    }\n    const px = region.reversed ? width - offsetX : offsetX\n    const mouseoverBp = region.start + bpPerPx * px\n    let featureUnderMouse: Feature | undefined\n    if (isMultiRow) {\n      for (const feature of features.values()) {\n        if (feature.get('source') !== source.name) {\n          continue\n        }\n        if (\n          mouseoverBp <= feature.get('end') + bpPerPx &&\n          mouseoverBp >= feature.get('start')\n        ) {\n          featureUnderMouse = feature\n          break\n        }\n      }\n    } else {\n      const featuresUnderMouse = []\n      for (const feature of features.values()) {\n        if (\n          mouseoverBp <= feature.get('end') + bpPerPx &&\n          mouseoverBp >= feature.get('start')\n        ) {\n          featuresUnderMouse.push(feature)\n        }\n      }\n\n      if (featuresUnderMouse.length) {\n        const pos = Math.floor(mouseoverBp)\n        featureUnderMouse = new SimpleFeature({\n          uniqueId: 'mouseoverfeat',\n          sources: Object.fromEntries(\n            featuresUnderMouse\n              .map(f => f.toJSON())\n              .map(f => {\n                const { refName, start, end, source, ...rest } = f\n                return [source, rest]\n              }),\n          ),\n          ...region,\n          start: pos,\n          end: pos + 1,\n        })\n      }\n    }\n    return featureUnderMouse\n  }\n\n  return (\n    <div\n      ref={ref}\n      onMouseMove={event => {\n        const { clientX, clientY } = event\n        const featureUnderMouse = getFeatureUnderMouse(clientX, clientY)\n        onMouseMove(event, featureUnderMouse)\n      }}\n      onClick={event => {\n        const { clientX, clientY } = event\n        const featureUnderMouse = getFeatureUnderMouse(clientX, clientY)\n        onFeatureClick(event, featureUnderMouse)\n      }}\n      onMouseLeave={event => {\n        onMouseLeave(event)\n      }}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n})\n\nexport default MultiWiggleRendering\n","import { groupBy } from '@jbrowse/core/util'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\n\nimport type { MultiRenderArgsDeserialized as MultiArgs } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiDensityPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { sources, features } = props\n    const groups = groupBy(features.values(), f => f.get('source'))\n    const height = props.height / sources.length\n    let feats = [] as Feature[]\n    const { drawDensity } = await import('../drawDensity')\n    ctx.save()\n    sources.forEach(source => {\n      const features = groups[source.name] || []\n      const { reducedFeatures } = drawDensity(ctx, {\n        ...props,\n        features,\n        height,\n      })\n      ctx.translate(0, height)\n      feats = feats.concat(reducedFeatures)\n    })\n    ctx.restore()\n    return {\n      reducedFeatures: feats,\n    }\n  }\n}\n","import { groupBy } from '@jbrowse/core/util'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\n\nimport type { MultiRenderArgsDeserialized as MultiArgs } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiLineRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { sources, features } = props\n    const groups = groupBy(features.values(), f => f.get('source'))\n    const { drawLine } = await import('../drawLine')\n    let feats = [] as Feature[]\n    sources.forEach(source => {\n      const { reducedFeatures } = drawLine(ctx, {\n        ...props,\n        features: groups[source.name] || [],\n        colorCallback: () => source.color || 'blue',\n      })\n      feats = feats.concat(reducedFeatures)\n    })\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n/**\n * #config MultiLineRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiLineRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default configSchema\n","import { lazy } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { set1 as colors } from '@jbrowse/core/ui/colors'\nimport {\n  getContainingView,\n  getSession,\n  max,\n  measureText,\n} from '@jbrowse/core/util'\nimport { stopStopToken } from '@jbrowse/core/util/stopToken'\nimport deepEqual from 'fast-deep-equal'\nimport { isAlive, types } from 'mobx-state-tree'\nimport { axisPropsFromTickScale } from 'react-d3-axis-mod'\n\nimport SharedWiggleMixin from '../shared/SharedWiggleMixin'\nimport { YSCALEBAR_LABEL_OFFSET, getScale } from '../util'\n\nimport type { Source } from '../util'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { AnyReactComponentType, Feature } from '@jbrowse/core/util'\nimport type {\n  ExportSvgDisplayOptions,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\nconst randomColor = () =>\n  '#000000'.replaceAll('0', () => (~~(Math.random() * 16)).toString(16))\n\n// lazies\nconst Tooltip = lazy(() => import('./components/Tooltip'))\nconst SetColorDialog = lazy(() => import('./components/SetColorDialog'))\nconst ClusterDialog = lazy(() => import('./components/ClusterDialog'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['xyplot', 'MultiXYPlotRenderer'],\n  ['multirowxy', 'MultiRowXYPlotRenderer'],\n  ['multirowdensity', 'MultiDensityRenderer'],\n  ['multiline', 'MultiLineRenderer'],\n  ['multirowline', 'MultiRowLineRenderer'],\n])\n\n/**\n * #stateModel MultiLinearWiggleDisplay\n * extends\n * - [SharedWiggleMixin](../sharedwigglemixin)\n */\nexport function stateModelFactory(\n  _pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'MultiLinearWiggleDisplay',\n      SharedWiggleMixin(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('MultiLinearWiggleDisplay'),\n\n        /**\n         * #property\n         */\n        layout: types.optional(types.frozen<Source[]>(), []),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      sourcesLoadingStopToken: undefined as string | undefined,\n      /**\n       * #volatile\n       */\n      featureUnderMouseVolatile: undefined as Feature | undefined,\n      /**\n       * #volatile\n       */\n      sourcesVolatile: undefined as Source[] | undefined,\n    }))\n    .actions(self => ({\n      setSourcesLoading(str: string) {\n        if (self.sourcesLoadingStopToken) {\n          stopStopToken(self.sourcesLoadingStopToken)\n        }\n        self.sourcesLoadingStopToken = str\n      },\n      /**\n       * #action\n       */\n      setLayout(layout: Source[]) {\n        self.layout = layout\n      },\n      /**\n       * #action\n       */\n      clearLayout() {\n        self.layout = []\n      },\n\n      /**\n       * #action\n       */\n      setSources(sources: Source[]) {\n        if (!deepEqual(sources, self.sourcesVolatile)) {\n          self.sourcesVolatile = sources\n        }\n      },\n\n      /**\n       * #action\n       */\n      setFeatureUnderMouse(f?: Feature) {\n        self.featureUnderMouseVolatile = f\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        return self.featureUnderMouseVolatile\n      },\n      /**\n       * #getter\n       */\n      get TooltipComponent() {\n        return Tooltip as AnyReactComponentType\n      },\n\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        const name = self.rendererTypeNameSimple\n        const rendererType = rendererTypes.get(name)\n        if (!rendererType) {\n          throw new Error(`unknown renderer ${name}`)\n        }\n        return rendererType\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get graphType() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiLineRenderer' ||\n          self.rendererTypeName === 'MultiRowLineRenderer'\n        )\n      },\n      /**\n       * #getter\n       */\n      get needsFullHeightScalebar() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiLineRenderer'\n        )\n      },\n      /**\n       * #getter\n       */\n      get isMultiRow() {\n        return (\n          self.rendererTypeName === 'MultiRowXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowLineRenderer' ||\n          self.rendererTypeName === 'MultiDensityRenderer'\n        )\n      },\n      /**\n       * #getter\n       * can be used to give it a \"color scale\" like a R heatmap, not\n       * implemented like this yet but flag can be used for this\n       */\n      get needsCustomLegend() {\n        return self.rendererTypeName === 'MultiDensityRenderer'\n      },\n\n      /**\n       * #getter\n       */\n      get canHaveFill() {\n        return (\n          self.rendererTypeName === 'MultiXYPlotRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer'\n        )\n      },\n      /**\n       * #getter\n       * the multirowxy and multiline don't need to use colors on the legend\n       * boxes since their track is drawn with the color. sort of a stylistic\n       * choice\n       */\n      get renderColorBoxes() {\n        return !(\n          self.rendererTypeName === 'MultiRowLineRenderer' ||\n          self.rendererTypeName === 'MultiRowXYPlotRenderer'\n        )\n      },\n      /**\n       * #getter\n       * positions multi-row below the tracklabel even if using overlap\n       * tracklabels for everything else\n       */\n      get prefersOffset() {\n        return this.isMultiRow\n      },\n      /**\n       * #getter\n       */\n      get sources() {\n        const sources = Object.fromEntries(\n          self.sourcesVolatile?.map(s => [s.name, s]) || [],\n        )\n        const iter = self.layout.length ? self.layout : self.sourcesVolatile\n        return iter\n          ?.map(s => ({\n            ...sources[s.name],\n            ...s,\n          }))\n          .map((s, i) => ({\n            ...s,\n            color:\n              s.color ||\n              (!this.isMultiRow ? colors[i] || randomColor() : 'blue'),\n          }))\n      },\n      /**\n       * #getter\n       */\n      get quantitativeStatsReady() {\n        const view = getContainingView(self) as LinearGenomeViewModel\n        return (\n          view.initialized && self.statsReadyAndRegionNotTooLarge && !self.error\n        )\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rowHeight() {\n        const { sources, height, isMultiRow } = self\n        return isMultiRow ? height / (sources?.length || 1) : height\n      },\n      /**\n       * #getter\n       */\n      get rowHeightTooSmallForScalebar() {\n        return this.rowHeight < 70\n      },\n\n      /**\n       * #getter\n       */\n      get useMinimalTicks() {\n        return (\n          getConf(self, 'minimalTicks') || this.rowHeightTooSmallForScalebar\n        )\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        adapterProps() {\n          const superProps = superRenderProps()\n          return {\n            ...superProps,\n            displayModel: self,\n            config: self.rendererConfig,\n            filters: self.filters,\n            resolution: self.resolution,\n            rpcDriverName: self.rpcDriverName,\n            sources: self.sources,\n          }\n        },\n        /**\n         * #getter\n         */\n        get ticks() {\n          const { scaleType, domain, isMultiRow, rowHeight, useMinimalTicks } =\n            self\n\n          if (!domain) {\n            return undefined\n          }\n\n          const offset = isMultiRow ? 0 : YSCALEBAR_LABEL_OFFSET\n          const ticks = axisPropsFromTickScale(\n            getScale({\n              scaleType,\n              domain,\n              range: [rowHeight - offset, offset],\n              inverted: getConf(self, 'inverted') as boolean,\n            }),\n            4,\n          )\n          return useMinimalTicks ? { ...ticks, values: domain } : ticks\n        },\n\n        /**\n         * #getter\n         */\n        get colors() {\n          return [\n            'red',\n            'blue',\n            'green',\n            'orange',\n            'purple',\n            'cyan',\n            'pink',\n            'darkblue',\n            'darkred',\n            'pink',\n          ]\n        },\n        /**\n         * #getter\n         * unused currently\n         */\n        get quantitativeStatsRelevantToCurrentZoom() {\n          const view = getContainingView(self) as LinearGenomeViewModel\n          return self.stats?.currStatsBpPerPx === view.bpPerPx\n        },\n      }\n    })\n    .views(self => ({\n      get legendFontSize() {\n        return Math.min(self.rowHeight, 12)\n      },\n\n      get canDisplayLegendLabels() {\n        return self.rowHeight > 11\n      },\n\n      get labelWidth() {\n        const minWidth = 20\n        return max(\n          self.sources\n            ?.map(s => measureText(s.name, this.legendFontSize))\n            .map(width => (this.canDisplayLegendLabels ? width : minWidth)) ||\n            [],\n        )\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        const superProps = self.adapterProps()\n        return {\n          ...superProps,\n          notReady: superProps.notReady || !self.sources || !self.stats,\n          displayModel: self,\n          rpcDriverName: self.rpcDriverName,\n          displayCrossHatches: self.displayCrossHatches,\n          height: self.height,\n          ticks: self.ticks,\n          stats: self.stats,\n          scaleOpts: self.scaleOpts,\n          onMouseMove: (_: unknown, f: Feature) => {\n            self.setFeatureUnderMouse(f)\n          },\n          onMouseLeave: () => {\n            self.setFeatureUnderMouse(undefined)\n          },\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get hasResolution() {\n        return self.adapterCapabilities.includes('hasResolution')\n      },\n\n      /**\n       * #getter\n       */\n      get hasGlobalStats() {\n        return self.adapterCapabilities.includes('hasGlobalStats')\n      },\n\n      /**\n       * #getter\n       */\n      get fillSetting() {\n        if (self.filled) {\n          return 0\n        } else if (self.minSize === 1) {\n          return 1\n        } else {\n          return 2\n        }\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      const hasRenderings = getConf(self, 'defaultRendering')\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Score',\n              subMenu: self.scoreTrackMenuItems(),\n            },\n\n            ...(self.canHaveFill\n              ? [\n                  {\n                    label: 'Fill mode',\n                    subMenu: ['filled', 'no fill', 'no fill w/ emphasis'].map(\n                      (elt, idx) => ({\n                        label: elt,\n                        type: 'radio',\n                        checked: self.fillSetting === idx,\n                        onClick: () => {\n                          self.setFill(idx)\n                        },\n                      }),\n                    ),\n                  },\n                ]\n              : []),\n\n            ...(self.graphType\n              ? [\n                  {\n                    type: 'checkbox',\n                    label: 'Draw cross hatches',\n                    checked: self.displayCrossHatchesSetting,\n                    onClick: () => {\n                      self.toggleCrossHatches()\n                    },\n                  },\n                ]\n              : []),\n            ...(hasRenderings\n              ? [\n                  {\n                    label: 'Renderer type',\n                    subMenu: [\n                      'xyplot',\n                      'multirowxy',\n                      'multirowdensity',\n                      'multiline',\n                      'multirowline',\n                    ].map(key => ({\n                      label: key,\n                      type: 'radio',\n                      checked: self.rendererTypeNameSimple === key,\n                      onClick: () => {\n                        self.setRendererType(key)\n                      },\n                    })),\n                  },\n                ]\n              : []),\n            {\n              label: 'Cluster by score',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  ClusterDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n\n            {\n              label: 'Edit colors/arrangement...',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetColorDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n      return {\n        afterAttach() {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          ;(async () => {\n            try {\n              const [\n                { getMultiWiggleSourcesAutorun },\n                { getQuantitativeStatsAutorun },\n              ] = await Promise.all([\n                import('../getMultiWiggleSourcesAutorun'),\n                import('../getQuantitativeStatsAutorun'),\n              ])\n              getQuantitativeStatsAutorun(self)\n              getMultiWiggleSourcesAutorun(self)\n            } catch (e) {\n              if (isAlive(self)) {\n                console.error(e)\n                getSession(self).notifyError(`${e}`, e)\n              }\n            }\n          })()\n        },\n\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type WiggleDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type WiggleDisplayModel = Instance<WiggleDisplayStateModel>\n\nexport default stateModelFactory\n","import { groupBy } from '@jbrowse/core/util'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\n\nimport type { MultiRenderArgsDeserialized as MultiArgs } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiRowLineRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { bpPerPx, sources, regions, features } = props\n    const region = regions[0]!\n    const groups = groupBy(features.values(), f => f.get('source'))\n    const height = props.height / sources.length\n    const width = (region.end - region.start) / bpPerPx\n    const { drawLine } = await import('../drawLine')\n    let feats = [] as Feature[]\n    ctx.save()\n    sources.forEach(source => {\n      const { reducedFeatures } = drawLine(ctx, {\n        ...props,\n        features: groups[source.name] || [],\n        height,\n        colorCallback: () => source.color || 'blue',\n      })\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      ctx.beginPath()\n      ctx.moveTo(0, height)\n      ctx.lineTo(width, height)\n      ctx.stroke()\n      ctx.translate(0, height)\n      feats = feats.concat(reducedFeatures)\n    })\n    ctx.restore()\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiRowLineRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiRowLineRenderer',\n  {\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { groupBy } from '@jbrowse/core/util'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\n\nimport type { MultiRenderArgsDeserialized as MultiArgs } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiXYPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { bpPerPx, sources, regions, features } = props\n    const region = regions[0]!\n    const groups = groupBy(features.values(), f => f.get('source'))\n    const height = props.height / sources.length\n    const width = (region.end - region.start) / bpPerPx\n    const { drawXY } = await import('../drawXY')\n    let feats = [] as Feature[]\n    ctx.save()\n    sources.forEach(source => {\n      const { reducedFeatures } = drawXY(ctx, {\n        ...props,\n        features: groups[source.name] || [],\n        height,\n        colorCallback: () => source.color || 'blue',\n      })\n      ctx.strokeStyle = 'rgba(200,200,200,0.8)'\n      ctx.beginPath()\n      ctx.moveTo(0, height)\n      ctx.lineTo(width, height)\n      ctx.stroke()\n      ctx.translate(0, height)\n      feats = feats.concat(reducedFeatures)\n    })\n    ctx.restore()\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiRowXYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiRowXYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0.7,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MultiWiggleAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MultiWiggleAdapter = ConfigurationSchema(\n  'MultiWiggleAdapter',\n  {\n    /**\n     * #slot\n     */\n    subadapters: {\n      type: 'frozen',\n      defaultValue: [],\n      description: 'array of subadapter JSON objects',\n    },\n    /**\n     * #slot\n     */\n    bigWigs: {\n      type: 'frozen',\n      description:\n        'array of bigwig filenames, alternative to the subadapters slot',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MultiWiggleAdapter\n","import { groupBy } from '@jbrowse/core/util'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\n\nimport type { MultiRenderArgsDeserialized as MultiArgs } from '../WiggleBaseRenderer'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiXYPlotRenderer extends WiggleBaseRenderer {\n  // @ts-expect-error\n  async draw(ctx: CanvasRenderingContext2D, props: MultiArgs) {\n    const { sources, features } = props\n    const groups = groupBy(features.values(), f => f.get('source'))\n    const { drawXY } = await import('../drawXY')\n    let feats = [] as Feature[]\n    for (const source of sources) {\n      const features = groups[source.name] || []\n      const { reducedFeatures } = drawXY(ctx, {\n        ...props,\n        features,\n        offset: YSCALEBAR_LABEL_OFFSET,\n        colorCallback: () => source.color || 'blue',\n      })\n      feats = feats.concat(reducedFeatures)\n    }\n    return { reducedFeatures: feats }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config MultiXYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiXYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'avg',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0.7,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default configSchema\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Region } from '@jbrowse/core/util'\n\nexport class MultiWiggleGetSources extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'MultiWiggleGetSources'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getSources(regions, deserializedArgs)\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\n\nimport type { Region } from '@jbrowse/core/util'\n\nexport class WiggleGetMultiRegionQuantitativeStats extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'WiggleGetMultiRegionQuantitativeStats'\n\n  async execute(\n    args: {\n      adapterConfig: Record<string, unknown>\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getMultiRegionQuantitativeStats(\n      regions,\n      deserializedArgs,\n    )\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { QuantitativeStats } from '@jbrowse/core/util/stats'\n\nexport class WiggleGetGlobalQuantitativeStats extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'WiggleGetGlobalQuantitativeStats'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriverClassName: string,\n  ): Promise<QuantitativeStats> {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getGlobalStats(deserializedArgs)\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\nimport { type Region, groupBy } from '@jbrowse/core/util'\nimport { firstValueFrom, toArray } from 'rxjs'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nexport class MultiWiggleGetScoreMatrix extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'MultiWiggleGetScoreMatrix'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { sources, regions, adapterConfig, sessionId, bpPerPx } =\n      deserializedArgs\n    const adapter = await getAdapter(pm, sessionId, adapterConfig)\n    const dataAdapter = adapter.dataAdapter as BaseFeatureDataAdapter\n    const resolution = 2\n    const bpScale = bpPerPx / resolution\n\n    const r0 = regions[0]\n    const r0len = r0.end - r0.start\n    const w = Math.floor(r0len / bpScale)\n    const feats = await firstValueFrom(\n      dataAdapter.getFeatures(r0, deserializedArgs).pipe(toArray()),\n    )\n\n    const groups = groupBy(feats, f => f.get('source'))\n    const rows = {} as Record<string, { name: string; scores: string[] }>\n    for (const source of sources) {\n      const { name } = source\n      const features = groups[name] || []\n      for (const feat of features) {\n        if (!rows[name]) {\n          rows[name] = {\n            name,\n            scores: new Array(w),\n          }\n        }\n        const fstart = feat.get('start')\n        const fend = feat.get('end')\n        const score = feat.get('score')\n        for (let i = fstart; i < fend; i += bpScale) {\n          if (i > r0.start && i < r0.end) {\n            rows[name].scores[Math.floor((i - r0.start) / bpScale)] ||= score\n          }\n        }\n      }\n    }\n\n    return rows\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\n\nimport WiggleBaseRenderer from '../WiggleBaseRenderer'\nimport { YSCALEBAR_LABEL_OFFSET } from '../util'\n\nimport type { RenderArgsDeserializedWithFeatures } from '../WiggleBaseRenderer'\n\nexport default class XYPlotRenderer extends WiggleBaseRenderer {\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { inverted, stopToken, features, config } = props\n    const { drawXY } = await import('../drawXY')\n\n    // the adjusted height takes into account YSCALEBAR_LABEL_OFFSET from the\n    // wiggle display, and makes the height of the actual drawn area add\n    // \"padding\" to the top and bottom of the display\n    const pivotValue = readConfObject(config, 'bicolorPivotValue')\n    const negColor = readConfObject(config, 'negColor')\n    const posColor = readConfObject(config, 'posColor')\n\n    return drawXY(ctx, {\n      ...props,\n      colorCallback: !config.color.isCallback\n        ? (_feature, score) => (score < pivotValue ? negColor : posColor)\n        : (feature, _score) => readConfObject(config, 'color', { feature }),\n      offset: YSCALEBAR_LABEL_OFFSET,\n      features: [...features.values()],\n      inverted,\n      stopToken,\n    })\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseWiggleRendererConfigSchema from '../configSchema'\n\n/**\n * #config XYPlotRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'XYPlotRenderer',\n  {\n    /**\n     * #slot\n     */\n    filled: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    displayCrossHatches: {\n      type: 'boolean',\n      description: 'choose to draw cross hatches (sideways lines)',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    summaryScoreMode: {\n      type: 'stringEnum',\n      model: types.enumeration('Score type', ['max', 'min', 'avg', 'whiskers']),\n      description:\n        'choose whether to use max/min/average or whiskers which combines all three into the same rendering',\n      defaultValue: 'whiskers',\n    },\n    /**\n     * #slot\n     */\n    minSize: {\n      type: 'number',\n      defaultValue: 0.7,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseWiggleRendererConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport BigWigAdapterF from './BigWigAdapter'\nimport CreateMultiWiggleExtensionF from './CreateMultiWiggleExtension'\nimport DensityRendererF from './DensityRenderer'\nimport GuessAdapterF from './GuessAdapter'\nimport LinePlotRendererF from './LinePlotRenderer'\nimport LinearWiggleDisplayF, {\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  modelFactory as linearWiggleDisplayModelFactory,\n} from './LinearWiggleDisplay'\nimport MultiDensityRendererF from './MultiDensityRenderer'\nimport MultiLineRendererF from './MultiLineRenderer'\nimport MultiLinearWiggleDisplayF from './MultiLinearWiggleDisplay'\nimport MultiQuantitativeTrackF from './MultiQuantitativeTrack'\nimport MultiRowLineRendererF from './MultiRowLineRenderer'\nimport MultiRowXYPlotRendererF from './MultiRowXYPlotRenderer'\nimport MultiWiggleAdapterF from './MultiWiggleAdapter'\nimport MultiWiggleAddTrackWorkflowF from './MultiWiggleAddTrackWorkflow'\nimport MultiXYPlotRendererF from './MultiXYPlotRenderer'\nimport QuantitativeTrackF from './QuantitativeTrack'\nimport WiggleBaseRenderer from './WiggleBaseRenderer'\nimport {\n  MultiWiggleGetScoreMatrix,\n  MultiWiggleGetSources,\n  WiggleGetGlobalQuantitativeStats,\n  WiggleGetMultiRegionQuantitativeStats,\n} from './WiggleRPC/rpcMethods'\nimport XYPlotRendererF, {\n  ReactComponent as XYPlotRendererReactComponent,\n  XYPlotRenderer,\n  configSchema as xyPlotRendererConfigSchema,\n} from './XYPlotRenderer'\nimport * as utils from './util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class WigglePlugin extends Plugin {\n  name = 'WigglePlugin'\n\n  install(pm: PluginManager) {\n    MultiWiggleAdapterF(pm)\n    BigWigAdapterF(pm)\n    QuantitativeTrackF(pm)\n    MultiQuantitativeTrackF(pm)\n    LinearWiggleDisplayF(pm)\n    MultiLinearWiggleDisplayF(pm)\n    LinePlotRendererF(pm)\n    XYPlotRendererF(pm)\n    DensityRendererF(pm)\n    MultiXYPlotRendererF(pm)\n    MultiRowXYPlotRendererF(pm)\n    MultiDensityRendererF(pm)\n    MultiLineRendererF(pm)\n    MultiRowLineRendererF(pm)\n    MultiWiggleAddTrackWorkflowF(pm)\n    CreateMultiWiggleExtensionF(pm)\n    GuessAdapterF(pm)\n\n    pm.addRpcMethod(() => new WiggleGetGlobalQuantitativeStats(pm))\n    pm.addRpcMethod(() => new WiggleGetMultiRegionQuantitativeStats(pm))\n    pm.addRpcMethod(() => new MultiWiggleGetSources(pm))\n    pm.addRpcMethod(() => new MultiWiggleGetScoreMatrix(pm))\n  }\n\n  exports = {\n    LinearWiggleDisplayReactComponent,\n    XYPlotRendererReactComponent,\n    XYPlotRenderer,\n    WiggleBaseRenderer,\n    linearWiggleDisplayModelFactory,\n    xyPlotRendererConfigSchema,\n    utils,\n  }\n}\n\nexport * from './util'\n\nexport { default as WiggleRendering } from './WiggleRendering'\nexport {\n  ReactComponent as LinearWiggleDisplayReactComponent,\n  Tooltip,\n  modelFactory as linearWiggleDisplayModelFactory,\n} from './LinearWiggleDisplay'\nexport type { TooltipContentsComponent } from './Tooltip'\n\nexport { default as WiggleBaseRenderer } from './WiggleBaseRenderer'\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiWiggleAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MultiWiggleAdapter',\n        displayName: 'Multi-wiggle adapter',\n        configSchema,\n        adapterCapabilities: [\n          'hasResolution',\n          'hasLocalStats',\n          'hasGlobalStats',\n        ],\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./MultiWiggleAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BigWigAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BigWigAdapter',\n        displayName: 'BigWig adapter',\n        configSchema,\n        adapterCapabilities: [\n          'hasResolution',\n          'hasLocalStats',\n          'hasGlobalStats',\n        ],\n        getAdapterClass: () => import('./BigWigAdapter').then(r => r.default),\n      }),\n  )\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function QuantitativeTrackF(pluginManager: PluginManager) {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'QuantitativeTrack',\n      displayName: 'Quantitative track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'QuantitativeTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config QuantitativeTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'QuantitativeTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiQuantitativeTrackF(pluginManager: PluginManager) {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'MultiQuantitativeTrack',\n      displayName: 'Multi-quantitative track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'MultiQuantitativeTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config MultiQuantitativeTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'MultiQuantitativeTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n\nexport default configSchema\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearWiggleDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    const stateModel = modelFactory(pluginManager, configSchema)\n    return new DisplayType({\n      name: 'LinearWiggleDisplay',\n      displayName: 'Wiggle display',\n      configSchema,\n      stateModel,\n      trackType: 'QuantitativeTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(() => import('./components/WiggleDisplayComponent')),\n    })\n  })\n}\n\nexport { default as Tooltip } from './components/Tooltip'\nexport { default as ReactComponent } from './components/WiggleDisplayComponent'\nexport { default as modelFactory } from './model'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport sharedWiggleConfigFactory from '../shared/SharedWiggleConfigSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearWiggleDisplay\n * extends\n * - [SharedWiggleDisplay](../sharedwiggledisplay)\n */\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const XYPlotRendererConfigSchema =\n    pluginManager.getRendererType('XYPlotRenderer')!.configSchema\n  const DensityRendererConfigSchema =\n    pluginManager.getRendererType('DensityRenderer')!.configSchema\n  const LinePlotRendererConfigSchema =\n    pluginManager.getRendererType('LinePlotRenderer')!.configSchema\n\n  return ConfigurationSchema(\n    'LinearWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['density', 'xyplot', 'line']),\n        defaultValue: 'xyplot',\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        DensityRenderer: DensityRendererConfigSchema,\n        XYPlotRenderer: XYPlotRendererConfigSchema,\n        LinePlotRenderer: LinePlotRendererConfigSchema,\n      }),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: sharedWiggleConfigFactory(),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiLinearWiggleDisplayF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'MultiLinearWiggleDisplay',\n      displayName: 'Multi-wiggle display',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'MultiQuantitativeTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(() => import('./components/WiggleDisplayComponent')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport sharedWiggleConfigFactory from '../shared/SharedWiggleConfigSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config MultiLinearWiggleDisplay\n * extends\n * - [SharedWiggleDisplay](../sharedwiggledisplay)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function WiggleConfigFactory(pluginManager: PluginManager) {\n  const MultiXYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'MultiXYPlotRenderer',\n  )!.configSchema\n  const MultiDensityRendererConfigSchema = pluginManager.getRendererType(\n    'MultiDensityRenderer',\n  )!.configSchema\n  const MultiRowXYPlotRendererConfigSchema = pluginManager.getRendererType(\n    'MultiRowXYPlotRenderer',\n  )!.configSchema\n  const MultiLineRendererConfigSchema =\n    pluginManager.getRendererType('MultiLineRenderer')!.configSchema\n  const MultiRowLineRendererConfigSchema = pluginManager.getRendererType(\n    'MultiRowLineRenderer',\n  )!.configSchema\n\n  return ConfigurationSchema(\n    'MultiLinearWiggleDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', [\n          'multirowxy',\n          'xyplot',\n          'multirowdensity',\n          'multiline',\n          'multirowline',\n        ]),\n        defaultValue: 'multirowxy',\n      },\n\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        MultiXYPlotRenderer: MultiXYPlotRendererConfigSchema,\n        MultiDensityRenderer: MultiDensityRendererConfigSchema,\n        MultiRowXYPlotRenderer: MultiRowXYPlotRendererConfigSchema,\n        MultiLineRenderer: MultiLineRendererConfigSchema,\n        MultiRowLineRenderer: MultiRowLineRendererConfigSchema,\n      }),\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 200,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: sharedWiggleConfigFactory(),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import configSchema from './configSchema'\nimport ReactComponent from '../WiggleRendering'\nimport LinePlotRenderer from './LinePlotRenderer'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinePlotRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new LinePlotRenderer({\n        name: 'LinePlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../WiggleRendering'\nimport XYPlotRenderer from './XYPlotRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function XYPlotRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new XYPlotRenderer({\n        name: 'XYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n\nexport { default as XYPlotRenderer } from './XYPlotRenderer'\nexport { default as ReactComponent } from '../WiggleRendering'\nexport { default as configSchema } from './configSchema'\n","import DensityRenderer from './DensityRenderer'\nimport configSchema from './configSchema'\nimport ReactComponent from '../WiggleRendering'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function DensityRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new DensityRenderer({\n        name: 'DensityRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../MultiWiggleRendering'\nimport MultiXYPlotRenderer from './MultiXYPlotRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiXYPlotRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new MultiXYPlotRenderer({\n        name: 'MultiXYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../MultiWiggleRendering'\nimport MultiRowXYPlotRenderer from './MultiRowXYPlotRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiRowXYPlotRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new MultiRowXYPlotRenderer({\n        name: 'MultiRowXYPlotRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import configSchema from './configSchema'\nimport ReactComponent from '../MultiWiggleRendering'\nimport MultiDensityRenderer from './MultiDensityRenderer'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiDensityRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new MultiDensityRenderer({\n        name: 'MultiDensityRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../MultiWiggleRendering'\nimport MultiLineRenderer from './MultiLineRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiLineRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new MultiLineRenderer({\n        name: 'MultiLineRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import ReactComponent from '../MultiWiggleRendering'\nimport MultiRowLineRenderer from './MultiRowLineRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiRowLineRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new MultiRowLineRenderer({\n        name: 'MultiRowLineRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { lazy } from 'react'\n\nimport { AddTrackWorkflowType } from '@jbrowse/core/pluggableElementTypes'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiWiggleAddTrackWorkflowF(pm: PluginManager) {\n  pm.addAddTrackWorkflowType(\n    () =>\n      new AddTrackWorkflowType({\n        name: 'Multi-wiggle track',\n        ReactComponent: lazy(() => import('./AddTrackWorkflow')),\n        stateModel: types.model({}),\n      }),\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport { getFileName } from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAdapterF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (cb: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        return testAdapter(\n          fileName,\n          /\\.(bw|bigwig)$/i,\n          adapterHint,\n          'BigWigAdapter',\n        )\n          ? {\n              type: 'BigWigAdapter',\n              bigWigLocation: file,\n            }\n          : cb(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        return adapterName === 'BigWigAdapter'\n          ? 'QuantitativeTrack'\n          : trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import type PluginManager from './PluginManager'\nimport type { AnyConfigurationSchemaType } from './configuration'\n\n/**\n * base class for a JBrowse plugin\n */\nexport default abstract class Plugin {\n  abstract name: string\n\n  url?: string\n\n  version?: string\n\n  install(_pluginManager: PluginManager): void {}\n\n  configure(_pluginManager: PluginManager): void {}\n\n  configurationSchema?: AnyConfigurationSchemaType\n}\n\nexport type PluginConstructor = new (...args: unknown[]) => Plugin\n","import RpcMethodType from './RpcMethodType'\nimport { renameRegionsIfNeeded } from '../util'\nimport SerializableFilterChain from './renderers/util/serializableFilterChain'\n\nimport type { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\n\nexport default abstract class RpcMethodTypeWithFiltersAndRenameRegions extends RpcMethodType {\n  async deserializeArguments(args: any, rpcDriverClassName: string) {\n    const l = await super.deserializeArguments(args, rpcDriverClassName)\n    return {\n      ...l,\n      filters: args.filters\n        ? new SerializableFilterChain({\n            filters: args.filters,\n          })\n        : undefined,\n    }\n  }\n\n  async serializeArguments(\n    args: RenderArgs & {\n      stopToken?: string\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const assemblyManager = pm.rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager')\n    }\n\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters?.toJSON().filters,\n    })\n\n    return super.serializeArguments(renamedArgs, rpcDriverClassName)\n  }\n}\n","import { TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport { isUriLocation } from '../../util/types'\n\nimport type { FileLocation } from '../../util/types'\n\nconst UrlChooser = observer(function ({\n  location,\n  label,\n  style,\n  setLocation,\n}: {\n  location?: FileLocation\n  label?: string\n  style?: Record<string, unknown>\n  setLocation: (arg: FileLocation) => void\n}) {\n  return (\n    <TextField\n      variant=\"outlined\"\n      fullWidth\n      defaultValue={location && isUriLocation(location) ? location.uri : ''}\n      label={label || 'Enter URL'}\n      style={style}\n      onChange={event => {\n        setLocation({\n          uri: event.target.value.trim(),\n          locationType: 'UriLocation',\n        })\n      }}\n      slotProps={{\n        htmlInput: {\n          'data-testid': 'urlInput',\n        },\n      }}\n    />\n  )\n})\n\nexport default UrlChooser\n","/* eslint-disable react-refresh/only-export-components */\n// This file is a ponyfill for the HTML5 OffscreenCanvas API.\n\nimport { CanvasSequence } from 'canvas-sequencer'\nimport isNode from 'detect-node'\n\ntype AbstractCanvas = any\n\ntype AbstractImageBitmap = any\n\nexport let createCanvas: (width: number, height: number) => AbstractCanvas\nexport let createImageBitmap: (\n  canvas: AbstractCanvas,\n) => Promise<AbstractImageBitmap>\n\n/** the JS class (constructor) for offscreen-generated image bitmap data */\nexport let ImageBitmapType: unknown\n\nexport function drawImageOntoCanvasContext(\n  imageData: any,\n  context: CanvasRenderingContext2D,\n) {\n  if (imageData.serializedCommands) {\n    const seq = new CanvasSequence(imageData.serializedCommands)\n    seq.execute(context)\n  } else {\n    context.drawImage(imageData as CanvasImageSource, 0, 0)\n  }\n}\n\nconst weHave = {\n  realOffscreenCanvas: typeof OffscreenCanvas === 'function',\n  node: isNode,\n}\n\nif (weHave.realOffscreenCanvas) {\n  createCanvas = (width, height) => new OffscreenCanvas(width, height)\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  createImageBitmap = window.createImageBitmap || self.createImageBitmap\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  ImageBitmapType = window.ImageBitmap || self.ImageBitmap\n} else if (weHave.node) {\n  // use node-canvas if we are running in node (i.e. automated tests)\n  createCanvas = (...args) => {\n    // @ts-expect-error\n    return nodeCreateCanvas(...args)\n  }\n  createImageBitmap = async canvas => {\n    const dataUri = canvas.toDataURL()\n    // @ts-expect-error\n    const img = new nodeImage()\n    return new Promise((resolve, reject) => {\n      // need onload for jest\n      img.onload = () => {\n        resolve(img)\n      }\n      img.onerror = reject\n      img.src = dataUri\n    })\n  }\n} else {\n  createCanvas = (width: number, height: number) => {\n    const context = new CanvasSequence()\n    return {\n      width,\n      height,\n      getContext() {\n        return context\n      },\n    }\n  }\n  createImageBitmap = async canvas => {\n    const ctx = canvas.getContext('2d')\n    return {\n      height: canvas.height,\n      width: canvas.width,\n      serializedCommands: ctx.toJSON(),\n      containsNoTransferables: true,\n    }\n  }\n  ImageBitmapType = String\n}\n","import { Observable, fromEvent } from 'rxjs'\n\nclass AbortError extends Error {\n  public code: string | undefined\n}\n\n/**\n * properly check if the given AbortSignal is aborted. per the standard, if the\n * signal reads as aborted, this function throws either a DOMException\n * AbortError, or a regular error with a `code` attribute set to `ERR_ABORTED`.\n *\n * for convenience, passing `undefined` is a no-op\n *\n * @param signal -\n * @returns nothing\n */\nexport function checkAbortSignal(signal?: AbortSignal): void {\n  if (!signal) {\n    return\n  }\n\n  if (!(signal instanceof AbortSignal)) {\n    throw new TypeError('must pass an AbortSignal')\n  }\n\n  if (signal.aborted) {\n    throw makeAbortError()\n  }\n}\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n/**\n * Skips to the next tick, then runs `checkAbortSignal`.\n * Await this to inside an otherwise synchronous loop to\n * provide a place to break when an abort signal is received.\n */\nexport async function abortBreakPoint(signal?: AbortSignal) {\n  // it was observed that an actual timeout is needed to get the aborting (wrap\n  // hicrenderer in a try catch, console.error the error, and rethrow the error\n  // to see). using await Promise.resolve() did not appear to allow aborting to\n  // occur\n  await timeout(1)\n  checkAbortSignal(signal)\n}\n\nexport function makeAbortError() {\n  if (typeof DOMException !== 'undefined') {\n    return new DOMException('aborted', 'AbortError')\n  }\n  const e = new AbortError('aborted')\n  e.code = 'ERR_ABORTED'\n  return e\n}\n\nexport function observeAbortSignal(signal?: AbortSignal): Observable<Event> {\n  if (!signal) {\n    return new Observable()\n  }\n  return fromEvent(signal, 'abort')\n}\n\n/**\n * check if the given exception was caused by an operation being intentionally aborted\n * @param exception -\n */\nexport function isAbortException(exception: unknown): boolean {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AbortError' ||\n      // standard-ish non-DOM abort exception\n      (exception as AbortError).code === 'ERR_ABORTED' ||\n      // message contains aborted for bubbling through RPC\n      // things we have seen that we want to catch here\n      // Error: aborted\n      // AbortError: aborted\n      // AbortError: The user aborted a request.\n      !!/\\b(aborted|aborterror)\\b/i.test(exception.message))\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  bg: {\n    padding: 4,\n    margin: 4,\n    overflow: 'auto',\n    maxHeight: 200,\n    background: theme.palette.mode === 'dark' ? '#833' : '#f88',\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}))\n\nexport default function RedErrorMessageBox({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return <div className={classes.bg}>{children}</div>\n}\n","import { getContainingView, getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { isAlive } from 'mobx-state-tree'\n\nimport type { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\nexport interface RenderProps {\n  rendererType: any\n  renderArgs: Record<string, any>\n  renderProps: Record<string, any>\n  displayError: unknown\n  rpcManager: { call: (...args: unknown[]) => void }\n  cannotBeRenderedReason: string\n}\n\nexport interface ErrorProps {\n  displayError: string\n}\n\nexport function getDisplayStr(totalBytes: number) {\n  if (Math.floor(totalBytes / 1000000) > 0) {\n    return `${Number.parseFloat((totalBytes / 1000000).toPrecision(3))} Mb`\n  } else if (Math.floor(totalBytes / 1000) > 0) {\n    return `${Number.parseFloat((totalBytes / 1000).toPrecision(3))} Kb`\n  } else {\n    return `${Math.floor(totalBytes)} bytes`\n  }\n}\n\n// stabilize clipid under test for snapshot\nexport function getId(id: string, index: number) {\n  const notJest = typeof jest === 'undefined'\n  return ['clip', notJest ? id : 'jest', index, notJest ? Math.random() : '']\n    .filter(f => !!f)\n    .join('-')\n}\n\nexport async function getFeatureDensityStatsPre(\n  self: IAnyStateTreeNode & {\n    adapterConfig?: AnyConfigurationModel\n    setMessage: (arg: string) => void\n  },\n) {\n  const view = getContainingView(self) as LinearGenomeViewModel\n  const regions = view.staticBlocks.contentBlocks\n\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  if (!adapterConfig) {\n    // A track extending the base track might not have an adapter config\n    // e.g. Apollo tracks don't use adapters\n    return {}\n  }\n  const sessionId = getRpcSessionId(self)\n\n  return rpcManager.call(sessionId, 'CoreGetFeatureDensityStats', {\n    sessionId,\n    regions,\n    adapterConfig,\n    statusCallback: (message: string) => {\n      if (isAlive(self)) {\n        self.setMessage(message)\n      }\n    },\n  }) as Promise<FeatureDensityStats>\n}\n","import {\n  isArrayType,\n  isLateType,\n  isMapType,\n  isOptionalType,\n  isUnionType,\n} from 'mobx-state-tree'\n\nimport type {\n  IAnyComplexType,\n  IAnyType,\n  IModelReflectionPropertiesData,\n  ISimpleType,\n  UnionStringArray,\n} from 'mobx-state-tree'\n\nexport interface ILiteralType<T> extends ISimpleType<T> {\n  value: T\n}\n\n/**\n * get the inner type of an MST optional, array, or late type object\n */\nexport function getSubType(type: IAnyType): IAnyType {\n  let t: IAnyType\n  if (isOptionalType(type)) {\n    // @ts-expect-error\n    t = type._subtype || type.type\n  } else if (isArrayType(type) || isMapType(type)) {\n    // @ts-expect-error\n    t = type._subtype || type._subType || type.subType\n    // @ts-expect-error\n  } else if (typeof type.getSubType === 'function') {\n    // @ts-expect-error\n    return type.getSubType()\n  } else {\n    throw new TypeError('unsupported mst type')\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (!t) {\n    throw new Error('failed to get subtype')\n  }\n  return t\n}\n\n/**\n * get the array of the subtypes in a union\n */\nexport function getUnionSubTypes(unionType: IAnyType): IAnyType[] {\n  if (!isUnionType(unionType)) {\n    throw new TypeError('not an MST union type')\n  }\n  const t =\n    // @ts-expect-error\n    unionType._types ||\n    // @ts-expect-error\n    unionType.types ||\n    // @ts-expect-error\n    getSubType(unionType)._types ||\n    // @ts-expect-error\n    getSubType(unionType).types\n  if (!t) {\n    // debugger\n    throw new Error('failed to extract subtypes from mst union')\n  }\n  return t\n}\n\n/**\n * get the type of one of the properties of the given MST model type\n */\nexport function getPropertyType(\n  type: IModelReflectionPropertiesData,\n  propertyName: string,\n) {\n  return type.properties[propertyName]!\n}\n\n/**\n * get the base type from inside an MST optional type\n */\nexport function getDefaultValue(type: IAnyType) {\n  if (!isOptionalType(type)) {\n    throw new TypeError('type must be an optional type')\n  }\n  // @ts-expect-error\n  return type._defaultValue || type.defaultValue\n}\n\nexport type IEnumerationType<T extends string> = ISimpleType<\n  UnionStringArray<T[]>\n>\n\n/** get the string values of an MST enumeration type */\nexport function getEnumerationValues(type: IAnyComplexType) {\n  const subtypes = getUnionSubTypes(type) as ILiteralType<string>[]\n  // the subtypes should all be literals with a value member\n  return subtypes.map(t => t.value)\n}\n\nexport function resolveLateType(maybeLate: IAnyType) {\n  if (\n    !isUnionType(maybeLate) &&\n    !isArrayType(maybeLate) &&\n    isLateType(maybeLate)\n  ) {\n    // @ts-expect-error\n    return maybeLate.getSubType()\n  }\n  return maybeLate\n}\n","import { useEffect, useRef } from 'react'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { observer } from 'mobx-react'\nimport { type Root, hydrateRoot } from 'react-dom/client'\n\nimport { createJBrowseTheme } from '../../ui'\nimport { rIC } from '../../util'\n\nimport type { RenderArgs, ResultsSerialized } from './ServerSideRendererType'\n\ninterface Props extends ResultsSerialized, RenderArgs {\n  RenderingComponent: React.ComponentType<any>\n}\n\nconst ServerSideRenderedContent = observer(function ServerSideRenderedContent({\n  theme,\n  html,\n  RenderingComponent,\n  ...rest\n}: Props) {\n  const ref = useRef<HTMLDivElement>(null)\n  const rootRef = useRef<Root>(null)\n\n  useEffect(() => {\n    // requestIdleCallback here helps to avoid hydration mismatch because it\n    // provides time for dangerouslySetInnerHTML to set the innerHTML contents\n    // of the node, otherwise ref.current.innerHTML can be empty\n    const renderTimeout = rIC(() => {\n      if (!ref.current) {\n        return\n      }\n      const jbrowseTheme = createJBrowseTheme(theme)\n      // if there is a hydration mismatch, investigate value of\n      // - value of ref.current.innerHTML\n      // - value of `html` variable\n      // - renderToString of the below React element\n      rootRef.current =\n        rootRef.current ??\n        hydrateRoot(\n          ref.current,\n          <ThemeProvider theme={jbrowseTheme}>\n            <RenderingComponent {...rest} />\n          </ThemeProvider>,\n        )\n    })\n    return () => {\n      if (renderTimeout !== undefined) {\n        clearTimeout(renderTimeout)\n      }\n      const root = rootRef.current\n      rootRef.current = null\n\n      setTimeout(() => {\n        root?.unmount()\n      })\n    }\n    /* biome-ignore lint/correctness/useExhaustiveDependencies: */\n  }, [theme, rest, RenderingComponent])\n\n  return <div ref={ref} dangerouslySetInnerHTML={{ __html: html }} />\n})\n\nexport default ServerSideRenderedContent\n","import { hashCode } from './'\n\n// generates a short \"id fingerprint\" from the config passed to the base\n// feature adapter by recursively enumerating props, but if config is too big\n// does not process entire config (FromConfigAdapter for example can be large)\nexport default function idMaker(\n  args: Record<string, unknown>,\n  id = '',\n  len = 5000,\n) {\n  const stack = [args]\n\n  // while not empty\n  while (stack.length) {\n    const obj = stack.pop()!\n    for (const [key, val] of Object.entries(obj)) {\n      if (id.length > len) {\n        return hashCode(id)\n      } else {\n        if (typeof val === 'object' && val !== null) {\n          stack.push(val as Record<string, unknown>)\n        } else {\n          id += `${key}-${val}`\n        }\n      }\n    }\n  }\n\n  return hashCode(id)\n}\n","import { sum } from '@jbrowse/core/util'\n\ninterface Display {\n  height: number\n}\ninterface Track {\n  displays: Display[]\n}\n\nexport function totalHeight(\n  tracks: Track[],\n  textHeight: number,\n  trackLabels: string,\n) {\n  return sum(\n    tracks.map(\n      t =>\n        t.displays[0]!.height +\n        (['none', 'left'].includes(trackLabels) ? 0 : textHeight),\n    ),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const configSchema = ConfigurationSchema('AlignmentsFeatureWidget', {})\n","import { stateModelFactory as baseModelFactory } from '@jbrowse/core/BaseFeatureWidget'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  const baseModel = baseModelFactory(pluginManager)\n  return types.compose(\n    baseModel,\n    types.model('AlignmentsFeatureWidget', {\n      type: types.literal('AlignmentsFeatureWidget'),\n    }),\n  )\n}\n\nexport type AlignmentFeatureWidgetStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type AlignmentFeatureWidgetModel =\n  Instance<AlignmentFeatureWidgetStateModel>\n","import { lazy } from 'react'\n\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\n\nimport { configSchema } from './configSchema'\nimport { stateModelFactory } from './stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function AlignmentFeatureDetailsF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'AlignmentsFeatureWidget',\n        heading: 'Feature details',\n        configSchema: configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(() => import('./AlignmentsFeatureDetail')),\n      }),\n  )\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchemaF'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    const track = new TrackType({\n      name: 'AlignmentsTrack',\n      displayName: 'Alignments track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'AlignmentsTrack', configSchema),\n    })\n    const linearAlignmentsDisplay = pm.getDisplayType(\n      'LinearAlignmentsDisplay',\n    )!\n    // Add LinearAlignmentsDisplay here so that it has priority over the other\n    // linear displays (defaults to order the displays are added, but we have\n    // to add the Pileup and SNPCoverage displays first).\n    track.addDisplayType(linearAlignmentsDisplay)\n    return track\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config AlignmentsTrack\n * has very little config; most config and state logic is on the display\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'AlignmentsTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config BamAdapter\n * used to configure BAM adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'BamAdapter',\n  {\n    /**\n     * #slot\n     */\n    bamLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bam',\n        locationType: 'UriLocation',\n      },\n    },\n\n    index: ConfigurationSchema('BamIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['BAI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'BAI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.bam.bai',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      description:\n        'size to fetch in bytes over which to display a warning to the user that too much data will be fetched',\n      defaultValue: 5_000_000,\n    },\n    /**\n     * #slot\n     * generally refers to the reference genome assembly's sequence adapter\n     * currently needs to be manually added\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description:\n        'sequence data adapter, used to calculate SNPs when BAM reads lacking MD tags',\n      defaultValue: null,\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    /**\n     * #preProcessSnapshot\n     * if only uri is passed to snapshot, adds bamLocation and index.location\n     * with tbi index\n     */\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bamLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            index: {\n              location: {\n                uri: `${snap.uri}.bai`,\n                baseUri: snap.baseUri,\n              },\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default configSchema\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BamAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'BamAdapter',\n      displayName: 'BAM adapter',\n      configSchema,\n      getAdapterClass: () => import('./BamAdapter').then(r => r.default),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config CramAdapter\n * used to configure CRAM adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'CramAdapter',\n  {\n    /**\n     * #slot fetchSizeLimit\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      description:\n        'size in bytes over which to display a warning to the user that too much data will be fetched',\n      defaultValue: 3_000_000,\n    },\n\n    /**\n     * #slot cramLocation\n     */\n    cramLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.cram',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot craiLocation\n     */\n    craiLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.cram.crai',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot sequenceAdapter\n     * generally refers to the reference genome assembly's sequence adapter\n     * currently needs to be manually added\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description: 'sequence data adapter',\n      defaultValue: null,\n    },\n  },\n  {\n    explicitlyTyped: true,\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            cramLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            craiLocation: {\n              uri: `${snap.uri}.crai`,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\nexport default configSchema\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function CramAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'CramAdapter',\n      displayName: 'CRAM adapter',\n      configSchema,\n      getAdapterClass: () => import('./CramAdapter').then(r => r.default),\n    })\n  })\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n} from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAlignmentsTypesF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n\n        if (testAdapter(fileName, /\\.bam$/i, adapterHint, 'BamAdapter')) {\n          return {\n            type: 'BamAdapter',\n            bamLocation: file,\n            index: {\n              location: index || makeIndex(file, '.bai'),\n              indexType: makeIndexType(indexName, 'CSI', 'BAI'),\n            },\n          }\n        } else if (\n          testAdapter(fileName, /\\.cram$/i, adapterHint, 'CramAdapter')\n        ) {\n          return {\n            type: 'CramAdapter',\n            cramLocation: file,\n            craiLocation: index || makeIndex(file, '.crai'),\n          }\n        } else {\n          return adapterGuesser(file, index, adapterHint)\n        }\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'BamAdapter' || adapterName === 'CramAdapter') {\n          return 'AlignmentsTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config HtsgetBamAdapter\n * Used to fetch data from Htsget endpoints in BAM format, using the gmod/bam library\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HtsgetBamAdapter = ConfigurationSchema(\n  'HtsgetBamAdapter',\n  {\n    /**\n     * #slot\n     */\n    htsgetBase: {\n      type: 'string',\n      description: 'the base URL to fetch from',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    htsgetTrackId: {\n      type: 'string',\n      description: 'the trackId, which is appended to the base URL',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      description:\n        'sequence data adapter, used to calculate SNPs when BAM reads lacking MD tags',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default HtsgetBamAdapter\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function HtsgetBamAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'HtsgetBamAdapter',\n      displayName: 'Htsget BAM adapter',\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      configSchema,\n      getAdapterClass: () => import('./HtsgetBamAdapter').then(r => r.default),\n    })\n  })\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearAlignmentsDisplayModel } from '../model'\n\nconst useStyles = makeStyles()({\n  resizeHandle: {\n    height: 5,\n    position: 'absolute',\n    zIndex: 2,\n  },\n})\n\nconst AlignmentsDisplay = observer(function AlignmentsDisplay({\n  model,\n}: {\n  model: LinearAlignmentsDisplayModel\n}) {\n  const { PileupDisplay, SNPCoverageDisplay } = model\n  const { classes } = useStyles()\n  if (!SNPCoverageDisplay) {\n    return null\n  }\n  const top = SNPCoverageDisplay.height ?? 100\n  return (\n    <div\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      style={{ position: 'relative' }}\n    >\n      <div data-testid=\"Blockset-snpcoverage\">\n        <SNPCoverageDisplay.RenderingComponent model={SNPCoverageDisplay} />\n      </div>\n      <ResizeHandle\n        onDrag={delta => {\n          SNPCoverageDisplay.setHeight(SNPCoverageDisplay.height + delta)\n          return delta\n        }}\n        className={classes.resizeHandle}\n        style={{ top: top - 4 }}\n      />\n\n      <div\n        data-testid=\"Blockset-pileup\"\n        style={{\n          position: 'absolute',\n          top,\n        }}\n      >\n        <PileupDisplay.RenderingComponent model={PileupDisplay} />\n      </div>\n    </div>\n  )\n})\n\nexport default AlignmentsDisplay\n","import type PluginManager from '@jbrowse/core/PluginManager'\n\nexport function getLowerPanelDisplays(pluginManager: PluginManager) {\n  return pluginManager\n    .getDisplayElements()\n    .filter(f => f.subDisplay?.type === 'LinearAlignmentsDisplay')\n    .filter(f => f.subDisplay?.lowerPanel)\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport deepEqual from 'fast-deep-equal'\nimport { autorun, when } from 'mobx'\nimport { addDisposer, getSnapshot, isAlive, types } from 'mobx-state-tree'\n\nimport { LinearAlignmentsDisplayMixin } from './alignmentsModel'\nimport { getLowerPanelDisplays } from './util'\n\nimport type { FilterBy } from '../shared/types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport type { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { Instance } from 'mobx-state-tree'\n\nconst minDisplayHeight = 20\n\nfunction preCheck(self: LinearAlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  return (\n    PileupDisplay ||\n    isAlive(PileupDisplay) ||\n    SNPCoverageDisplay ||\n    isAlive(SNPCoverageDisplay)\n  )\n}\n\nfunction propagateColorBy(self: LinearAlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  if (!preCheck(self) || !PileupDisplay.colorBy) {\n    return\n  }\n  if (!deepEqual(PileupDisplay.colorBy, SNPCoverageDisplay.colorBy)) {\n    SNPCoverageDisplay.setColorScheme({\n      ...PileupDisplay.colorBy,\n    })\n  }\n}\n\nfunction propagateFilterBy(self: LinearAlignmentsDisplayModel) {\n  const { PileupDisplay, SNPCoverageDisplay } = self\n  if (!preCheck(self) || !PileupDisplay.filterBy) {\n    return\n  }\n  if (!deepEqual(PileupDisplay.filterBy, SNPCoverageDisplay.filterBy)) {\n    SNPCoverageDisplay.setFilterBy({\n      ...PileupDisplay.filterBy,\n    })\n  }\n}\n\n/**\n * #stateModel LinearAlignmentsDisplay\n * extends\n * - [BaseDisplay](../basedisplay)\n * - [LinearAlignmentsDisplayMixin](../linearalignmentsdisplaymixin)\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearAlignmentsDisplay',\n      BaseDisplay,\n      LinearAlignmentsDisplayMixin(pluginManager, configSchema),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      scrollTop: 0,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n\n      /**\n       * #action\n       */\n      setSNPCoverageHeight(n: number) {\n        self.snpCovHeight = n\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get height() {\n        return self.heightPreConfig ?? getConf(self, 'height')\n      },\n\n      /**\n       * #getter\n       */\n      get featureIdUnderMouse() {\n        return (\n          self.PileupDisplay.featureIdUnderMouse ||\n          self.SNPCoverageDisplay.featureIdUnderMouse\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get pileupConf() {\n        const conf = getConf(self, 'pileupDisplay')\n        return {\n          ...conf,\n          type: self.lowerPanelType,\n          displayId: `${self.configuration.displayId}_${self.lowerPanelType}_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n        }\n      },\n\n      /**\n       * #method\n       */\n      getFeatureByID(blockKey: string, id: string) {\n        return self.PileupDisplay.getFeatureByID(blockKey, id)\n      },\n      /**\n       * #method\n       */\n      searchFeatureByID(id: string) {\n        return self.PileupDisplay.searchFeatureByID?.(id)\n      },\n\n      /**\n       * #getter\n       */\n      get features() {\n        return self.PileupDisplay.features\n      },\n\n      /**\n       * #getter\n       */\n      get DisplayBlurb() {\n        return self.PileupDisplay?.DisplayBlurb\n      },\n\n      /**\n       * #getter\n       */\n      get sortedBy() {\n        return self.PileupDisplay.sortedBy\n      },\n\n      /**\n       * #getter\n       */\n      get coverageConf() {\n        const conf = getConf(self, 'snpCoverageDisplay')\n        return {\n          ...conf,\n          displayId: `${self.configuration.displayId}_snpcoverage_xyz`, // xyz to avoid someone accidentally naming the displayId similar to this\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSNPCoverageDisplay(configuration: AnyConfigurationModel) {\n        self.SNPCoverageDisplay = {\n          type: 'LinearSNPCoverageDisplay',\n          configuration,\n          height: self.snpCovHeight,\n        }\n      },\n      /**\n       * #action\n       */\n      setFeatureDensityStatsLimit(stats?: FeatureDensityStats) {\n        self.PileupDisplay.setFeatureDensityStatsLimit(stats)\n        self.SNPCoverageDisplay.setFeatureDensityStatsLimit(stats)\n      },\n\n      /**\n       * #action\n       */\n      setPileupDisplay(configuration: AnyConfigurationModel) {\n        self.PileupDisplay = {\n          type: configuration.type || 'LinearPileupDisplay',\n          configuration,\n        }\n      },\n      /**\n       * #action\n       */\n      setHeight(n: number) {\n        self.heightPreConfig = Math.max(n, minDisplayHeight)\n        return self.heightPreConfig\n      },\n      /**\n       * #action\n       */\n      setFilterBy(filter: FilterBy) {\n        self.PileupDisplay.setFilterBy(filter)\n        self.SNPCoverageDisplay.setFilterBy(filter)\n      },\n      /**\n       * #action\n       */\n      setLowerPanelType(type: string) {\n        self.lowerPanelType = type\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const {\n              SNPCoverageDisplay,\n              PileupDisplay,\n              coverageConf,\n              pileupConf,\n            } = self\n\n            if (!SNPCoverageDisplay) {\n              self.setSNPCoverageDisplay(coverageConf)\n            } else if (\n              !deepEqual(\n                coverageConf,\n                getSnapshot(SNPCoverageDisplay.configuration),\n              )\n            ) {\n              SNPCoverageDisplay.setHeight(self.snpCovHeight)\n              SNPCoverageDisplay.setConfig(self.coverageConf)\n            }\n\n            if (!PileupDisplay || self.lowerPanelType !== PileupDisplay.type) {\n              self.setPileupDisplay(pileupConf)\n            } else if (\n              !deepEqual(pileupConf, getSnapshot(PileupDisplay.configuration))\n            ) {\n              PileupDisplay.setConfig(self.pileupConf)\n            }\n\n            propagateColorBy(self as LinearAlignmentsDisplayModel)\n            propagateFilterBy(self as LinearAlignmentsDisplayModel)\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            self.setSNPCoverageHeight(self.SNPCoverageDisplay.height)\n          }),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            self.PileupDisplay.setHeight(\n              self.height - self.SNPCoverageDisplay.height,\n            )\n          }),\n        )\n      },\n      /**\n       * #action\n       */\n      async renderSvg(opts: { rasterizeLayers?: boolean }) {\n        const pileupHeight = self.height - self.SNPCoverageDisplay.height\n        await when(\n          () =>\n            !self.PileupDisplay.renderProps().notReady &&\n            !self.SNPCoverageDisplay.renderProps().notReady,\n        )\n        return (\n          <>\n            <g>{await self.SNPCoverageDisplay.renderSvg(opts)}</g>\n            <g transform={`translate(0 ${self.SNPCoverageDisplay.height})`}>\n              {await self.PileupDisplay.renderSvg({\n                ...opts,\n                overrideHeight: pileupHeight,\n              })}\n            </g>\n          </>\n        )\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems(): MenuItem[] {\n          if (!self.PileupDisplay) {\n            return []\n          }\n          const extra = getLowerPanelDisplays(pluginManager).map(d => ({\n            type: 'radio',\n            label: d.displayName,\n            checked: d.name === self.PileupDisplay.type,\n            onClick: () => {\n              self.setLowerPanelType(d.name)\n            },\n          }))\n          return [\n            ...superTrackMenuItems(),\n            {\n              type: 'subMenu',\n              label: 'Pileup settings',\n              subMenu: self.PileupDisplay.trackMenuItems(),\n            },\n            {\n              type: 'subMenu',\n              label: 'SNPCoverage settings',\n              subMenu: self.SNPCoverageDisplay.trackMenuItems(),\n            },\n            {\n              type: 'subMenu',\n              label: 'Replace lower panel with...',\n              subMenu: extra,\n            },\n          ]\n        },\n      }\n    })\n    .preProcessSnapshot(snap => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!snap) {\n        return snap\n      }\n      // @ts-expect-error\n      const { height, ...rest } = snap\n      return { heightPreConfig: height, ...rest }\n    })\n}\n\nexport default stateModelFactory\n\nexport type LinearAlignmentsDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearAlignmentsDisplayModel =\n  Instance<LinearAlignmentsDisplayStateModel>\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport { getLowerPanelDisplays } from './util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearAlignmentsDisplayMixin\n */\nexport function LinearAlignmentsDisplayMixin(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types.model({\n    /**\n     * #property\n     * refers to LinearPileupDisplay sub-display model\n     */\n    PileupDisplay: types.maybe(\n      types.union(\n        ...getLowerPanelDisplays(pluginManager).map(f => f.stateModel),\n      ),\n    ),\n    /**\n     * #property\n     * refers to LinearSNPCoverageDisplay sub-display model\n     */\n    SNPCoverageDisplay: types.maybe(\n      pluginManager.getDisplayType('LinearSNPCoverageDisplay')!.stateModel,\n    ),\n    /**\n     * #property\n     */\n    snpCovHeight: 45,\n    /**\n     * #property\n     */\n    type: types.literal('LinearAlignmentsDisplay'),\n    /**\n     * #property\n     */\n    configuration: ConfigurationReference(configSchema),\n    /**\n     * #property\n     */\n    heightPreConfig: types.maybe(types.number),\n    /**\n     * #property\n     */\n    userFeatureScreenDensity: types.maybe(types.number),\n    /**\n     * #property\n     */\n    lowerPanelType: 'LinearPileupDisplay',\n  })\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport ReactComponent from './components/AlignmentsDisplay'\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearAlignmentsDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearAlignmentsDisplay',\n      displayName: 'Alignments display (combination)',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearAlignmentsDisplay\n * has a \"pileup\" sub-display, where you can see individual reads and a\n * quantitative \"snpcoverage\" sub-display track showing SNP frequencies\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport default function configModelFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearAlignmentsDisplay',\n    {\n      /**\n       * #slot\n       */\n      pileupDisplay: pluginManager.getDisplayType('LinearPileupDisplay')!\n        .configSchema,\n\n      /**\n       * #slot\n       */\n      snpCoverageDisplay: pluginManager.getDisplayType(\n        'LinearSNPCoverageDisplay',\n      )!.configSchema,\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 250,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport { defaultFilterFlags } from '../shared/util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearPileupDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearPileupDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['pileup']),\n        defaultValue: 'pileup',\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        PileupRenderer:\n          pluginManager.getRendererType('PileupRenderer')!.configSchema,\n      }),\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      colorBy: {\n        type: 'frozen',\n        description: 'color scheme to use',\n        defaultValue: {\n          type: 'normal',\n        },\n      },\n\n      /**\n       * #slot\n       */\n      filterBy: {\n        type: 'frozen',\n        description: 'default filters to use',\n        defaultValue: defaultFilterFlags,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { SortedBy } from '../../shared/types'\n\nconst LinearPileupDisplayBlurb = observer(function ({\n  model,\n}: {\n  model: {\n    sortedBy?: SortedBy\n  }\n}) {\n  const { sortedBy } = model\n  return sortedBy ? (\n    <div data-testid={`blurb-${sortedBy}`}>\n      <Typography color=\"secondary\" variant=\"caption\">\n        {`Sorted by ${sortedBy.tag ?? sortedBy.type} at ${\n          sortedBy.refName\n        }:${sortedBy.pos}`}\n      </Typography>\n    </div>\n  ) : null\n})\n\nexport default LinearPileupDisplayBlurb\n","import { lazy } from 'react'\n\nimport {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  SimpleFeature,\n  getContainingTrack,\n  getContainingView,\n  getEnv,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\nimport copy from 'copy-to-clipboard'\nimport { autorun, observable } from 'mobx'\nimport { addDisposer, cast, isAlive, types } from 'mobx-state-tree'\n\nimport { createAutorun } from '../util'\nimport LinearPileupDisplayBlurb from './components/LinearPileupDisplayBlurb'\nimport { getUniqueTags } from '../shared/getUniqueTags'\n\nimport type { ColorBy, FilterBy } from '../shared/types'\nimport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport type { Feature, SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// lazies\nconst FilterByTagDialog = lazy(\n  () => import('../shared/components/FilterByTagDialog'),\n)\nconst ColorByTagDialog = lazy(() => import('./components/ColorByTagDialog'))\nconst SetFeatureHeightDialog = lazy(\n  () => import('./components/SetFeatureHeightDialog'),\n)\nconst SetMaxHeightDialog = lazy(() => import('./components/SetMaxHeightDialog'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([\n  ['pileup', 'PileupRenderer'],\n  ['svg', 'SvgFeatureRenderer'],\n])\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel SharedLinearPileupDisplayMixin\n * #category display\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport function SharedLinearPileupDisplayMixin(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        featureHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        noSpacing: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        fadeLikelihood: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackMaxHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        colorBySetting: types.frozen<ColorBy | undefined>(),\n        /**\n         * #property\n         */\n        filterBySetting: types.frozen<FilterBy | undefined>(),\n        /**\n         * #property\n         */\n        jexlFilters: types.optional(types.array(types.string), []),\n        /**\n         * #property\n         */\n        hideSmallIndelsSetting: types.maybe(types.boolean),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      colorTagMap: observable.map<string, string>({}),\n      /**\n       * #volatile\n       */\n      featureUnderMouseVolatile: undefined as undefined | Feature,\n      /**\n       * #volatile\n       */\n      tagsReady: false,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get colorBy() {\n        return self.colorBySetting ?? getConf(self, 'colorBy')\n      },\n\n      /**\n       * #getter\n       */\n      get filterBy() {\n        return self.filterBySetting ?? getConf(self, 'filterBy')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get autorunReady() {\n        const view = getContainingView(self) as LGV\n        return view.initialized && self.statsReadyAndRegionNotTooLarge\n      },\n\n      /**\n       * #getter\n       */\n      get hideSmallIndels() {\n        return self.hideSmallIndelsSetting\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setTagsReady(flag: boolean) {\n        self.tagsReady = flag\n      },\n\n      /**\n       * #action\n       */\n      setMaxHeight(n?: number) {\n        self.trackMaxHeight = n\n      },\n\n      /**\n       * #action\n       */\n      setFeatureHeight(n?: number) {\n        self.featureHeight = n\n      },\n\n      /**\n       * #action\n       */\n      setNoSpacing(flag?: boolean) {\n        self.noSpacing = flag\n      },\n\n      /**\n       * #action\n       */\n      setColorScheme(colorScheme: ColorBy) {\n        self.colorTagMap = observable.map({})\n        self.colorBySetting = {\n          ...colorScheme,\n        }\n        if (colorScheme.tag) {\n          self.tagsReady = false\n        }\n      },\n\n      /**\n       * #action\n       */\n      updateColorTagMap(uniqueTag: string[]) {\n        // pale color scheme\n        // https://cran.r-project.org/web/packages/khroma/vignettes/tol.html\n        // e.g. \"tol_light\"\n        const colorPalette = [\n          '#BBCCEE',\n          'pink',\n          '#CCDDAA',\n          '#EEEEBB',\n          '#FFCCCC',\n          'lightblue',\n          'lightgreen',\n          'tan',\n          '#CCEEFF',\n          'lightsalmon',\n        ]\n\n        uniqueTag.forEach(value => {\n          if (!self.colorTagMap.has(value)) {\n            const totalKeys = [...self.colorTagMap.keys()].length\n            self.colorTagMap.set(value, colorPalette[totalKeys]!)\n          }\n        })\n      },\n\n      /**\n       * #action\n       */\n      setFeatureUnderMouse(feat?: Feature) {\n        self.featureUnderMouseVolatile = feat\n      },\n\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'AlignmentsFeatureWidget',\n            'alignmentFeature',\n            {\n              featureData: feature.toJSON(),\n              view: getContainingView(self),\n              track: getContainingTrack(self),\n            },\n          )\n          session.showWidget(featureWidget)\n        }\n        session.setSelection(feature)\n      },\n\n      /**\n       * #action\n       * uses copy-to-clipboard and generates notification\n       */\n      copyFeatureToClipboard(feature: Feature) {\n        const { uniqueId, ...rest } = feature.toJSON()\n        const session = getSession(self)\n        copy(JSON.stringify(rest, null, 4))\n        session.notify('Copied to clipboard', 'success')\n      },\n\n      /**\n       * #action\n       */\n      setConfig(conf: AnyConfigurationModel) {\n        self.configuration = conf\n      },\n\n      /**\n       * #action\n       */\n      setFilterBy(filter: FilterBy) {\n        self.filterBySetting = {\n          ...filter,\n        }\n      },\n\n      /**\n       * #action\n       */\n      setJexlFilters(filters: string[]) {\n        self.jexlFilters = cast(filters)\n      },\n\n      /**\n       * #action\n       */\n      setHideSmallIndels(arg: boolean) {\n        self.hideSmallIndelsSetting = arg\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const {\n          featureHeight: height,\n          noSpacing,\n          hideSmallIndels,\n          trackMaxHeight: maxHeight,\n          rendererTypeName,\n        } = self\n        const configBlob = getConf(self, ['renderers', rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            ...(hideSmallIndels !== undefined ? { hideSmallIndels } : {}),\n            ...(height !== undefined ? { height } : {}),\n            ...(noSpacing !== undefined ? { noSpacing } : {}),\n            ...(maxHeight !== undefined ? { maxHeight } : {}),\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get maxHeight() {\n        return readConfObject(self.rendererConfig, 'maxHeight')\n      },\n\n      /**\n       * #getter\n       */\n      get featureHeightSetting() {\n        return readConfObject(self.rendererConfig, 'height')\n      },\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        return self.featureUnderMouseVolatile\n      },\n      /**\n       * #getter\n       */\n      renderReady() {\n        return self.tagsReady\n      },\n      /**\n       * #getter\n       */\n      get filters() {\n        return new SerializableFilterChain({ filters: self.jexlFilters })\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n\n      return {\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          const viewName = getConf(self, 'defaultRendering')\n          const rendererType = rendererTypes.get(viewName)\n          if (!rendererType) {\n            throw new Error(`unknown alignments view name ${viewName}`)\n          }\n          return rendererType\n        },\n\n        /**\n         * #method\n         */\n        contextMenuItems() {\n          const feat = self.contextMenuFeature\n          return feat\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: (): void => {\n                    self.clearFeatureSelection()\n                    self.selectFeature(feat)\n                  },\n                },\n                {\n                  label: 'Copy info to clipboard',\n                  icon: ContentCopyIcon,\n                  onClick: (): void => {\n                    self.copyFeatureToClipboard(feat)\n                  },\n                },\n              ]\n            : []\n        },\n\n        /**\n         * #getter\n         */\n        get DisplayBlurb() {\n          return LinearPileupDisplayBlurb\n        },\n        /**\n         * #method\n         */\n        renderPropsPre() {\n          const { colorTagMap, colorBy, filterBy, rpcDriverName } = self\n          const superProps = superRenderProps()\n          return {\n            ...superProps,\n            notReady: superProps.notReady || !self.renderReady(),\n            rpcDriverName,\n            displayModel: self,\n            colorBy,\n            filterBy,\n            filters: self.filters,\n            colorTagMap: Object.fromEntries(colorTagMap.toJSON()),\n            config: self.rendererConfig,\n            async onFeatureClick(_: unknown, featureId?: string) {\n              const session = getSession(self)\n              const { rpcManager } = session\n              try {\n                const f = featureId || self.featureIdUnderMouse\n                if (!f) {\n                  self.clearFeatureSelection()\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const { feature } = (await rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId: f,\n                      sessionId,\n                      layoutId: getContainingTrack(self).id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized | undefined }\n\n                  if (isAlive(self) && feature) {\n                    self.selectFeature(new SimpleFeature(feature))\n                  }\n                }\n              } catch (e) {\n                console.error(e)\n                session.notify(`${e}`)\n              }\n            },\n\n            onClick() {\n              self.clearFeatureSelection()\n            },\n            // similar to click but opens a menu with further options\n            async onFeatureContextMenu(_: unknown, featureId?: string) {\n              const session = getSession(self)\n              const { rpcManager } = session\n              try {\n                const f = featureId || self.featureIdUnderMouse\n                if (!f) {\n                  self.clearFeatureSelection()\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const { feature } = (await rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId: f,\n                      sessionId,\n                      layoutId: getContainingTrack(self).id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized | undefined }\n\n                  if (feature) {\n                    self.setContextMenuFeature(new SimpleFeature(feature))\n                  }\n                }\n              } catch (e) {\n                console.error(e)\n                session.notify(`${e}`)\n              }\n            },\n          }\n        },\n\n        /**\n         * #method\n         */\n        colorSchemeSubMenuItems() {\n          return [\n            {\n              label: 'Normal',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'normal',\n                })\n              },\n            },\n            {\n              label: 'Mapping quality',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'mappingQuality',\n                })\n              },\n            },\n            {\n              label: 'Strand',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'strand',\n                })\n              },\n            },\n            {\n              label: 'Per-base quality',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'perBaseQuality',\n                })\n              },\n            },\n            {\n              label: 'Per-base lettering',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'perBaseLettering',\n                })\n              },\n            },\n            {\n              label: 'First-of-pair strand',\n              onClick: () => {\n                self.setColorScheme({\n                  type: 'stranded',\n                })\n              },\n            },\n            {\n              label: 'Color by tag...',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  ColorByTagDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Set feature height...',\n              priority: 1,\n              subMenu: [\n                {\n                  label: 'Normal',\n                  onClick: () => {\n                    self.setFeatureHeight(7)\n                    self.setNoSpacing(false)\n                  },\n                },\n                {\n                  label: 'Compact',\n                  onClick: () => {\n                    self.setFeatureHeight(2)\n                    self.setNoSpacing(true)\n                  },\n                },\n                {\n                  label: 'Manually set height',\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SetFeatureHeightDialog,\n                      {\n                        model: self,\n                        handleClose,\n                      },\n                    ])\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Hide small indels (<10bp)',\n              priority: -1,\n              type: 'checkbox',\n              checked: self.hideSmallIndels,\n              onClick: () => {\n                self.setHideSmallIndels(!self.hideSmallIndels)\n              },\n            },\n            {\n              label: 'Set max height...',\n              priority: -1,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetMaxHeightDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n            {\n              label: 'Filter by...',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  FilterByTagDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n    .views(self => ({\n      renderProps() {\n        return self.renderPropsPre()\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        createAutorun(\n          self,\n          async () => {\n            const view = getContainingView(self) as LGV\n            if (!self.autorunReady) {\n              return\n            }\n\n            const { colorBy, tagsReady } = self\n            const { staticBlocks } = view\n            if (colorBy?.tag && !tagsReady) {\n              const vals = await getUniqueTags({\n                self,\n                tag: colorBy.tag,\n                blocks: staticBlocks,\n              })\n              if (isAlive(self)) {\n                self.updateColorTagMap(vals)\n                self.setTagsReady(true)\n              }\n            } else {\n              self.setTagsReady(true)\n            }\n          },\n          { delay: 1000 },\n        )\n\n        // autorun synchronizes featureUnderMouse with featureIdUnderMouse\n        // asynchronously. this is needed due to how we do not serialize all\n        // features from the BAM/CRAM over the rpc\n        addDisposer(\n          self,\n          autorun(async () => {\n            const session = getSession(self)\n            try {\n              const featureId = self.featureIdUnderMouse\n              if (self.featureUnderMouse?.id() !== featureId) {\n                if (!featureId) {\n                  self.setFeatureUnderMouse(undefined)\n                } else {\n                  const sessionId = getRpcSessionId(self)\n                  const { feature } = (await session.rpcManager.call(\n                    sessionId,\n                    'CoreGetFeatureDetails',\n                    {\n                      featureId,\n                      sessionId,\n                      layoutId: getContainingTrack(self).id,\n                      rendererType: 'PileupRenderer',\n                    },\n                  )) as { feature: SimpleFeatureSerialized | undefined }\n\n                  // check featureIdUnderMouse is still the same as the\n                  // feature.id that was returned e.g. that the user hasn't\n                  // moused over to a new position during the async operation\n                  // above\n                  if (\n                    isAlive(self) &&\n                    feature &&\n                    self.featureIdUnderMouse === feature.uniqueId\n                  ) {\n                    self.setFeatureUnderMouse(new SimpleFeature(feature))\n                  }\n                }\n              }\n            } catch (e) {\n              console.error(e)\n              session.notifyError(`${e}`, e)\n            }\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (snap) {\n        // @ts-expect-error\n        const { colorBy, colorBySetting, filterBySetting, filterBy, ...rest } =\n          snap\n        return {\n          ...rest,\n          filterBySetting: filterBySetting || filterBy,\n          colorBySetting: colorBySetting || colorBy,\n        }\n      }\n      return snap\n    })\n}\n","import { lazy } from 'react'\n\nimport {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { getContainingView, getEnv, getSession } from '@jbrowse/core/util'\nimport ColorLensIcon from '@mui/icons-material/ColorLens'\nimport SwapVertIcon from '@mui/icons-material/SwapVert'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport WorkspacesIcon from '@mui/icons-material/Workspaces'\nimport { observable } from 'mobx'\nimport { types } from 'mobx-state-tree'\n\nimport { SharedLinearPileupDisplayMixin } from './SharedLinearPileupDisplayMixin'\nimport { getColorForModification, modificationData } from '../util'\n\nimport type {\n  ModificationType,\n  ModificationTypeWithColor,\n  SortedBy,\n} from '../shared/types'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst SortByTagDialog = lazy(() => import('./components/SortByTagDialog'))\nconst GroupByDialog = lazy(() => import('./components/GroupByDialog'))\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel LinearPileupDisplay\n * #category display\n * extends\n * - [SharedLinearPileupDisplayMixin](../sharedlinearpileupdisplaymixin)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearPileupDisplay',\n      SharedLinearPileupDisplayMixin(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearPileupDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        showSoftClipping: false,\n        /**\n         * #property\n         */\n        mismatchAlpha: types.maybe(types.boolean),\n\n        /**\n         * #property\n         */\n        sortedBy: types.frozen<SortedBy | undefined>(),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      sortReady: false,\n      /**\n       * #volatile\n       */\n      currSortBpPerPx: 0,\n      /**\n       * #volatile\n       */\n      visibleModifications: observable.map<string, ModificationTypeWithColor>(\n        {},\n      ),\n      /**\n       * #volatile\n       */\n      modificationsReady: false,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setCurrSortBpPerPx(n: number) {\n        self.currSortBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      updateVisibleModifications(uniqueModifications: ModificationType[]) {\n        uniqueModifications.forEach(value => {\n          if (!self.visibleModifications.has(value.type)) {\n            self.visibleModifications.set(value.type, {\n              ...value,\n              color: getColorForModification(value.type),\n            })\n          }\n        })\n      },\n      /**\n       * #action\n       */\n      setModificationsReady(flag: boolean) {\n        self.modificationsReady = flag\n      },\n      /**\n       * #action\n       */\n      setSortReady(flag: boolean) {\n        self.sortReady = flag\n      },\n      /**\n       * #action\n       */\n      clearSelected() {\n        self.sortedBy = undefined\n      },\n      /**\n       * #action\n       */\n      toggleSoftClipping() {\n        self.showSoftClipping = !self.showSoftClipping\n      },\n      /**\n       * #action\n       */\n      toggleMismatchAlpha() {\n        self.mismatchAlpha = !self.mismatchAlpha\n      },\n      /**\n       * #action\n       */\n      setSortedBy(type: string, tag?: string) {\n        const { centerLineInfo } = getContainingView(self) as LGV\n        if (!centerLineInfo) {\n          return\n        }\n        const { refName, assemblyName, offset } = centerLineInfo\n        const centerBp = Math.round(offset) + 1\n\n        if (centerBp < 0 || !refName) {\n          return\n        }\n\n        self.sortReady = false\n        self.sortedBy = {\n          type,\n          pos: centerBp,\n          refName,\n          assemblyName,\n          tag,\n        }\n      },\n      /**\n       * #action\n       * overrides base from SharedLinearPileupDisplay to make sortReady false\n       * since changing feature height destroys the sort-induced layout\n       */\n      setFeatureHeight(n?: number) {\n        self.sortReady = false\n        self.featureHeight = n\n      },\n    }))\n    .actions(self => {\n      // resets the sort object and refresh whole display on reload\n      const superReload = self.reload\n\n      return {\n        /**\n         * #action\n         */\n        reload() {\n          self.clearSelected()\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get visibleModificationTypes() {\n        return [...self.visibleModifications.keys()]\n      },\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const {\n          featureHeight,\n          noSpacing,\n          trackMaxHeight,\n          mismatchAlpha,\n          rendererTypeName,\n          hideSmallIndels,\n        } = self\n        const configBlob = getConf(self, ['renderers', rendererTypeName]) || {}\n        return self.rendererType.configSchema.create(\n          {\n            ...configBlob,\n            ...(featureHeight !== undefined ? { height: featureHeight } : {}),\n            ...(hideSmallIndels !== undefined ? { hideSmallIndels } : {}),\n            ...(noSpacing !== undefined ? { noSpacing } : {}),\n            ...(mismatchAlpha !== undefined ? { mismatchAlpha } : {}),\n            ...(trackMaxHeight !== undefined\n              ? { maxHeight: trackMaxHeight }\n              : {}),\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => {\n      const { renderReady: superRenderReady } = self\n      return {\n        /**\n         * #getter\n         */\n        get mismatchAlphaSetting() {\n          return readConfObject(self.rendererConfig, 'mismatchAlpha')\n        },\n        /**\n         * #method\n         */\n        renderReady() {\n          const view = getContainingView(self) as LGV\n          return (\n            self.modificationsReady &&\n            self.currSortBpPerPx === view.bpPerPx &&\n            superRenderReady()\n          )\n        },\n      }\n    })\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderPropsPre: superRenderPropsPre,\n        renderProps: superRenderProps,\n        colorSchemeSubMenuItems: superColorSchemeSubMenuItems,\n      } = self\n\n      return {\n        /**\n         * #method\n         */\n        renderPropsPre() {\n          const { sortedBy, showSoftClipping, visibleModifications } = self\n          const superProps = superRenderPropsPre()\n          return {\n            ...superProps,\n            showSoftClip: showSoftClipping,\n            sortedBy,\n            visibleModifications: Object.fromEntries(\n              visibleModifications.toJSON(),\n            ),\n          }\n        },\n        /**\n         * #method\n         */\n        renderProps() {\n          const { sortReady } = self\n          const result = superRenderProps()\n          return {\n            ...result,\n            notReady: result.notReady || !sortReady,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n\n            {\n              label: 'Sort by...',\n              icon: SwapVertIcon,\n              disabled: self.showSoftClipping,\n              subMenu: [\n                ...['Start location', 'Read strand', 'Base pair'].map(\n                  option => ({\n                    label: option,\n                    onClick: () => {\n                      self.setSortedBy(option)\n                    },\n                  }),\n                ),\n                {\n                  label: 'Sort by tag...',\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SortByTagDialog,\n                      {\n                        model: self,\n                        handleClose,\n                      },\n                    ])\n                  },\n                },\n                {\n                  label: 'Clear sort',\n                  onClick: () => {\n                    self.clearSelected()\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Color by...',\n              icon: ColorLensIcon,\n              subMenu: [\n                {\n                  label: 'Pair orientation',\n                  onClick: () => {\n                    self.setColorScheme({\n                      type: 'pairOrientation',\n                    })\n                  },\n                },\n                {\n                  label: 'Modifications',\n                  type: 'subMenu',\n                  subMenu: self.modificationsReady\n                    ? [\n                        {\n                          label: 'All modifications',\n                          onClick: () => {\n                            self.setColorScheme({\n                              type: 'modifications',\n                            })\n                          },\n                        },\n                        ...self.visibleModificationTypes.map(key => ({\n                          label: `Show only ${modificationData[key]?.name || key}`,\n                          onClick: () => {\n                            self.setColorScheme({\n                              type: 'modifications',\n                              modifications: {\n                                isolatedModification: key,\n                              },\n                            })\n                          },\n                        })),\n                        { type: 'divider' },\n                        {\n                          label: 'All modifications (<50% prob colored blue)',\n                          onClick: () => {\n                            self.setColorScheme({\n                              type: 'modifications',\n                              modifications: {\n                                twoColor: true,\n                              },\n                            })\n                          },\n                        },\n                        ...self.visibleModificationTypes.map(key => ({\n                          label: `Show only ${modificationData[key]?.name || key} (<50% prob colored blue)`,\n                          onClick: () => {\n                            self.setColorScheme({\n                              type: 'modifications',\n                              modifications: {\n                                isolatedModification: key,\n                                twoColor: true,\n                              },\n                            })\n                          },\n                        })),\n                        { type: 'divider' },\n                        {\n                          label: 'All reference CpGs',\n                          onClick: () => {\n                            self.setColorScheme({\n                              type: 'methylation',\n                            })\n                          },\n                        },\n                      ]\n                    : [\n                        {\n                          label: 'Loading modifications...',\n                          onClick: () => {},\n                        },\n                      ],\n                },\n                {\n                  label: 'Insert size',\n                  onClick: () => {\n                    self.setColorScheme({\n                      type: 'insertSize',\n                    })\n                  },\n                },\n                ...superColorSchemeSubMenuItems(),\n              ],\n            },\n            {\n              label: 'Group by...',\n              icon: WorkspacesIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  GroupByDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n            {\n              label: 'Show soft clipping',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showSoftClipping,\n              onClick: () => {\n                self.toggleSoftClipping()\n                // if toggling from off to on, will break sort for this track\n                // so clear it\n                if (self.showSoftClipping) {\n                  self.clearSelected()\n                }\n              },\n            },\n            {\n              label: 'Fade mismatches by quality',\n              type: 'checkbox',\n              checked: self.mismatchAlphaSetting,\n              onClick: () => {\n                self.toggleMismatchAlpha()\n              },\n            },\n          ] as const\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('./doAfterAttach')\n            doAfterAttach(self)\n          } catch (e) {\n            getSession(self).notifyError(`${e}`, e)\n            console.error(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearPileupDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearPileupDisplayModel = Instance<LinearPileupDisplayStateModel>\nexport default stateModelFactory\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearPileupDisplay',\n      displayName: 'Pileup display',\n      configSchema,\n      stateModel: modelFactory(configSchema),\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { default as linearPileupDisplayStateModelFactory } from './model'\nexport { default as linearPileupDisplayConfigSchemaFactory } from './configSchema'\nexport { SharedLinearPileupDisplayMixin } from './SharedLinearPileupDisplayMixin'\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  FeatureDensityMixin,\n  TrackHeightMixin,\n} from '@jbrowse/plugin-linear-genome-view'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport { types } from 'mobx-state-tree'\n\nimport type { ChainData } from '../shared/fetchChains'\nimport type { ColorBy, FilterBy } from '../shared/types'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst FilterByTagDialog = lazy(\n  () => import('../shared/components/FilterByTagDialog'),\n)\n\n/**\n * #stateModel LinearReadArcsDisplay\n * the arc display is a non-block-based track, so draws to a single canvas and\n * can connect multiple regions\n * extends\n * - [BaseDisplay](../basedisplay)\n * - [TrackHeightMixin](../trackheightmixin)\n * - [FeatureDensityMixin](../featuredensitymixin)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReadArcsDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReadArcsDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n\n        /**\n         * #property\n         */\n        lineWidth: types.maybe(types.number),\n\n        /**\n         * #property\n         */\n        jitter: types.maybe(types.number),\n\n        /**\n         * #property\n         */\n        colorBySetting: types.frozen<ColorBy | undefined>(),\n\n        /**\n         * #property\n         */\n        filterBySetting: types.frozen<FilterBy | undefined>(),\n\n        /**\n         * #property\n         */\n        drawInter: true,\n\n        /**\n         * #property\n         */\n        drawLongRange: true,\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      loading: false,\n      /**\n       * #volatile\n       */\n      chainData: undefined as ChainData | undefined,\n      /**\n       * #volatile\n       */\n      lastDrawnOffsetPx: undefined as number | undefined,\n      /**\n       * #volatile\n       */\n      lastDrawnBpPerPx: 0,\n      /**\n       * #volatile\n       */\n      ref: null as HTMLCanvasElement | null,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get colorBy() {\n        return self.colorBySetting ?? getConf(self, 'colorBy')\n      },\n      /**\n       * #getter\n       */\n      get filterBy() {\n        return self.filterBySetting ?? getConf(self, 'filterBy')\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLastDrawnOffsetPx(n: number) {\n        self.lastDrawnOffsetPx = n\n      },\n      /**\n       * #action\n       */\n      setLastDrawnBpPerPx(n: number) {\n        self.lastDrawnBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      setLoading(f: boolean) {\n        self.loading = f\n      },\n\n      /**\n       * #action\n       */\n      reload() {\n        self.error = undefined\n      },\n      /**\n       * #action\n       * internal, a reference to a HTMLCanvas because we use a autorun to draw\n       * the canvas\n       */\n      setRef(ref: HTMLCanvasElement | null) {\n        self.ref = ref\n      },\n\n      /**\n       * #action\n       */\n      setColorScheme(colorBy: { type: string }) {\n        self.colorBySetting = {\n          ...colorBy,\n        }\n      },\n\n      /**\n       * #action\n       */\n      setChainData(args: ChainData) {\n        self.chainData = args\n      },\n\n      /**\n       * #action\n       */\n      setDrawInter(f: boolean) {\n        self.drawInter = f\n      },\n\n      /**\n       * #action\n       */\n      setDrawLongRange(f: boolean) {\n        self.drawLongRange = f\n      },\n\n      /**\n       * #action\n       */\n      setFilterBy(filter: FilterBy) {\n        self.filterBySetting = {\n          ...filter,\n        }\n      },\n\n      /**\n       * #action\n       * thin, bold, extrabold, etc\n       */\n      setLineWidth(n: number) {\n        self.lineWidth = n\n      },\n\n      /**\n       * #action\n       * jitter val, helpful to jitter the x direction so you see better\n       * evidence when e.g. 100 long reads map to same x position\n       */\n      setJitter(n: number) {\n        self.jitter = n\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get drawn() {\n        return self.lastDrawnOffsetPx !== undefined\n      },\n      /**\n       * #getter\n       */\n      get lineWidthSetting() {\n        return self.lineWidth ?? getConf(self, 'lineWidth')\n      },\n\n      /**\n       * #getter\n       */\n      get jitterVal(): number {\n        return self.jitter ?? getConf(self, 'jitter')\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n      return {\n        /**\n         * #method\n         * only used to tell system it's ready for export\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            notReady: !self.chainData,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  FilterByTagDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n            {\n              label: 'Line width',\n              subMenu: [\n                {\n                  label: 'Thin',\n                  onClick: () => {\n                    self.setLineWidth(1)\n                  },\n                },\n                {\n                  label: 'Bold',\n                  onClick: () => {\n                    self.setLineWidth(2)\n                  },\n                },\n                {\n                  label: 'Extra bold',\n                  onClick: () => {\n                    self.setLineWidth(5)\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Jitter x-positions',\n              subMenu: [\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 0,\n                  label: 'None',\n                  onClick: () => {\n                    self.setJitter(0)\n                  },\n                },\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 2,\n                  label: 'Small',\n                  onClick: () => {\n                    self.setJitter(2)\n                  },\n                },\n                {\n                  type: 'checkbox',\n                  checked: self.jitterVal === 10,\n                  label: 'Large',\n                  onClick: () => {\n                    self.setJitter(10)\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Draw inter-region vertical lines',\n              type: 'checkbox',\n              checked: self.drawInter,\n              onClick: () => {\n                self.setDrawInter(!self.drawInter)\n              },\n            },\n            {\n              label: 'Draw long range connections',\n              type: 'checkbox',\n              checked: self.drawLongRange,\n              onClick: () => {\n                self.setDrawLongRange(!self.drawLongRange)\n              },\n            },\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Insert size ± 3σ and orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSizeAndOrientation' })\n                  },\n                },\n                {\n                  label: 'Insert size ± 3σ',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSize' })\n                  },\n                },\n                {\n                  label: 'Orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'orientation' })\n                  },\n                },\n                {\n                  label: 'Insert size gradient',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'gradient' })\n                  },\n                },\n              ],\n            },\n          ]\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: {\n        rasterizeLayers?: boolean\n      }): Promise<React.ReactNode> {\n        const { renderSvg } = await import('../shared/renderSvgUtil')\n        const { drawFeats } = await import('./drawFeats')\n        return renderSvg(self as LinearReadArcsDisplayModel, opts, drawFeats)\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('../shared/afterAttach')\n            const { drawFeats } = await import('./drawFeats')\n            doAfterAttach(self, drawFeats)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearReadArcsDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearReadArcsDisplayModel =\n  Instance<LinearReadArcsDisplayStateModel>\n\nexport default stateModelFactory\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaF from './configSchema'\nimport stateModelF from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearReadArcsDisplay',\n      displayName: 'Arc display',\n      configSchema,\n      stateModel: stateModelF(configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      ReactComponent: lazy(() => import('./components/ReactComponent')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\nimport { defaultFilterFlags } from '../shared/util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearReadArcsDisplay\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearReadArcsDisplay',\n    {\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      lineWidth: {\n        type: 'number',\n        description: 'set arc line width',\n        defaultValue: 1,\n      },\n\n      /**\n       * #slot\n       */\n      jitter: {\n        type: 'number',\n        description:\n          'jitters the x position so e.g. if many reads map to exact same x position, jittering makes it easy to see that there are many of them',\n        defaultValue: 0,\n      },\n\n      /**\n       * #slot\n       */\n      colorBy: {\n        type: 'frozen',\n        defaultValue: { type: 'insertSizeAndOrientation' },\n      },\n      /**\n       * #slot\n       */\n      filterBy: {\n        type: 'frozen',\n        defaultValue: defaultFilterFlags,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearReadCloudDisplay\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearReadCloudDisplay',\n    {\n      /**\n       * #slot\n       */\n      maxFeatureScreenDensity: {\n        type: 'number',\n        description: 'maximum features per pixel that is displayed in the view',\n        defaultValue: 5,\n      },\n\n      /**\n       * #slot\n       */\n      featureHeight: {\n        type: 'number',\n        defaultValue: 7,\n      },\n\n      /**\n       * #slot\n       */\n      colorBy: {\n        type: 'frozen',\n        defaultValue: { type: 'insertSizeAndOrientation' },\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  FeatureDensityMixin,\n  TrackHeightMixin,\n} from '@jbrowse/plugin-linear-genome-view'\nimport FilterListIcon from '@mui/icons-material/ClearAll'\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport { types } from 'mobx-state-tree'\n\nimport type { ChainData } from '../shared/fetchChains'\nimport type { ColorBy, FilterBy } from '../shared/types'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Instance } from 'mobx-state-tree'\n\n// async\nconst FilterByTagDialog = lazy(\n  () => import('../shared/components/FilterByTagDialog'),\n)\n\n/**\n * #stateModel LinearReadCloudDisplay\n * it is not a block based track, hence not BaseLinearDisplay\n * extends\n * - [BaseDisplay](../basedisplay)\n * - [TrackHeightMixin](../trackheightmixin)\n * - [FeatureDensityMixin](../featuredensitymixin)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReadCloudDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReadCloudDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n\n        /**\n         * #property\n         */\n        filterBySetting: types.frozen<FilterBy | undefined>(),\n\n        /**\n         * #property\n         */\n        colorBySetting: types.frozen<ColorBy | undefined>(),\n\n        /**\n         * #property\n         */\n        drawSingletons: true,\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      loading: false,\n      /**\n       * #volatile\n       */\n      chainData: undefined as ChainData | undefined,\n      /**\n       * #volatile\n       */\n      lastDrawnOffsetPx: undefined as number | undefined,\n      /**\n       * #volatile\n       */\n      lastDrawnBpPerPx: 0,\n      /**\n       * #volatile\n       */\n      ref: null as HTMLCanvasElement | null,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get colorBy() {\n        return self.colorBySetting ?? getConf(self, 'colorBy')\n      },\n      /**\n       * #getter\n       */\n      get filterBy() {\n        return self.filterBySetting ?? getConf(self, 'filterBy')\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setDrawSingletons(f: boolean) {\n        self.drawSingletons = f\n      },\n      /**\n       * #action\n       */\n      setLastDrawnOffsetPx(n: number) {\n        self.lastDrawnOffsetPx = n\n      },\n      /**\n       * #action\n       */\n      setLastDrawnBpPerPx(n: number) {\n        self.lastDrawnBpPerPx = n\n      },\n\n      /**\n       * #action\n       */\n      setLoading(f: boolean) {\n        self.loading = f\n      },\n      /**\n       * #action\n       */\n      reload() {\n        self.error = undefined\n      },\n      /**\n       * #action\n       * internal, a reference to a HTMLCanvas because we use a autorun to draw\n       * the canvas\n       */\n      setRef(ref: HTMLCanvasElement | null) {\n        self.ref = ref\n      },\n\n      setColorScheme(colorBy: { type: string }) {\n        self.colorBySetting = {\n          ...colorBy,\n        }\n      },\n\n      /**\n       * #action\n       */\n      setChainData(args: ChainData) {\n        self.chainData = args\n      },\n\n      /**\n       * #action\n       */\n      setFilterBy(filter: FilterBy) {\n        self.filterBySetting = {\n          ...filter,\n        }\n      },\n    }))\n    .views(self => ({\n      get drawn() {\n        return self.lastDrawnOffsetPx !== undefined\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n\n      return {\n        // we don't use a server side renderer, so this fills in minimal\n        // info so as not to crash\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            notReady: !self.chainData,\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Draw singletons',\n              type: 'checkbox',\n              checked: self.drawSingletons,\n              onClick: () => {\n                self.setDrawSingletons(!self.drawSingletons)\n              },\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  FilterByTagDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n\n            {\n              label: 'Color scheme',\n              icon: PaletteIcon,\n              subMenu: [\n                {\n                  label: 'Insert size ± 3σ and orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSizeAndOrientation' })\n                  },\n                },\n                {\n                  label: 'Insert size ± 3σ',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'insertSize' })\n                  },\n                },\n                {\n                  label: 'Orientation',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'orientation' })\n                  },\n                },\n                {\n                  label: 'Insert size gradient',\n                  onClick: () => {\n                    self.setColorScheme({ type: 'gradient' })\n                  },\n                },\n              ],\n            },\n          ]\n        },\n\n        /**\n         * #method\n         */\n        async renderSvg(opts: {\n          rasterizeLayers?: boolean\n        }): Promise<React.ReactNode> {\n          const { renderSvg } = await import('../shared/renderSvgUtil')\n          const { drawFeats } = await import('./drawFeats')\n          return renderSvg(self as LinearReadCloudDisplayModel, opts, drawFeats)\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('../shared/afterAttach')\n            const { drawFeats } = await import('./drawFeats')\n            doAfterAttach(self, drawFeats)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearReadCloudDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearReadCloudDisplayModel =\n  Instance<LinearReadCloudDisplayStateModel>\n\nexport default stateModelFactory\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaF from './configSchema'\nimport stateModelF from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearReadCloudDisplay',\n      displayName: 'Read cloud display',\n      configSchema,\n      stateModel: stateModelF(configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      subDisplay: { type: 'LinearAlignmentsDisplay', lowerPanel: true },\n      ReactComponent: lazy(() => import('./components/ReactComponent')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport { observable } from 'mobx'\nimport { cast, getEnv, isAlive, types } from 'mobx-state-tree'\n\nimport { getUniqueModifications } from '../shared/getUniqueModifications'\nimport { createAutorun, getColorForModification } from '../util'\n\nimport type {\n  ColorBy,\n  FilterBy,\n  ModificationType,\n  ModificationTypeWithColor,\n} from '../shared/types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n} from '@jbrowse/core/configuration'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// lazies\nconst Tooltip = lazy(() => import('./components/Tooltip'))\n\n// using a map because it preserves order\nconst rendererTypes = new Map([['snpcoverage', 'SNPCoverageRenderer']])\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel LinearSNPCoverageDisplay\n * extends\n * - [LinearWiggleDisplay](../linearwiggledisplay)\n */\nfunction stateModelFactory(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearSNPCoverageDisplay',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearSNPCoverageDisplay'),\n        /**\n         * #property\n         */\n        showInterbaseCounts: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        showInterbaseIndicators: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        showArcs: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        filterBySetting: types.frozen<FilterBy | undefined>(),\n        /**\n         * #property\n         */\n        colorBySetting: types.frozen<ColorBy | undefined>(),\n        /**\n         * #property\n         */\n        jexlFilters: types.optional(types.array(types.string), []),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      visibleModifications: observable.map<string, ModificationTypeWithColor>(\n        {},\n      ),\n      /**\n       * #volatile\n       */\n      modificationsReady: false,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get colorBy() {\n        return self.colorBySetting ?? getConf(self, 'colorBy')\n      },\n\n      /**\n       * #getter\n       */\n      get filterBy() {\n        return self.filterBySetting ?? getConf(self, 'filterBy')\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setConfig(configuration: AnyConfigurationModel) {\n        self.configuration = configuration\n      },\n      /**\n       * #action\n       */\n      setFilterBy(filter: FilterBy) {\n        self.filterBySetting = {\n          ...filter,\n        }\n      },\n      /**\n       * #action\n       */\n      setColorScheme(colorBy?: ColorBy) {\n        self.colorBySetting = colorBy\n          ? {\n              ...colorBy,\n            }\n          : undefined\n      },\n      /**\n       * #action\n       */\n      setJexlFilters(filters: string[]) {\n        self.jexlFilters = cast(filters)\n      },\n\n      /**\n       * #action\n       */\n      updateVisibleModifications(uniqueModifications: ModificationType[]) {\n        for (const modification of uniqueModifications) {\n          if (!self.visibleModifications.has(modification.type)) {\n            self.visibleModifications.set(modification.type, {\n              ...modification,\n              color: getColorForModification(modification.type),\n            })\n          }\n        }\n      },\n    }))\n    .views(self => {\n      const { adapterProps: superAdapterProps } = self\n      return {\n        /**\n         * #getter\n         */\n        get rendererConfig() {\n          const configBlob =\n            getConf(self, ['renderers', self.rendererTypeName]) || {}\n\n          const { showArcs, showInterbaseCounts, showInterbaseIndicators } =\n            self\n          return self.rendererType.configSchema.create(\n            {\n              ...configBlob,\n              showInterbaseCounts:\n                showInterbaseCounts ?? configBlob.showInterbaseCounts,\n              showInterbaseIndicators:\n                showInterbaseIndicators ?? configBlob.showInterbaseIndicators,\n              showArcs: showArcs ?? configBlob.showArcs,\n            },\n            getEnv(self),\n          )\n        },\n        /**\n         * #getter\n         */\n        get showArcsSetting() {\n          return (\n            self.showArcs ?? readConfObject(this.rendererConfig, 'showArcs')\n          )\n        },\n        /**\n         * #getter\n         */\n        get showInterbaseCountsSetting() {\n          return (\n            self.showInterbaseCounts ??\n            readConfObject(this.rendererConfig, 'showInterbaseCounts')\n          )\n        },\n        /**\n         * #getter\n         */\n        get showInterbaseIndicatorsSetting() {\n          return (\n            self.showInterbaseIndicators ??\n            readConfObject(this.rendererConfig, 'showInterbaseIndicators')\n          )\n        },\n\n        /**\n         * #getter\n         */\n        get autorunReady() {\n          const view = getContainingView(self) as LGV\n          return (\n            view.initialized &&\n            self.statsReadyAndRegionNotTooLarge &&\n            !self.error\n          )\n        },\n\n        /**\n         * #method\n         */\n        adapterProps() {\n          const superProps = superAdapterProps()\n          const { filters, filterBy } = self\n          return {\n            ...superProps,\n            filters,\n            filterBy,\n          }\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setModificationsReady(flag: boolean) {\n        self.modificationsReady = flag\n      },\n      /**\n       * #action\n       */\n      setShowInterbaseIndicators(arg: boolean) {\n        self.showInterbaseIndicators = arg\n      },\n      /**\n       * #action\n       */\n      setShowInterbaseCounts(arg: boolean) {\n        self.showInterbaseCounts = arg\n      },\n      /**\n       * #action\n       */\n      setShowArcs(arg: boolean) {\n        self.showArcs = arg\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        createAutorun(\n          self,\n          async () => {\n            self.setModificationsReady(false)\n            if (!self.autorunReady) {\n              return\n            }\n            const view = getContainingView(self) as LGV\n            const { staticBlocks } = view\n            const { colorBy } = self\n            if (colorBy?.type === 'modifications') {\n              const vals = await getUniqueModifications({\n                model: self,\n                adapterConfig: getConf(self.parentTrack, 'adapter'),\n                blocks: staticBlocks,\n              })\n              if (isAlive(self)) {\n                self.updateVisibleModifications(vals)\n                self.setModificationsReady(true)\n              }\n            } else {\n              self.setModificationsReady(true)\n            }\n          },\n          { delay: 1000 },\n        )\n      },\n    }))\n\n    .views(self => {\n      const {\n        renderProps: superRenderProps,\n        trackMenuItems: superTrackMenuItems,\n      } = self\n      return {\n        /**\n         * #getter\n         */\n        get renderReady() {\n          const superProps = superRenderProps()\n          return !superProps.notReady && self.modificationsReady\n        },\n\n        /**\n         * #getter\n         */\n        get ready() {\n          return this.renderReady\n        },\n        /**\n         * #method\n         */\n        renderProps() {\n          const { colorBy, visibleModifications } = self\n          return {\n            ...superRenderProps(),\n            notReady: !this.ready,\n            colorBy,\n            visibleModifications: Object.fromEntries(\n              visibleModifications.toJSON(),\n            ),\n          }\n        },\n        /**\n         * #getter\n         */\n        get TooltipComponent() {\n          return Tooltip\n        },\n\n        /**\n         * #getter\n         */\n        get adapterConfig() {\n          const subadapter = getConf(self.parentTrack, 'adapter')\n          return {\n            type: 'SNPCoverageAdapter',\n            subadapter,\n          }\n        },\n\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return rendererTypes.get('snpcoverage')\n        },\n\n        /**\n         * #getter\n         */\n        get graphType() {\n          return true\n        },\n\n        /**\n         * #method\n         */\n        contextMenuItems() {\n          return []\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Show insertion/clipping indicators',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showInterbaseIndicatorsSetting,\n              onClick: () => {\n                self.setShowInterbaseIndicators(\n                  !self.showInterbaseIndicatorsSetting,\n                )\n              },\n            },\n            {\n              label: 'Show insertion/clipping counts',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showInterbaseCountsSetting,\n              onClick: () => {\n                self.setShowInterbaseCounts(!self.showInterbaseCountsSetting)\n              },\n            },\n            {\n              label: 'Show arcs',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showArcsSetting,\n              onClick: () => {\n                self.setShowArcs(!self.showArcsSetting)\n              },\n            },\n          ]\n        },\n\n        /**\n         * #getter\n         */\n        get filters() {\n          return new SerializableFilterChain({ filters: self.jexlFilters })\n        },\n      }\n    })\n}\n\nexport type SNPCoverageDisplayModel = ReturnType<typeof stateModelFactory>\n\nexport default stateModelFactory\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\n\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearSNPCoverageDisplay',\n      displayName: 'SNPCoverage display',\n      configSchema,\n      stateModel: modelFactory(pluginManager, configSchema),\n      trackType: 'AlignmentsTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: LinearWiggleDisplayReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport { defaultFilterFlags } from '../shared/util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearSNPCoverageDisplay\n *\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function SNPCoverageConfigFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearSNPCoverageDisplay',\n    {\n      /**\n       * #slot\n       */\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', ['local']),\n        description:\n          'performs local autoscaling (no other options for SNP Coverage available)',\n      },\n      /**\n       * #slot\n       */\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      /**\n       * #slot\n       */\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      /**\n       * #slot\n       */\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n      /**\n       * #slot\n       */\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n      /**\n       * #slot\n       */\n      multiTicks: {\n        type: 'boolean',\n        description: 'Display multiple values for the ticks',\n        defaultValue: false,\n      },\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        SNPCoverageRenderer: pluginManager.getRendererType(\n          'SNPCoverageRenderer',\n        )!.configSchema,\n      }),\n      /**\n       * #slot\n       */\n      colorBy: {\n        type: 'frozen',\n        description: 'color scheme to use',\n        defaultValue: {\n          type: 'normal',\n        },\n      },\n\n      /**\n       * #slot\n       */\n      filterBy: {\n        type: 'frozen',\n        description: 'default filters to use',\n        defaultValue: defaultFilterFlags,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '@jbrowse/core/util'\n\nimport type { RenderArgs } from '@jbrowse/core/rpc/coreRpcMethods'\n\n// specialized get features to return limited data about alignments\nexport default abstract class PileupBaseRPC extends RpcMethodType {\n  async serializeArguments(\n    args: RenderArgs & {\n      stopToken?: string\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriver: string,\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel?.session?.assemblyManager\n    if (!assemblyManager) {\n      throw new Error('no assembly manager available')\n    }\n\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n\n    return super.serializeArguments(renamedArgs, rpcDriver)\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { dedupe, groupBy } from '@jbrowse/core/util'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport { getClip } from '../../MismatchParser'\nimport PileupBaseRPC from '../base'\nimport { filterForPairs, getInsertSizeStats } from '../util'\n\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\n// specialized get features to return limited data about alignments\nexport default class PileupGetReducedFeatures extends PileupBaseRPC {\n  name = 'PileupGetReducedFeatures'\n\n  async execute(\n    args: {\n      adapterConfig: Record<string, unknown>\n      stopToken?: string\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { adapterConfig, sessionId, regions } = deserializedArgs\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const featuresArray = await firstValueFrom(\n      dataAdapter\n        .getFeaturesInMultipleRegions(regions, deserializedArgs)\n        .pipe(toArray()),\n    )\n\n    const reduced = dedupe(\n      featuresArray.map(f => ({\n        id: f.id(),\n        refName: f.get('refName'),\n        name: f.get('name'),\n        start: f.get('start'),\n        strand: f.get('strand'),\n        end: f.get('end'),\n        flags: f.get('flags'),\n        tlen: f.get('template_length'),\n        pair_orientation: f.get('pair_orientation'),\n        next_ref: f.get('next_ref'),\n        next_pos: f.get('next_pos'),\n        clipPos: getClip(f.get('CIGAR'), f.get('strand')),\n        SA: f.get('tags')?.SA,\n      })),\n      f => f.id,\n    )\n\n    const filtered = filterForPairs(reduced)\n    const stats = filtered.length ? getInsertSizeStats(filtered) : undefined\n    const chains = groupBy(reduced, f => f.name)\n\n    return {\n      chains: Object.values(chains),\n      stats,\n      hasPaired: !!stats,\n      containsNoTransferables: true,\n    }\n  }\n}\n","import type { ReducedFeature } from '../shared/fetchChains'\n\nexport function getInsertSizeStats(features: ReducedFeature[]) {\n  const filtered = features.map(f => Math.abs(f.tlen))\n  const sum = filtered.reduce((a, b) => a + b, 0)\n  const sum2 = filtered.map(a => a * a).reduce((a, b) => a + b, 0)\n  const total = filtered.length\n  const avg = sum / total\n  const sd = Math.sqrt((total * sum2 - sum * sum) / (total * total))\n  const upper = avg + 4 * sd\n  const lower = avg - 3 * sd\n  return { upper, lower, avg, sd }\n}\n\nexport function filterForPairs(features: ReducedFeature[]) {\n  return features.filter(\n    f => f.flags & 2 && !(f.flags & 256) && !(f.flags & 2048),\n  )\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport { getModTypes } from '../../ModificationParser'\nimport { getTagAlt } from '../../util'\nimport PileupBaseRPC from '../base'\n\nimport type { ModificationType } from '../../shared/types'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\nexport default class PileupGetVisibleModifications extends PileupBaseRPC {\n  name = 'PileupGetVisibleModifications'\n\n  async execute(\n    args: {\n      adapterConfig: Record<string, unknown>\n      stopToken?: string\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const deserializeArguments = await this.deserializeArguments(\n      args,\n      rpcDriver,\n    )\n    const { adapterConfig, sessionId, regions } = deserializeArguments\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const featuresArray = await firstValueFrom(\n      dataAdapter\n        .getFeaturesInMultipleRegions(regions, deserializeArguments)\n        .pipe(toArray()),\n    )\n\n    const uniqueModifications = new Map<string, ModificationType>()\n    for (const feat of featuresArray) {\n      for (const mod of getModTypes(getTagAlt(feat, 'MM', 'Mm') || '')) {\n        if (!uniqueModifications.has(mod.type)) {\n          uniqueModifications.set(mod.type, mod)\n        }\n      }\n    }\n    return [...uniqueModifications.values()]\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport PileupBaseRPC from '../base'\n\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\nexport default class PileupGetGlobalValueForTag extends PileupBaseRPC {\n  name = 'PileupGetGlobalValueForTag'\n\n  async execute(\n    args: {\n      adapterConfig: Record<string, unknown>\n      stopToken?: string\n      headers?: Record<string, string>\n      regions: Region[]\n      sessionId: string\n      tag: string\n    },\n    rpcDriver: string,\n  ) {\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { adapterConfig, sessionId, regions, tag } = deserializedArgs\n\n    const dataAdapter = (\n      await getAdapter(this.pluginManager, sessionId, adapterConfig)\n    ).dataAdapter as BaseFeatureDataAdapter\n\n    const features = dataAdapter.getFeaturesInMultipleRegions(\n      regions,\n      deserializedArgs,\n    )\n    const featuresArray = await firstValueFrom(features.pipe(toArray()))\n    return [\n      ...new Set(\n        featuresArray\n          .map(feature => feature.get('tags')?.[tag])\n          .filter(f => f !== undefined)\n          .map(f => `${f}`),\n      ),\n    ]\n  }\n}\n","import {\n  PileupGetGlobalValueForTag,\n  PileupGetReducedFeatures,\n  PileupGetVisibleModifications,\n} from './rpcMethods'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function PileupRPCMethodsF(pm: PluginManager) {\n  pm.addRpcMethod(() => new PileupGetGlobalValueForTag(pm))\n  pm.addRpcMethod(() => new PileupGetVisibleModifications(pm))\n  pm.addRpcMethod(() => new PileupGetReducedFeatures(pm))\n}\n","import { LayoutSession } from '@jbrowse/core/pluggableElementTypes/renderers/LayoutSession'\nimport deepEqual from 'fast-deep-equal'\n\nimport type { FilterBy, SortedBy } from '../shared/types'\nimport type {\n  CachedLayout,\n  LayoutSessionProps,\n} from '@jbrowse/core/pluggableElementTypes/renderers/LayoutSession'\nimport type GranularRectLayout from '@jbrowse/core/util/layouts/GranularRectLayout'\nimport type MultiLayout from '@jbrowse/core/util/layouts/MultiLayout'\n\nexport interface PileupLayoutSessionProps extends LayoutSessionProps {\n  filterBy: FilterBy\n  sortedBy: SortedBy\n  showSoftClip: boolean\n}\n\ntype MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\n\ninterface CachedPileupLayout extends CachedLayout {\n  props: PileupLayoutSessionProps\n}\n\nexport class PileupLayoutSession extends LayoutSession {\n  props: PileupLayoutSessionProps\n\n  cachedLayout: CachedPileupLayout | undefined\n\n  constructor(props: PileupLayoutSessionProps) {\n    super(props)\n    this.props = props\n  }\n\n  update(props: PileupLayoutSessionProps) {\n    super.update(props)\n    this.props = props\n    return this\n  }\n\n  cachedLayoutIsValid(cachedLayout: CachedPileupLayout) {\n    return (\n      super.cachedLayoutIsValid(cachedLayout) &&\n      this.props.showSoftClip === cachedLayout.props.showSoftClip &&\n      deepEqual(this.props.sortedBy, cachedLayout.props.sortedBy) &&\n      deepEqual(this.props.filterBy, cachedLayout.props.filterBy)\n    )\n  }\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        props: this.props,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { renderToAbstractCanvas, updateStatus } from '@jbrowse/core/util'\n\nimport { PileupLayoutSession } from './PileupLayoutSession'\nimport { fetchSequence } from '../util'\nimport { layoutFeats } from './layoutFeatures'\n\nimport type { PileupLayoutSessionProps } from './PileupLayoutSession'\nimport type { RenderArgsDeserialized } from './types'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\nexport default class PileupRenderer extends BoxRendererType {\n  supportsSVG = true\n\n  async fetchSequence(renderProps: RenderArgsDeserialized, region: Region) {\n    const { sessionId, adapterConfig } = renderProps\n    const { sequenceAdapter } = adapterConfig\n    if (!sequenceAdapter) {\n      return undefined\n    }\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      sequenceAdapter,\n    )\n    return fetchSequence(\n      {\n        ...region,\n        start: Math.max(0, region.start - 1),\n        end: region.end + 1,\n      },\n      dataAdapter as BaseFeatureDataAdapter,\n    )\n  }\n\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    const { config, showSoftClip } = renderArgs\n    const { start, end } = region\n    const maxClippingSize = readConfObject(config, 'maxClippingSize')\n    const bpExpansion = showSoftClip ? Math.round(maxClippingSize) : 0\n\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(region as Omit<typeof region, symbol>),\n      start: Math.floor(Math.max(start - bpExpansion, 0)),\n      end: Math.ceil(end + bpExpansion),\n    }\n  }\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const layout = this.createLayoutInWorker(renderProps)\n    const { statusCallback = () => {}, colorBy, regions, bpPerPx } = renderProps\n    const region = regions[0]!\n    const width = (region.end - region.start) / bpPerPx\n    const { layoutRecords, height } = await updateStatus(\n      'Creating layout',\n      statusCallback,\n      () =>\n        layoutFeats({\n          ...renderProps,\n          features,\n          layout,\n        }),\n    )\n\n    const res = await updateStatus(\n      'Rendering alignments',\n      statusCallback,\n      async () => {\n        const regionSequence =\n          colorBy?.type === 'methylation' && features.size\n            ? await this.fetchSequence(renderProps, region)\n            : undefined\n        const { makeImageData } = await import('./makeImageData')\n\n        return renderToAbstractCanvas(width, height, renderProps, ctx => {\n          makeImageData({\n            ctx,\n            layoutRecords,\n            canvasWidth: width,\n            renderArgs: {\n              ...renderProps,\n              layout,\n              features,\n              regionSequence,\n            },\n          })\n          return undefined\n        })\n      },\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      layout,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features: new Map(),\n      layout,\n      height,\n      width,\n      maxHeightReached: layout.maxHeightReached,\n      containsNoTransferables: true,\n    }\n  }\n\n  createLayoutSession(args: PileupLayoutSessionProps) {\n    return new PileupLayoutSession(args)\n  }\n}\n\nexport type {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsDeserialized,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { iterMap, notEmpty } from '@jbrowse/core/util'\n\nimport { layoutFeature } from './layoutFeature'\nimport { sortFeature } from './sortUtil'\n\nimport type { PreProcessedRenderArgs } from './types'\n\n// layout determines the height of the canvas that we use to render\nexport function layoutFeats(props: PreProcessedRenderArgs) {\n  const { layout, features, sortedBy, config, bpPerPx, showSoftClip, regions } =\n    props\n  const region = regions[0]!\n  const featureMap =\n    sortedBy?.type && region.start === sortedBy.pos\n      ? sortFeature(features, sortedBy)\n      : features\n\n  const heightPx = readConfObject(config, 'height')\n  const displayMode = readConfObject(config, 'displayMode')\n  const layoutRecords = iterMap(\n    featureMap.values(),\n    feature =>\n      layoutFeature({\n        feature,\n        layout,\n        bpPerPx,\n        region,\n        showSoftClip,\n        heightPx,\n        displayMode,\n      }),\n    featureMap.size,\n  ).filter(notEmpty)\n\n  return {\n    layoutRecords,\n    height: Math.max(layout.getTotalHeight(), 1),\n  }\n}\n","import { doesIntersect2 } from '@jbrowse/core/util'\n\nimport type { Mismatch, SortedBy } from '../shared/types'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport const sortFeature = (\n  features: Map<string, Feature>,\n  sortedBy: SortedBy,\n) => {\n  const featureArray = Array.from(features.values())\n  const featuresInCenterLine: Feature[] = []\n  const featuresOutsideCenter: Feature[] = []\n  const { pos, type } = sortedBy\n\n  // only sort on features that intersect center line, append those outside post-sort\n  featureArray.forEach(innerArray => {\n    const feature = innerArray\n    const start = feature.get('start')\n    const end = feature.get('end')\n    if (doesIntersect2(pos - 1, pos, start, end)) {\n      featuresInCenterLine.push(innerArray)\n    } else {\n      featuresOutsideCenter.push(innerArray)\n    }\n  })\n\n  const isCram = featureArray.length ? featureArray[0]!.get('tags') : false\n  switch (type) {\n    case 'Start location': {\n      featuresInCenterLine.sort((a, b) => a.get('start') - b.get('start'))\n      break\n    }\n\n    case 'tag': {\n      const tag = sortedBy.tag!\n      const getTag = (f: Feature, t: string) => {\n        return isCram ? f.get('tags')[t] : f.get(t)\n      }\n      const isString =\n        featuresInCenterLine[0] &&\n        typeof getTag(featuresInCenterLine[0], tag) === 'string'\n      if (isString) {\n        featuresInCenterLine.sort((a, b) =>\n          getTag(b, tag).localeCompare(getTag(a, tag)),\n        )\n      } else {\n        featuresInCenterLine.sort(\n          (a, b) => (getTag(b, tag) || 0) - (getTag(a, tag) || 0),\n        )\n      }\n      break\n    }\n\n    // first sort all mismatches, then all reference bases at the end\n    case 'Base pair': {\n      const baseSortArray: [string, Mismatch][] = []\n      for (const feature of featuresInCenterLine) {\n        const mismatches: Mismatch[] = feature.get('mismatches')\n        for (const m of mismatches) {\n          const start = feature.get('start')\n          const offset = start + m.start + 1\n          const consuming = m.type === 'insertion' || m.type === 'softclip'\n          const len = consuming ? 0 : m.length\n          if (pos >= offset && pos < offset + len) {\n            baseSortArray.push([feature.id(), m])\n          }\n        }\n      }\n\n      const baseMap = new Map(baseSortArray)\n      featuresInCenterLine.sort((a, b) => {\n        const aMismatch = baseMap.get(a.id())\n        const bMismatch = baseMap.get(b.id())\n        const acode = bMismatch?.base.toUpperCase()\n        const bcode = aMismatch?.base.toUpperCase()\n        return acode === bcode && acode === '*'\n          ? // @ts-expect-error\n            aMismatch.length - bMismatch.length\n          : (acode ? acode.charCodeAt(0) : 0) -\n              (bcode ? bcode.charCodeAt(0) : 0)\n      })\n\n      break\n    }\n\n    // sorts positive strands then negative strands\n    case 'Read strand': {\n      featuresInCenterLine.sort((a, b) =>\n        a.get('strand') <= b.get('strand') ? 1 : -1,\n      )\n      break\n    }\n  }\n\n  return new Map(\n    [...featuresInCenterLine, ...featuresOutsideCenter].map(feature => [\n      feature.id(),\n      feature,\n    ]),\n  )\n}\n","import { bpSpanPx } from '@jbrowse/core/util'\n\nimport type { Mismatch } from '../shared/types'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { BaseLayout } from '@jbrowse/core/util/layouts'\n\nexport interface LayoutRecord {\n  feature: Feature\n  leftPx: number\n  rightPx: number\n  topPx: number\n  heightPx: number\n}\n\nexport function layoutFeature({\n  feature,\n  layout,\n  bpPerPx,\n  region,\n  showSoftClip,\n  heightPx,\n  displayMode,\n}: {\n  feature: Feature\n  layout: BaseLayout<Feature>\n  bpPerPx: number\n  region: Region\n  showSoftClip?: boolean\n  heightPx: number\n  displayMode: string\n}): LayoutRecord | null {\n  let expansionBefore = 0\n  let expansionAfter = 0\n\n  // Expand the start and end of feature when softclipping enabled\n  if (showSoftClip) {\n    const mismatches = feature.get('mismatches') as Mismatch[]\n    const seq = feature.get('seq') as string\n    if (seq) {\n      for (const { type, start, cliplen = 0 } of mismatches) {\n        if (type === 'softclip') {\n          if (start === 0) {\n            expansionBefore = cliplen\n          } else {\n            expansionAfter = cliplen\n          }\n        }\n      }\n    }\n  }\n\n  const [leftPx, rightPx] = bpSpanPx(\n    feature.get('start') - expansionBefore,\n    feature.get('end') + expansionAfter,\n    region,\n    bpPerPx,\n  )\n\n  if (displayMode === 'compact') {\n    heightPx /= 3\n  }\n  if (feature.get('refName') !== region.refName) {\n    throw new Error(\n      `feature ${feature.id()} is not on the current region's reference sequence ${\n        region.refName\n      }`,\n    )\n  }\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start') - expansionBefore,\n    feature.get('end') + expansionAfter,\n    heightPx,\n    feature,\n  )\n  if (topPx === null) {\n    return null\n  }\n\n  return {\n    feature,\n    leftPx,\n    rightPx,\n    topPx: displayMode === 'collapse' ? 0 : topPx,\n    heightPx,\n  }\n}\n","import { useEffect, useRef, useState } from 'react'\n\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { Region } from '@jbrowse/core/util/types'\nimport type { BaseLinearDisplayModel } from '@jbrowse/plugin-linear-genome-view'\n\nconst PileupRendering = observer(function (props: {\n  blockKey: string\n  displayModel?: BaseLinearDisplayModel\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n  sortedBy?: {\n    type: string\n    pos: number\n    refName: string\n  }\n  colorBy?: {\n    type: string\n    tag?: string\n  }\n  filterBy?: {\n    tagFilter?: { tag: string }\n  }\n  onMouseMove?: (event: React.MouseEvent, featureId?: string) => void\n}) {\n  const {\n    onMouseMove,\n    blockKey,\n    displayModel,\n    width,\n    height,\n    regions,\n    bpPerPx,\n    sortedBy,\n    colorBy,\n    filterBy,\n  } = props\n  const { selectedFeatureId, featureIdUnderMouse, contextMenuFeature } =\n    displayModel || {}\n  const [firstRender, setFirstRender] = useState(false)\n  useEffect(() => {\n    setFirstRender(true)\n  }, [])\n\n  const region = regions[0]!\n  const ref = useRef<HTMLDivElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] =\n    useState(false)\n  const selectedRect = selectedFeatureId\n    ? displayModel?.getFeatureByID(blockKey, selectedFeatureId)\n    : undefined\n\n  const highlightedFeature = featureIdUnderMouse || contextMenuFeature?.id()\n  const highlightedRect = highlightedFeature\n    ? displayModel?.getFeatureByID(blockKey, highlightedFeature)\n    : undefined\n\n  function makeRect(r: [number, number, number, number], offset = 2) {\n    const [leftBp, topPx, rightBp, bottomPx] = r\n    const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n    const rectTop = Math.round(topPx)\n    const rectHeight = Math.round(bottomPx - topPx)\n    return {\n      left: leftPx - offset,\n      top: rectTop - offset,\n      width: rightPx - leftPx,\n      height: rectHeight,\n    }\n  }\n  const selected = selectedRect ? makeRect(selectedRect) : undefined\n  const highlight = highlightedRect ? makeRect(highlightedRect, 0) : undefined\n\n  function onMouseDown(event: React.MouseEvent) {\n    setMouseIsDown(true)\n    setMovedDuringLastMouseDown(false)\n    callMouseHandler('MouseDown', event)\n  }\n\n  function onMouseEnter(event: React.MouseEvent) {\n    callMouseHandler('MouseEnter', event)\n  }\n\n  function onMouseOut(event: React.MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onMouseOver(event: React.MouseEvent) {\n    callMouseHandler('MouseOver', event)\n  }\n\n  function onMouseUp(event: React.MouseEvent) {\n    setMouseIsDown(false)\n    callMouseHandler('MouseUp', event)\n  }\n\n  function onClick(event: React.MouseEvent) {\n    if (!movedDuringLastMouseDown) {\n      callMouseHandler('Click', event)\n    }\n  }\n\n  function onMouseLeave(event: React.MouseEvent) {\n    callMouseHandler('MouseOut', event)\n    callMouseHandler('MouseLeave', event)\n  }\n\n  function onContextMenu(event: React.MouseEvent) {\n    callMouseHandler('ContextMenu', event)\n  }\n\n  function mouseMove(event: React.MouseEvent) {\n    if (!ref.current) {\n      return\n    }\n    if (mouseIsDown) {\n      setMovedDuringLastMouseDown(true)\n    }\n    const rect = ref.current.getBoundingClientRect()\n    const offsetX = event.clientX - rect.left\n    const offsetY = event.clientY - rect.top\n    const px = region.reversed ? width - offsetX : offsetX\n    const clientBp = region.start + bpPerPx * px\n\n    onMouseMove?.(\n      event,\n      displayModel?.getFeatureOverlapping(blockKey, clientBp, offsetY),\n    )\n  }\n\n  function callMouseHandler(handlerName: string, event: React.MouseEvent) {\n    // @ts-expect-error\n    const featureHandler = props[`onFeature${handlerName}`]\n    // @ts-expect-error\n    const canvasHandler = props[`on${handlerName}`]\n    if (featureHandler && featureIdUnderMouse) {\n      featureHandler(event, featureIdUnderMouse)\n    } else if (canvasHandler) {\n      canvasHandler(event, featureIdUnderMouse)\n    }\n  }\n\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div\n      ref={ref}\n      data-testid={[\n        'pileup-overlay',\n        sortedBy?.type,\n        colorBy?.type,\n        colorBy?.tag,\n        filterBy?.tagFilter?.tag,\n      ]\n        .filter(f => !!f)\n        .join('-')}\n      style={{ position: 'relative', width: canvasWidth, height }}\n      onMouseDown={event => {\n        onMouseDown(event)\n      }}\n      onMouseEnter={event => {\n        onMouseEnter(event)\n      }}\n      onMouseOut={event => {\n        onMouseOut(event)\n      }}\n      onMouseOver={event => {\n        onMouseOver(event)\n      }}\n      onMouseUp={event => {\n        onMouseUp(event)\n      }}\n      onMouseLeave={event => {\n        onMouseLeave(event)\n      }}\n      onMouseMove={event => {\n        mouseMove(event)\n      }}\n      onClick={event => {\n        onClick(event)\n      }}\n      onContextMenu={event => {\n        onContextMenu(event)\n      }}\n      onFocus={() => {}}\n      onBlur={() => {}}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n      {firstRender && highlight ? (\n        <div\n          style={{\n            position: 'absolute',\n            backgroundColor: '#0003',\n            pointerEvents: 'none',\n            ...highlight,\n          }}\n        />\n      ) : null}\n      {firstRender && selected ? (\n        <div\n          style={{\n            position: 'absolute',\n            border: '2px solid #00b8ff',\n            boxSizing: 'content-box',\n            pointerEvents: 'none',\n            ...selected,\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default PileupRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config PileupRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst PileupRenderer = ConfigurationSchema(\n  'PileupRenderer',\n  {\n    /**\n     * #slot\n     * default magenta here is used to detect the user has not customized this\n     */\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a pileup alignment',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    orientationType: {\n      type: 'stringEnum',\n      model: types.enumeration('orientationType', ['fr', 'rf', 'ff']),\n      defaultValue: 'fr',\n      description:\n        'read sequencer orientation. fr is normal \"reads pointing at each other ---> <--- while some other sequencers can use other options',\n    },\n    /**\n     * #slot\n     */\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n    /**\n     * #slot\n     */\n    minSubfeatureWidth: {\n      type: 'number',\n      description:\n        'the minimum width in px for a pileup mismatch feature. use for increasing/decreasing mismatch marker widths when zoomed out, e.g. 0 or 1',\n      defaultValue: 1,\n    },\n    /**\n     * #slot\n     */\n    hideSmallIndels: {\n      type: 'boolean',\n      description:\n        'Hides small indels, sometimes occurring in long read sequencing',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a pileup rendering',\n      defaultValue: 1200,\n    },\n    /**\n     * #slot\n     */\n    maxClippingSize: {\n      type: 'integer',\n      description: 'the max clip size to be used in a pileup rendering',\n      defaultValue: 10000,\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'the height of each feature in a pileup alignment',\n      defaultValue: 7,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    noSpacing: {\n      type: 'boolean',\n      description: 'remove spacing between features',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    largeInsertionIndicatorScale: {\n      type: 'number',\n      description:\n        'scale at which to draw the large insertion indicators (bp/pixel)',\n      defaultValue: 10,\n    },\n    /**\n     * #slot\n     */\n    mismatchAlpha: {\n      type: 'boolean',\n      defaultValue: false,\n      description: 'Fade low quality mismatches',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default PileupRenderer\n","import PileupRenderer from './PileupRenderer'\nimport ReactComponent from './components/PileupRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addRendererType(() => {\n    return new PileupRenderer({\n      name: 'PileupRenderer',\n      displayName: 'Pileup renderer',\n      ReactComponent,\n      configSchema,\n      pluginManager,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SNPCoverageAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'SNPCoverageAdapter',\n  {\n    /**\n     * #slot\n     * normally refers to a BAM or CRAM adapter\n     */\n    subadapter: {\n      type: 'frozen',\n      defaultValue: null,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SNPCoverageAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'SNPCoverageAdapter',\n      displayName: 'SNPCoverage adapter',\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      getAdapterClass: () =>\n        import('./SNPCoverageAdapter').then(r => r.default),\n      configSchema,\n    })\n  })\n}\n","import { updateStatus } from '@jbrowse/core/util'\nimport { WiggleBaseRenderer } from '@jbrowse/plugin-wiggle'\n\nimport type { RenderArgsDeserializedWithFeatures } from './types'\n\nexport default class SNPCoverageRenderer extends WiggleBaseRenderer {\n  // note: the snps are drawn on linear scale even if the data is drawn in log\n  // scape hence the two different scales being used\n  // @ts-expect-error\n  async draw(\n    ctx: CanvasRenderingContext2D,\n    props: RenderArgsDeserializedWithFeatures,\n  ) {\n    const { statusCallback = () => {} } = props\n    const { makeImage } = await import('./makeImage')\n    await updateStatus('Rendering coverage', statusCallback, () =>\n      makeImage(ctx, props),\n    )\n    return undefined\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SNPCoverageRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst SNPCoverageRenderer = ConfigurationSchema(\n  'SNPCoverageRenderer',\n  {\n    /**\n     * #slot\n     */\n    clipColor: {\n      type: 'color',\n      description: 'the color of the clipping marker',\n      defaultValue: 'red',\n    },\n    /**\n     * #slot\n     */\n    indicatorThreshold: {\n      type: 'number',\n      description:\n        'the proportion of reads containing a insertion/clip indicator',\n      defaultValue: 0.4,\n    },\n    /**\n     * #slot\n     */\n    showArcs: {\n      type: 'boolean',\n      description: 'Draw sashimi-style arcs for intron features',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    showInterbaseCounts: {\n      type: 'boolean',\n      description:\n        'draw count \"upsidedown histogram\" of the interbase events that don\\'t contribute to the coverage count so are not drawn in the normal histogram',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    showInterbaseIndicators: {\n      type: 'boolean',\n      description:\n        'draw a triangular indicator where an event has been detected',\n      defaultValue: true,\n    },\n\n    color: {\n      type: 'color',\n      description: 'Background color for the SNPCoverage renderer',\n      defaultValue: '#d3d3d3',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default SNPCoverageRenderer\n","import { WiggleRendering } from '@jbrowse/plugin-wiggle'\n\nimport SNPCoverageRenderer from './SNPCoverageRenderer'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function register(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new SNPCoverageRenderer({\n        name: 'SNPCoverageRenderer',\n        ReactComponent: WiggleRendering,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport AlignmentsFeatureWidgetF from './AlignmentsFeatureDetail'\nimport AlignmentsTrackF from './AlignmentsTrack'\nimport CramAdapterF from './BamAdapter'\nimport BamAdapterF from './CramAdapter'\nimport GuessAlignmentsTypesF from './GuessAlignmentsTypes'\nimport HtsgetBamAdapterF from './HtsgetBamAdapter'\nimport LinearAlignmentsDisplayF from './LinearAlignmentsDisplay'\nimport LinearPileupDisplayF from './LinearPileupDisplay'\nimport LinearReadArcsDisplayF from './LinearReadArcsDisplay'\nimport LinearReadCloudDisplayF from './LinearReadCloudDisplay'\nimport LinearSNPCoverageDisplayF from './LinearSNPCoverageDisplay'\nimport PileupRPCMethodsF from './PileupRPC'\nimport PileupRendererF from './PileupRenderer'\nimport SNPCoverageAdapterF from './SNPCoverageAdapter'\nimport SNPCoverageRendererF from './SNPCoverageRenderer'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class AlignmentsPlugin extends Plugin {\n  name = 'AlignmentsPlugin'\n\n  install(pluginManager: PluginManager) {\n    ;[\n      CramAdapterF,\n      BamAdapterF,\n      LinearPileupDisplayF,\n      LinearSNPCoverageDisplayF,\n      AlignmentsTrackF,\n      SNPCoverageAdapterF,\n      HtsgetBamAdapterF,\n      PileupRendererF,\n      PileupRPCMethodsF,\n      SNPCoverageRendererF,\n      LinearReadArcsDisplayF,\n      LinearReadCloudDisplayF,\n      LinearAlignmentsDisplayF,\n      AlignmentsFeatureWidgetF,\n      GuessAlignmentsTypesF,\n    ].map(f => {\n      f(pluginManager)\n    })\n  }\n}\n\nexport {\n  SharedLinearPileupDisplayMixin,\n  linearPileupDisplayConfigSchemaFactory,\n  linearPileupDisplayStateModelFactory,\n} from './LinearPileupDisplay'\nexport { type LinearPileupDisplayModel } from './LinearPileupDisplay/model'\nexport * as MismatchParser from './MismatchParser'\n","import { assembleLocString, parseLocString } from '@jbrowse/core/util'\n\nimport type { AssemblyManager, ParsedLocString } from '@jbrowse/core/util'\nimport type { BaseBlock } from '@jbrowse/core/util/blockTypes'\n\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = Number.parseInt(\n    Number(minMajorPitchBp).toExponential().split(/e/i)[1]!,\n    10,\n  )\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  start: number,\n  end: number,\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n\n  let minBase = start\n  let maxBase = end\n\n  if (bpPerPx < 0) {\n    ;[minBase, maxBase] = [maxBase, minBase]\n  }\n\n  // add 20px additional on the right and left to allow us to draw the ends\n  // of labels that lie a little outside our region\n  minBase -= Math.abs(20 * bpPerPx) - 1\n  maxBase += Math.abs(20 * bpPerPx) + 1\n\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  let index = 0\n  const ticks = []\n  for (\n    let base = Math.floor(minBase / iterPitch) * iterPitch;\n    base < Math.ceil(maxBase / iterPitch) * iterPitch + 1;\n    base += iterPitch\n  ) {\n    if (emitMinor && base % (gridPitch.majorPitch * 2)) {\n      ticks.push({ type: 'minor', base: base - 1, index })\n      index += 1\n    } else if (emitMajor && !(base % (gridPitch.majorPitch * 2))) {\n      ticks.push({ type: 'major', base: base - 1, index })\n      index += 1\n    }\n  }\n  return ticks\n}\n\n/**\n * Generate location objects for a set of parsed locstrings, which includes\n * translating the refNames to assembly-canonical refNames and adding the\n * 'parentRegion'\n *\n * Used by navToLocations and navToLocString\n */\nexport async function generateLocations(\n  regions: ParsedLocString[],\n  assemblyManager: AssemblyManager,\n  assemblyName?: string,\n) {\n  return Promise.all(\n    regions.map(async region => {\n      const asmName = region.assemblyName || assemblyName\n      if (!asmName) {\n        throw new Error('no assembly provided')\n      }\n      const asm = await assemblyManager.waitForAssembly(asmName)\n      const { refName } = region\n      if (!asm) {\n        throw new Error(`assembly ${asmName} not found`)\n      }\n      const { regions } = asm\n      if (!regions) {\n        throw new Error(`regions not loaded yet for ${asmName}`)\n      }\n      const canonicalRefName = asm.getCanonicalRefName(region.refName)\n      if (!canonicalRefName) {\n        throw new Error(`Could not find refName ${refName} in ${asm.name}`)\n      }\n      const parentRegion = regions.find(r => r.refName === canonicalRefName)\n      if (!parentRegion) {\n        throw new Error(`Could not find refName ${refName} in ${asmName}`)\n      }\n\n      return {\n        ...(region as Omit<typeof region, symbol>),\n        assemblyName: asmName,\n        parentRegion,\n      }\n    }),\n  )\n}\n\n/**\n * Parses locString or space separated set of locStrings into location objects\n * Example inputs:\n * \"chr1\"\n * \"chr1:1-100\"\n * \"chr1:1..100\"\n * \"chr1 chr2\"\n * \"chr1:1-100 chr2:1-100\"\n * \"chr1 100 200\" equivalent to \"chr1:1-100\"\n *\n * Used by navToLocString\n */\nexport function parseLocStrings(\n  input: string,\n  assemblyName: string,\n  isValidRefName: (str: string, assemblyName: string) => boolean,\n) {\n  const inputs = input\n    .split(/(\\s+)/)\n    .map(f => f.trim())\n    .filter(f => !!f)\n  // first try interpreting as a whitespace-separated sequence of\n  // multiple locstrings\n  try {\n    return inputs.map(loc =>\n      parseLocString(loc, ref => isValidRefName(ref, assemblyName)),\n    )\n  } catch (e) {\n    // if this fails, try interpreting as a whitespace-separated refname,\n    // start, end if start and end are integer inputs\n    const [refName, start, end] = inputs\n    if (\n      /Unknown reference sequence/.exec(`${e}`) &&\n      Number.isInteger(+start!) &&\n      Number.isInteger(+end!)\n    ) {\n      return [\n        parseLocString(`${refName}:${start}..${end}`, ref =>\n          isValidRefName(ref, assemblyName),\n        ),\n      ]\n    }\n    throw e\n  }\n}\n\nexport function calculateVisibleLocStrings(contentBlocks: BaseBlock[]) {\n  if (!contentBlocks.length) {\n    return ''\n  } else {\n    const isSingleAssemblyName = contentBlocks.every(\n      b => b.assemblyName === contentBlocks[0]!.assemblyName,\n    )\n    const locs = contentBlocks.map(block =>\n      assembleLocString({\n        // eslint-disable-next-line @typescript-eslint/no-misused-spread\n        ...block,\n        start: Math.round(block.start),\n        end: Math.round(block.end),\n        assemblyName: isSingleAssemblyName ? undefined : block.assemblyName,\n      }),\n    )\n    return locs.join(' ')\n  }\n}\n","import deepEqual from 'fast-deep-equal'\n\nimport { readConfObject } from '../../configuration'\nimport GranularRectLayout from '../../util/layouts/GranularRectLayout'\nimport MultiLayout from '../../util/layouts/MultiLayout'\n\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { Region } from '../../util'\nimport type SerializableFilterChain from './util/serializableFilterChain'\n\nexport interface LayoutSessionProps {\n  regions: Region[]\n  config: AnyConfigurationModel\n  bpPerPx: number\n  filters?: SerializableFilterChain\n}\n\nexport type MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\n\nexport interface CachedLayout {\n  layout: MyMultiLayout\n  props: LayoutSessionProps\n}\n\nexport class LayoutSession {\n  props: LayoutSessionProps\n\n  cachedLayout: CachedLayout | undefined\n\n  constructor(props: LayoutSessionProps) {\n    this.props = props\n  }\n\n  update(props: LayoutSessionProps) {\n    this.props = props\n    return this\n  }\n\n  makeLayout() {\n    return new MultiLayout(GranularRectLayout, {\n      maxHeight: readConfObject(this.props.config, 'maxHeight'),\n      displayMode: readConfObject(this.props.config, 'displayMode'),\n      pitchX: this.props.bpPerPx,\n      pitchY: readConfObject(this.props.config, 'noSpacing') ? 1 : 3,\n    })\n  }\n\n  cachedLayoutIsValid(cachedLayout: CachedLayout) {\n    return (\n      cachedLayout.props.bpPerPx === this.props.bpPerPx &&\n      deepEqual(\n        readConfObject(this.props.config),\n        readConfObject(cachedLayout.props.config),\n      ) &&\n      deepEqual(this.props.filters, cachedLayout.props.filters)\n    )\n  }\n\n  get layout(): MyMultiLayout {\n    if (!this.cachedLayout || !this.cachedLayoutIsValid(this.cachedLayout)) {\n      this.cachedLayout = {\n        layout: this.makeLayout(),\n        props: this.props,\n      }\n    }\n    return this.cachedLayout.layout\n  }\n}\n","export function blobToDataURL(blob: Blob): Promise<string> {\n  const a = new FileReader()\n  return new Promise((resolve, reject) => {\n    a.onload = e => {\n      if (e.target) {\n        resolve(e.target.result as string)\n      } else {\n        reject(new Error('unknown result reading blob from canvas'))\n      }\n    }\n    a.readAsDataURL(blob)\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\n/**\n * #config UCSCTrackHubConnection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst UCSCTrackHubConnection = ConfigurationSchema(\n  'UCSCTrackHubConnection',\n  {\n    /**\n     * #slot\n     */\n    hubTxtLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'http://mysite.com/path/to/hub.txt',\n        locationType: 'UriLocation',\n      },\n      description: 'location of the hub file (usually called hub.txt)',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'optional list of genomes to import from this track hub, if empty all genomes will be imported',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseConnectionConfig,\n  },\n)\n\nexport default UCSCTrackHubConnection\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport { types } from 'mobx-state-tree'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #stateModel UCSCTrackHubConnection\n * extends BaseConnectionModel\n */\nexport default function UCSCTrackHubConnection(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'UCSCTrackHubConnection',\n      BaseConnectionModelFactory(pluginManager),\n      types.model({\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        type: types.literal('UCSCTrackHubConnection'),\n      }),\n    )\n    .actions(self => ({\n      /**\n       * #action\n       */\n      async connect() {\n        const { doConnect } = await import('./doConnect')\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        doConnect(self)\n      },\n    }))\n}\n","import { ConnectionType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function UCSCTrackHubConnectionF(pluginManager: PluginManager) {\n  pluginManager.addConnectionType(() => {\n    return new ConnectionType({\n      name: 'UCSCTrackHubConnection',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      displayName: 'UCSC Track Hub',\n      description: 'A track or assembly hub in the Track Hub format',\n      url: 'https://genome.ucsc.edu/goldenPath/help/hgTrackHubHelp.html#Intro',\n    })\n  })\n}\n","import { getFillProps, getStrokeProps } from '@jbrowse/core/util'\nimport { alpha, useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\n\n// core\nimport { HEADER_BAR_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\nconst OverviewScalebarPolygon = observer(function ({\n  model,\n  overview,\n  useOffset = true,\n}: {\n  model: LinearGenomeViewModel\n  overview: Base1DViewModel\n  useOffset?: boolean\n}) {\n  const theme = useTheme()\n  const multiplier = Number(useOffset)\n  const { interRegionPaddingWidth, offsetPx, dynamicBlocks, cytobandOffset } =\n    model\n  const { contentBlocks, totalWidthPxWithoutBorders } = dynamicBlocks\n  const polygonColor = theme.palette.tertiary.light\n\n  // catches possible null from at's below\n  if (!contentBlocks.length) {\n    return null\n  }\n  const first = contentBlocks.at(0)!\n  const last = contentBlocks.at(-1)!\n  const topLeft =\n    (overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0) +\n    cytobandOffset * multiplier\n  const topRight =\n    (overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0) +\n    cytobandOffset * multiplier\n\n  const startPx = Math.max(0, -offsetPx)\n  const endPx =\n    startPx +\n    totalWidthPxWithoutBorders +\n    (contentBlocks.length * interRegionPaddingWidth) / 2\n\n  const points = [\n    [startPx, HEADER_BAR_HEIGHT],\n    [endPx, HEADER_BAR_HEIGHT],\n    [topRight, 0],\n    [topLeft, 0],\n  ]\n\n  return (\n    <polygon\n      points={points.toString()}\n      {...getFillProps(alpha(polygonColor, 0.3))}\n      {...getStrokeProps(alpha(polygonColor, 0.8))}\n    />\n  )\n})\n\nexport default OverviewScalebarPolygon\n","/**\n * fast low-level intersection of 2 coordinate ranges. assumes interbase coordinates.\n *\n * assumes `left <= right` for both ranges\n *\n * @returns array of [left, right], or [] if the ranges do not intersect. the choice of [] is because it allows destructuring array assignment without check for undefined return\n */\nexport function intersection2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n): [number, number] | [] {\n  // this code is verbose because \"if\" statements are faster than Math.min and Math.max\n  if (right1 > left2 && left1 < right2 && right2 - left2 && right1 - left1) {\n    if (left1 > left2) {\n      if (right1 < right2) {\n        // 1     |-------|\n        //     |------------|\n        return [left1, right1]\n      }\n      // 2         |----|\n      //      |------|\n      return [left1, right2]\n    }\n    if (right1 < right2) {\n      // 3  |-----|\n      //       |------|\n      return [left2, right1]\n    }\n    // 4     |------------|\n    //         |-------|\n    return [left2, right2]\n  }\n  return []\n}\n\n/**\n * Return whether 2 interbase coordinate ranges intersect.\n *\n * @param left1 -\n * @param right1 -\n * @param left2 -\n * @param right2 -\n *\n * @returns true if the two ranges intersect\n */\nexport function doesIntersect2(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return right1 > left2 && left1 < right2\n}\n\n/**\n * Return whether the first region is completely contained within the second region\n *\n * @param left1 - candidate inner region left\n * @param right1 - candidate inner region right\n * @param left2 - candidate outer region left\n * @param right2 - candidate outer region right\n */\nexport function isContainedWithin(\n  left1: number,\n  right1: number,\n  left2: number,\n  right2: number,\n) {\n  return left2 <= left1 && right2 >= right1\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\n// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// Same as in non-secure/index.js\nexport const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nexport const random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nexport const customRandom = (alphabet, defaultSize, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  const mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  const step = -~((1.6 * mask * defaultSize) / alphabet.length)\n\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      const bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) {\n          return id\n        }\n      }\n    }\n  }\n}\n\nexport const customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\n\nexport const nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unnecessary because\n    // the bitmask trims bytes down to the alphabet size.\n    byte &= 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import type React from 'react'\n\nimport PluggableElementBase from './PluggableElementBase'\n\nimport type { IAnyModelType } from 'mobx-state-tree'\n\ntype BasicComponent = React.ComponentType<{\n  model: any\n}>\ntype AddTrackWorkflowComponentType =\n  | React.LazyExoticComponent<BasicComponent>\n  | BasicComponent\n\nexport default class AddTrackWorkflow extends PluggableElementBase {\n  ReactComponent: AddTrackWorkflowComponentType\n\n  stateModel: IAnyModelType\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: AddTrackWorkflowComponentType\n    stateModel: IAnyModelType\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.stateModel = stuff.stateModel\n  }\n}\n","import { Checkbox, FormControlLabel } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  block: {\n    display: 'block',\n  },\n})\n\nexport default function Checkbox2({\n  checked,\n  disabled,\n  label,\n  onChange,\n}: {\n  checked: boolean\n  disabled?: boolean\n  label: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className={classes.block}\n      control={<Checkbox checked={checked} onChange={onChange} />}\n      label={label}\n    />\n  )\n}\n","import { parseBreakend } from '@gmod/vcf'\n\nimport type { Track } from './types'\nimport type { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport function getBreakendCoveringRegions({\n  feature,\n  assembly,\n}: {\n  feature: Feature\n  assembly: Assembly\n}) {\n  const alt = feature.get('ALT')?.[0]\n  const bnd = alt ? parseBreakend(alt) : undefined\n  const startPos = feature.get('start')\n  const refName = feature.get('refName')\n  const f = (ref: string) => assembly.getCanonicalRefName(ref) || ref\n\n  if (alt === '<TRA>') {\n    const INFO = feature.get('INFO')\n    return {\n      pos: startPos,\n      refName: f(refName),\n      mateRefName: f(INFO.CHR2[0]),\n      matePos: INFO.END[0] - 1,\n    }\n  } else if (bnd?.MatePosition) {\n    const matePosition = bnd.MatePosition.split(':')\n    return {\n      pos: startPos,\n      refName: f(refName),\n      mateRefName: f(matePosition[0]!),\n      matePos: +matePosition[1]! - 1,\n    }\n  } else if (feature.get('mate')) {\n    const mate = feature.get('mate')\n    return {\n      pos: startPos,\n      refName: f(refName),\n      mateRefName: f(mate.refName),\n      matePos: mate.start,\n    }\n  } else {\n    return {\n      pos: startPos,\n      refName: f(refName),\n      mateRefName: f(refName),\n      matePos: feature.get('end'),\n    }\n  }\n}\n\nexport function stripIds(arr: Track[]) {\n  return arr.map(({ id, displays, ...rest }) => ({\n    ...rest,\n    displays: displays.map(({ id, ...rest }) => rest),\n  }))\n}\n\nexport function makeTitle(f: Feature) {\n  return `${f.get('name') || f.get('id') || 'breakend'} split detail`\n}\n","import { when } from '@jbrowse/core/util'\n\nimport { getBreakendCoveringRegions, makeTitle, stripIds } from './util'\n\nimport type { BreakpointSplitView, Track } from './types'\nimport type { AbstractSessionModel, Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nexport async function navToMultiLevelBreak({\n  stableViewId,\n  feature,\n  assemblyName,\n  session,\n  mirror,\n  tracks: viewTracks = [],\n}: {\n  stableViewId?: string\n  feature: Feature\n  assemblyName: string\n  windowSize?: number\n  session: AbstractSessionModel\n  mirror?: boolean\n  tracks?: Track[]\n}) {\n  const { assemblyManager } = session\n  const assembly = await assemblyManager.waitForAssembly(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n\n  const { refName, pos, mateRefName, matePos } = getBreakendCoveringRegions({\n    feature,\n    assembly: assembly,\n  })\n\n  let view = session.views.find(f => f.id === stableViewId) as\n    | BreakpointSplitView\n    | undefined\n  if (!view) {\n    view = session.addView('BreakpointSplitView', {\n      id: stableViewId,\n      type: 'BreakpointSplitView',\n      displayName: makeTitle(feature),\n      views: [\n        {\n          type: 'LinearGenomeView',\n          hideHeader: true,\n          tracks: stripIds(viewTracks),\n        },\n        {\n          type: 'LinearGenomeView',\n          hideHeader: true,\n          tracks: stripIds(mirror ? [...viewTracks].reverse() : viewTracks),\n        },\n      ],\n    }) as unknown as { views: LinearGenomeViewModel[] }\n  }\n  // @ts-expect-error\n  view.setDisplayName(makeTitle(feature))\n  const r1 = assembly.regions!.find(r => r.refName === refName)\n  const r2 = assembly.regions!.find(r => r.refName === mateRefName)\n  if (!r1 || !r2) {\n    throw new Error(\"can't find regions\")\n  }\n  await Promise.all([\n    view.views[0]!.navToLocations([\n      {\n        refName,\n        start: r1.start,\n        end: pos,\n        assemblyName,\n      },\n      {\n        refName,\n        start: pos + 1,\n        end: r1.end,\n        assemblyName,\n      },\n    ]),\n    view.views[1]!.navToLocations([\n      {\n        refName: mateRefName,\n        start: r2.start,\n        end: matePos,\n        assemblyName,\n      },\n      {\n        refName: mateRefName,\n        start: matePos + 1,\n        end: r2.end,\n        assemblyName,\n      },\n    ]),\n  ])\n  await when(() => view.views[1]!.initialized && view.views[0]!.initialized)\n  view.views[1]!.zoomTo(10)\n  view.views[0]!.zoomTo(10)\n  view.views[1]!.centerAt(matePos, mateRefName)\n  view.views[0]!.centerAt(pos, refName)\n}\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { Button, DialogActions, DialogContent } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { getSnapshot } from 'mobx-state-tree'\n\nimport Checkbox2 from './Checkbox2'\nimport { navToMultiLevelBreak } from './navToMultiLevelBreak'\n\nimport type { Track } from './types'\nimport type { AbstractSessionModel, Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nconst BreakendMultiLevelOptionDialog = observer(function ({\n  session,\n  handleClose,\n  feature,\n  assemblyName,\n  stableViewId,\n  view,\n}: {\n  session: AbstractSessionModel\n  handleClose: () => void\n  feature: Feature\n  view?: LinearGenomeViewModel\n  assemblyName: string\n  stableViewId?: string\n}) {\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [mirror, setMirror] = useState(true)\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      title=\"Multi-level breakpoint split view options\"\n    >\n      <DialogContent>\n        <div>Launch multi-level breakpoint split view</div>\n        {view ? (\n          <>\n            <Checkbox2\n              checked={copyTracks}\n              label=\"Copy tracks into the new view\"\n              onChange={event => {\n                setCopyTracks(event.target.checked)\n              }}\n            />\n\n            {copyTracks ? (\n              <Checkbox2\n                checked={mirror}\n                disabled={!copyTracks}\n                label=\"Mirror the copied tracks (only available if copying tracks and using two level)\"\n                onChange={event => {\n                  setMirror(event.target.checked)\n                }}\n              />\n            ) : null}\n          </>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            ;(async () => {\n              try {\n                await navToMultiLevelBreak({\n                  stableViewId,\n                  session,\n                  tracks:\n                    copyTracks && view\n                      ? (getSnapshot(view.tracks) as Track[])\n                      : [],\n                  mirror,\n                  feature,\n                  assemblyName,\n                })\n              } catch (e) {\n                console.error(e)\n                session.notifyError(`${e}`, e)\n              }\n            })()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default BreakendMultiLevelOptionDialog\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { useLocalStorage } from '@jbrowse/core/util'\nimport { Button, DialogActions, DialogContent, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport Checkbox2 from './Checkbox2'\nimport { navToSingleLevelBreak } from './navToSingleLevelBreak'\n\nimport type { AbstractSessionModel, Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nconst BreakendSingleLevelOptionDialog = observer(function ({\n  session,\n  handleClose,\n  feature,\n  stableViewId,\n  assemblyName,\n  view,\n}: {\n  session: AbstractSessionModel\n  handleClose: () => void\n  stableViewId?: string\n  feature: Feature\n  view?: LinearGenomeViewModel\n  assemblyName: string\n}) {\n  const [copyTracks, setCopyTracks] = useState(true)\n  const [focusOnBreakends, setFocusOnBreakends] = useState(true)\n  const [windowSize, setWindowSize] = useLocalStorage(\n    'breakpointWindowSize',\n    '5000',\n  )\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n      title=\"Single-level breakpoint split view options\"\n    >\n      <DialogContent>\n        {view ? (\n          <Checkbox2\n            checked={copyTracks}\n            label=\"Copy tracks into the new view\"\n            onChange={event => {\n              setCopyTracks(event.target.checked)\n            }}\n          />\n        ) : null}\n        <Checkbox2\n          checked={copyTracks}\n          label=\"Focus on breakends\"\n          onChange={event => {\n            setFocusOnBreakends(event.target.checked)\n          }}\n        />\n\n        <TextField\n          label=\"Window size (bp)\"\n          value={windowSize}\n          onChange={event => {\n            setWindowSize(event.target.value)\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            ;(async () => {\n              try {\n                const { assemblyManager } = session\n                const assembly =\n                  await assemblyManager.waitForAssembly(assemblyName)\n                if (!assembly) {\n                  throw new Error(`assembly ${assemblyName} not found`)\n                }\n                await navToSingleLevelBreak({\n                  feature,\n                  assemblyName,\n                  focusOnBreakends,\n                  session,\n                  stableViewId,\n                  tracks: view?.tracks,\n                  windowSize: +windowSize || 0,\n                })\n              } catch (e) {\n                console.error(e)\n                session.notifyError(`${e}`, e)\n              }\n            })()\n            handleClose()\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n        >\n          OK\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default BreakendSingleLevelOptionDialog\n","import { gatherOverlaps, getSession, when } from '@jbrowse/core/util'\nimport { getSnapshot } from 'mobx-state-tree'\n\nimport { getBreakendCoveringRegions, makeTitle, stripIds } from './util'\n\nimport type { BreakpointSplitView } from './types'\nimport type { AbstractSessionModel, Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nexport function singleLevelFocusedSnapshotFromBreakendFeature({\n  feature,\n  session,\n  assemblyName,\n  windowSize = 0,\n}: {\n  feature: Feature\n  session: AbstractSessionModel\n  assemblyName: string\n  windowSize?: number\n}) {\n  const { assemblyManager } = session\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const coverage = getBreakendCoveringRegions({\n    feature,\n    assembly,\n  })\n  const { refName, mateRefName } = coverage\n  const topRegion = assembly.regions.find(f => f.refName === refName)!\n  const bottomRegion = assembly.regions.find(f => f.refName === mateRefName)!\n  return {\n    coverage,\n    snap: {\n      type: 'BreakpointSplitView',\n      views: [\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: gatherOverlaps([\n            {\n              ...topRegion,\n              end: coverage.pos + windowSize,\n              assemblyName,\n            },\n            {\n              ...bottomRegion,\n              start: coverage.matePos - windowSize,\n              assemblyName,\n            },\n          ]),\n        },\n      ],\n      displayName: makeTitle(feature),\n    },\n  }\n}\n\nexport function singleLevelEncompassingSnapshotFromBreakendFeature({\n  feature,\n  session,\n  assemblyName,\n}: {\n  feature: Feature\n  session: AbstractSessionModel\n  assemblyName: string\n}) {\n  const { assemblyManager } = session\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n  const coverage = getBreakendCoveringRegions({\n    feature,\n    assembly,\n  })\n  const { refName, mateRefName } = coverage\n  const topRegion = assembly.regions.find(f => f.refName === refName)!\n  const bottomRegion = assembly.regions.find(f => f.refName === mateRefName)!\n  return {\n    coverage,\n    snap: {\n      type: 'BreakpointSplitView',\n      views: [\n        {\n          type: 'LinearGenomeView',\n          displayedRegions: gatherOverlaps([\n            { ...topRegion, assemblyName },\n            { ...bottomRegion, assemblyName },\n          ]),\n        },\n      ],\n      displayName: makeTitle(feature),\n    },\n  }\n}\n\nexport async function navToSingleLevelBreak({\n  stableViewId,\n  feature,\n  assemblyName,\n  session,\n  tracks,\n  windowSize = 0,\n  focusOnBreakends,\n}: {\n  stableViewId?: string\n  feature: Feature\n  assemblyName: string\n  windowSize?: number\n  session: AbstractSessionModel\n  tracks?: any\n  focusOnBreakends?: boolean\n}) {\n  const { snap, coverage } = focusOnBreakends\n    ? singleLevelFocusedSnapshotFromBreakendFeature({\n        feature,\n        assemblyName,\n        session,\n        windowSize,\n      })\n    : singleLevelEncompassingSnapshotFromBreakendFeature({\n        feature,\n        assemblyName,\n        session,\n      })\n  const { refName, pos: startPos, mateRefName, matePos: endPos } = coverage\n  let view = session.views.find(f => f.id === stableViewId) as\n    | BreakpointSplitView\n    | undefined\n  if (!view) {\n    view = session.addView('BreakpointSplitView', {\n      ...snap,\n      views: [\n        {\n          ...snap.views[0],\n          tracks: tracks ? stripIds(getSnapshot(tracks)) : [],\n        },\n      ],\n    }) as unknown as { views: LinearGenomeViewModel[] }\n  } else {\n    view.views[0]?.setDisplayedRegions(snap.views[0]!.displayedRegions)\n    // @ts-expect-error\n    view.setDisplayName(snap.displayName)\n  }\n  const lgv = view.views[0]!\n  await when(() => lgv.initialized)\n\n  const l0 = lgv.bpToPx({\n    coord: Math.max(0, startPos - windowSize),\n    refName,\n  })\n  const r0 = lgv.bpToPx({\n    coord: endPos + windowSize,\n    refName: mateRefName,\n  })\n  if (l0 && r0) {\n    lgv.moveTo(\n      {\n        ...l0,\n        offset: l0.offsetPx,\n      },\n      {\n        ...r0,\n        offset: r0.offsetPx,\n      },\n    )\n  } else {\n    getSession(lgv).notify('Unable to navigate to breakpoint')\n  }\n}\n","import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n\nexport default class ArcRenderer extends FeatureRendererType {}\n","import { Suspense, lazy, useRef, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { bpSpanPx, getStrokeProps } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\n\nconst ArcTooltip = lazy(() => import('../ArcTooltip'))\n\nfunction Arc({\n  selectedFeatureId,\n  region,\n  bpPerPx,\n  config,\n  height: displayHeight,\n  feature,\n  onFeatureClick,\n}: {\n  selectedFeatureId?: string\n  region: Region\n  config: AnyConfigurationModel\n  bpPerPx: number\n  height: number\n  feature: Feature\n  onFeatureClick: (event: React.MouseEvent, featureId: string) => void\n}) {\n  const [isMouseOvered, setIsMouseOvered] = useState(false)\n  const [left, right] = bpSpanPx(\n    feature.get('start'),\n    feature.get('end'),\n    region,\n    bpPerPx,\n  )\n  const featureId = feature.id()\n  const selected =\n    selectedFeatureId && String(selectedFeatureId) === String(feature.id())\n  const stroke = selected ? 'red' : readConfObject(config, 'color', { feature })\n  const textStroke = selected ? 'red' : 'black'\n  const label = readConfObject(config, 'label', { feature })\n  const caption = readConfObject(config, 'caption', { feature })\n  const strokeWidth = readConfObject(config, 'thickness', { feature }) || 2\n  const height = Math.min(\n    readConfObject(config, 'height', { feature }) || 100,\n    displayHeight,\n  )\n  const ref = useRef<SVGPathElement>(null)\n\n  // formula: https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B%C3%A9zier_curves\n  const t = 0.5\n  const t1 = 1 - t\n  const textYCoord = 3 * (t1 * t1) * (t * height) + 3 * t1 * (t * t) * height\n\n  return (\n    <g>\n      <path\n        ref={ref}\n        {...getStrokeProps(stroke)}\n        d={`M ${left} 0 C ${left} ${height}, ${right} ${height}, ${right} 0`}\n        strokeWidth={strokeWidth}\n        fill=\"transparent\"\n        onClick={e => {\n          onFeatureClick(e, featureId)\n        }}\n        onMouseOver={() => {\n          setIsMouseOvered(true)\n        }}\n        onMouseLeave={() => {\n          setIsMouseOvered(false)\n        }}\n        pointerEvents=\"stroke\"\n      />\n\n      {isMouseOvered ? (\n        <Suspense fallback={null}>\n          <ArcTooltip contents={caption} />\n        </Suspense>\n      ) : null}\n      <text\n        x={left + (right - left) / 2}\n        y={textYCoord + 3}\n        stroke=\"white\"\n        strokeWidth=\"0.6em\"\n      >\n        {label}\n      </text>\n      <text\n        x={left + (right - left) / 2}\n        y={textYCoord + 3}\n        stroke={textStroke}\n      >\n        {label}\n      </text>\n    </g>\n  )\n}\n\nfunction polarToCartesian(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number,\n) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians),\n  }\n}\n\nfunction describeArc(\n  x: number,\n  y: number,\n  radius: number,\n  startAngle: number,\n  endAngle: number,\n) {\n  const start = polarToCartesian(x, y, radius, endAngle)\n  const end = polarToCartesian(x, y, radius, startAngle)\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1'\n\n  return [\n    'M',\n    start.x,\n    start.y,\n    'A',\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(' ')\n}\n\nfunction SemiCircles({\n  selectedFeatureId,\n  region,\n  bpPerPx,\n  config,\n  onFeatureClick,\n  feature,\n}: {\n  selectedFeatureId?: string\n  region: Region\n  config: AnyConfigurationModel\n  onFeatureClick: (event: React.MouseEvent, featureId: string) => void\n  bpPerPx: number\n  feature: Feature\n}) {\n  const [isMouseOvered, setIsMouseOvered] = useState(false)\n  const [left, right] = bpSpanPx(\n    feature.get('start'),\n    feature.get('end'),\n    region,\n    bpPerPx,\n  )\n\n  const featureId = feature.id()\n  const selected =\n    selectedFeatureId && String(selectedFeatureId) === String(feature.id())\n  const stroke = selected ? 'red' : readConfObject(config, 'color', { feature })\n  const textStroke = selected ? 'red' : 'black'\n  const label = readConfObject(config, 'label', { feature })\n  const caption = readConfObject(config, 'caption', { feature })\n  const strokeWidth = readConfObject(config, 'thickness', { feature }) || 2\n  const ref = useRef<SVGPathElement>(null)\n  const textYCoord = (right - left) / 2\n\n  return (\n    <g>\n      <path\n        d={describeArc(\n          left + (right - left) / 2,\n          0,\n          (right - left) / 2,\n          90,\n          270,\n        )}\n        {...getStrokeProps(stroke)}\n        strokeWidth={strokeWidth}\n        fill=\"transparent\"\n        onClick={e => {\n          onFeatureClick(e, featureId)\n        }}\n        onMouseOver={() => {\n          setIsMouseOvered(true)\n        }}\n        onMouseLeave={() => {\n          setIsMouseOvered(false)\n        }}\n        ref={ref}\n        pointerEvents=\"stroke\"\n      />\n      {isMouseOvered ? <ArcTooltip contents={caption} /> : null}\n      <text\n        x={left + (right - left) / 2}\n        y={textYCoord + 3}\n        stroke=\"white\"\n        strokeWidth=\"0.6em\"\n      >\n        {label}\n      </text>\n      <text\n        x={left + (right - left) / 2}\n        y={textYCoord + 3}\n        stroke={textStroke}\n      >\n        {label}\n      </text>\n    </g>\n  )\n}\nconst ArcRendering = observer(function ({\n  features,\n  config,\n  regions,\n  bpPerPx,\n  height,\n  exportSVG,\n  displayModel,\n  onFeatureClick,\n}: {\n  features: Map<string, Feature>\n  config: AnyConfigurationModel\n  regions: Region[]\n  bpPerPx: number\n  height: number\n  displayModel?: { selectedFeatureId: string }\n  onFeatureClick: (event: React.MouseEvent, featureId: string) => void\n  exportSVG: boolean\n}) {\n  const region = regions[0]!\n  const width = (region.end - region.start) / bpPerPx\n  const semicircles = readConfObject(config, 'displayMode') === 'semicircles'\n  const { selectedFeatureId } = displayModel || {}\n\n  return (\n    <Wrapper exportSVG={exportSVG} width={width} height={height}>\n      {[...features.values()].map(f =>\n        semicircles ? (\n          <SemiCircles\n            key={f.id()}\n            config={config}\n            region={region}\n            bpPerPx={bpPerPx}\n            selectedFeatureId={selectedFeatureId}\n            onFeatureClick={onFeatureClick}\n            feature={f}\n          />\n        ) : (\n          <Arc\n            key={f.id()}\n            height={height}\n            config={config}\n            region={region}\n            bpPerPx={bpPerPx}\n            selectedFeatureId={selectedFeatureId}\n            onFeatureClick={onFeatureClick}\n            feature={f}\n          />\n        ),\n      )}\n    </Wrapper>\n  )\n})\n\nfunction Wrapper({\n  exportSVG,\n  width,\n  height,\n  children,\n}: {\n  exportSVG: boolean\n  width: number\n  height: number\n  children: React.ReactNode\n}) {\n  return exportSVG ? (\n    children\n  ) : (\n    <svg width={width} height={height}>\n      {children}\n    </svg>\n  )\n}\n\nexport default ArcRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config ArcRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ArcRenderer = ConfigurationSchema(\n  'ArcRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of the arcs',\n      defaultValue: 'darkblue',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    thickness: {\n      type: 'number',\n      description: 'the thickness of the arcs',\n      defaultValue: `jexl:logThickness(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    label: {\n      type: 'string',\n      description: 'the label to appear at the apex of the arcs',\n      defaultValue: `jexl:get(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'the height of the arcs',\n      defaultValue: `jexl:log10(get(feature,'end')-get(feature,'start'))*50`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    caption: {\n      type: 'string',\n      description:\n        'the caption to appear when hovering over any point on the arcs',\n      defaultValue: `jexl:get(feature,'name')`,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    displayMode: {\n      type: 'enum',\n      defaultValue: 'arcs',\n      model: types.enumeration('DisplayMode', ['arcs', 'semicircles']),\n      description: 'render semi-circles instead of arcs',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default ArcRenderer\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearArcDisplay\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearArcDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearArcDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        displayMode: types.maybe(types.string),\n      }),\n    )\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get blockType() {\n        return 'staticBlocks'\n      },\n      /**\n       * #getter\n       */\n      get renderDelay() {\n        return 500\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get displayModeSetting() {\n        return self.displayMode ?? getConf(self, ['renderer', 'displayMode'])\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n        const config = configBlob as Omit<typeof configBlob, symbol>\n        return self.rendererType.configSchema.create(\n          {\n            ...config,\n            displayMode: self.displayModeSetting,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            rpcDriverName: self.rpcDriverName,\n            config: self.rendererConfig,\n            height: self.height,\n          }\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setDisplayMode(flag: string) {\n        self.displayMode = flag\n      },\n    }))\n    .views(self => {\n      const superMenuItems = self.trackMenuItems\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superMenuItems(),\n            {\n              label: 'Display mode',\n              subMenu: [\n                {\n                  type: 'radio',\n                  label: 'Arcs',\n                  onClick: () => {\n                    self.setDisplayMode('arcs')\n                  },\n                  checked: self.displayMode === 'arcs',\n                },\n                {\n                  type: 'radio',\n                  label: 'Semi-circles',\n                  onClick: () => {\n                    self.setDisplayMode('semicircles')\n                  },\n                  checked: self.displayMode === 'semicircles',\n                },\n              ],\n            },\n          ]\n        },\n      }\n    })\n}\n","import type React from 'react'\n\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes'\nimport {\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isSelectionContainer,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport {\n  FeatureDensityMixin,\n  TrackHeightMixin,\n} from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel LinearPairedArcDisplay\n * this is a non-block-based track type, and can connect arcs across multiple\n * displayedRegions\n *\n * extends\n * - [BaseDisplay](../basedisplay)\n * - [TrackHeightMixin](../trackheightmixin)\n * - [FeatureDensityMixin](../featuredensitymixin)\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearPairedArcDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearPairedArcDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        displayMode: types.maybe(types.string),\n      }),\n    )\n    .volatile(() => ({\n      lastDrawnOffsetPx: 0,\n      features: undefined as Feature[] | undefined,\n      loading: false,\n      drawn: true,\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get displayModeSetting() {\n        return self.displayMode ?? getConf(self, ['renderer', 'displayMode'])\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'VariantFeatureWidget',\n            'variantFeature',\n            {\n              view: getContainingView(self),\n              track: getContainingTrack(self),\n              featureData: feature.toJSON(),\n            },\n          )\n\n          session.showWidget(featureWidget)\n        }\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n      /**\n       * #action\n       */\n      setLoading(flag: boolean) {\n        self.loading = flag\n      },\n      /**\n       * #action\n       */\n      setFeatures(f: Feature[]) {\n        self.features = f\n      },\n      /**\n       * #action\n       */\n      setDisplayMode(flag: string) {\n        self.displayMode = flag\n      },\n    }))\n\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('./afterAttach')\n            doAfterAttach(self)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n      /**\n       * #action\n       */\n      async renderSvg(opts: {\n        rasterizeLayers?: boolean\n      }): Promise<React.ReactNode> {\n        const { renderArcSvg } = await import('./renderSvg')\n        // @ts-expect-error\n        return renderArcSvg(self, opts)\n      },\n    }))\n}\n\nexport type LinearArcDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearArcDisplayModel = Instance<LinearArcDisplayStateModel>\n","import Plugin from '@jbrowse/core/Plugin'\nimport { set1 } from '@jbrowse/core/ui/colors'\n\nimport ArcRendererF from './ArcRenderer'\nimport LinearArcDisplayF from './LinearArcDisplay'\nimport LinearPairedArcDisplayF from './LinearPairedArcDisplay'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class ArcPlugin extends Plugin {\n  name = 'ArcRenderer'\n  install(pluginManager: PluginManager) {\n    ArcRendererF(pluginManager)\n    LinearArcDisplayF(pluginManager)\n    LinearPairedArcDisplayF(pluginManager)\n\n    pluginManager.jexl.addFunction(\n      'logThickness',\n      (feature: Feature, attributeName: string) =>\n        Math.log(feature.get(attributeName) + 1),\n    )\n    pluginManager.jexl.addFunction(\n      'defaultPairedArcColor',\n      (_feature: Feature, alt?: string) => {\n        if (alt?.startsWith('<DEL')) {\n          return set1[0]\n        } else if (alt?.startsWith('<DUP')) {\n          return set1[1]\n        } else if (alt?.startsWith('<INV')) {\n          return set1[2]\n        } else if (alt?.startsWith('<TRA')) {\n          return set1[3]\n        } else if (alt?.startsWith('<CNV')) {\n          return set1[4]\n        } else {\n          return set1[6] // skip 5, yellow\n        }\n      },\n    )\n  }\n}\n","import ArcRenderer from './ArcRenderer'\nimport ReactComponent from './ArcRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function ArcRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new ArcRenderer({\n        name: 'ArcRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearArcDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearArcDisplay',\n      displayName: 'Arc display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'FeatureTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearArcDisplay\n */\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearArcDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'ArcRenderer' },\n      ),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport { DisplayType } from '@jbrowse/core/pluggableElementTypes'\n\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearPairedArcDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory()\n    return new DisplayType({\n      name: 'LinearPairedArcDisplay',\n      displayName: 'Arc display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'VariantTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(() => import('./components/ReactComponent')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\n/**\n * #config LinearPairedArcDisplay\n */\nexport function configSchemaFactory() {\n  return ConfigurationSchema(\n    'LinearPairedArcDisplay',\n    {\n      /**\n       * #slot\n       */\n      color: {\n        type: 'color',\n        description: 'the color of the arcs',\n        defaultValue: 'jexl:defaultPairedArcColor(feature,alt)',\n        contextVariable: ['feature', 'alt'],\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config OAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst OAuthConfigSchema = ConfigurationSchema(\n  'OAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: 'Bearer',\n    },\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    tokenEndpoint: {\n      description: 'the token endpoint of the internet account',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    needsPKCE: {\n      description: 'boolean to indicate if the endpoint needs a PKCE code',\n      type: 'boolean',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    clientId: {\n      description: 'id for the OAuth application',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    scopes: {\n      description: 'optional scopes for the authorization call',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    state: {\n      description: 'optional state for the authorization call',\n      type: 'string',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    responseType: {\n      description:\n        \"the type of response from the authorization endpoint. can be 'token' or 'code'\",\n      type: 'string',\n      defaultValue: 'code',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type OAuthInternetAccountConfigModel = typeof OAuthConfigSchema\nexport type OAuthInternetAccountConfig =\n  Instance<OAuthInternetAccountConfigModel>\nexport default OAuthConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport OAuthConfigSchema from '../OAuthModel/configSchema'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config DropboxOAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DropboxOAuthConfigSchema = ConfigurationSchema(\n  'DropboxOAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://www.dropbox.com/oauth2/authorize',\n    },\n    /**\n     * #slot\n     */\n    tokenEndpoint: {\n      description: 'the token endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://api.dropbox.com/oauth2/token',\n    },\n    /**\n     * #slot\n     */\n    needsPKCE: {\n      description: 'boolean to indicate if the endpoint needs a PKCE code',\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: [\n        'addtodropbox.com',\n        'db.tt',\n        'dropbox.com',\n        'dropboxapi.com',\n        'dropboxbusiness.com',\n        'dropbox.tech',\n        'getdropbox.com',\n      ],\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: OAuthConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport type DropboxOAuthInternetAccountConfigModel =\n  typeof DropboxOAuthConfigSchema\n\nexport type DropboxOAuthInternetAccountConfig =\n  Instance<DropboxOAuthInternetAccountConfigModel>\nexport default DropboxOAuthConfigSchema\n","export function fixup(buf: string) {\n  return buf.replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '')\n}\n\nexport async function generateChallenge(val: string) {\n  const sha256 = await import('crypto-js/sha256').then(f => f.default)\n  const Base64 = await import('crypto-js/enc-base64')\n  return fixup(Base64.stringify(sha256(val)))\n}\n\n// if response is JSON, checks if it needs to remove tokens in error, or just plain throw\nexport function processError(text: string, invalidErrorCb: () => void) {\n  try {\n    const obj = JSON.parse(text)\n    if (obj.error === 'invalid_grant') {\n      invalidErrorCb()\n    }\n    return obj?.error_description ?? text\n  } catch (e) {\n    /* response text is not json, just use original text as error */\n  }\n  return text\n}\n\nexport function processTokenResponse(\n  data: { refresh_token?: string; access_token: string },\n  storeRefreshTokenCb: (str: string) => void,\n) {\n  if (data.refresh_token) {\n    storeRefreshTokenCb(data.refresh_token)\n  }\n  return data.access_token\n}\n","export async function getResponseError({\n  response,\n  reason,\n  statusText,\n}: {\n  response: Response\n  reason?: string\n  statusText?: string\n}) {\n  return [\n    `HTTP ${response.status}`,\n    reason,\n    statusText ?? (await getError(response)),\n  ]\n    .filter(f => !!f)\n    .join(' - ')\n}\n\nexport async function getError(response: Response) {\n  try {\n    return await response.text()\n  } catch (e) {\n    return response.statusText\n  }\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { isElectron } from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\n\nimport {\n  fixup,\n  generateChallenge,\n  processError,\n  processTokenResponse,\n} from './util'\nimport { getResponseError } from '../util'\n\nimport type { OAuthInternetAccountConfigModel } from './configSchema'\nimport type { UriLocation } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n// ISC Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n// https://github.com/WebReflection/uint8-to-base64\nfunction encode(uint8array: Uint8Array) {\n  const output = []\n\n  for (let i = 0, length = uint8array.length; i < length; i++) {\n    output.push(String.fromCharCode(uint8array[i]!))\n  }\n\n  return btoa(output.join(''))\n}\n\ninterface OAuthData {\n  client_id: string\n  redirect_uri: string\n  response_type: 'token' | 'code'\n  scope?: string\n  code_challenge?: string\n  code_challenge_method?: string\n  token_access_type?: string\n  state?: string\n}\n\n/**\n * #stateModel OAuthInternetAccount\n */\nconst stateModelFactory = (configSchema: OAuthInternetAccountConfigModel) => {\n  return InternetAccount.named('OAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('OAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => {\n      let codeVerifier: string | undefined = undefined\n      return {\n        /**\n         * #getter\n         */\n        get codeVerifierPKCE() {\n          if (!codeVerifier) {\n            const array = new Uint8Array(32)\n            globalThis.crypto.getRandomValues(array)\n            codeVerifier = fixup(encode(array))\n          }\n          return codeVerifier\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get authEndpoint(): string {\n        return getConf(self, 'authEndpoint')\n      },\n      /**\n       * #getter\n       */\n      get tokenEndpoint(): string {\n        return getConf(self, 'tokenEndpoint')\n      },\n      /**\n       * #getter\n       */\n      get needsPKCE(): boolean {\n        return getConf(self, 'needsPKCE')\n      },\n      /**\n       * #getter\n       */\n      get clientId(): string {\n        return getConf(self, 'clientId')\n      },\n      /**\n       * #getter\n       */\n      get scopes(): string {\n        return getConf(self, 'scopes')\n      },\n      /**\n       * #method\n       * OAuth state parameter:\n       * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n       *\n       * Can override or extend if dynamic state is needed.\n       */\n      state(): string | undefined {\n        return getConf(self, 'state')\n      },\n      /**\n       * #getter\n       */\n      get responseType(): 'token' | 'code' {\n        return getConf(self, 'responseType')\n      },\n      /**\n       * #getter\n       */\n      get refreshTokenKey() {\n        return `${self.internetAccountId}-refreshToken`\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      storeRefreshToken(refreshToken: string) {\n        localStorage.setItem(self.refreshTokenKey, refreshToken)\n      },\n      /**\n       * #action\n       */\n      removeRefreshToken() {\n        localStorage.removeItem(self.refreshTokenKey)\n      },\n      /**\n       * #method\n       */\n      retrieveRefreshToken() {\n        return localStorage.getItem(self.refreshTokenKey)\n      },\n      /**\n       * #action\n       */\n      async exchangeAuthorizationForAccessToken(\n        token: string,\n        redirectUri: string,\n      ) {\n        const params = new URLSearchParams(\n          Object.entries({\n            code: token,\n            grant_type: 'authorization_code',\n            client_id: self.clientId,\n            redirect_uri: redirectUri,\n            ...(self.needsPKCE ? { code_verifier: self.codeVerifierPKCE } : {}),\n          }),\n        )\n\n        const response = await fetch(self.tokenEndpoint, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: params.toString(),\n        })\n\n        if (!response.ok) {\n          throw new Error(\n            await getResponseError({\n              response,\n              reason: 'Failed to obtain token',\n            }),\n          )\n        }\n\n        const data = await response.json()\n        return processTokenResponse(data, token => {\n          this.storeRefreshToken(token)\n        })\n      },\n      /**\n       * #action\n       */\n      async exchangeRefreshForAccessToken(refreshToken: string) {\n        const response = await fetch(self.tokenEndpoint, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: new URLSearchParams(\n            Object.entries({\n              grant_type: 'refresh_token',\n              refresh_token: refreshToken,\n              client_id: self.clientId,\n            }),\n          ).toString(),\n        })\n\n        if (!response.ok) {\n          self.removeToken()\n          const text = await response.text()\n          throw new Error(\n            await getResponseError({\n              response,\n              statusText: processError(text, () => {\n                this.removeRefreshToken()\n              }),\n            }),\n          )\n        }\n        const data = await response.json()\n        return processTokenResponse(data, token => {\n          this.storeRefreshToken(token)\n        })\n      },\n    }))\n    .actions(self => {\n      let listener: (event: MessageEvent) => undefined\n      let exchangedTokenPromise: Promise<string> | undefined = undefined\n      return {\n        /**\n         * #action\n         * used to listen to child window for auth code/token\n         */\n        addMessageChannel(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          listener = event => {\n            // this should probably get better handling, but ignored for now\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.finishOAuthWindow(event, resolve, reject)\n          }\n          window.addEventListener('message', listener)\n        },\n        /**\n         * #action\n         */\n        deleteMessageChannel() {\n          window.removeEventListener('message', listener)\n        },\n        /**\n         * #action\n         */\n        async finishOAuthWindow(\n          event: MessageEvent,\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          if (\n            event.data.name !== `JBrowseAuthWindow-${self.internetAccountId}`\n          ) {\n            this.deleteMessageChannel()\n            return\n          }\n          const redirectUriWithInfo = event.data.redirectUri\n          const fixedQueryString = redirectUriWithInfo.replace('#', '?')\n          const redirectUrl = new URL(fixedQueryString)\n          const queryStringSearch = redirectUrl.search\n          const urlParams = new URLSearchParams(queryStringSearch)\n          if (urlParams.has('access_token')) {\n            const token = urlParams.get('access_token')\n            if (!token) {\n              reject(new Error('Error with token endpoint'))\n              return\n            }\n            self.storeToken(token)\n            resolve(token)\n            return\n          }\n          if (urlParams.has('code')) {\n            const code = urlParams.get('code')\n            if (!code) {\n              reject(new Error('Error with authorization endpoint'))\n              return\n            }\n            try {\n              const token = await self.exchangeAuthorizationForAccessToken(\n                code,\n                redirectUrl.origin + redirectUrl.pathname,\n              )\n              self.storeToken(token)\n              resolve(token)\n              return\n            } catch (e) {\n              if (e instanceof Error) {\n                reject(e)\n              } else {\n                reject(new Error(String(e)))\n              }\n              return\n            }\n          }\n          if (redirectUriWithInfo.includes('access_denied')) {\n            reject(new Error('OAuth flow was cancelled'))\n            return\n          }\n          if (redirectUriWithInfo.includes('error')) {\n            reject(new Error(`OAuth flow error: ${queryStringSearch}`))\n            return\n          }\n          this.deleteMessageChannel()\n        },\n        /**\n         * #action\n         * opens external OAuth flow, popup for web and new browser window for\n         * desktop\n         */\n        async useEndpointForAuthorization(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          const redirectUri = isElectron\n            ? 'http://localhost/auth'\n            : window.location.origin + window.location.pathname\n          const data: OAuthData = {\n            client_id: self.clientId,\n            redirect_uri: redirectUri,\n            response_type: self.responseType,\n            token_access_type: 'offline',\n          }\n\n          if (self.state()) {\n            data.state = self.state()\n          }\n\n          if (self.scopes) {\n            data.scope = self.scopes\n          }\n\n          if (self.needsPKCE) {\n            data.code_challenge = await generateChallenge(self.codeVerifierPKCE)\n            data.code_challenge_method = 'S256'\n          }\n\n          const params = new URLSearchParams(Object.entries(data))\n\n          const url = new URL(self.authEndpoint)\n          url.search = params.toString()\n\n          const eventName = `JBrowseAuthWindow-${self.internetAccountId}`\n          if (isElectron) {\n            const { ipcRenderer } = window.require('electron')\n            const redirectUri = await ipcRenderer.invoke('openAuthWindow', {\n              internetAccountId: self.internetAccountId,\n              data,\n              url: url.toString(),\n            })\n\n            const eventFromDesktop = new MessageEvent('message', {\n              data: { name: eventName, redirectUri: redirectUri },\n            })\n            // may want to improve handling\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.finishOAuthWindow(eventFromDesktop, resolve, reject)\n          } else {\n            window.open(url, eventName, 'width=500,height=600,left=0,top=0')\n          }\n        },\n        /**\n         * #action\n         */\n        async getTokenFromUser(\n          resolve: (token: string) => void,\n          reject: (error: Error) => void,\n        ) {\n          const refreshToken = self.retrieveRefreshToken()\n          let doUserFlow = true\n\n          // if there is a refresh token, then try it out, and only if that\n          // refresh token succeeds, set doUserFlow to false\n          if (refreshToken) {\n            try {\n              const token =\n                await self.exchangeRefreshForAccessToken(refreshToken)\n              resolve(token)\n              doUserFlow = false\n            } catch (e) {\n              console.error(e)\n              self.removeRefreshToken()\n            }\n          }\n          if (doUserFlow) {\n            this.addMessageChannel(resolve, reject)\n            // may want to improve handling\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            this.useEndpointForAuthorization(resolve, reject)\n          }\n        },\n        /**\n         * #action\n         */\n        async validateToken(token: string, location: UriLocation) {\n          const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n          const response = await fetch(location.uri, newInit)\n          if (!response.ok) {\n            self.removeToken()\n            const refreshToken = self.retrieveRefreshToken()\n            if (refreshToken) {\n              try {\n                if (!exchangedTokenPromise) {\n                  exchangedTokenPromise =\n                    self.exchangeRefreshForAccessToken(refreshToken)\n                }\n                const newToken = await exchangedTokenPromise\n                exchangedTokenPromise = undefined\n                return newToken\n              } catch (err) {\n                console.error('Token could not be refreshed', err)\n                // let original error be thrown\n              }\n            }\n\n            throw new Error(\n              await getResponseError({\n                response,\n                reason: 'Error validating token',\n              }),\n            )\n          }\n          return token\n        },\n      }\n    })\n    .actions(self => {\n      const superGetFetcher = self.getFetcher\n      return {\n        /**\n         * #action\n         * Get a fetch method that will add any needed authentication headers\n         * to the request before sending it. If location is provided, it will\n         * be checked to see if it includes a token in it's pre-auth\n         * information.\n         *\n         * @param loc - UriLocation of the resource\n         * @returns A function that can be used to fetch\n         */\n        getFetcher(loc?: UriLocation) {\n          const fetcher = superGetFetcher(loc)\n          return async (input: RequestInfo, init?: RequestInit) => {\n            if (loc) {\n              await self.validateToken(await self.getToken(loc), loc)\n            }\n            return fetcher(input, init)\n          }\n        },\n      }\n    })\n}\n\nexport default stateModelFactory\nexport type OAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type OAuthModel = Instance<OAuthStateModel>\n","import { SvgIcon } from '@mui/material'\n\nimport type { SvgIconProps } from '@mui/material'\n\nexport default function DropboxIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M3 6.2L8 9.39L13 6.2L8 3L3 6.2M13 6.2L18 9.39L23 6.2L18 3L13 6.2M3 12.55L8 15.74L13 12.55L8 9.35L3 12.55M18 9.35L13 12.55L18 15.74L23 12.55L18 9.35M8.03 16.8L13.04 20L18.04 16.8L13.04 13.61L8.03 16.8Z\" />\n    </SvgIcon>\n  )\n}\n","import { getResponseError } from '../util'\n\ninterface DropboxError {\n  error_summary: string\n  error: {\n    '.tag': string\n  }\n}\n\n/**\n * Error messages from\n * https://www.dropbox.com/developers/documentation/http/documentation#sharing-get_shared_link_file\n * */\nconst dropboxErrorMessages: Record<string, string> = {\n  shared_link_not_found: \"The shared link wasn't found.\",\n  shared_link_access_denied:\n    'The caller is not allowed to access this shared link.',\n  unsupported_link_type:\n    'This type of link is not supported; use files/export instead.',\n  shared_link_is_directory: 'Directories cannot be retrieved by this endpoint.',\n}\n\nexport async function getDescriptiveErrorMessage(\n  response: Response,\n  reason?: string,\n) {\n  let errorMessage = ''\n  try {\n    const err = JSON.parse(await response.text()) as DropboxError\n    const tag = err.error['.tag']\n    errorMessage = dropboxErrorMessages[tag] || tag\n  } catch (error) {\n    /* do nothing */\n  }\n  return getResponseError({ response, reason, statusText: errorMessage })\n}\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport { configSchema as OAuthConfigSchema } from '../OAuthModel'\nimport DropboxIcon from './DropboxIcon'\nimport { getDescriptiveErrorMessage } from './util'\nimport baseModel from '../OAuthModel/model'\n\nimport type { DropboxOAuthInternetAccountConfigModel } from './configSchema'\nimport type { UriLocation } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel DropboxOAuthInternetAccount\n */\nconst stateModelFactory = (\n  configSchema: DropboxOAuthInternetAccountConfigModel,\n) => {\n  return baseModel(OAuthConfigSchema)\n    .named('DropboxOAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('DropboxOAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => ({\n      /**\n       * #getter\n       * The FileSelector icon for Dropbox\n       */\n      get toggleContents() {\n        return <DropboxIcon />\n      },\n      /**\n       * #getter\n       */\n      get selectorLabel() {\n        return 'Enter Dropbox share link'\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      getFetcher(location?: UriLocation) {\n        return async (input: RequestInfo, init?: RequestInit) => {\n          const authToken = await self.getToken(location)\n          const newInit = self.addAuthHeaderToInit(\n            { ...init, method: 'POST' },\n            authToken,\n          )\n          newInit.headers.append(\n            'Dropbox-API-Arg',\n            JSON.stringify({ url: input }),\n          )\n          const response = await fetch(\n            'https://content.dropboxapi.com/2/sharing/get_shared_link_file',\n            newInit,\n          )\n          if (!response.ok) {\n            throw new Error(await getDescriptiveErrorMessage(response))\n          }\n          return response\n        }\n      },\n      /**\n       * #action\n       */\n      async validateToken(\n        token: string,\n        location: UriLocation,\n      ): Promise<string> {\n        const response = await fetch(\n          'https://api.dropboxapi.com/2/sharing/get_shared_link_metadata',\n          {\n            method: 'POST',\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              url: location.uri,\n            }),\n          },\n        )\n        if (!response.ok) {\n          const refreshToken = self.retrieveRefreshToken()\n          if (refreshToken) {\n            self.removeRefreshToken()\n            const newToken =\n              await self.exchangeRefreshForAccessToken(refreshToken)\n            return this.validateToken(newToken, location)\n          }\n          throw new Error(\n            await getDescriptiveErrorMessage(\n              response,\n              'Token could not be validated',\n            ),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type DropboxOAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type DropboxOAuthModel = Instance<DropboxOAuthStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config ExternalTokenInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ExternalTokenConfigSchema = ConfigurationSchema(\n  'ExternalTokenInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    validateWithHEAD: {\n      description: 'validate the token with a HEAD request before using it',\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type ExternalTokenInternetAccountConfigModel =\n  typeof ExternalTokenConfigSchema\n\nexport type ExternalTokenInternetAccountConfig =\n  Instance<ExternalTokenInternetAccountConfigModel>\nexport default ExternalTokenConfigSchema\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { Button, DialogActions, DialogContent, TextField } from '@mui/material'\n\nexport const ExternalTokenEntryForm = ({\n  internetAccountId,\n  handleClose,\n}: {\n  internetAccountId: string\n  handleClose: (token?: string) => void\n}) => {\n  const [token, setToken] = useState('')\n\n  return (\n    <Dialog\n      open\n      maxWidth=\"xl\"\n      data-testid=\"externalToken-form\"\n      onClose={() => {\n        handleClose()\n      }}\n      title={`Enter token for ${internetAccountId}`}\n    >\n      <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n        <TextField\n          required\n          label=\"Enter Token\"\n          variant=\"outlined\"\n          onChange={event => {\n            setToken(event.target.value)\n          }}\n          margin=\"dense\"\n          slotProps={{\n            htmlInput: { 'data-testid': 'entry-externalToken' },\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={!token}\n          onClick={() => {\n            if (token) {\n              handleClose(token)\n            }\n          }}\n        >\n          Add\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getRoot, types } from 'mobx-state-tree'\n\nimport { ExternalTokenEntryForm } from './ExternalTokenEntryForm'\n\nimport type { ExternalTokenInternetAccountConfigModel } from './configSchema'\nimport type { UriLocation } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\nconst stateModelFactory = (\n  configSchema: ExternalTokenInternetAccountConfigModel,\n) => {\n  return InternetAccount.named('ExternalTokenInternetAccount')\n    .props({\n      type: types.literal('ExternalTokenInternetAccount'),\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(self => ({\n      get validateWithHEAD(): boolean {\n        return getConf(self, 'validateWithHEAD')\n      },\n    }))\n    .actions(self => ({\n      getTokenFromUser(\n        resolve: (token: string) => void,\n        reject: (error: Error) => void,\n      ) {\n        const { session } = getRoot<any>(self)\n        session.queueDialog((doneCallback: () => void) => [\n          ExternalTokenEntryForm,\n          {\n            internetAccountId: self.internetAccountId,\n            handleClose: (token: string) => {\n              if (token) {\n                resolve(token)\n              } else {\n                reject(new Error('user cancelled entry'))\n              }\n              doneCallback()\n            },\n          },\n        ])\n      },\n      async validateToken(token: string, location: UriLocation) {\n        if (!self.validateWithHEAD) {\n          return token\n        }\n        const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n        const response = await fetch(location.uri, newInit)\n        if (!response.ok) {\n          let errorMessage: string\n          try {\n            errorMessage = await response.text()\n          } catch (error) {\n            errorMessage = ''\n          }\n          throw new Error(\n            `Token could not be validated — ${response.status} ${errorMessage ? ` (${errorMessage})` : ''}`,\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type ExternalTokenStateModel = ReturnType<typeof stateModelFactory>\nexport type ExternalTokenModel = Instance<ExternalTokenStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport OAuthConfigSchema from '../OAuthModel/configSchema'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config GoogleDriveOAuthInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GoogleDriveOAuthConfigSchema = ConfigurationSchema(\n  'GoogleDriveOAuthInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    authEndpoint: {\n      description: 'the authorization code endpoint of the internet account',\n      type: 'string',\n      defaultValue: 'https://accounts.google.com/o/oauth2/v2/auth',\n    },\n    /**\n     * #slot\n     */\n    scopes: {\n      description: 'optional scopes for the authorization call',\n      type: 'string',\n      defaultValue: 'https://www.googleapis.com/auth/drive.readonly',\n    },\n    /**\n     * #slot\n     */\n    domains: {\n      description:\n        'array of valid domains the url can contain to use this account',\n      type: 'stringArray',\n      defaultValue: ['drive.google.com\"'],\n    },\n    /**\n     * #slot\n     */\n    responseType: {\n      description: 'the type of response from the authorization endpoint',\n      type: 'string',\n      defaultValue: 'token',\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: OAuthConfigSchema,\n    explicitlyTyped: true,\n  },\n)\n\nexport type GoogleDriveOAuthInternetAccountConfigModel =\n  typeof GoogleDriveOAuthConfigSchema\n\nexport type GoogleDriveOAuthInternetAccountConfig =\n  Instance<GoogleDriveOAuthInternetAccountConfigModel>\nexport default GoogleDriveOAuthConfigSchema\n","import { RemoteFileWithRangeCache } from '@jbrowse/core/util/io'\n\nimport type { FilehandleOptions, Stats } from 'generic-filehandle2'\n\nexport interface RequestInitWithMetadata extends RequestInit {\n  metadataOnly?: boolean\n}\n\ninterface GoogleDriveFilehandleOptions extends FilehandleOptions {\n  fetch(input: RequestInfo, opts?: RequestInitWithMetadata): Promise<Response>\n}\n\nexport class GoogleDriveFile extends RemoteFileWithRangeCache {\n  private statsPromise: Promise<{ size: number }>\n  constructor(source: string, opts: GoogleDriveFilehandleOptions) {\n    super(source, opts)\n    this.statsPromise = this.fetch(source, {\n      metadataOnly: true,\n    }).then(response => response.json())\n  }\n\n  async fetch(\n    input: RequestInfo,\n    opts?: RequestInitWithMetadata,\n  ): Promise<Response> {\n    return super.fetch(input, opts)\n  }\n\n  async stat(): Promise<Stats> {\n    return this.statsPromise\n  }\n}\n","import { SvgIcon } from '@mui/material'\n\nimport type { SvgIconProps } from '@mui/material'\n\nexport default function GoogleDriveIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M7.71,3.5L1.15,15L4.58,21L11.13,9.5M9.73,15L6.3,21H19.42L22.85,15M22.28,14L15.42,2H8.58L8.57,2L15.43,14H22.28Z\" />\n    </SvgIcon>\n  )\n}\n","import { getResponseError } from '../util'\n\ninterface GoogleDriveError {\n  error: {\n    errors: {\n      domain: string\n      reason: string\n      message: string\n      locationType?: string\n      location?: string\n    }[]\n    code: number\n    message: string\n  }\n}\n\nexport async function getDescriptiveErrorMessage(\n  response: Response,\n  reason?: string,\n) {\n  let errorMessage = ''\n  try {\n    const err = JSON.parse(await response.text()) as GoogleDriveError\n    errorMessage = err.error.message\n  } catch (error) {\n    /* do nothing */\n  }\n  return getResponseError({ response, reason, statusText: errorMessage })\n}\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport { configSchema as OAuthConfigSchema } from '../OAuthModel'\nimport { GoogleDriveFile } from './GoogleDriveFilehandle'\nimport GoogleDriveIcon from './GoogleDriveIcon'\nimport { getDescriptiveErrorMessage } from './util'\nimport baseModel from '../OAuthModel/model'\n\nimport type { GoogleDriveOAuthInternetAccountConfigModel } from './configSchema'\nimport type { UriLocation } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\nexport interface RequestInitWithMetadata extends RequestInit {\n  metadataOnly?: boolean\n}\n\nfunction getUri(str: string) {\n  const urlId = /[-\\w]{25,}/.exec(str)\n  return `https://www.googleapis.com/drive/v3/files/${urlId}`\n}\n\n/**\n * #stateModel GoogleDriveOAuthInternetAccount\n */\nexport default function stateModelFactory(\n  configSchema: GoogleDriveOAuthInternetAccountConfigModel,\n) {\n  return baseModel(OAuthConfigSchema)\n    .named('GoogleDriveOAuthInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('GoogleDriveOAuthInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(() => ({\n      /**\n       * #getter\n       * The FileSelector icon for Google drive\n       */\n      get toggleContents() {\n        return <GoogleDriveIcon />\n      },\n      /**\n       * #getter\n       */\n      get selectorLabel() {\n        return 'Enter Google Drive share link'\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      getFetcher(location?: UriLocation) {\n        return async (input: RequestInfo, init?: RequestInitWithMetadata) => {\n          const driveUrl = new URL(getUri(String(input)))\n          const searchParams = new URLSearchParams()\n          if (init?.metadataOnly) {\n            searchParams.append('fields', 'size')\n          } else {\n            searchParams.append('alt', 'media')\n          }\n          driveUrl.search = searchParams.toString()\n          const authToken = await self.getToken(location)\n          const response = await fetch(\n            driveUrl,\n            self.addAuthHeaderToInit(\n              { ...init, method: 'GET', credentials: 'same-origin' },\n              authToken,\n            ),\n          )\n          if (!response.ok) {\n            throw new Error(await getDescriptiveErrorMessage(response))\n          }\n          return response\n        }\n      },\n      /**\n       * #method\n       */\n      openLocation(location: UriLocation) {\n        return new GoogleDriveFile(location.uri, {\n          fetch: this.getFetcher(location),\n        })\n      },\n      /**\n       * #action\n       */\n      async validateToken(token: string, location: UriLocation) {\n        const response = await fetch(getUri(location.uri), {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n        })\n        if (!response.ok) {\n          throw new Error(\n            await getDescriptiveErrorMessage(\n              response,\n              'Token could not be validated',\n            ),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport type GoogleDriveOAuthStateModel = ReturnType<typeof stateModelFactory>\nexport type GoogleDriveOAuthModel = Instance<GoogleDriveOAuthStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { BaseInternetAccountConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config HTTPBasicInternetAccount\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HTTPBasicConfigSchema = ConfigurationSchema(\n  'HTTPBasicInternetAccount',\n  {\n    /**\n     * #slot\n     */\n    tokenType: {\n      description: 'a custom name for a token to include in the header',\n      type: 'string',\n      defaultValue: 'Basic',\n    },\n    /**\n     * #slot\n     */\n    validateWithHEAD: {\n      description: 'validate the token with a HEAD request before using it',\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseInternetAccountConfig,\n    explicitlyTyped: true,\n  },\n)\n\nexport type HTTPBasicInternetAccountConfigModel = typeof HTTPBasicConfigSchema\n\nexport type HTTPBasicInternetAccountConfig =\n  Instance<HTTPBasicInternetAccountConfigModel>\nexport default HTTPBasicConfigSchema\n","import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { Button, DialogActions, DialogContent, TextField } from '@mui/material'\n\nexport function HTTPBasicLoginForm({\n  internetAccountId,\n  handleClose,\n}: {\n  internetAccountId: string\n  handleClose: (arg?: string) => void\n}) {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  return (\n    <Dialog\n      open\n      maxWidth=\"xl\"\n      data-testid=\"login-httpbasic\"\n      title={`Log in for ${internetAccountId}`}\n      onClose={() => {\n        handleClose()\n      }}\n    >\n      <form\n        onSubmit={event => {\n          if (username && password) {\n            handleClose(btoa(`${username}:${password}`))\n          } else {\n            handleClose()\n          }\n          event.preventDefault()\n        }}\n      >\n        <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n          <TextField\n            required\n            label=\"Username\"\n            variant=\"outlined\"\n            onChange={event => {\n              setUsername(event.target.value)\n            }}\n            margin=\"dense\"\n            slotProps={{\n              htmlInput: { 'data-testid': 'login-httpbasic-username' },\n            }}\n          />\n          <TextField\n            required\n            label=\"Password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            onChange={event => {\n              setPassword(event.target.value)\n            }}\n            margin=\"dense\"\n            slotProps={{\n              htmlInput: { 'data-testid': 'login-httpbasic-password' },\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { InternetAccount } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getRoot, types } from 'mobx-state-tree'\n\nimport { HTTPBasicLoginForm } from './HTTPBasicLoginForm'\nimport { getResponseError } from '../util'\n\nimport type { HTTPBasicInternetAccountConfigModel } from './configSchema'\nimport type { UriLocation } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel HTTPBasicInternetAccount\n */\nconst stateModelFactory = (\n  configSchema: HTTPBasicInternetAccountConfigModel,\n) => {\n  return InternetAccount.named('HTTPBasicInternetAccount')\n    .props({\n      /**\n       * #property\n       */\n      type: types.literal('HTTPBasicInternetAccount'),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(configSchema),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get validateWithHEAD(): boolean {\n        return getConf(self, 'validateWithHEAD')\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      getTokenFromUser(\n        resolve: (token: string) => void,\n        reject: (error: Error) => void,\n      ) {\n        const { session } = getRoot<any>(self)\n        session.queueDialog((doneCallback: () => void) => [\n          HTTPBasicLoginForm,\n          {\n            internetAccountId: self.internetAccountId,\n            handleClose: (token: string) => {\n              if (token) {\n                resolve(token)\n              } else {\n                reject(new Error('User cancelled entry'))\n              }\n              doneCallback()\n            },\n          },\n        ])\n      },\n      /**\n       * #action\n       */\n      async validateToken(token: string, location: UriLocation) {\n        if (!self.validateWithHEAD) {\n          return token\n        }\n        const newInit = self.addAuthHeaderToInit({ method: 'HEAD' }, token)\n        const response = await fetch(location.uri, newInit)\n        if (!response.ok) {\n          throw new Error(\n            await getResponseError({\n              response,\n              reason: 'Error validating token',\n            }),\n          )\n        }\n        return token\n      },\n    }))\n}\n\nexport default stateModelFactory\nexport type HTTPBasicStateModel = ReturnType<typeof stateModelFactory>\nexport type HTTPBasicModel = Instance<HTTPBasicStateModel>\n","import Plugin from '@jbrowse/core/Plugin'\nimport InternetAccountType from '@jbrowse/core/pluggableElementTypes/InternetAccountType'\n\nimport {\n  configSchema as DropboxOAuthConfigSchema,\n  modelFactory as DropboxOAuthInternetAccountModelFactory,\n} from './DropboxOAuthModel'\nimport {\n  configSchema as ExternalTokenConfigSchema,\n  modelFactory as ExternalTokenInternetAccountModelFactory,\n} from './ExternalTokenModel'\nimport {\n  configSchema as GoogleDriveOAuthConfigSchema,\n  modelFactory as GoogleDriveOAuthInternetAccountModelFactory,\n} from './GoogleDriveOAuthModel'\nimport {\n  configSchema as HTTPBasicConfigSchema,\n  modelFactory as HTTPBasicInternetAccountModelFactory,\n} from './HTTPBasicModel'\nimport {\n  configSchema as OAuthConfigSchema,\n  modelFactory as OAuthInternetAccountModelFactory,\n} from './OAuthModel'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class AuthenticationPlugin extends Plugin {\n  name = 'AuthenticationPlugin'\n\n  exports = {\n    OAuthConfigSchema,\n    OAuthInternetAccountModelFactory,\n    ExternalTokenConfigSchema,\n    ExternalTokenInternetAccountModelFactory,\n    HTTPBasicConfigSchema,\n    HTTPBasicInternetAccountModelFactory,\n    DropboxOAuthConfigSchema,\n    DropboxOAuthInternetAccountModelFactory,\n    GoogleDriveOAuthConfigSchema,\n    GoogleDriveOAuthInternetAccountModelFactory,\n  }\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'OAuthInternetAccount',\n        configSchema: OAuthConfigSchema,\n        stateModel: OAuthInternetAccountModelFactory(OAuthConfigSchema),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'ExternalTokenInternetAccount',\n        configSchema: ExternalTokenConfigSchema,\n        stateModel: ExternalTokenInternetAccountModelFactory(\n          ExternalTokenConfigSchema,\n        ),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'HTTPBasicInternetAccount',\n        configSchema: HTTPBasicConfigSchema,\n        stateModel: HTTPBasicInternetAccountModelFactory(HTTPBasicConfigSchema),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'DropboxOAuthInternetAccount',\n        configSchema: DropboxOAuthConfigSchema,\n        stateModel: DropboxOAuthInternetAccountModelFactory(\n          DropboxOAuthConfigSchema,\n        ),\n      })\n    })\n    pluginManager.addInternetAccountType(() => {\n      return new InternetAccountType({\n        name: 'GoogleDriveOAuthInternetAccount',\n        configSchema: GoogleDriveOAuthConfigSchema,\n        stateModel: GoogleDriveOAuthInternetAccountModelFactory(\n          GoogleDriveOAuthConfigSchema,\n        ),\n      })\n    })\n  }\n}\n\nexport {\n  configSchema as OAuthConfigSchema,\n  modelFactory as OAuthInternetAccountModelFactory,\n} from './OAuthModel'\nexport {\n  configSchema as ExternalTokenConfigSchema,\n  modelFactory as ExternalTokenInternetAccountModelFactory,\n} from './ExternalTokenModel'\n\nexport {\n  configSchema as HTTPBasicConfigSchema,\n  modelFactory as HTTPBasicInternetAccountModelFactory,\n} from './HTTPBasicModel'\n\nexport {\n  configSchema as DropboxOAuthConfigSchema,\n  modelFactory as DropboxOAuthInternetAccountModelFactory,\n} from './DropboxOAuthModel'\n\nexport {\n  configSchema as GoogleDriveOAuthConfigSchema,\n  modelFactory as GoogleDriveOAuthInternetAccountModelFactory,\n} from './GoogleDriveOAuthModel'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BedAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedAdapter = ConfigurationSchema(\n  'BedAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bed.gz',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n    /**\n     * #slot\n     */\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    autoSql: {\n      type: 'string',\n      description: 'The autoSql definition for the data fields in the file',\n      defaultValue: '',\n    },\n    /**\n     * #slot\n     */\n    colRef: {\n      type: 'number',\n      description: 'The column to use as a \"refName\" attribute',\n      defaultValue: 0,\n    },\n    /**\n     * #slot\n     */\n    colStart: {\n      type: 'number',\n      description: 'The column to use as a \"start\" attribute',\n      defaultValue: 1,\n    },\n    /**\n     * #slot\n     */\n    colEnd: {\n      type: 'number',\n      description: 'The column to use as a \"end\" attribute',\n      defaultValue: 2,\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bedLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\nexport default BedAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BedGraphAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedGraphAdapter = ConfigurationSchema(\n  'BedGraphAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedGraphLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bedgraph',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bedGraphLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\nexport default BedGraphAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config BedGraphTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedGraphTabixAdapter = ConfigurationSchema(\n  'BedGraphTabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedGraphGzLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bedgraph',\n        locationType: 'UriLocation',\n      },\n    },\n    index: ConfigurationSchema('VcfIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.vcf.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bedGraphGzLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            index: {\n              location: {\n                uri: `${snap.uri}.tbi`,\n                baseUri: snap.baseUri,\n              },\n            },\n          }\n        : snap\n    },\n  },\n)\nexport default BedGraphTabixAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config BedTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedTabixAdapter = ConfigurationSchema(\n  'BedTabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    bedGzLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bed.gz',\n        locationType: 'UriLocation',\n      },\n    },\n\n    index: ConfigurationSchema('TabixIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.bed.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n\n    /**\n     * #slot\n     */\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n\n    /**\n     * #slot\n     */\n    autoSql: {\n      type: 'string',\n      description: 'The autoSql definition for the data fields in the file',\n      defaultValue: '',\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bedGzLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            index: {\n              location: {\n                uri: `${snap.uri}.tbi`,\n                baseUri: snap.baseUri,\n              },\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default BedTabixAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BedpeAdapter\n * intended for SVs in a single assembly\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BedpeAdapter = ConfigurationSchema(\n  'BedpeAdapter',\n  {\n    /**\n     * #slot\n     * can be plaintext or gzipped, not indexed so loaded into memory on\n     * startup\n     */\n    bedpeLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bedpe.gz',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    columnNames: {\n      type: 'stringArray',\n      description: 'List of column names',\n      defaultValue: [],\n    },\n  },\n  {\n    explicitlyTyped: true,\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bedpeLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\nexport default BedpeAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BigBedAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BigBedAdapter = ConfigurationSchema(\n  'BigBedAdapter',\n  {\n    /**\n     * #slot\n     */\n    bigBedLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.bb',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot\n     */\n    scoreColumn: {\n      type: 'string',\n      description: 'The column to use as a \"score\" attribute',\n      defaultValue: '',\n    },\n\n    /**\n     * #slot\n     */\n    aggregateField: {\n      type: 'string',\n      description: 'An attribute to aggregate features with',\n      defaultValue: 'geneName2',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            bigBedLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default BigBedAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport BedAdapterF from './BedAdapter'\nimport BedGraphAdapterF from './BedGraphAdapter'\nimport BedGraphTabixAdapterF from './BedGraphTabixAdapter'\nimport BedTabixAdapterF from './BedTabixAdapter'\nimport BedpeAdapterF from './BedpeAdapter'\nimport BigBedAdapterF from './BigBedAdapter'\nimport GuessAdapterF from './GuessAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class BedPlugin extends Plugin {\n  name = 'BedPlugin'\n\n  install(pluginManager: PluginManager) {\n    BigBedAdapterF(pluginManager)\n    BedAdapterF(pluginManager)\n    BedpeAdapterF(pluginManager)\n    BedTabixAdapterF(pluginManager)\n    BedGraphAdapterF(pluginManager)\n    BedGraphTabixAdapterF(pluginManager)\n    GuessAdapterF(pluginManager)\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BigBedAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BigBedAdapter',\n        displayName: 'BigBed adapter',\n        configSchema,\n        getAdapterClass: () => import('./BigBedAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BedAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedAdapter',\n        displayName: 'BED adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BedpeAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedpeAdapter',\n        displayName: 'BEDPE adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedpeAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BedTabixAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedTabixAdapter',\n        displayName: 'BED tabix adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BedGraphAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedGraphAdapter',\n        displayName: 'BedGraph adapter',\n        configSchema,\n        getAdapterClass: () => import('./BedGraphAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BedGraphTabixAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BedGraphTabixAdapter',\n        displayName: 'BedGraphTabix adapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./BedGraphTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n} from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAdapterF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        if (\n          testAdapter(fileName, /\\.bedpe(\\.gz)?$/i, adapterHint, 'BedpeAdapter')\n        ) {\n          return {\n            type: 'BedpeAdapter',\n            bedpeLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.bb$/i, adapterHint, 'BigBedAdapter') ||\n          testAdapter(fileName, /\\.bigBed?$/i, adapterHint, 'BigBedAdapter')\n        ) {\n          return {\n            type: 'BigBedAdapter',\n            bigBedLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.bed$/i, adapterHint, 'BedAdapter')\n        ) {\n          return {\n            type: 'BedAdapter',\n            bedLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.bg$/i, adapterHint, 'BedGraphAdapter')\n        ) {\n          return {\n            type: 'BedGraphAdapter',\n            bedGraphLocation: file,\n          }\n        } else if (\n          testAdapter(\n            fileName,\n            /\\.bg(\\.gz)?$/i,\n            adapterHint,\n            'BedGraphTabixAdapter',\n          )\n        ) {\n          return {\n            type: 'BedGraphTabixAdapter',\n            bedGraphGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        } else if (\n          testAdapter(fileName, /\\.bed\\.gz$/i, adapterHint, 'BedTabixAdapter')\n        ) {\n          return {\n            type: 'BedTabixAdapter',\n            bedGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        } else {\n          return adapterGuesser(file, index, adapterHint)\n        }\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => (adapterName: string) => {\n      return (\n        {\n          BedpeAdapter: 'VariantTrack',\n          BedGraphAdapter: 'QuantitativeTrack',\n          BedGraphTabixAdapter: 'QuantitativeTrack',\n        }[adapterName] || trackTypeGuesser(adapterName)\n      )\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('BreakpointAlignmentsWidget', {})\n\nconst stateModel = types\n  .model('BreakpointAlignmentsWidget', {\n    id: ElementId,\n    type: types.literal('BreakpointAlignmentsWidget'),\n    featureData: types.frozen(),\n  })\n  .actions(self => ({\n    setFeatureData(data: unknown) {\n      self.featureData = data\n    },\n    clearFeatureData() {\n      self.featureData = undefined\n    },\n  }))\n\nexport default function BreakpointAlignmentsFeatureDetailF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'BreakpointAlignmentsWidget',\n      heading: 'Breakpoint feature details',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./BreakpointAlignmentsFeatureDetail')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession, notEmpty } from '@jbrowse/core/util'\nimport LinkIcon from '@mui/icons-material/Link'\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\nimport { saveAs } from 'file-saver'\nimport { autorun } from 'mobx'\nimport { addDisposer, getPath, onAction, types } from 'mobx-state-tree'\n\nimport { calc, getBlockFeatures, getClip, intersect } from './util'\n\nimport type { ExportSvgOptions } from './types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewStateModel } from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\n\n/**\n * #stateModel BreakpointSplitView\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  const minHeight = 40\n  const defaultHeight = 400\n  return types\n    .compose(\n      'BreakpointSplitView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('BreakpointSplitView'),\n        /**\n         * #property\n         */\n        height: types.optional(\n          types.refinement(\n            'viewHeight',\n            types.number,\n            (n: number) => n >= minHeight,\n          ),\n          defaultHeight,\n        ),\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n        /**\n         * #property\n         */\n        showIntraviewLinks: true,\n        /**\n         * #property\n         */\n        linkViews: false,\n        /**\n         * #property\n         */\n        interactiveOverlay: true,\n        /**\n         * #property\n         */\n        views: types.array(\n          pluginManager.getViewType('LinearGenomeView')!\n            .stateModel as LinearGenomeViewStateModel,\n        ),\n      }),\n    )\n    .volatile(() => ({\n      width: 800,\n      matchedTrackFeatures: {} as Record<string, Feature[][]>,\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGBreakpointSplitView'\n        )\n        const html = await renderToSvg(self as BreakpointViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * Find all track ids that match across multiple views, or return just\n       * the single view's track if only a single row is used\n       */\n      get matchedTracks() {\n        return self.views.length === 1\n          ? self.views[0]!.tracks\n          : intersect(\n              elt => elt.configuration.trackId,\n              ...self.views.map(\n                view => view.tracks as { configuration: { trackId: string } }[],\n              ),\n            )\n      },\n\n      /**\n       * #method\n       * Get tracks with a given trackId across multiple views\n       */\n      getMatchedTracks(trackConfigId: string) {\n        return self.views\n          .map(view => view.getTrack(trackConfigId))\n          .filter(f => !!f)\n      },\n\n      /**\n       * #method\n       * Translocation features are handled differently since they do not have\n       * a mate e.g. they are one sided\n       */\n      hasTranslocations(trackConfigId: string) {\n        return [...this.getTrackFeatures(trackConfigId).values()].find(\n          f => f.get('type') === 'translocation',\n        )\n      },\n\n      /**\n       * #method\n       * Paired features similar to breakends, but simpler, like BEDPE\n       */\n      hasPairedFeatures(trackConfigId: string) {\n        return [...this.getTrackFeatures(trackConfigId).values()].find(\n          f => f.get('type') === 'paired_feature',\n        )\n      },\n\n      /**\n       * #method\n       * Get a composite map of featureId-\\>feature map for a track across\n       * multiple views\n       */\n      getTrackFeatures(trackConfigId: string) {\n        return new Map(\n          self.matchedTrackFeatures[trackConfigId]\n            ?.flat()\n            .map(f => [f.id(), f] as const),\n        )\n      },\n\n      /**\n       * #method\n       */\n      getMatchedFeaturesInLayout(trackConfigId: string, features: Feature[][]) {\n        // use reverse to search the second track first\n        const tracks = this.getMatchedTracks(trackConfigId)\n        return features.map(c =>\n          c\n            .map(feature => {\n              const level = tracks.findIndex(track => calc(track, feature))\n              return level !== -1\n                ? {\n                    feature,\n                    layout: calc(tracks[level], feature),\n                    level,\n                    clipPos: getClip(\n                      feature.get('CIGAR'),\n                      feature.get('strand'),\n                    ),\n                  }\n                : undefined\n            })\n            .filter(notEmpty),\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          onAction(\n            self,\n            ({\n              name,\n              path,\n              args,\n            }: {\n              name: string\n              path?: string\n              args?: unknown[]\n            }) => {\n              if (self.linkViews) {\n                const actions = [\n                  'horizontalScroll',\n                  'zoomTo',\n                  'setScaleFactor',\n                  'showTrack',\n                  'toggleTrack',\n                  'hideTrack',\n                  'setTrackLabels',\n                  'toggleCenterLine',\n                ]\n                if (actions.includes(name) && path) {\n                  this.onSubviewAction(name, path, args)\n                }\n              }\n            },\n          ),\n        )\n      },\n\n      onSubviewAction(actionName: string, path: string, args?: unknown[]) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (!ret.endsWith(path)) {\n            // @ts-ignore\n            view[actionName](args?.[0])\n          }\n        })\n      },\n\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.width = newWidth\n        self.views.forEach(v => {\n          v.setWidth(newWidth)\n        })\n      },\n\n      /**\n       * #action\n       */\n      setInteractiveOverlay(arg: boolean) {\n        self.interactiveOverlay = arg\n      },\n\n      /**\n       * #action\n       */\n      setShowIntraviewLinks(arg: boolean) {\n        self.showIntraviewLinks = arg\n      },\n\n      /**\n       * #action\n       */\n      setLinkViews(arg: boolean) {\n        self.linkViews = arg\n      },\n\n      /**\n       * #action\n       */\n      setMatchedTrackFeatures(obj: Record<string, Feature[][]>) {\n        self.matchedTrackFeatures = obj\n      },\n      /**\n       * #action\n       */\n      reverseViewOrder() {\n        self.views.reverse()\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(async () => {\n            try {\n              if (!self.views.every(view => view.initialized)) {\n                return\n              }\n              self.setMatchedTrackFeatures(\n                Object.fromEntries(\n                  await Promise.all(\n                    self.matchedTracks.map(async track => [\n                      track.configuration.trackId,\n                      await getBlockFeatures(self as any, track),\n                    ]),\n                  ),\n                ),\n              )\n            } catch (e) {\n              console.error(e)\n              getSession(self).notifyError(`${e}`, e)\n            }\n          }),\n        )\n      },\n\n      /**\n       * #method\n       */\n      menuItems() {\n        return [\n          ...self.views\n            .map((view, idx) => [idx, view.menuItems()] as const)\n            .map(f => ({\n              label: `Row ${f[0] + 1} view menu`,\n              subMenu: f[1],\n            })),\n\n          ...(self.views.length > 1\n            ? [\n                {\n                  label: 'Reverse view order',\n                  onClick: () => {\n                    self.reverseViewOrder()\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Show intra-view links',\n            type: 'checkbox',\n            checked: self.showIntraviewLinks,\n            onClick: () => {\n              self.setShowIntraviewLinks(!self.showIntraviewLinks)\n            },\n          },\n          {\n            label: 'Allow clicking alignment squiggles?',\n            type: 'checkbox',\n            checked: self.interactiveOverlay,\n            onClick: () => {\n              self.setInteractiveOverlay(!self.interactiveOverlay)\n            },\n          },\n          {\n            label: 'Link views',\n            type: 'checkbox',\n            icon: LinkIcon,\n            checked: self.linkViews,\n            onClick: () => {\n              self.setLinkViews(!self.linkViews)\n            },\n          },\n          {\n            label: 'Export SVG',\n            icon: PhotoCamera,\n            onClick: (): void => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                {\n                  model: self,\n                  handleClose,\n                },\n              ])\n            },\n          },\n        ]\n      },\n    }))\n}\n\nexport type BreakpointViewStateModel = ReturnType<typeof stateModelFactory>\nexport type BreakpointViewModel = Instance<BreakpointViewStateModel>\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport BreakpointAlignmentsWidgetF from './BreakpointAlignmentsFeatureDetail'\nimport BreakpointSplitViewF from './BreakpointSplitView'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class BreakpointSplitViewPlugin extends Plugin {\n  name = 'BreakpointSplitViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    BreakpointSplitViewF(pluginManager)\n    BreakpointAlignmentsWidgetF(pluginManager)\n  }\n\n  configure() {}\n}\n","import { lazy } from 'react'\n\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BreakpointSplitViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'BreakpointSplitView',\n      displayName: 'Breakpoint split view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/BreakpointSplitView')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BlastTabularAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BlastTabularAdapter = ConfigurationSchema(\n  'BlastTabularAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Query assembly is the first value in the array, target assembly is the second',\n    },\n\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the target assembly',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the query assembly',\n    },\n    /**\n     * #slot\n     */\n    blastTableLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/blastTable.tsv',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    columns: {\n      type: 'string',\n      description:\n        'Optional space-separated column name list. If custom columns were used in outfmt, enter them here exactly as specified in the command. At least qseqid, sseqid, qstart, qend, sstart, and send are required',\n      defaultValue:\n        'qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default BlastTabularAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config ChainAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ChainAdapter = ConfigurationSchema(\n  'ChainAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The query assembly name is the first value in the array, target assembly name is the second',\n    },\n    /**\n     * #slot\n     * can be specified as alternative to assemblyNames\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the target assembly',\n    },\n    /**\n     * #slot\n     * can be specified as alternative to assemblyNames\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the query assembly',\n    },\n    /**\n     * #slot\n     */\n    chainLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/file.chain', locationType: 'UriLocation' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default ChainAdapter\n","export const syntenyTypes = [\n  'PAFAdapter',\n  'ChainAdapter',\n  'DeltaAdapter',\n  'BlastTabularAdapter',\n  'MashMapAdapter',\n  'MCScanAnchorsAdapter',\n  'MCScanSimpleAnchorsAdapter',\n  'PairwiseIndexedPAFAdapter',\n]\n\nexport const pairwiseTypes = [\n  'PAFAdapter',\n  'ChainAdapter',\n  'DeltaAdapter',\n  'MashMapAdapter',\n  'BlastTabularAdapter',\n  'PairwiseIndexedPAFAdapter',\n]\n\nexport const mcscanTypes = [\n  'MCScanAnchorsAdapter',\n  'MCScanSimpleAnchorsAdapter',\n]\n","import { lazy } from 'react'\n\nimport { pairwiseTypes } from '../syntenyTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n// lazies\nconst ComparativeAddTrackComponent = lazy(\n  () => import('./ComparativeAddTrackComponent'),\n)\n\nexport default function ComparativeAddTrackComponentF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addToExtensionPoint(\n    'Core-addTrackComponent',\n    // @ts-expect-error\n    (comp, { model }: { trackAdapterType: string }) => {\n      return pairwiseTypes.includes(model.trackAdapterType)\n        ? ComparativeAddTrackComponent\n        : comp\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config DeltaAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DeltaAdapter = ConfigurationSchema(\n  'DeltaAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The query assembly name is the first value in the array, target assembly name is the second',\n    },\n    /**\n     * #slot\n     * alternative to assembly names\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the target assembly name',\n    },\n    /**\n     * #slot\n     * alternative to assembly names\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the query assembly name',\n    },\n    /**\n     * #slot\n     */\n    deltaLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.delta',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default DeltaAdapter\n","import { lazy } from 'react'\n\nimport { mcscanTypes } from '../syntenyTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n// lazies\nconst MCScanAddTrackComponent = lazy(() => import('./MCScanAddTrackComponent'))\n\nexport default function MCScanAddTrackComponentF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-addTrackComponent',\n    // @ts-expect-error\n    (comp, { model }: { trackAdapterType: string }) => {\n      return mcscanTypes.includes(model.trackAdapterType)\n        ? MCScanAddTrackComponent\n        : comp\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MCScanAnchorsAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MCScanAnchorsAdapter = ConfigurationSchema(\n  'MCScanAnchorsAdapter',\n  {\n    /**\n     * #slot\n     */\n    mcscanAnchorsLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mcscan.anchors',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed1Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed2Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MCScanAnchorsAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MCScanSimpleAnchorsAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MCScanSimpleAnchorsAdapter = ConfigurationSchema(\n  'MCScanSimpleAnchorsAdapter',\n  {\n    /**\n     * #slot\n     */\n    mcscanSimpleAnchorsLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mcscan.anchors.simple',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed1Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    bed2Location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.bed',\n        locationType: 'UriLocation',\n      },\n    },\n\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default MCScanSimpleAnchorsAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MashMapAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MashMapAdapter = ConfigurationSchema(\n  'MashMapAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The query assembly name is the first value in the array, target assembly name is the second',\n    },\n\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the target assembly',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames array: the query assembly',\n    },\n    /**\n     * #slot\n     */\n    outLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/mashmap.out',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default MashMapAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config PAFAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst PAFAdapter = ConfigurationSchema(\n  'PAFAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The query assembly name is the first value in the array, target assembly name is the second',\n    },\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the target assembly name',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the query assembly name',\n    },\n    /**\n     * #slot\n     */\n    pafLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/file.paf',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            pafLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default PAFAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config PairwiseIndexedPAFAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst PairwiseIndexedPAFAdapter = ConfigurationSchema(\n  'PairwiseIndexedPAFAdapter',\n  {\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Array of assembly names to use for this file. The query assembly name is the first value in the array, target assembly name is the second',\n    },\n    /**\n     * #slot\n     */\n    targetAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the target assembly name',\n    },\n    /**\n     * #slot\n     */\n    queryAssembly: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Alternative to assemblyNames: the query assembly name',\n    },\n    /**\n     * #slot\n     */\n    pifGzLocation: {\n      type: 'fileLocation',\n      description: 'location of pairwise tabix indexed PAF (pif)',\n      defaultValue: {\n        uri: '/path/to/data/file.pif.gz',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    index: ConfigurationSchema('TabixIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.paf.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n  },\n  { explicitlyTyped: true },\n)\n\nexport default PairwiseIndexedPAFAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport BlastTabularAdapter from './BlastTabularAdapter'\nimport ChainAdapterF from './ChainAdapter'\nimport ComparativeAddTrackComponentF from './ComparativeAddTrackComponent'\nimport DeltaAdapterF from './DeltaAdapter'\nimport GuessAdapterF from './GuessAdapter'\nimport MCScanAddTrackComponentF from './MCScanAddTrackComponent'\nimport MCScanAnchorsAdapterF from './MCScanAnchorsAdapter'\nimport MCScanSimpleAnchorsAdapterF from './MCScanSimpleAnchorsAdapter'\nimport MashMapAdapterF from './MashMapAdapter'\nimport PAFAdapterF from './PAFAdapter'\nimport PairwiseIndexedPAFAdapterF from './PairwiseIndexedPAFAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class ComparativeAdaptersPlugin extends Plugin {\n  name = 'ComparativeAdaptersPlugin'\n\n  install(pluginManager: PluginManager) {\n    PAFAdapterF(pluginManager)\n    PairwiseIndexedPAFAdapterF(pluginManager)\n    DeltaAdapterF(pluginManager)\n    ChainAdapterF(pluginManager)\n    MCScanAnchorsAdapterF(pluginManager)\n    MCScanSimpleAnchorsAdapterF(pluginManager)\n    MashMapAdapterF(pluginManager)\n    BlastTabularAdapter(pluginManager)\n    ComparativeAddTrackComponentF(pluginManager)\n    MCScanAddTrackComponentF(pluginManager)\n    GuessAdapterF(pluginManager)\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function PAFAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'PAFAdapter',\n        displayName: 'PAF adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () => import('./PAFAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function PairwiseIndexedPAFAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'PairwiseIndexedPAFAdapter',\n        displayName: 'Pairwise indexed PAF adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () =>\n          import('./PairwiseIndexedPAFAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function DeltaAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'DeltaAdapter',\n        displayName: 'MUMmer delta adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () => import('./DeltaAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function ChainAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'ChainAdapter',\n        displayName: 'Liftover chain adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () => import('./ChainAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MCScanAnchorsAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MCScanAnchorsAdapter',\n        displayName: 'MCScan anchors adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n\n        getAdapterClass: () =>\n          import('./MCScanAnchorsAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MCScanSimpleAnchorsAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MCScanSimpleAnchorsAdapter',\n        displayName: 'MCScan anchors.simple adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () =>\n          import('./MCScanSimpleAnchorsAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MashMapAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'MashMapAdapter',\n        displayName: 'MashMap adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () => import('./MashMapAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BlastTabularAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'BlastTabularAdapter',\n        displayName: 'Tabular BLAST output adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Synteny adapters',\n        },\n        getAdapterClass: () =>\n          import('./BlastTabularAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n} from '@jbrowse/core/util/tracks'\n\nimport { syntenyTypes } from '../syntenyTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAdapterF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        if (testAdapter(fileName, /\\.paf(.gz)?/i, adapterHint, 'PAFAdapter')) {\n          return {\n            type: 'PAFAdapter',\n            pafLocation: file,\n          }\n        } else if (adapterHint === 'BlastTabularAdapter') {\n          return {\n            type: 'BlastTabularAdapter',\n            blastTableLocation: file,\n          }\n        } else if (\n          testAdapter(\n            fileName,\n            /\\.anchors.simple(.gz)?/i,\n            adapterHint,\n            'MCScanSimpleAnchorsAdapter',\n          )\n        ) {\n          return {\n            type: 'MCScanSimpleAnchorsAdapter',\n            mcscanSimpleAnchorsLocation: file,\n          }\n        } else if (\n          testAdapter(\n            fileName,\n            /\\.anchors(.gz)?/i,\n            adapterHint,\n            'MCScanAnchorsAdapter',\n          )\n        ) {\n          return {\n            type: 'MCScanAnchorsAdapter',\n            mcscanAnchorsLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.delta(.gz)?/i, adapterHint, 'DeltaAdapter')\n        ) {\n          return {\n            type: 'DeltaAdapter',\n            deltaLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.chain(.gz)?/i, adapterHint, 'ChainAdapter')\n        ) {\n          return {\n            type: 'ChainAdapter',\n            chainLocation: file,\n          }\n        } else if (\n          testAdapter(fileName, /\\.out(.gz)?/i, adapterHint, 'MashMapAdapter')\n        ) {\n          return {\n            type: 'MashMapAdapter',\n            outLocation: file,\n          }\n        } else if (\n          testAdapter(\n            fileName,\n            /\\.pif\\.gz/i,\n            adapterHint,\n            'PairwiseIndexedPAFAdapter',\n          )\n        ) {\n          return {\n            type: 'PairwiseIndexedPAFAdapter',\n            pifGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        } else {\n          return adapterGuesser(file, index, adapterHint)\n        }\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) =>\n        syntenyTypes.includes(adapterName)\n          ? 'SyntenyTrack'\n          : trackTypeGuesser(adapterName)\n    },\n  )\n}\n","import RpcMethodType from '@jbrowse/core/pluggableElementTypes/RpcMethodType'\nimport { checkStopToken } from '@jbrowse/core/util/stopToken'\n\nimport type {\n  RenderArgs as ComparativeRenderArgs,\n  RenderArgsSerialized as ComparativeRenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport type ComparativeRenderer from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\n\ninterface RenderArgs extends ComparativeRenderArgs {\n  adapterConfig: Record<string, unknown>\n  rendererType: string\n}\n\ninterface RenderArgsSerialized extends ComparativeRenderArgsSerialized {\n  adapterConfig: Record<string, unknown>\n  rendererType: string\n}\n\nexport default class ComparativeRender extends RpcMethodType {\n  name = 'ComparativeRender'\n\n  async renameRegionsIfNeeded(args: RenderArgs, rend: ComparativeRenderer) {\n    return rend.renameRegionsIfNeeded(args)\n  }\n\n  getRenderer(rendererType: string) {\n    const pm = this.pluginManager\n    return pm.getRendererType(rendererType) as ComparativeRenderer\n  }\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rendererType } = args\n    const renderer = this.getRenderer(rendererType)\n    const n = (await super.serializeArguments(args, rpcDriver)) as RenderArgs\n    const result = await this.renameRegionsIfNeeded(n, renderer)\n\n    return rpcDriver === 'MainThreadRpcDriver'\n      ? result\n      : renderer.serializeArgsInClient(result)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { stopToken?: string },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { sessionId, rendererType, stopToken } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    checkStopToken(stopToken)\n\n    const renderer = this.getRenderer(rendererType)\n    return rpcDriver === 'MainThreadRpcDriver'\n      ? renderer.render(deserializedArgs)\n      : renderer.renderInWorker(deserializedArgs)\n  }\n\n  async deserializeReturn(\n    val: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriver: string,\n  ): Promise<unknown> {\n    const ret = (await super.deserializeReturn(\n      val,\n      args,\n      rpcDriver,\n    )) as ResultsSerialized\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return ret\n    }\n\n    const renderer = this.getRenderer(args.rendererType)\n    return renderer.deserializeResultsInClient(ret, args)\n  }\n}\n","import { getContainingView } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { DotplotViewModel } from '../../DotplotView/model'\nimport type { DotplotDisplayModel } from '../stateModelFactory'\n\nconst DotplotDisplay = observer(function DotplotDisplay(props: {\n  model: DotplotDisplayModel\n  children?: React.ReactNode\n}) {\n  const { model, children } = props\n  const { offsetX = 0, offsetY = 0 } = model.data || {}\n  const view = getContainingView(model) as DotplotViewModel\n\n  const top = view.vview.offsetPx - offsetY\n  const left = -(view.hview.offsetPx - offsetX)\n  return (\n    <div style={{ position: 'relative' }}>\n      <model.ReactComponent2\n        {...props}\n        style={{\n          position: 'absolute',\n          top,\n          left,\n        }}\n      />\n      {children}\n    </div>\n  )\n})\n\nexport default DotplotDisplay\n","import type { CSSProperties } from 'react'\nimport { useEffect, useState } from 'react'\n\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n\n    blockMessage: {\n      backgroundColor: bg,\n      padding: '10px',\n    },\n    blockError: {\n      backgroundColor: bg,\n      padding: '10px',\n      color: 'red',\n    },\n  }\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const { classes } = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShown(true)\n    }, 300)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [])\n\n  return shown ? (\n    <div className={classes.loading}>\n      <LoadingEllipses />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.blockMessage}>\n      <Typography>{messageText}</Typography>\n    </div>\n  )\n}\n\nfunction BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.blockError}>\n      <Typography>{`${error}`}</Typography>\n    </div>\n  )\n}\n\nconst ServerSideRenderedDotplotContent = observer(function ({\n  model,\n  style,\n}: {\n  model: {\n    error?: unknown\n    message?: string\n    filled?: boolean\n    shouldDisplay?: boolean\n    reactElement?: React.ReactElement\n  }\n  style: CSSProperties\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} data-testid=\"reload_button\" />\n  } else if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  } else if (!model.filled) {\n    return <LoadingMessage />\n  } else if (model.shouldDisplay) {\n    return <div style={style}>{model.reactElement}</div>\n  }\n  return null\n})\n\nexport default ServerSideRenderedDotplotContent\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { getSnapshot } from 'mobx-state-tree'\n\nimport type { DotplotViewModel } from '../DotplotView/model'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\nexport function renderBlockData(self: IAnyStateTreeNode) {\n  const { rpcManager } = getSession(self)\n  const { rendererType } = self\n  const { adapterConfig } = self\n  const parent = getContainingView(self) as DotplotViewModel\n\n  // Alternative to readConfObject(config) is below used because renderProps is\n  // something under our control.  Compare to serverSideRenderedBlock\n  readConfObject(self.configuration)\n  getSnapshot(parent)\n\n  if (parent.initialized) {\n    const { viewWidth, viewHeight, borderSize, borderX, borderY } = parent\n    return {\n      rendererType,\n      rpcManager,\n      renderProps: {\n        ...self.renderProps(),\n        view: structuredClone(getSnapshot(parent)),\n        width: viewWidth,\n        height: viewHeight,\n        borderSize,\n        borderX,\n        borderY,\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId: getRpcSessionId(self),\n        timeout: 1000000, // 10000,\n      },\n    }\n  }\n  return undefined\n}\n\nexport async function renderBlockEffect(\n  props?: ReturnType<typeof renderBlockData>,\n) {\n  if (!props) {\n    return\n  }\n\n  const { rendererType, rpcManager, renderProps } = props\n  const { reactElement, ...data } = await rendererType.renderInClient(\n    rpcManager,\n    renderProps,\n  )\n  return {\n    reactElement,\n    data,\n    renderingComponent: rendererType.ReactComponent,\n  }\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  ReactRendering,\n  getContainingView,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\n\nimport ServerSideRenderedBlockContent from '../ServerSideRenderedBlockContent'\nimport { renderBlockData, renderBlockEffect } from './renderDotplotBlock'\n\nimport type { DotplotViewModel, ExportSvgOptions } from '../DotplotView/model'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { ThemeOptions } from '@mui/material'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel DotplotDisplay\n * #category display\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'DotplotDisplay',\n      BaseDisplay,\n      types\n        .model({\n          /**\n           * #property\n           */\n          type: types.literal('DotplotDisplay'),\n          /**\n           * #property\n           */\n          configuration: ConfigurationReference(configSchema),\n        })\n        .volatile(() => ({\n          /**\n           * #volatile\n           */\n          stopToken: undefined as string | undefined,\n          /**\n           * #volatile\n           */\n          warnings: [] as { message: string; effect: string }[],\n          /**\n           * #volatile\n           */\n          filled: false,\n          /**\n           * #volatile\n           */\n          data: undefined as any,\n          /**\n           * #volatile\n           */\n          reactElement: undefined as React.ReactElement | undefined,\n          /**\n           * #volatile\n           */\n          message: undefined as string | undefined,\n          /**\n           * #volatile\n           */\n          renderingComponent: undefined as any,\n          /**\n           * #volatile\n           */\n          ReactComponent2:\n            ServerSideRenderedBlockContent as unknown as React.FC<any>,\n        })),\n    )\n    .views(self => ({\n      get shouldDisplay() {\n        const { vview, hview } = getContainingView(self) as DotplotViewModel\n        return (\n          vview.bpPerPx === self.data.bpPerPxY &&\n          hview.bpPerPx === self.data.bpPerPxX\n        )\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          config: self.configuration.renderer,\n        }\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: ExportSvgOptions & { theme?: ThemeOptions }) {\n        const props = renderBlockData(self)\n        if (!props) {\n          return null\n        }\n\n        const { rendererType, rpcManager, renderProps } = props\n        const rendering = await rendererType.renderInClient(rpcManager, {\n          ...renderProps,\n          exportSVG: opts,\n          theme: opts.theme || renderProps.theme,\n        })\n        const { hview, vview } = getContainingView(self) as DotplotViewModel\n        const offX = -hview.offsetPx + rendering.offsetX\n        const offY = -vview.offsetPx + rendering.offsetY\n        return (\n          <g transform={`translate(${offX} ${-offY})`}>\n            <ReactRendering rendering={rendering} />\n          </g>\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        makeAbortableReaction(\n          self,\n          () => renderBlockData(self),\n          blockData => renderBlockEffect(blockData),\n          {\n            name: `${self.type} ${self.id} rendering`,\n            delay: 500,\n            fireImmediately: true,\n          },\n          this.setLoading,\n          this.setRendered,\n          this.setError,\n        )\n      },\n      /**\n       * #action\n       */\n      setLoading(stopToken?: string) {\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.data = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n        self.stopToken = stopToken\n      },\n      /**\n       * #action\n       */\n      setMessage(messageText: string) {\n        self.filled = false\n        self.message = messageText\n        self.reactElement = undefined\n        self.data = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n        self.stopToken = undefined\n      },\n      /**\n       * #action\n       */\n      setRendered(args?: {\n        data: any\n        reactElement: React.ReactElement\n        renderingComponent: React.Component\n      }) {\n        if (args === undefined) {\n          return\n        }\n        const { data, reactElement, renderingComponent } = args\n        self.warnings = data.warnings\n        self.filled = true\n        self.message = undefined\n        self.reactElement = reactElement\n        self.data = data\n        self.error = undefined\n        self.renderingComponent = renderingComponent\n        self.stopToken = undefined\n      },\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        console.error(error)\n        // the rendering failed for some reason\n        self.filled = false\n        self.message = undefined\n        self.reactElement = undefined\n        self.data = undefined\n        self.error = error\n        self.renderingComponent = undefined\n        self.stopToken = undefined\n      },\n    }))\n}\n\nexport type DotplotDisplayStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotDisplayModel = Instance<DotplotDisplayStateModel>\n","import { getConf } from '@jbrowse/core/configuration'\nimport { gatherOverlaps, getSession, sum } from '@jbrowse/core/util'\nimport { MismatchParser } from '@jbrowse/plugin-alignments'\n\nimport type { ReducedFeature } from '../util'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearPileupDisplayModel } from '@jbrowse/plugin-alignments'\n\nconst { featurizeSA, getClip, getLength, getLengthSansClipping } =\n  MismatchParser\n\nexport function onClick(feature: Feature, self: LinearPileupDisplayModel) {\n  const session = getSession(self)\n  try {\n    const cigar = feature.get('CIGAR')\n    const clipPos = getClip(cigar, 1)\n    const flags = feature.get('flags')\n    const strand = feature.get('strand')\n    const readName = feature.get('name')\n    const readAssembly = `${readName}_assembly_${Date.now()}`\n    const { parentTrack } = self\n    const [trackAssembly] = getConf(parentTrack, 'assemblyNames')\n    const assemblyNames = [trackAssembly, readAssembly]\n    const trackId = `track-${Date.now()}`\n    const trackName = `${readName}_vs_${trackAssembly}`\n    const SA = feature.get('tags')?.SA as string\n    const SA2 = featurizeSA(SA, feature.id(), strand, readName, true)\n\n    // if secondary alignment or supplementary, calculate length from SA[0]'s\n    // CIGAR which is the primary alignments. otherwise it is the primary\n    // alignment just use seq.length if primary alignment\n    const totalLength = getLength(flags & 2048 ? SA2[0]!.CIGAR : cigar)\n\n    const features = (\n      [\n        {\n          ...feature.toJSON(),\n          strand: 1,\n          mate: {\n            refName: readName,\n            start: clipPos,\n            end: clipPos + getLengthSansClipping(cigar),\n          },\n        },\n        ...SA2,\n      ] as ReducedFeature[]\n    ).sort((a, b) => a.clipPos - b.clipPos)\n\n    session.addView('DotplotView', {\n      type: 'DotplotView',\n      hview: {\n        offsetPx: 0,\n        bpPerPx: sum(features.map(a => a.end - a.start)) / 800,\n        displayedRegions: gatherOverlaps(\n          features.map((f, index) => {\n            const { start, end, refName } = f\n            return {\n              start,\n              end,\n              refName,\n              index,\n              assemblyName: trackAssembly,\n            }\n          }),\n        ),\n      },\n      vview: {\n        offsetPx: 0,\n        bpPerPx: totalLength / 400,\n        minimumBlockWidth: 0,\n        interRegionPaddingWidth: 0,\n        displayedRegions: [\n          {\n            assemblyName: readAssembly,\n            start: 0,\n            end: totalLength,\n            refName: readName,\n          },\n        ],\n      },\n\n      viewTrackConfigs: [\n        {\n          type: 'SyntenyTrack',\n          assemblyNames,\n          adapter: {\n            type: 'FromConfigAdapter',\n            features,\n          },\n          trackId,\n          name: trackName,\n        },\n      ],\n      assemblyNames,\n      tracks: [\n        {\n          configuration: trackId,\n          type: 'SyntenyTrack',\n          displays: [\n            {\n              type: 'DotplotDisplay',\n              configuration: `${trackId}-DotplotDisplay`,\n            },\n          ],\n        },\n      ],\n\n      displayName: `${readName} vs ${trackAssembly}`,\n    })\n  } catch (e) {\n    console.error(e)\n    session.notifyError(`${e}`, e)\n  }\n}\n","import Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport { observable } from 'mobx'\nimport { getParent } from 'mobx-state-tree'\n\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel Dotplot1DView\n * ref https://mobx-state-tree.js.org/concepts/volatiles on volatile state used here\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Dotplot1DView = Base1DView.extend(self => {\n  const scaleFactor = observable.box(1)\n  return {\n    views: {\n      /**\n       * #getter\n       * this uses padding=false and elision=false\n       */\n      get dynamicBlocks() {\n        return calculateDynamicBlocks(self, false, false)\n      },\n      /**\n       * #getter\n       */\n\n      get scaleFactor() {\n        return scaleFactor.get()\n      },\n\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        return self.totalBp / (self.width - 50)\n      },\n\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      /**\n       * #getter\n       */\n      get maxOffset() {\n        return self.displayedRegionsTotalPx - self.width * 0.2\n      },\n\n      /**\n       * #getter\n       */\n      get minOffset() {\n        return -self.width * 0.8\n      },\n    },\n    actions: {\n      /**\n       * #action\n       */\n      setScaleFactor(n: number) {\n        scaleFactor.set(n)\n      },\n\n      /**\n       * #action\n       */\n      center() {\n        const centerBp = self.totalBp / 2\n        const centerPx = centerBp / self.bpPerPx\n        self.scrollTo(centerPx - self.width / 2)\n      },\n    },\n  }\n})\n\nconst DotplotHView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      return getParent<any>(self).viewWidth\n    },\n  },\n}))\n\nconst DotplotVView = Dotplot1DView.extend(self => ({\n  views: {\n    get width() {\n      return getParent<any>(self).viewHeight\n    },\n  },\n}))\n\nexport { Dotplot1DView, DotplotHView, DotplotVView }\nexport type Dotplot1DViewModel = Instance<typeof Dotplot1DView>\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  getSession,\n  getTickDisplayStr,\n  isSessionModelWithWidgets,\n  localStorageGetBoolean,\n  localStorageGetItem,\n  max,\n  measureText,\n  minmax,\n} from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport { saveAs } from 'file-saver'\nimport { autorun, observable, transaction } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n} from 'mobx-state-tree'\n\nimport { Dotplot1DView, DotplotHView, DotplotVView } from './1dview'\nimport { getBlockLabelKeysToHide, makeTicks } from './components/util'\n\nimport type { ImportFormSyntenyTrack } from './types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseTrackStateModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport type { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport type { Instance, SnapshotIn } from 'mobx-state-tree'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\ntype Coord = [number, number]\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  Wrapper?: React.FC<{ children: React.ReactNode }>\n  themeName?: string\n}\n\nfunction stringLenPx(a: string) {\n  return measureText(a.slice(0, 30))\n}\n\nfunction pxWidthForBlocks(\n  blocks: BaseBlock[],\n  bpPerPx: number,\n  hide: Set<string>,\n) {\n  return max([\n    ...blocks.filter(b => !hide.has(b.key)).map(b => stringLenPx(b.refName)),\n    ...blocks\n      .filter(b => !hide.has(b.key))\n      .map(b => stringLenPx(getTickDisplayStr(b.end, bpPerPx))),\n  ])\n}\n\n/**\n * #stateModel DotplotView\n * #category view\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nexport default function stateModelFactory(pm: PluginManager) {\n  return types\n    .compose(\n      'DotplotView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('DotplotView'),\n        /**\n         * #property\n         */\n        height: 600,\n        /**\n         * #property\n         */\n        borderSize: 20,\n        /**\n         * #property\n         */\n        tickSize: 5,\n        /**\n         * #property\n         */\n        vtextRotation: 0,\n        /**\n         * #property\n         */\n        htextRotation: -90,\n        /**\n         * #property\n         */\n        fontSize: 15,\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n        /**\n         * #property\n         */\n        assemblyNames: types.array(types.string),\n        /**\n         * #property\n         */\n        drawCigar: true,\n        /**\n         * #property\n         */\n        hview: types.optional(DotplotHView, {}),\n        /**\n         * #property\n         */\n        vview: types.optional(DotplotVView, {}),\n\n        /**\n         * #property\n         */\n        tracks: types.array(\n          pm.pluggableMstType('track', 'stateModel') as BaseTrackStateModel,\n        ),\n\n        /**\n         * #property\n         * this represents tracks specific to this view specifically used\n         * for read vs ref dotplots where this track would not really apply\n         * elsewhere\n         */\n        viewTrackConfigs: types.array(pm.pluggableConfigSchemaType('track')),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      volatileWidth: undefined as number | undefined,\n      /**\n       * #volatile\n       */\n      volatileError: undefined as unknown,\n\n      /**\n       * #volatile\n       * these are 'personal preferences', stored in volatile and\n       * loaded/written to localStorage\n       */\n      cursorMode: localStorageGetItem('dotplot-cursorMode') || 'crosshair',\n      /**\n       * #volatile\n       */\n      showPanButtons: localStorageGetBoolean('dotplot-showPanbuttons', true),\n      /**\n       * #volatile\n       */\n      wheelMode: localStorageGetItem('dotplot-wheelMode') || 'zoom',\n      /**\n       * #volatile\n       */\n      borderX: 100,\n      /**\n       * #volatile\n       */\n      borderY: 100,\n      /**\n       * #volatile\n       */\n      importFormSyntenyTrackSelections:\n        observable.array<ImportFormSyntenyTrack>(),\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      importFormRemoveRow(idx: number) {\n        self.importFormSyntenyTrackSelections.splice(idx, 1)\n      },\n      /**\n       * #action\n       */\n      clearImportFormSyntenyTracks() {\n        self.importFormSyntenyTrackSelections.clear()\n      },\n      /**\n       * #action\n       */\n      setImportFormSyntenyTrack(arg: number, val: ImportFormSyntenyTrack) {\n        self.importFormSyntenyTrackSelections[arg] = val\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get width(): number {\n        if (!self.volatileWidth) {\n          throw new Error('width not initialized')\n        }\n        return self.volatileWidth\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyErrors() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames\n          .map(a => assemblyManager.get(a)?.error)\n          .filter(f => !!f)\n          .join(', ')\n      },\n      /**\n       * #getter\n       */\n      get assembliesInitialized() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames.every(\n          n => assemblyManager.get(n)?.initialized ?? true,\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get initialized() {\n        return (\n          self.volatileWidth !== undefined &&\n          self.hview.displayedRegions.length > 0 &&\n          self.vview.displayedRegions.length > 0 &&\n          self.assembliesInitialized\n        )\n      },\n      /**\n       * #getter\n       */\n      get hticks() {\n        const { hview } = self\n        const { dynamicBlocks, staticBlocks, bpPerPx } = hview\n        return dynamicBlocks.contentBlocks.length > 5\n          ? []\n          : makeTicks(staticBlocks.contentBlocks, bpPerPx)\n      },\n      /**\n       * #getter\n       */\n      get vticks() {\n        const { vview } = self\n        const { dynamicBlocks, staticBlocks, bpPerPx } = vview\n        return dynamicBlocks.contentBlocks.length > 5\n          ? []\n          : makeTicks(staticBlocks.contentBlocks, bpPerPx)\n      },\n      /**\n       * #getter\n       */\n      get loading() {\n        return self.assemblyNames.length > 0 && !this.initialized\n      },\n      /**\n       * #getter\n       */\n      get viewWidth() {\n        return self.width - self.borderX\n      },\n      /**\n       * #getter\n       */\n      get viewHeight() {\n        return self.height - self.borderY\n      },\n      /**\n       * #getter\n       */\n      get views() {\n        return [self.hview, self.vview]\n      },\n\n      /**\n       * #method\n       */\n      renderProps() {\n        const session = getSession(self)\n        return {\n          ...getParentRenderProps(self),\n          drawCigar: self.drawCigar,\n          highResolutionScaling: getConf(session, 'highResolutionScaling'),\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setShowPanButtons(flag: boolean) {\n        self.showPanButtons = flag\n      },\n      /**\n       * #action\n       */\n      setWheelMode(str: string) {\n        self.wheelMode = str\n      },\n      /**\n       * #action\n       */\n      setCursorMode(str: string) {\n        self.cursorMode = str\n      },\n      /**\n       * #action\n       */\n      setDrawCigar(flag: boolean) {\n        self.drawCigar = flag\n      },\n      /**\n       * #action\n       * returns to the import form\n       */\n      clearView() {\n        self.hview.setDisplayedRegions([])\n        self.vview.setDisplayedRegions([])\n        self.assemblyNames = cast([])\n        self.tracks.clear()\n      },\n      /**\n       * #action\n       */\n      setBorderX(n: number) {\n        self.borderX = n\n      },\n      /**\n       * #action\n       */\n      setBorderY(n: number) {\n        self.borderY = n\n      },\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n        return self.volatileWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = newHeight\n        return self.height\n      },\n\n      /**\n       * #action\n       */\n      setError(e: unknown) {\n        self.volatileError = e\n      },\n\n      /**\n       * #action\n       */\n      zoomOut() {\n        self.hview.zoomOut()\n        self.vview.zoomOut()\n      },\n      /**\n       * #action\n       */\n      zoomIn() {\n        self.hview.zoomIn()\n        self.vview.zoomIn()\n      },\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pm.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const trackType = pm.getTrackType(conf.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${conf.type}`)\n        }\n        const viewType = pm.getViewType(self.type)!\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          viewType.displayTypes.find(type => type.name === d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n          displays: [{ type: displayConf.type, configuration: displayConf }],\n        })\n        self.tracks.push(track)\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pm.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => {\n          t.forEach(t => self.tracks.remove(t))\n        })\n        return t.length\n      },\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        const hiddenCount = this.hideTrack(trackId)\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n          return true\n        }\n        return false\n      },\n      /**\n       * #action\n       */\n      setAssemblyNames(target: string, query: string) {\n        self.assemblyNames = cast([target, query])\n      },\n      /**\n       * #action\n       */\n      setViews(arr: SnapshotIn<Base1DViewModel>[]) {\n        self.hview = cast(arr[0])\n        self.vview = cast(arr[1])\n      },\n\n      /**\n       * #action\n       */\n      getCoords(mousedown: Coord, mouseup: Coord) {\n        const [xmin, xmax] = minmax(mouseup[0], mousedown[0])\n        const [ymin, ymax] = minmax(mouseup[1], mousedown[1])\n        return Math.abs(xmax - xmin) > 3 && Math.abs(ymax - ymin) > 3\n          ? [\n              self.hview.pxToBp(xmin),\n              self.hview.pxToBp(xmax),\n              self.vview.pxToBp(self.viewHeight - ymin),\n              self.vview.pxToBp(self.viewHeight - ymax),\n            ]\n          : undefined\n      },\n\n      /**\n       * #action\n       * zooms into clicked and dragged region\n       */\n      zoomInToMouseCoords(mousedown: Coord, mouseup: Coord) {\n        const result = this.getCoords(mousedown, mouseup)\n        if (result) {\n          const [x1, x2, y1, y2] = result\n          self.hview.moveTo(x1, x2)\n          self.vview.moveTo(y2, y1)\n        }\n      },\n      /**\n       * #action\n       */\n      showAllRegions() {\n        self.hview.zoomTo(self.hview.maxBpPerPx)\n        self.vview.zoomTo(self.vview.maxBpPerPx)\n        self.vview.center()\n        self.hview.center()\n      },\n      /**\n       * #action\n       * creates a linear synteny view from the clicked and dragged region\n       */\n      onDotplotView(mousedown: Coord, mouseup: Coord) {\n        const result = this.getCoords(mousedown, mouseup)\n        if (result) {\n          const [x1, x2, y1, y2] = result\n          const session = getSession(self)\n\n          const d1 = Dotplot1DView.create({\n            ...getSnapshot(self.hview),\n            minimumBlockWidth: 0,\n            interRegionPaddingWidth: 0,\n          })\n          const d2 = Dotplot1DView.create({\n            ...getSnapshot(self.vview),\n            minimumBlockWidth: 0,\n            interRegionPaddingWidth: 0,\n          })\n          d1.setVolatileWidth(self.hview.width)\n          d2.setVolatileWidth(self.vview.width)\n          d1.moveTo(x1, x2)\n          d2.moveTo(y2, y1)\n          d1.zoomTo(d1.bpPerPx / (self.width / self.hview.width), 0)\n          d2.zoomTo(d2.bpPerPx / (self.width / self.vview.width), 0)\n\n          // add the specific evidence tracks to the LGVs in the split view\n          // note: scales the bpPerPx by scaling proportional of the dotplot\n          // width to the eventual lgv width\n          const tracks = self.tracks\n            .map(track =>\n              track.configuration.displays.find(\n                (display: { type: string }) =>\n                  display.type === 'LinearSyntenyDisplay',\n              ),\n            )\n            .filter(f => !!f)\n            .map(displayConf => {\n              const trackConf = getParent<AnyConfigurationModel>(displayConf, 2)\n              return {\n                type: trackConf.type,\n                configuration: trackConf,\n                displays: [\n                  { type: displayConf.type, configuration: displayConf },\n                ],\n              }\n            })\n\n          const { id: _unused1, ...rest1 } = getSnapshot(d1)\n          const { id: _unused2, ...rest2 } = getSnapshot(d2)\n          const viewSnapshot = {\n            type: 'LinearSyntenyView',\n            views: [\n              {\n                type: 'LinearGenomeView',\n                tracks: [],\n                hideHeader: true,\n                ...rest1,\n              },\n              {\n                type: 'LinearGenomeView',\n                tracks: [],\n                hideHeader: true,\n                ...rest2,\n              },\n            ],\n            tracks,\n          }\n\n          session.addView('LinearSyntenyView', viewSnapshot)\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import('./svgcomponents/SVGDotplotView')\n        const html = await renderToSvg(self as DotplotViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n      // if any of our assemblies are temporary assemblies\n      beforeDestroy() {\n        const session = getSession(self)\n        for (const name of self.assemblyNames) {\n          session.removeTemporaryAssembly?.(name)\n        }\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const s = (s: unknown) => JSON.stringify(s)\n            const { showPanButtons, wheelMode, cursorMode } = self\n            if (typeof localStorage !== 'undefined') {\n              localStorage.setItem('dotplot-showPanbuttons', s(showPanButtons))\n              localStorage.setItem('dotplot-cursorMode', cursorMode)\n              localStorage.setItem('dotplot-wheelMode', wheelMode)\n            }\n          }),\n        )\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              const session = getSession(self)\n\n              // don't operate if width not set yet\n              if (\n                self.volatileWidth === undefined ||\n                !self.assembliesInitialized\n              ) {\n                return\n              }\n\n              // also don't operate if displayedRegions already set, this is a\n              // helper autorun to load regions from assembly\n              if (\n                self.hview.displayedRegions.length > 0 &&\n                self.vview.displayedRegions.length > 0\n              ) {\n                return\n              }\n\n              const views = [self.hview, self.vview]\n              transaction(() => {\n                self.assemblyNames.forEach((name, index) => {\n                  const assembly = session.assemblyManager.get(name)\n                  const view = views[index]!\n                  view.setDisplayedRegions(assembly?.regions || [])\n                })\n                self.showAllRegions()\n              })\n            },\n            { delay: 1000 },\n          ),\n        )\n        addDisposer(\n          self,\n          autorun(function borderSetter() {\n            // make sure we have a width on the view before trying to load\n            if (self.volatileWidth === undefined) {\n              return\n            }\n            const { vview, hview, viewHeight, viewWidth } = self\n            const padding = 40\n            const vblocks = vview.dynamicBlocks.contentBlocks\n            const hblocks = hview.dynamicBlocks.contentBlocks\n            const hoffset = hview.offsetPx\n            const voffset = vview.offsetPx\n\n            const vhide = getBlockLabelKeysToHide(vblocks, viewHeight, voffset)\n            const hhide = getBlockLabelKeysToHide(hblocks, viewWidth, hoffset)\n            const by = pxWidthForBlocks(hblocks, vview.bpPerPx, hhide)\n            const bx = pxWidthForBlocks(vblocks, hview.bpPerPx, vhide)\n\n            // these are set via autorun to avoid dependency cycle\n            self.setBorderY(Math.max(by + padding, 50))\n            self.setBorderX(Math.max(bx + padding, 50))\n          }),\n        )\n      },\n      /**\n       * #action\n       */\n      squareView() {\n        const { hview, vview } = self\n        const avg = (hview.bpPerPx + vview.bpPerPx) / 2\n        const hpx = hview.pxToBp(hview.width / 2)\n        const vpx = vview.pxToBp(vview.width / 2)\n        hview.setBpPerPx(avg)\n        hview.centerAt(hpx.coord, hpx.refName, hpx.index)\n        vview.setBpPerPx(avg)\n        vview.centerAt(vpx.coord, vpx.refName, vpx.index)\n      },\n      /**\n       * #action\n       */\n      squareViewProportional() {\n        const { hview, vview } = self\n        const ratio = hview.width / vview.width\n        const avg = (hview.bpPerPx + vview.bpPerPx) / 2\n        const hpx = hview.pxToBp(hview.width / 2)\n        const vpx = vview.pxToBp(vview.width / 2)\n        hview.setBpPerPx(avg / ratio)\n        hview.centerAt(hpx.coord, hpx.refName, hpx.index)\n        vview.setBpPerPx(avg)\n        vview.centerAt(vpx.coord, vpx.refName, vpx.index)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems() {\n        const session = getSession(self)\n        return [\n          {\n            label: 'Return to import form',\n            icon: FolderOpenIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                {\n                  model: self,\n                  handleClose,\n                },\n              ])\n            },\n          },\n\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                {\n                  model: self,\n                  handleClose,\n                },\n              ])\n            },\n          },\n          ...(isSessionModelWithWidgets(session)\n            ? [\n                {\n                  label: 'Open track selector',\n                  onClick: self.activateTrackSelector,\n                  icon: TrackSelectorIcon,\n                },\n              ]\n            : []),\n        ]\n      },\n      /**\n       * #getter\n       */\n      get error(): unknown {\n        return self.volatileError || self.assemblyErrors\n      },\n    }))\n}\n\nexport type DotplotViewStateModel = ReturnType<typeof stateModelFactory>\nexport type DotplotViewModel = Instance<DotplotViewStateModel>\n\nexport { Dotplot1DView, type Dotplot1DViewModel } from './1dview'\n","import ComparativeRenderer from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport {\n  renameRegionsIfNeeded,\n  renderToAbstractCanvas,\n} from '@jbrowse/core/util'\n\nimport { Dotplot1DView } from '../DotplotView/model'\n\nimport type { Dotplot1DViewModel } from '../DotplotView/model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type {\n  RenderArgs,\n  RenderArgsDeserialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ComparativeServerSideRendererType'\nimport type { Region } from '@jbrowse/core/util'\n\nexport interface DotplotRenderArgsDeserialized extends RenderArgsDeserialized {\n  adapterConfig: AnyConfigurationModel\n  height: number\n  width: number\n  highResolutionScaling: number\n  view: {\n    hview: Dotplot1DViewModel\n    vview: Dotplot1DViewModel\n  }\n}\n\ninterface DotplotRenderArgs extends RenderArgs {\n  adapterConfig: AnyConfigurationModel\n  sessionId: string\n  view: {\n    hview: { displayedRegions: Region[] }\n    vview: { displayedRegions: Region[] }\n  }\n}\n\nexport default class DotplotRenderer extends ComparativeRenderer {\n  supportsSVG = true\n\n  async renameRegionsIfNeeded(args: DotplotRenderArgs) {\n    const pm = this.pluginManager\n    const assemblyManager = pm.rootModel?.session?.assemblyManager\n\n    const { view, sessionId, adapterConfig } = args\n\n    async function process(regions?: Region[]) {\n      if (!assemblyManager) {\n        throw new Error('No assembly manager provided')\n      }\n      const result = await renameRegionsIfNeeded(assemblyManager, {\n        sessionId,\n        adapterConfig,\n        regions,\n      })\n      return result.regions\n    }\n\n    view.hview.displayedRegions = await process(view.hview.displayedRegions)\n    view.vview.displayedRegions = await process(view.vview.displayedRegions)\n\n    return args\n  }\n\n  async render(renderProps: DotplotRenderArgsDeserialized) {\n    const {\n      width,\n      height,\n      view: { hview, vview },\n    } = renderProps\n    const dimensions = [width, height]\n    const views = [hview, vview].map((snap, idx) => {\n      const view = Dotplot1DView.create(snap)\n      view.setVolatileWidth(dimensions[idx]!)\n      return view\n    })\n    const target = views[0]!\n    const feats = await this.getFeatures({\n      ...renderProps,\n      regions: target.dynamicBlocks.contentBlocks,\n    })\n    target.setFeatures(feats)\n\n    const { drawDotplot } = await import('./drawDotplot')\n    const ret = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      drawDotplot(ctx, { ...renderProps, views }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...ret,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...ret,\n      height,\n      width,\n      offsetX: views[0]!.dynamicBlocks.blocks[0]?.offsetPx || 0,\n      offsetY: views[1]!.dynamicBlocks.blocks[0]?.offsetPx || 0,\n      bpPerPxX: views[0]!.bpPerPx,\n      bpPerPxY: views[1]!.bpPerPx,\n    }\n  }\n}\n","import { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport type { DotplotRenderArgsDeserialized } from '../DotplotRenderer'\n\nconst DotplotRendering = observer(function (\n  props: DotplotRenderArgsDeserialized,\n) {\n  return <PrerenderedCanvas {...props} />\n})\n\nexport default DotplotRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config DotplotRenderer\n * #category renderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'DotplotRenderer',\n  {\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description:\n        'the color of each feature in a synteny, used with colorBy:default',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    posColor: {\n      type: 'color',\n      description: 'the color for forward alignments, used with colorBy:strand',\n      defaultValue: 'blue',\n    },\n    /**\n     * #slot\n     */\n    negColor: {\n      type: 'color',\n      description: 'the color for reverse alignments, used with colorBy:strand',\n      defaultValue: 'red',\n    },\n\n    /**\n     * #slot\n     */\n    lineWidth: {\n      type: 'number',\n      description: 'width of the lines to be drawn',\n      defaultValue: 2.5, // 2.5 is similar to D-GENIES\n    },\n\n    /**\n     * #slot\n     */\n    colorBy: {\n      type: 'stringEnum',\n      model: types.enumeration('colorBy', [\n        'identity',\n        'meanQueryIdentity',\n        'mappingQuality',\n        'strand',\n        'default',\n      ]),\n      description: `Color by options:<br/>\n<ul>\n  <li>\"identity\" - the identity of the particular hit, similar to D-GENIES, use the other config slots 'thresholds' and 'thresholdsPalette' to define colors for this setting</li>\n  <li>\"meanQueryIdentity\" - calculates the weighted mean identity (weighted by alignment length) of all the hits that the query maps to (e.g. if the query is split aligned to many target, uses their weighted mean. can help show patterns of more related and distant synteny after WGD)</li>\n  <li>\"mappingQuality\" - uses mapping quality from PAF, some adapters don't have this setting</li>\n  <li>\"strand\" - colors negative alignments with negColor and positive alignments with posColor</li>\n  <li>\"default\" - uses the 'color' config slot</li>\n</ul>`,\n      defaultValue: 'default',\n    },\n\n    /**\n     * #slot\n     */\n    thresholdsPalette: {\n      type: 'stringArray',\n      defaultValue: ['#094b09', '#2ebd40', '#d5670b', '#ffd84b'],\n      description: 'threshold colors, used with colorBy:identity',\n    },\n\n    /**\n     * #slot\n     */\n    thresholds: {\n      type: 'stringArray',\n      defaultValue: ['0.75', '0.5', '0.25', '0'],\n      description: 'threshold breakpoints, used with colorBy:identity',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport TimelineIcon from '@mui/icons-material/Timeline'\n\nimport ComparativeRenderer from './ComparativeRenderer'\nimport DotplotDisplayF from './DotplotDisplay'\nimport DotplotReadVsRefMenuItem from './DotplotReadVsRef'\nimport DotplotRendererF from './DotplotRenderer'\nimport DotplotViewF from './DotplotView'\nimport LaunchDotplotViewF from './LaunchDotplotView'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default class DotplotPlugin extends Plugin {\n  name = 'DotplotPlugin'\n\n  install(pluginManager: PluginManager) {\n    DotplotViewF(pluginManager)\n    DotplotDisplayF(pluginManager)\n    DotplotRendererF(pluginManager)\n    LaunchDotplotViewF(pluginManager)\n    DotplotReadVsRefMenuItem(pluginManager)\n\n    // install our comparative rendering rpc callback\n    pluginManager.addRpcMethod(() => new ComparativeRenderer(pluginManager))\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Dotplot view',\n        icon: TimelineIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('DotplotView', {})\n        },\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { types } from 'mobx-state-tree'\n\nimport ReactComponent from './components/DotplotDisplay'\nimport { stateModelFactory } from './stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function DotplotDisplayF(pm: PluginManager) {\n  pm.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pm)\n    return new DisplayType({\n      name: 'DotplotDisplay',\n      displayName: 'Dotplot display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'DotplotView',\n      ReactComponent,\n    })\n  })\n}\n\n/**\n * #config DotplotDisplay\n */\nexport function configSchemaFactory(pm: any) {\n  return ConfigurationSchema(\n    'DotplotDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(pm.pluggableConfigSchemaType('renderer'), {\n        type: 'DotplotRenderer',\n      }),\n    },\n    {\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'displayId',\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function DotplotViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'DotplotView',\n      displayName: 'Dotplot view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/DotplotView')),\n    })\n  })\n}\n","import DotplotRenderer from './DotplotRenderer'\nimport ReactComponent from './components/DotplotRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function DotplotRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new DotplotRenderer({\n        name: 'DotplotRenderer',\n        configSchema: configSchema,\n        ReactComponent,\n        pluginManager,\n      }),\n  )\n}\n","import { transaction } from 'mobx'\n\nimport type { DotplotViewModel } from './DotplotView/model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default function LaunchDotplotView(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-DotplotView',\n    // @ts-expect-error\n    async ({\n      session,\n      views,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      views: { loc: string; assembly: string; tracks?: string[] }[]\n      tracks?: string[]\n    }) => {\n      try {\n        const model = session.addView('DotplotView', {}) as DotplotViewModel\n        const assemblyNames = views.map(view => view.assembly)\n\n        transaction(() => {\n          model.setViews([\n            { bpPerPx: 0.1, offsetPx: 0 },\n            { bpPerPx: 0.1, offsetPx: 0 },\n          ])\n          model.setAssemblyNames(assemblyNames[0]!, assemblyNames[1]!)\n        })\n\n        // http://localhost:3000/?config=test_data%2Fvolvox%2Fconfig.json&session=spec-{\"views\":[{\"type\":\"DotplotView\",\"views\":[{\"assembly\":\"volvox\"},{\"assembly\":\"volvox\"}],\"tracks\":[\"volvox_fake_synteny\"]}]}\n\n        const idsNotFound = [] as string[]\n        tracks.forEach(track => {\n          tryTrack(model, track, idsNotFound)\n        })\n\n        if (idsNotFound.length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notifyError(`${e}`, e)\n        throw e\n      }\n    },\n  )\n}\n\nfunction tryTrack(\n  model: { showTrack: (arg: string) => void },\n  trackId: string,\n  idsNotFound: string[],\n) {\n  try {\n    model.showTrack(trackId)\n  } catch (e) {\n    if (/Could not resolve identifier/.exec(`${e}`)) {\n      idsNotFound.push(trackId)\n    } else {\n      throw e\n    }\n  }\n}\n","import AddIcon from '@mui/icons-material/Add'\n\nimport { onClick } from './DotplotReadVsRef'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  DisplayType,\n  PluggableElementType,\n} from '@jbrowse/core/pluggableElementTypes'\nimport type { LinearPileupDisplayModel } from '@jbrowse/plugin-alignments'\n\n// local\n\nexport default function DotplotReadVsRefMenuItem(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-extendPluggableElement',\n    (pluggableElement: PluggableElementType) => {\n      if (pluggableElement.name === 'LinearPileupDisplay') {\n        const { stateModel } = pluggableElement as DisplayType\n        const newStateModel = stateModel.extend(\n          (self: LinearPileupDisplayModel) => {\n            const superContextMenuItems = self.contextMenuItems\n            return {\n              views: {\n                contextMenuItems() {\n                  const feature = self.contextMenuFeature\n                  return [\n                    ...superContextMenuItems(),\n                    ...(feature\n                      ? [\n                          {\n                            label: 'Dotplot of read vs ref',\n                            icon: AddIcon,\n                            onClick: () => {\n                              onClick(feature, self)\n                            },\n                          },\n                        ]\n                      : []),\n                  ]\n                },\n              },\n            }\n          },\n        )\n\n        ;(pluggableElement as DisplayType).stateModel = newStateModel\n      }\n      return pluggableElement\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { linearWiggleDisplayModelFactory } from '@jbrowse/plugin-wiggle'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\nconst EditGCContentParamsDialog = lazy(\n  () => import('./components/EditGCContentParams'),\n)\n\n/**\n * #stateModel SharedGCContentModel\n * #category display\n * extends\n * - [LinearWiggleDisplay](../linearwiggledisplay)\n */\nexport default function SharedModelF(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'SharedGCContentModel',\n      linearWiggleDisplayModelFactory(pluginManager, configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        windowSize: types.maybe(types.number),\n        /**\n         * #property\n         */\n        windowDelta: types.maybe(types.number),\n      }),\n    )\n    .actions(self => ({\n      setGCContentParams({\n        windowSize,\n        windowDelta,\n      }: {\n        windowSize: number\n        windowDelta: number\n      }) {\n        self.windowSize = windowSize\n        self.windowDelta = windowDelta\n      },\n    }))\n    .views(self => ({\n      get windowSizeSetting() {\n        return self.windowSize ?? getConf(self, 'windowSize')\n      },\n      get windowDeltaSetting() {\n        return self.windowDelta ?? getConf(self, 'windowDelta')\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        adapterProps: superAdapterProps,\n      } = self\n      return {\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Change GC parameters',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  EditGCContentParamsDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n        /**\n         * #method\n         * retrieves the sequence adapter from parent track, and puts it as a\n         * subadapter on a GCContentAdapter\n         */\n        adapterProps() {\n          const sequenceAdapter = getConf(self.parentTrack, 'adapter')\n          return {\n            ...superAdapterProps(),\n            adapterConfig: {\n              type: 'GCContentAdapter',\n              sequenceAdapter,\n              windowSize: self.windowSizeSetting,\n              windowDelta: self.windowDeltaSetting,\n            },\n          }\n        },\n      }\n    })\n}\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport GCContentAdapterF from './GCContentAdapter'\nimport GCContentTrackF from './GCContentTrack'\nimport LinearGCContentDisplayF from './LinearGCContentDisplay'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class GCContentPlugin extends Plugin {\n  name = 'GCContentPlugin'\n\n  install(pluginManager: PluginManager) {\n    GCContentAdapterF(pluginManager)\n    GCContentTrackF(pluginManager)\n    LinearGCContentDisplayF(pluginManager)\n  }\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function GCContentTrackF(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'GCContentTrack',\n      displayName: 'GCContent track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'GCContentTrack', configSchema),\n    })\n  })\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function GCContentAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'GCContentAdapter',\n        displayName: 'GC content adapter',\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        configSchema: configSchemaF(pluginManager),\n        getAdapterClass: () =>\n          import('./GCContentAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config GCContentAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GCContentAdapterF = (_pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'GCContentAdapter',\n    {\n      /**\n       * #slot\n       */\n      sequenceAdapter: {\n        type: 'frozen',\n        defaultValue: null,\n      },\n      /**\n       * #slot\n       */\n      windowSize: {\n        type: 'number',\n        defaultValue: 100,\n      },\n      /**\n       * #slot\n       */\n      windowDelta: {\n        type: 'number',\n        defaultValue: 100,\n      },\n    },\n    { explicitlyTyped: true },\n  )\n}\n\nexport default GCContentAdapterF\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config GCContentTrack\n * used for having a gc content track outside of the \"reference sequence display\"\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'GCContentTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { LinearWiggleDisplayReactComponent } from '@jbrowse/plugin-wiggle'\n\nimport configSchemaFactory1 from './config1'\nimport configSchemaFactory2 from './config2'\nimport stateModelF1 from './stateModel1'\nimport stateModelF2 from './stateModel2'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearGCContentDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory1(pluginManager)\n    const stateModel = stateModelF1(pluginManager, configSchema)\n    return new DisplayType({\n      name: 'LinearGCContentDisplay',\n      configSchema,\n      stateModel,\n      displayName: 'GC content display',\n      trackType: 'ReferenceSequenceTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: LinearWiggleDisplayReactComponent,\n    })\n  })\n\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory2(pluginManager)\n    const stateModel = stateModelF2(pluginManager, configSchema)\n    return new DisplayType({\n      name: 'LinearGCContentTrackDisplay',\n      configSchema,\n      stateModel,\n      displayName: 'GC content display',\n      trackType: 'GCContentTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: LinearWiggleDisplayReactComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearGCContentDisplay\n * #category display\n * extends LinearWiggleDisplay\n */\nexport default function LinearGCContentDisplay(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearGCContentDisplay',\n    {\n      windowSize: {\n        type: 'number',\n        defaultValue: 100,\n      },\n      windowDelta: {\n        type: 'number',\n        defaultValue: 100,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: pluginManager.getDisplayType('LinearWiggleDisplay')!\n        .configSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\n\nimport SharedModelF from './shared'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearGCContentDisplay\n * #category display\n * base model `SharedGCContentModel`\n */\nexport default function stateModelF(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types.compose(\n    'LinearGCContentDisplay',\n    SharedModelF(pluginManager, configSchema),\n    types.model({\n      type: types.literal('LinearGCContentDisplay'),\n    }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearGCContentTrackDisplay\n * #category display\n * extends LinearWiggleDisplay, used specifically for GCContentTrack\n */\nexport default function LinearGCContentTrackDisplayF(\n  pluginManager: PluginManager,\n) {\n  return ConfigurationSchema(\n    'LinearGCContentTrackDisplay',\n    {\n      windowSize: {\n        type: 'number',\n        defaultValue: 100,\n      },\n      windowDelta: {\n        type: 'number',\n        defaultValue: 100,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: pluginManager.getDisplayType('LinearWiggleDisplay')!\n        .configSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\n\nimport SharedModelF from './shared'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearGCContentTrackDisplay\n * #category display\n *\n * used on GCContentTrack, separately from the display type on the\n * ReferenceSequenceTrack\n *\n * extends\n * - [SharedGCContentModel](../sharedgccontentmodel)\n */\nexport default function stateModelF(\n  pluginManager: PluginManager,\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types.compose(\n    'LinearGCContentTrackDisplay',\n    SharedModelF(pluginManager, configSchema),\n    types.model({\n      type: types.literal('LinearGCContentTrackDisplay'),\n    }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config Gff3Adapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Gff3Adapter = ConfigurationSchema(\n  'Gff3Adapter',\n  {\n    /**\n     * #slot\n     */\n    gffLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.gff',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            gffLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default Gff3Adapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config Gff3TabixAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Gff3TabixAdapter = ConfigurationSchema(\n  'Gff3TabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    gffGzLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.gff.gz',\n        locationType: 'UriLocation',\n      },\n    },\n\n    index: ConfigurationSchema('Gff3TabixIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.indexType\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.gff.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     * the Gff3TabixAdapter has to \"redispatch\" if it fetches a region and\n     * features it finds inside that region extend outside the region we requested.\n     * you can disable this for certain feature types to avoid fetching e.g. the\n     * entire chromosome\n     */\n    dontRedispatch: {\n      type: 'stringArray',\n      defaultValue: ['chromosome', 'region', 'contig'],\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            gffGzLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            index: {\n              location: {\n                uri: snap.uri,\n                baseUri: snap.baseUri,\n              },\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default Gff3TabixAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport Gff3AdapterF from './Gff3Adapter'\nimport Gff3TabixAdapterF from './Gff3TabixAdapter'\nimport GuessGff3F from './GuessGff3'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class GFF3Plugin extends Plugin {\n  name = 'GFF3Plugin'\n\n  install(pluginManager: PluginManager) {\n    Gff3TabixAdapterF(pluginManager)\n    Gff3AdapterF(pluginManager)\n    GuessGff3F(pluginManager)\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function Gff3TabixAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'Gff3TabixAdapter',\n        displayName: 'GFF3 tabix adapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./Gff3TabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function Gff3AdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'Gff3Adapter',\n        displayName: 'GFF3 adapter',\n        configSchema,\n        getAdapterClass: () => import('./Gff3Adapter').then(r => r.default),\n      }),\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n} from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AdapterGuesser } from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessGff3F(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        if (\n          testAdapter(\n            fileName,\n            /\\.gff3?\\.b?gz$/i,\n            adapterHint,\n            'Gff3TabixAdapter',\n          )\n        ) {\n          return {\n            type: 'Gff3TabixAdapter',\n            bamLocation: file,\n            gffGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        } else if (\n          testAdapter(fileName, /\\.gff3?$/i, adapterHint, 'Gff3Adapter')\n        ) {\n          return {\n            type: 'Gff3Adapter',\n            gffLocation: file,\n          }\n        } else {\n          return adapterGuesser(file, index, adapterHint)\n        }\n      }\n    },\n  )\n}\n","import { Fragment, useEffect } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession, notEmpty } from '@jbrowse/core/util'\nimport { colord } from '@jbrowse/core/util/colord'\nimport BookmarkIcon from '@mui/icons-material/Bookmark'\nimport { Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { GridBookmarkModel, IExtendedLGV } from '../../model'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\n\ntype LGV = IExtendedLGV\n\nconst useStyles = makeStyles()({\n  bookmarkButton: {\n    overflow: 'hidden',\n    position: 'absolute',\n    zIndex: 800,\n  },\n  highlight: {\n    overflow: 'hidden',\n    height: '100%',\n    position: 'absolute',\n  },\n})\n\nconst Highlight = observer(function Highlight({ model }: { model: LGV }) {\n  const { classes } = useStyles()\n  const session = getSession(model) as SessionWithWidgets\n  const { assemblyManager } = session\n  const { bookmarkHighlightsVisible, bookmarkLabelsVisible } = model\n\n  const bookmarkWidget = session.widgets.get('GridBookmark') as\n    | GridBookmarkModel\n    | undefined\n\n  useEffect(() => {\n    if (!bookmarkWidget) {\n      session.addWidget('GridBookmarkWidget', 'GridBookmark')\n    }\n  }, [session, bookmarkWidget])\n\n  const set = new Set(model.assemblyNames)\n\n  return bookmarkHighlightsVisible && bookmarkWidget?.bookmarks\n    ? bookmarkWidget.bookmarks\n        .filter(value => set.has(value.assemblyName))\n        .map(r => {\n          const asm = assemblyManager.get(r.assemblyName)\n          const refName = asm?.getCanonicalRefName(r.refName) ?? r.refName\n          const s = model.bpToPx({ refName, coord: r.start })\n          const e = model.bpToPx({ refName, coord: r.end })\n          return s && e\n            ? {\n                width: Math.max(Math.abs(e.offsetPx - s.offsetPx), 3),\n                left: Math.min(s.offsetPx, e.offsetPx) - model.offsetPx,\n                highlight: r.highlight,\n                label: r.label,\n                bookmark: r,\n              }\n            : undefined\n        })\n        .filter(notEmpty)\n        .map(({ left, width, highlight, label, bookmark }, idx) => (\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          <Fragment key={`${left}_${width}_${idx}`}>\n            <div\n              className={classes.highlight}\n              id=\"highlight\"\n              style={{\n                left,\n                width,\n                background: highlight,\n              }}\n            />\n            {bookmarkLabelsVisible && width > 20 ? (\n              <div className={classes.bookmarkButton} style={{ left }}>\n                <CascadingMenuButton\n                  menuItems={[\n                    {\n                      label: 'Open bookmark widget',\n                      onClick: () => {\n                        session.showWidget(bookmarkWidget)\n                      },\n                    },\n                    {\n                      label: 'Turn off highlights',\n                      onClick: () => {\n                        bookmarkWidget.setBookmarkHighlightsVisible(false)\n                      },\n                    },\n\n                    {\n                      label: 'Remove bookmark',\n                      onClick: () => {\n                        bookmarkWidget.removeBookmarkObject(bookmark)\n                      },\n                    },\n                  ]}\n                >\n                  <Tooltip title={label} arrow>\n                    <BookmarkIcon\n                      fontSize=\"small\"\n                      sx={{\n                        color:\n                          colord(highlight).alpha() !== 0\n                            ? colord(highlight).alpha(0.8).toRgbString()\n                            : colord(highlight).alpha(0).toRgbString(),\n                      }}\n                    />\n                  </Tooltip>\n                </CascadingMenuButton>\n              </div>\n            ) : null}\n          </Fragment>\n        ))\n    : null\n})\n\nexport default Highlight\n","import { useEffect } from 'react'\n\nimport { getSession, notEmpty } from '@jbrowse/core/util'\nimport { Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { GridBookmarkModel, IExtendedLGV } from '../../model'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\ntype LGV = IExtendedLGV\n\nconst useStyles = makeStyles()({\n  highlight: {\n    height: '100%',\n    position: 'absolute',\n  },\n})\n\nconst OverviewHighlight = observer(function OverviewHighlight({\n  model,\n  overview,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n}) {\n  const { cytobandOffset } = model\n  const session = getSession(model) as SessionWithWidgets\n  const { classes } = useStyles()\n  const { assemblyManager } = session\n  const { bookmarkHighlightsVisible, bookmarkLabelsVisible } = model\n  const bookmarkWidget = session.widgets.get('GridBookmark') as\n    | GridBookmarkModel\n    | undefined\n\n  useEffect(() => {\n    if (!bookmarkWidget) {\n      session.addWidget('GridBookmarkWidget', 'GridBookmark')\n    }\n  }, [session, bookmarkWidget])\n\n  const assemblyNames = new Set(model.assemblyNames)\n  return bookmarkHighlightsVisible && bookmarkWidget?.bookmarks\n    ? bookmarkWidget.bookmarks\n        .filter(r => assemblyNames.has(r.assemblyName))\n        .map(r => {\n          const asm = assemblyManager.get(r.assemblyName)\n          const refName = asm?.getCanonicalRefName(r.refName) ?? r.refName\n          const rev = r.reversed\n          const s = overview.bpToPx({ refName, coord: rev ? r.end : r.start })\n          const e = overview.bpToPx({ refName, coord: rev ? r.start : r.end })\n          return s !== undefined && e !== undefined\n            ? {\n                width: Math.abs(e - s),\n                left: s + cytobandOffset,\n                highlight: r.highlight,\n                label: r.label,\n              }\n            : undefined\n        })\n        .filter(notEmpty)\n        .map((obj, idx) => {\n          const { left, width, highlight, label } = obj\n          return (\n            <Tooltip\n              key={`${JSON.stringify(obj)}-${idx}`}\n              title={bookmarkLabelsVisible ? label : ''}\n              arrow\n            >\n              <div\n                className={classes.highlight}\n                style={{\n                  left,\n                  width,\n                  background: highlight,\n                  borderLeft: `1px solid ${highlight}`,\n                  borderRight: `1px solid ${highlight}`,\n                }}\n              />\n            </Tooltip>\n          )\n        })\n    : null\n})\n\nexport default OverviewHighlight\n","import {\n  getSession,\n  localStorageGetItem,\n  localStorageSetItem,\n} from '@jbrowse/core/util'\nimport { ElementId, Region as RegionModel } from '@jbrowse/core/util/types/mst'\nimport { autorun } from 'mobx'\nimport { addDisposer, cast, types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Region } from '@jbrowse/core/util/types'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport type { IMSTArray, Instance, SnapshotIn } from 'mobx-state-tree'\n\nconst LabeledRegionModel = types\n  .compose(\n    RegionModel,\n    types.model('Label', {\n      label: types.optional(types.string, ''),\n      highlight: types.optional(types.string, 'rgba(247, 129, 192, 0.35)'),\n    }),\n  )\n  .actions(self => ({\n    setLabel(label: string) {\n      self.label = label\n    },\n    setHighlight(color: string) {\n      self.highlight = color\n    },\n  }))\n\nconst SharedBookmarksModel = types.model('SharedBookmarksModel', {\n  sharedBookmarks: types.maybe(types.array(LabeledRegionModel)),\n})\n\nexport interface IExtendedLGV extends LinearGenomeViewModel {\n  bookmarkHighlightsVisible: boolean\n  bookmarkLabelsVisible: boolean\n  setBookmarkHighlightsVisible: (arg: boolean) => void\n  setBookmarkLabelsVisible: (arg: boolean) => void\n}\n\nexport interface ILabeledRegionModel\n  extends SnapshotIn<typeof LabeledRegionModel> {\n  refName: string\n  start: number\n  end: number\n  reversed: boolean\n  highlight: string\n  assemblyName: string\n  label: string\n  setRefName: (newRefName: string) => void\n  setLabel: (label: string) => void\n  setHighlight: (color: string) => void\n}\n\nexport interface IExtendedLabeledRegionModel extends ILabeledRegionModel {\n  id: number\n  correspondingObj: ILabeledRegionModel\n}\n\nconst localStorageKeyF = () =>\n  typeof window !== 'undefined'\n    ? `bookmarks-${[window.location.host + window.location.pathname].join('-')}`\n    : 'empty'\n\n/**\n * #stateModel GridBookmarkWidgetModel\n */\nexport default function f(_pluginManager: PluginManager) {\n  return types\n    .model('GridBookmarkModel', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('GridBookmarkWidget'),\n      /**\n       * #property\n       * removed by postProcessSnapshot, only loaded from localStorage\n       */\n      bookmarks: types.optional(types.array(LabeledRegionModel), () =>\n        JSON.parse(localStorageGetItem(localStorageKeyF()) || '[]'),\n      ),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      selectedBookmarks: [] as IExtendedLabeledRegionModel[],\n      /**\n       * #volatile\n       */\n      selectedAssembliesPre: undefined as string[] | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get bookmarkAssemblies() {\n        return [...new Set(self.bookmarks.map(r => r.assemblyName))]\n      },\n      /**\n       * #getter\n       */\n      get validAssemblies() {\n        const { assemblyManager } = getSession(self)\n        return new Set(\n          this.bookmarkAssemblies.filter(a => assemblyManager.get(a)),\n        )\n      },\n      /**\n       * #getter\n       */\n      get areBookmarksHighlightedOnAllOpenViews() {\n        const { views } = getSession(self)\n        return views.every(v =>\n          'bookmarkHighlightsVisible' in v ? v.bookmarkHighlightsVisible : true,\n        )\n      },\n      /**\n       * #getter\n       */\n      get areBookmarksHighlightLabelsOnAllOpenViews() {\n        const { views } = getSession(self)\n        return views.every(v =>\n          'bookmarkLabelsVisible' in v ? v.bookmarkLabelsVisible : true,\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get bookmarksWithValidAssemblies() {\n        return self.bookmarks.filter(e =>\n          self.validAssemblies.has(e.assemblyName),\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get sharedBookmarksModel() {\n        // requires cloning bookmarks with JSON.stringify/parse to avoid duplicate\n        // reference to same object in the same state tree, will otherwise error\n        // when performing share\n        return SharedBookmarksModel.create({\n          sharedBookmarks: JSON.parse(JSON.stringify(self.selectedBookmarks)),\n        })\n      },\n      /**\n       * #getter\n       */\n      get allBookmarksModel() {\n        // requires cloning bookmarks with JSON.stringify/parse to avoid duplicate\n        // reference to same object in the same state tree, will otherwise error\n        // when performing share\n        return SharedBookmarksModel.create({\n          sharedBookmarks: JSON.parse(\n            JSON.stringify(self.bookmarksWithValidAssemblies),\n          ),\n        })\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSelectedAssemblies(assemblies?: string[]) {\n        self.selectedAssembliesPre = assemblies\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get selectedAssemblies() {\n        return (\n          self.selectedAssembliesPre?.filter(f =>\n            self.validAssemblies.has(f),\n          ) ?? [...self.validAssemblies]\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      importBookmarks(regions: Region[]) {\n        self.bookmarks = cast([...self.bookmarks, ...regions])\n      },\n      /**\n       * #action\n       */\n      addBookmark(region: Region) {\n        self.bookmarks.push(region)\n      },\n      /**\n       * #action\n       */\n      removeBookmark(index: number) {\n        self.bookmarks.splice(index, 1)\n      },\n      /**\n       * #action\n       */\n      updateBookmarkLabel(\n        bookmark: IExtendedLabeledRegionModel,\n        label: string,\n      ) {\n        bookmark.correspondingObj.setLabel(label)\n      },\n      /**\n       * #action\n       */\n      updateBookmarkHighlight(\n        bookmark: IExtendedLabeledRegionModel,\n        color: string,\n      ) {\n        bookmark.correspondingObj.setHighlight(color)\n      },\n      /**\n       * #action\n       */\n      updateBulkBookmarkHighlights(color: string) {\n        self.selectedBookmarks.forEach(bookmark => {\n          this.updateBookmarkHighlight(bookmark, color)\n        })\n      },\n      /**\n       * #action\n       */\n      setSelectedBookmarks(bookmarks: IExtendedLabeledRegionModel[]) {\n        self.selectedBookmarks = bookmarks\n      },\n      /**\n       * #action\n       */\n      setBookmarkedRegions(regions: IMSTArray<typeof LabeledRegionModel>) {\n        self.bookmarks = cast(regions)\n      },\n      /**\n       * #action\n       */\n      setBookmarkHighlightsVisible(arg: boolean) {\n        const { views } = getSession(self)\n        // hacky, but mst walk() on session leads to 'too much recursion'\n        views.forEach(view => {\n          // @ts-expect-error\n          view.setBookmarkHighlightsVisible?.(arg)\n          // @ts-expect-error\n          view.views?.map(view => {\n            view.setBookmarkHighlightsVisible?.(arg)\n          })\n        })\n      },\n      /**\n       * #action\n       */\n      setBookmarkLabelsVisible(arg: boolean) {\n        const { views } = getSession(self)\n        // hacky, but mst walk() on session leads to 'too much recursion'\n        views.forEach(view => {\n          // @ts-expect-error\n          view.setBookmarkLabelsVisible?.(arg)\n          // @ts-expect-error\n          view.views?.map(view => {\n            view.setBookmarkHighlightsVisible?.(arg)\n          })\n        })\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      clearAllBookmarks() {\n        self.setBookmarkedRegions(\n          self.bookmarks.filter(\n            bookmark => !self.validAssemblies.has(bookmark.assemblyName),\n          ) as IMSTArray<typeof LabeledRegionModel>,\n        )\n      },\n      /**\n       * #action\n       */\n      clearSelectedBookmarks() {\n        for (const bookmark of self.selectedBookmarks) {\n          self.bookmarks.remove(bookmark.correspondingObj)\n        }\n        self.selectedBookmarks = []\n      },\n\n      removeBookmarkObject(arg: Instance<typeof LabeledRegionModel>) {\n        self.bookmarks.remove(arg)\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        const key = localStorageKeyF()\n        function handler(e: StorageEvent) {\n          if (e.key === key) {\n            const localStorage = JSON.parse(localStorageGetItem(key) || '[]')\n            self.setBookmarkedRegions(localStorage)\n          }\n        }\n        window.addEventListener('storage', handler)\n        addDisposer(self, () => {\n          window.removeEventListener('storage', handler)\n        })\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem(key, JSON.stringify(self.bookmarks))\n          }),\n        )\n      },\n    }))\n    .postProcessSnapshot(snap => {\n      const { bookmarks: _, ...rest } = snap as Omit<typeof snap, symbol>\n      return rest\n    })\n}\n\nexport type GridBookmarkStateModel = ReturnType<typeof f>\nexport type GridBookmarkModel = Instance<GridBookmarkStateModel>\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport AddHighlightModelF from './components/Highlight'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('GridBookmarkWidget', {})\n\nexport default function GridBookmarkWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'GridBookmarkWidget',\n      heading: 'Bookmarked regions',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/GridBookmarkWidget')),\n    })\n  })\n  AddHighlightModelF(pluginManager)\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport {\n  getSession,\n  isAbstractMenuManager,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport BookmarkIcon from '@mui/icons-material/Bookmark'\nimport BookmarksIcon from '@mui/icons-material/Bookmarks'\nimport HighlightIcon from '@mui/icons-material/Highlight'\nimport LabelIcon from '@mui/icons-material/Label'\n\nimport GridBookmarkWidgetF from './GridBookmarkWidget'\n\nimport type { GridBookmarkModel } from './GridBookmarkWidget/model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  PluggableElementType,\n  ViewType,\n} from '@jbrowse/core/pluggableElementTypes'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\nimport type { LinearGenomeViewStateModel } from '@jbrowse/plugin-linear-genome-view'\n\nexport default class GridBookmarkPlugin extends Plugin {\n  name = 'GridBookmarkPlugin'\n\n  install(pluginManager: PluginManager) {\n    GridBookmarkWidgetF(pluginManager)\n\n    pluginManager.addToExtensionPoint(\n      'Core-extendPluggableElement',\n      (pluggableElement: PluggableElementType) => {\n        if (pluggableElement.name === 'LinearGenomeView') {\n          const { stateModel } = pluggableElement as ViewType\n          const lgv = stateModel as LinearGenomeViewStateModel\n          const newStateModel = lgv\n            .props({\n              /**\n               * #property\n               */\n              bookmarkHighlightsVisible: true,\n              /**\n               * #property\n               */\n              bookmarkLabelsVisible: true,\n            })\n            .actions(self => ({\n              /**\n               * #action\n               */\n              setBookmarkHighlightsVisible(arg: boolean) {\n                self.bookmarkHighlightsVisible = arg\n              },\n              /**\n               * #action\n               */\n              setBookmarkLabelsVisible(arg: boolean) {\n                self.bookmarkLabelsVisible = arg\n              },\n              /**\n               * #action\n               */\n              activateBookmarkWidget() {\n                const session = getSession(self)\n                if (isSessionModelWithWidgets(session)) {\n                  let bookmarkWidget = session.widgets.get('GridBookmark')\n                  if (!bookmarkWidget) {\n                    bookmarkWidget = session.addWidget(\n                      'GridBookmarkWidget',\n                      'GridBookmark',\n                    )\n                  }\n\n                  session.showWidget(bookmarkWidget)\n                  return session.widgets.get(\n                    'GridBookmark',\n                  ) as GridBookmarkModel\n                }\n\n                throw new Error('Could not open bookmark widget')\n              },\n            }))\n            .actions(self => ({\n              /**\n               * #action\n               */\n              navigateNewestBookmark() {\n                const session = getSession(self)\n                const bookmarkWidget = self.activateBookmarkWidget()\n                if (bookmarkWidget.bookmarks.length) {\n                  self.navTo(bookmarkWidget.bookmarks.at(-1)!)\n                } else {\n                  session.notify(\n                    'There are no recent bookmarks to navigate to.',\n                    'info',\n                  )\n                }\n              },\n\n              /**\n               * #action\n               */\n              bookmarkCurrentRegion() {\n                if (self.id === getSession(self).focusedViewId) {\n                  const selectedRegions = self.getSelectedRegions(\n                    undefined,\n                    undefined,\n                  )\n                  const bookmarkWidget = self.activateBookmarkWidget()\n                  if (!selectedRegions.length) {\n                    throw new Error('no region selected')\n                  } else {\n                    bookmarkWidget.addBookmark(selectedRegions[0]!)\n                  }\n                }\n              },\n            }))\n            .views(self => {\n              const superMenuItems = self.menuItems\n              const superRubberBandMenuItems = self.rubberBandMenuItems\n              return {\n                /**\n                 * #method\n                 */\n                menuItems() {\n                  return [\n                    ...superMenuItems(),\n                    { type: 'divider' },\n                    {\n                      label: 'Bookmarks',\n                      icon: BookmarksIcon,\n                      subMenu: [\n                        {\n                          label: 'Open bookmark widget',\n                          icon: BookmarksIcon,\n                          onClick: () => self.activateBookmarkWidget(),\n                        },\n                        {\n                          label: 'Bookmark current region',\n                          icon: BookmarkIcon,\n                          onClick: () => {\n                            self.bookmarkCurrentRegion()\n                          },\n                        },\n                        {\n                          label: 'Toggle bookmark highlights',\n                          icon: HighlightIcon,\n                          type: 'checkbox',\n                          checked: self.bookmarkHighlightsVisible,\n                          onClick: () => {\n                            self.setBookmarkHighlightsVisible(\n                              !self.bookmarkHighlightsVisible,\n                            )\n                          },\n                        },\n                        {\n                          label: 'Toggle bookmark labels',\n                          icon: LabelIcon,\n                          type: 'checkbox',\n                          checked: self.bookmarkLabelsVisible,\n                          onClick: () => {\n                            self.setBookmarkLabelsVisible(\n                              !self.bookmarkLabelsVisible,\n                            )\n                          },\n                        },\n                      ],\n                    },\n                  ]\n                },\n\n                /**\n                 * #method\n                 */\n                rubberBandMenuItems() {\n                  return [\n                    ...superRubberBandMenuItems(),\n                    {\n                      label: 'Bookmark region',\n                      icon: BookmarkIcon,\n                      onClick: () => {\n                        const { leftOffset, rightOffset } = self\n                        const selectedRegions = self.getSelectedRegions(\n                          leftOffset,\n                          rightOffset,\n                        )\n                        const bookmarkWidget = self.activateBookmarkWidget()\n                        if (!selectedRegions.length) {\n                          throw new Error('no regions selected')\n                        } else {\n                          bookmarkWidget.addBookmark(selectedRegions[0]!)\n                        }\n                      },\n                    },\n                  ]\n                },\n              }\n            })\n            .actions(self => ({\n              afterCreate() {\n                document.addEventListener('keydown', e => {\n                  const activationSequence =\n                    (e.ctrlKey || e.metaKey) && e.shiftKey\n                  // ctrl+shift+d or cmd+shift+d\n                  if (activationSequence && e.code === 'KeyD') {\n                    e.preventDefault()\n                    self.activateBookmarkWidget()\n                    self.bookmarkCurrentRegion()\n                    getSession(self).notify('Bookmark created.', 'success')\n                  }\n                  // ctrl+shift+m or cmd+shift+m\n                  if (activationSequence && e.code === 'KeyM') {\n                    e.preventDefault()\n                    self.navigateNewestBookmark()\n                  }\n                })\n              },\n            }))\n\n          ;(pluggableElement as ViewType).stateModel = newStateModel\n        }\n        return pluggableElement\n      },\n    )\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('Tools', {\n        label: 'Bookmarks',\n        icon: BookmarksIcon,\n        onClick: (session: SessionWithWidgets) => {\n          let bookmarkWidget = session.widgets.get('GridBookmark')\n          if (!bookmarkWidget) {\n            bookmarkWidget = session.addWidget(\n              'GridBookmarkWidget',\n              'GridBookmark',\n            )\n          }\n          session.showWidget(bookmarkWidget)\n        },\n      })\n    }\n  }\n}\n","import Highlight from './Highlight'\nimport OverviewHighlight from './OverviewHighlight'\n\nimport type { IExtendedLGV } from '../../model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\nexport default function AddHighlightModelF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LinearGenomeView-TracksContainerComponent',\n    // @ts-expect-error\n    (\n      rest: React.ReactNode[] | undefined,\n      { model }: { model: IExtendedLGV },\n    ) => {\n      return [\n        ...(rest || []),\n        <Highlight key=\"highlight_grid_bookmark\" model={model} />,\n      ]\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'LinearGenomeView-OverviewScalebarComponent',\n    // @ts-expect-error\n    (\n      rest: React.ReactNode[] | undefined,\n      { model, overview }: { model: IExtendedLGV; overview: Base1DViewModel },\n    ) => {\n      return [\n        ...(rest || []),\n        <OverviewHighlight\n          key=\"overview_highlight_grid_bookmark\"\n          model={model}\n          overview={overview}\n        />,\n      ]\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config GtfAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst GtfAdapter = ConfigurationSchema(\n  'GtfAdapter',\n  {\n    /**\n     * #slot\n     */\n    gtfLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.gtf',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    aggregateField: {\n      type: 'string',\n      defaultValue: 'gene_name',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            gtfLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default GtfAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport GtfAdapterF from './GtfAdapter'\nimport GuessAdapterF from './GuessAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class GtfPlugin extends Plugin {\n  name = 'GTFPlugin'\n\n  install(pluginManager: PluginManager) {\n    GtfAdapterF(pluginManager)\n    GuessAdapterF(pluginManager)\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function GtfAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'GtfAdapter',\n        displayName: 'GTF adapter',\n        configSchema,\n        getAdapterClass: () => import('./GtfAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport { getFileName } from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AdapterGuesser } from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAdapterF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n\n        return testAdapter(\n          fileName,\n          /\\.gtf(\\.gz)?$/i,\n          adapterHint,\n          'GtfAdapter',\n        )\n          ? {\n              type: 'GtfAdapter',\n              gtfLocation: file,\n            }\n          : adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HicAdapter\n * #category adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicAdapter = ConfigurationSchema(\n  'HicAdapter',\n  {\n    /**\n     * #slot\n     */\n    hicLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.hic',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    resolutionMultiplier: {\n      type: 'number',\n      defaultValue: 1,\n      description: 'Initial resolution multiplier',\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            hicLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default HicAdapter\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport ServerSideRendererType from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util/offscreenCanvasUtils'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\nimport type { Region } from '@jbrowse/core/util/types'\n\ninterface HicFeature {\n  bin1: number\n  bin2: number\n  counts: number\n}\n\ninterface HicDataAdapter extends BaseFeatureDataAdapter {\n  getResolution: (bp: number) => Promise<number>\n}\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  regions: Region[]\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  regions: Region[]\n  dataAdapter: HicDataAdapter\n  bpPerPx: number\n  highResolutionScaling: number\n  resolution: number\n  adapterConfig: AnyConfigurationModel\n  displayHeight?: number\n}\n\nexport interface RenderArgsDeserializedWithFeatures\n  extends RenderArgsDeserialized {\n  features: HicFeature[]\n  statusCallback?: (arg: string) => void\n}\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport type ResultsDeserialized = ServerSideResultsDeserialized\n\nexport default class HicRenderer extends ServerSideRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const { displayHeight, regions, bpPerPx } = renderProps\n    const region = regions[0]!\n    const width = (region.end - region.start) / bpPerPx\n    const hyp = width / 2\n    const height = displayHeight ?? hyp\n    const features = await this.getFeatures(renderProps)\n\n    const { makeImageData } = await import('./makeImageData')\n    const res = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      makeImageData(ctx, {\n        ...renderProps,\n        yScalar: height / Math.max(height, hyp),\n        features,\n        pluginManager: this.pluginManager,\n      }),\n    )\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      region: renderProps.regions[0],\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      height,\n      width,\n    }\n  }\n\n  async getFeatures(args: RenderArgsDeserialized) {\n    const { regions, sessionId, adapterConfig } = args\n    const { dataAdapter } = await getAdapter(\n      this.pluginManager,\n      sessionId,\n      adapterConfig,\n    )\n    const features = await firstValueFrom(\n      (dataAdapter as BaseFeatureDataAdapter)\n        .getFeatures(regions[0]!, args)\n        .pipe(toArray()),\n    )\n\n    // cast to any to avoid return-type conflict, because the types of features\n    // returned by our getFeatures are quite different from the base interface\n    return features as any\n  }\n}\n\nexport type {\n  RenderArgsSerialized,\n  RenderResults,\n} from '@jbrowse/core/pluggableElementTypes/renderers/ServerSideRendererType'\n","import { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport type { Region } from '@jbrowse/core/util/types'\n\nconst HicRendering = observer(function HicRendering(props: {\n  blockKey: string\n  width: number\n  height: number\n  regions: Region[]\n  bpPerPx: number\n}) {\n  const { width, height } = props\n  const canvasWidth = Math.ceil(width)\n  // need to call this in render so we get the right observer behavior\n  return (\n    <div style={{ position: 'relative', width: canvasWidth, height }}>\n      <PrerenderedCanvas\n        {...props}\n        style={{ position: 'absolute', left: 0, top: 0 }}\n      />\n    </div>\n  )\n})\n\nexport default HicRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HicRenderer\n * #category renderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicRenderer = ConfigurationSchema(\n  'HicRenderer',\n  {\n    /**\n     * #slot\n     */\n    baseColor: {\n      type: 'color',\n      description: 'base color to be used in the hic alignment',\n      defaultValue: '#f00',\n    },\n    /**\n     * #slot\n     */\n    color: {\n      type: 'color',\n      description: 'the color of each feature in a hic alignment',\n      defaultValue: 'jexl:interpolate(count,scale)',\n      contextVariable: ['count', 'maxScore', 'baseColor', 'scale'],\n    },\n\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a hic rendering',\n      defaultValue: 600,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default HicRenderer\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getContainingTrack, getSession } from '@jbrowse/core/util'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { autorun } from 'mobx'\nimport { addDisposer, getEnv, types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearHicDisplay\n * #category display\n * extends `BaseLinearDisplay`\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function stateModelFactory(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearHicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearHicDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        resolution: types.optional(types.number, 1),\n        /**\n         * #property\n         */\n        useLogScale: false,\n        /**\n         * #property\n         */\n        colorScheme: types.maybe(types.string),\n        /**\n         * #property\n         */\n        activeNormalization: 'KR',\n        /**\n         * #property\n         */\n        mode: 'triangular',\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      availableNormalizations: undefined as string[] | undefined,\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #getter\n         */\n        get blockType() {\n          return 'dynamicBlocks'\n        },\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return 'HicRenderer'\n        },\n        /**\n         * #method\n         */\n        renderProps() {\n          const config = self.rendererType.configSchema.create(\n            {\n              ...getConf(self, 'renderer'),\n\n              // add specific jexl color callback when using pre-defined color schemes\n              ...(self.colorScheme\n                ? { color: 'jexl:interpolate(count,scale)' }\n                : {}),\n            },\n            getEnv(self),\n          )\n\n          return {\n            ...superRenderProps(),\n            config,\n            displayHeight: self.mode === 'adjust' ? self.height : undefined,\n            normalization: self.activeNormalization,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            resolution: self.resolution,\n            useLogScale: self.useLogScale,\n            colorScheme: self.colorScheme,\n          }\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setResolution(n: number) {\n        self.resolution = n\n      },\n      /**\n       * #action\n       */\n      setUseLogScale(f: boolean) {\n        self.useLogScale = f\n      },\n      /**\n       * #action\n       */\n      setColorScheme(f?: string) {\n        self.colorScheme = f\n      },\n      /**\n       * #action\n       */\n      setActiveNormalization(f: string) {\n        self.activeNormalization = f\n      },\n      /**\n       * #action\n       */\n      setAvailableNormalizations(f: string[]) {\n        self.availableNormalizations = f\n      },\n      /**\n       * #action\n       */\n      setMode(arg: string) {\n        self.mode = arg\n      },\n    }))\n    .views(self => {\n      const { trackMenuItems: superTrackMenuItems } = self\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Use log scale',\n              type: 'checkbox',\n              checked: self.useLogScale,\n              onClick: () => {\n                self.setUseLogScale(!self.useLogScale)\n              },\n            },\n            {\n              label: 'Rendering mode',\n              type: 'subMenu',\n              subMenu: [\n                {\n                  label: 'Triangular',\n                  type: 'radio',\n                  checked: self.mode === 'triangular',\n                  onClick: () => {\n                    self.setMode('triangular')\n                  },\n                },\n                {\n                  label: 'Adjust to height of display',\n                  type: 'radio',\n                  checked: self.mode === 'adjust',\n                  onClick: () => {\n                    self.setMode('adjust')\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Color scheme',\n              type: 'subMenu',\n              subMenu: [\n                {\n                  label: 'Fall',\n                  type: 'radio',\n                  checked: self.colorScheme === 'fall',\n                  onClick: () => {\n                    self.setColorScheme('fall')\n                  },\n                },\n                {\n                  label: 'Viridis',\n                  type: 'radio',\n                  checked: self.colorScheme === 'viridis',\n                  onClick: () => {\n                    self.setColorScheme('viridis')\n                  },\n                },\n                {\n                  label: 'Juicebox',\n                  type: 'radio',\n                  checked: self.colorScheme === 'juicebox',\n                  onClick: () => {\n                    self.setColorScheme('juicebox')\n                  },\n                },\n                {\n                  label: 'Default',\n                  type: 'radio',\n                  checked: self.colorScheme === undefined,\n                  onClick: () => {\n                    self.setColorScheme(undefined)\n                  },\n                },\n              ],\n            },\n\n            {\n              label: 'Resolution',\n              subMenu: [\n                {\n                  label: 'Finer resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution * 2)\n                  },\n                },\n                {\n                  label: 'Coarser resolution',\n                  onClick: () => {\n                    self.setResolution(self.resolution / 2)\n                  },\n                },\n              ],\n            },\n            ...(self.availableNormalizations\n              ? [\n                  {\n                    label: 'Normalization scheme',\n                    subMenu: self.availableNormalizations.map(norm => ({\n                      label: norm,\n                      type: 'radio',\n                      checked: norm === self.activeNormalization,\n                      onClick: () => {\n                        self.setActiveNormalization(norm)\n                      },\n                    })),\n                  },\n                ]\n              : []),\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(async () => {\n            try {\n              const { rpcManager } = getSession(self)\n              const track = getContainingTrack(self)\n              const adapterConfig = getConf(track, 'adapter')\n              const { norms } = (await rpcManager.call(\n                getConf(track, 'trackId'),\n                'CoreGetInfo',\n                {\n                  adapterConfig,\n                },\n              )) as { norms?: string[] }\n              if (norms) {\n                self.setAvailableNormalizations(norms)\n              }\n            } catch (e) {\n              console.error(e)\n              getSession(self).notifyError(`${e}`, e)\n            }\n          }),\n        )\n      },\n    }))\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport { colord } from '@jbrowse/core/util/colord'\n\nimport GuessAdapterF from './GuessAdapter'\nimport HicAdapterF from './HicAdapter'\nimport HicRendererF from './HicRenderer'\nimport HicTrackF from './HicTrack'\nimport LinearHicDisplayF from './LinearHicDisplay'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Colord } from '@jbrowse/core/util/colord'\n\nexport default class HicPlugin extends Plugin {\n  name = 'HicPlugin'\n\n  install(pluginManager: PluginManager) {\n    HicAdapterF(pluginManager)\n    HicRendererF(pluginManager)\n    HicTrackF(pluginManager)\n    LinearHicDisplayF(pluginManager)\n    GuessAdapterF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    const { jexl } = pluginManager\n    jexl.addFunction('alpha', (color: Colord, n: number) => color.alpha(n))\n    jexl.addFunction('hsl', (color: Colord) => colord(color.toHsl()))\n    jexl.addFunction('colorString', (color: Colord) => color.toHex())\n    jexl.addFunction(\n      'interpolate',\n      (count: number, scale: (n: number) => string) => scale(count),\n    )\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function HicAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'HicAdapter',\n        displayName: 'Hi-C adapter',\n        configSchema,\n        getAdapterClass: () => import('./HicAdapter').then(r => r.default),\n      }),\n  )\n}\n","import HicRenderer from './HicRenderer'\nimport ReactComponent from './components/HicRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function HicRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new HicRenderer({\n        name: 'HicRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function HicTrackF(pluginManager: PluginManager) {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'HicTrack',\n      displayName: 'Hi-C track',\n      configSchema,\n      stateModel: createBaseTrackModel(pluginManager, 'HicTrack', configSchema),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config HicTrack\n * #category track\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'HicTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport configSchemaFactory from './configSchema'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearHicDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearHicDisplay',\n      displayName: 'Hi-C contact matrix display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'HicTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config LinearHicDisplay\n * #category display\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst HicTrackConfigFactory = (pluginManager: PluginManager) => {\n  return ConfigurationSchema(\n    'LinearHicDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.getRendererType('HicRenderer')!.configSchema,\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type HicTrackConfigModel = ReturnType<typeof HicTrackConfigFactory>\nexport type HicTrackConfig = Instance<HicTrackConfigModel>\nexport default HicTrackConfigFactory\n","import { getFileName } from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessAdapterF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        return (/\\.hic$/i.test(fileName) && !adapterHint) ||\n          adapterHint === 'HicAdapter'\n          ? {\n              type: 'HicAdapter',\n              hicLocation: file,\n            }\n          : adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) =>\n        adapterName === 'HicAdapter'\n          ? 'HicTrack'\n          : trackTypeGuesser(adapterName)\n    },\n  )\n}\n","import { types } from 'mobx-state-tree'\n\n/**\n * #stateModel\n */\nexport const Job = types\n  .model('Job', {\n    /**\n     * #property\n     */\n    name: types.string,\n    /**\n     * #property\n     */\n    statusMessage: types.maybe(types.string),\n    /**\n     * #property\n     */\n    progressPct: types.number,\n  })\n  .volatile(() => ({\n    cancelCallback() {},\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setCancelCallback(cancelCallback: () => void) {\n      self.cancelCallback = cancelCallback\n    },\n\n    /**\n     * #action\n     */\n    setStatusMessage(message?: string) {\n      self.statusMessage = message\n    },\n\n    /**\n     * #action\n     */\n    setProgressPct(pct: number) {\n      self.progressPct = pct\n    },\n  }))\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport { stateModelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nexport const configSchema = ConfigurationSchema('JobsListWidget', {})\n\nexport default function JobsListWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'JobsListWidget',\n      heading: 'Jobs list',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/JobsListWidget')),\n    })\n  })\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport { Indexing } from '@jbrowse/core/ui/Icons'\nimport {\n  isAbstractMenuManager,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\nimport JobsListWidgetF from './JobsListWidget'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\n\nexport default class JobsManagementPlugin extends Plugin {\n  name = 'JobsManagementPlugin'\n\n  install(pluginManager: PluginManager) {\n    JobsListWidgetF(pluginManager)\n  }\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('Tools', {\n        label: 'Jobs list',\n        icon: Indexing, // TODO: pick a better icon\n        onClick: (session: SessionWithWidgets) => {\n          if (isSessionModelWithWidgets(session)) {\n            const { widgets } = session\n            let jobStatusWidget = widgets.get('JobsList')\n            if (!jobStatusWidget) {\n              jobStatusWidget = session.addWidget('JobsListWidget', 'JobsList')\n              session.showWidget(jobStatusWidget)\n            } else {\n              session.showWidget(jobStatusWidget)\n            }\n          }\n        },\n      })\n    }\n  }\n}\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport { Job } from './jobModel'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance, SnapshotIn } from 'mobx-state-tree'\n\nexport interface NewJob extends SnapshotIn<typeof Job> {\n  cancelCallback(): void\n  setStatusMessage(msg?: string): void\n}\n\n/**\n * #stateModel JobsListModel\n */\nexport function stateModelFactory(_pluginManager: PluginManager) {\n  return types\n    .model('JobsListModel', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('JobsListWidget'),\n      /**\n       * #property\n       */\n      jobs: types.array(Job),\n      /**\n       * #property\n       */\n      finished: types.array(Job),\n      /**\n       * #property\n       */\n      queued: types.array(Job),\n      /**\n       * #property\n       */\n      aborted: types.array(Job),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addJob(job: NewJob) {\n        const { cancelCallback, name } = job\n        const existing = self.jobs.find(job => job.name === name)\n        if (existing) {\n          return existing\n        }\n        const length = self.jobs.push(job)\n        const addedJob = self.jobs[length - 1]!\n        addedJob.setCancelCallback(cancelCallback)\n        return addedJob\n      },\n      /**\n       * #action\n       */\n      removeJob(jobName: string) {\n        const indx = self.jobs.findIndex(job => job.name === jobName)\n        if (indx === -1) {\n          return undefined\n        }\n        const removed = self.jobs.splice(indx, 1)\n        return removed[0]\n      },\n      /**\n       * #action\n       */\n      addFinishedJob(job: NewJob) {\n        const existing = self.finished.find(\n          finishedJob => finishedJob.name === job.name,\n        )\n        if (existing) {\n          return existing\n        }\n        const length = self.finished.push(job)\n        return self.finished[length - 1]\n      },\n      /**\n       * #action\n       */\n      addQueuedJob(job: NewJob) {\n        const existing = self.queued.find(\n          queuedJob => queuedJob.name === job.name,\n        )\n        if (existing) {\n          return existing\n        }\n        const length = self.queued.push(job)\n        return self.queued[length - 1]\n      },\n      /**\n       * #action\n       */\n      addAbortedJob(job: NewJob) {\n        const existing = self.aborted.find(\n          abortedJob => abortedJob.name === job.name,\n        )\n        if (existing) {\n          return existing\n        }\n        const length = self.aborted.push(job)\n        return self.aborted[length - 1]\n      },\n      /**\n       * #action\n       */\n      removeQueuedJob(jobName: string) {\n        const indx = self.queued.findIndex(job => job.name === jobName)\n        if (indx === -1) {\n          return undefined\n        }\n        const removed = self.queued.splice(indx, 1)\n        return removed[0]\n      },\n      /**\n       * #action\n       */\n      updateJobStatusMessage(jobName: string, message?: string) {\n        const job = self.jobs.find(job => job.name === jobName)\n        if (!job) {\n          throw new Error(`No job found with name ${jobName}`)\n        }\n        job.setStatusMessage(message)\n      },\n      /**\n       * #action\n       */\n      updateJobProgressPct(jobName: string, pct: number) {\n        const job = self.jobs.find(job => job.name === jobName)\n        if (!job) {\n          throw new Error(`No job found with name ${jobName}`)\n        }\n        job.setProgressPct(pct)\n      },\n    }))\n}\n\nexport type JobsListStateModel = ReturnType<typeof stateModelFactory>\nexport type JobsListModel = Instance<JobsListStateModel>\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseConnectionConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\n/**\n * #config JBrowse1Connection\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst JBrowse1Connection = ConfigurationSchema(\n  'JBrowse1Connection',\n  {\n    /**\n     * #slot\n     */\n    dataDirLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'http://mysite.com/jbrowse/data/',\n        locationType: 'UriLocation',\n      },\n      description:\n        'the location of the JBrowse 1 data directory, often something like http://mysite.com/jbrowse/data/',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      description:\n        'name of the assembly the connection belongs to, should be a single entry',\n      type: 'stringArray',\n      defaultValue: [],\n    },\n  },\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: baseConnectionConfig,\n  },\n)\n\nexport default JBrowse1Connection\n","import {\n  ConfigurationReference,\n  getConf,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { BaseConnectionModelFactory } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession } from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'JBrowse1Connection',\n      BaseConnectionModelFactory(pluginManager),\n      types.model({\n        configuration: ConfigurationReference(configSchema),\n        type: types.literal('JBrowse1Connection'),\n      }),\n    )\n\n    .actions(self => ({\n      async connect() {\n        const session = getSession(self)\n        try {\n          const dataDirLocation = getConf(self, 'dataDirLocation')\n          const { fetchJb1 } = await import('./jb1ConfigLoad')\n          const { convertTrackConfig } = await import('./jb1ToJb2')\n          const config = await fetchJb1(dataDirLocation)\n          const assemblyName = getConf(self, 'assemblyNames')[0]\n          if (!assemblyName) {\n            throw new Error('assembly name required for JBrowse 1 connection')\n          }\n          const conf = session.assemblies.find(\n            a => readConfObject(a, 'name') === assemblyName,\n          )\n          if (!conf) {\n            throw new Error(`Assembly \"${assemblyName}\" not found`)\n          }\n          const sequenceAdapter = readConfObject(conf, ['sequence', 'adapter'])\n\n          // @ts-expect-error\n          const jb2Tracks = config.tracks?.map(jb1Track => ({\n            ...convertTrackConfig(\n              jb1Track,\n              config.dataRoot || '',\n              sequenceAdapter,\n            ),\n            assemblyNames: [assemblyName],\n          }))\n\n          self.setTrackConfs(jb2Tracks)\n        } catch (error) {\n          console.error(error)\n          session.notifyError(\n            `There was a problem connecting to the JBrowse 1 data directory \"${self.name}\". Please make sure you have entered a valid location. The error that was thrown is: \"${error}\"`,\n            error,\n          )\n          session.breakConnection?.(self.configuration)\n        }\n      },\n    }))\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config JBrowse1TextSearchAdapter\n * note: metadata about tracks and assemblies covered by text search adapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'JBrowse1TextSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    namesIndexLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/volvox/names', locationType: 'UriLocation' },\n      description: 'the location of the JBrowse1 names index data directory',\n    },\n    /**\n     * #slot\n     */\n    tracks: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of tracks covered by text search adapter',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of assemblies covered by text search adapter',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'textSearchAdapterId',\n  },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config NCListAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst NCListAdapter = ConfigurationSchema(\n  'NCListAdapter',\n  {\n    /**\n     * #slot\n     */\n    rootUrlTemplate: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my/{refseq}/trackData.json',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of refNames used by the NCList used for aliasing',\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default NCListAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport GuessNCListF from './GuessNCList'\nimport JBrowse1ConnectionF from './JBrowse1Connection'\nimport JBrowse1TextSearchAdapterF from './JBrowse1TextSearchAdapter'\nimport NCListAdapterF from './NCListAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class LegacyJBrowsePlugin extends Plugin {\n  name = 'LegacyJBrowsePlugin'\n\n  install(pluginManager: PluginManager) {\n    NCListAdapterF(pluginManager)\n    GuessNCListF(pluginManager)\n    JBrowse1TextSearchAdapterF(pluginManager)\n    JBrowse1ConnectionF(pluginManager)\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function NCListAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'NCListAdapter',\n        displayName: 'NCList adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Uncommon',\n        },\n        getAdapterClass: () => import('./NCListAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { getFileName } from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AdapterGuesser } from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function GuessNCListF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        return (/trackData.jsonz?$/i.test(fileName) && !adapterHint) ||\n          adapterHint === 'NCListAdapter'\n          ? {\n              type: 'NCListAdapter',\n              rootUrlTemplate: file,\n            }\n          : adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n}\n","import TextSearchAdapterType from '@jbrowse/core/pluggableElementTypes/TextSearchAdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function JBrowse1TextSearchAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addTextSearchAdapterType(\n    () =>\n      new TextSearchAdapterType({\n        name: 'JBrowse1TextSearchAdapter',\n        configSchema,\n        description: 'A JBrowse 1 text search adapter',\n        getAdapterClass: () =>\n          import('./JBrowse1TextSearchAdapter').then(t => t.default),\n      }),\n  )\n}\n","import ConnectionType from '@jbrowse/core/pluggableElementTypes/ConnectionType'\n\nimport configSchema from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function JBrowse1ConnectionF(pluginManager: PluginManager) {\n  pluginManager.addConnectionType(\n    () =>\n      new ConnectionType({\n        name: 'JBrowse1Connection',\n        configSchema,\n        stateModel: modelFactory(pluginManager),\n        displayName: 'JBrowse 1 Data',\n        description: 'A JBrowse 1 data directory',\n        url: '//jbrowse.org/',\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearPileupDisplayConfigSchemaFactory } from '@jbrowse/plugin-alignments'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Feature } from '@jbrowse/core/util'\n\n/**\n * #config LGVSyntenyDisplay\n * extends config\n * - [LinearPileupDisplay](../linearpileupdisplay)\n */\nfunction configSchemaF(pluginManager: PluginManager) {\n  pluginManager.jexl.addFunction('lgvSyntenyTooltip', (f: Feature) => {\n    const m = f.get('mate')\n    return [f.get('name') || f.get('id'), m?.name || m?.id]\n      .filter(f => !!f)\n      .join('<br/>')\n  })\n  return ConfigurationSchema(\n    'LGVSyntenyDisplay',\n    {\n      mouseover: {\n        type: 'string',\n        defaultValue: 'jexl:lgvSyntenyTooltip(feature)',\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearPileupDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaF\n","import { lazy } from 'react'\n\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport {\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { SharedLinearPileupDisplayMixin } from '@jbrowse/plugin-alignments'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LGV = LinearGenomeViewModel\n\nconst LaunchSyntenyViewDialog = lazy(\n  () => import('./components/LaunchSyntenyViewDialog'),\n)\n\n/**\n * #stateModel LGVSyntenyDisplay\n * displays location of \"synteny\" feature in a plain LGV, allowing linking out\n * to external synteny views\n *\n * extends\n * - [SharedLinearPileupDisplayMixin](../sharedlinearpileupdisplaymixin)\n */\nfunction stateModelFactory(schema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LGVSyntenyDisplay',\n      SharedLinearPileupDisplayMixin(schema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LGVSyntenyDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(schema),\n      }),\n    )\n    .views(self => {\n      const superContextMenuItems = self.contextMenuItems\n      return {\n        /**\n         * #method\n         */\n        contextMenuItems() {\n          const feature = self.contextMenuFeature\n          return [\n            ...superContextMenuItems(),\n            ...(feature\n              ? [\n                  {\n                    label: 'Launch synteny view for this position',\n                    onClick: () => {\n                      getSession(self).queueDialog(handleClose => [\n                        LaunchSyntenyViewDialog,\n                        {\n                          view: getContainingView(self) as LGV,\n                          trackId: getConf(getContainingTrack(self), 'trackId'),\n                          handleClose,\n                          session: getSession(self),\n                          feature,\n                        },\n                      ])\n                    },\n                  },\n                ]\n              : []),\n          ]\n        },\n      }\n    })\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        colorSchemeSubMenuItems: superColorSchemeSubMenuItems,\n      } = self\n      return {\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Color scheme',\n              subMenu: [...superColorSchemeSubMenuItems()],\n            },\n          ]\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const r2 = getContainingView(self)\n          let r3 = r2\n          try {\n            r3 = getContainingView(r3)\n          } catch (e) {}\n          const featureWidget = session.addWidget(\n            'SyntenyFeatureWidget',\n            'syntenyFeature',\n            {\n              featureData: feature.toJSON(),\n              view: r3,\n              track: getContainingTrack(self),\n            },\n          )\n          session.showWidget(featureWidget)\n        }\n        session.setSelection(feature)\n      },\n      /**\n       * #autorun\n       */\n      afterCreate() {\n        // use color by stand to help indicate inversions better on first load,\n        // otherwise use selected orientation\n        if (!self.colorBySetting && self.colorBy.type === 'normal') {\n          self.setColorScheme({ type: 'strand' })\n        }\n      },\n    }))\n}\n\nexport default stateModelFactory\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config LinearComparativeDisplay\n */\nfunction configSchemaFactory(_pluginManager: any) {\n  return ConfigurationSchema(\n    'LinearComparativeDisplay',\n    {},\n    {\n      explicitlyTyped: true,\n\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'displayId',\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import {\n  ConfigurationReference,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  dedupe,\n  getContainingView,\n  getSession,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport { stopStopToken } from '@jbrowse/core/util/stopToken'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { getParent, getSnapshot, types } from 'mobx-state-tree'\n\nimport type { LinearComparativeViewModel } from '../LinearComparativeView/model'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel LinearComparativeDisplay\n * extends\n * - [BaseDisplay](../basedisplay)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearComparativeDisplay',\n      BaseDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearComparativeDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile((/* self */) => ({\n      renderInProgress: undefined as string | undefined,\n      features: undefined as Feature[] | undefined,\n      message: undefined as string | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get level() {\n        return getParent<{ height: number; level: number }>(self, 4).level\n      },\n      /**\n       * #getter\n       */\n      get height() {\n        return getParent<{ height: number; level: number }>(self, 4).height\n      },\n      /**\n       * #getter\n       */\n      renderProps() {\n        return {\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          highResolutionScaling: 2,\n        }\n      },\n    }))\n    .actions(self => {\n      let stopToken: undefined | string\n\n      return {\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setLoading(newStopToken: string) {\n          self.message = undefined\n          self.error = undefined\n          stopToken = newStopToken\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setMessage(messageText: string) {\n          self.message = messageText\n          self.error = undefined\n          stopToken = undefined\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setRendered(args?: { features: Feature[] }) {\n          if (!args) {\n            return\n          }\n          const { features } = args\n          const existingFeatures = self.features || []\n\n          const featIds = new Set(existingFeatures.map(f => f.id()))\n          const newFeatIds = new Set(features.map(f => f.id()))\n\n          let foundNewFeatureNotInExistingMap = false\n          let foundExistingFeatureNotInNewMap = false\n          for (const feat of features) {\n            if (!featIds.has(feat.id())) {\n              foundNewFeatureNotInExistingMap = true\n              break\n            }\n          }\n          for (const existingFeat of existingFeatures) {\n            if (!newFeatIds.has(existingFeat.id())) {\n              foundExistingFeatureNotInNewMap = true\n              break\n            }\n          }\n\n          self.message = undefined\n          self.error = undefined\n          stopToken = undefined\n\n          if (\n            foundNewFeatureNotInExistingMap ||\n            foundExistingFeatureNotInNewMap ||\n            !self.features\n          ) {\n            self.features = features\n          }\n        },\n\n        /**\n         * #action\n         * controlled by a reaction\n         */\n        setError(error: unknown) {\n          console.error(error)\n          if (stopToken !== undefined) {\n            stopStopToken(stopToken)\n          }\n          // the rendering failed for some reason\n          self.message = undefined\n          self.error = error\n          stopToken = undefined\n        },\n      }\n    })\n    .actions(self => ({\n      afterAttach() {\n        makeAbortableReaction(\n          // @ts-expect-error\n          self,\n          renderBlockData,\n          renderBlockEffect,\n          {\n            name: `${self.type} ${self.id} rendering`,\n            delay: 1000,\n            fireImmediately: true,\n          },\n          self.setLoading,\n          self.setRendered,\n          self.setError,\n        )\n      },\n    }))\n}\nfunction renderBlockData(self: LinearComparativeDisplay) {\n  const { rpcManager } = getSession(self)\n  const display = self\n\n  // Alternative to readConfObject(config) is below used because\n  // renderProps is something under our control.  Compare to\n  // serverSideRenderedBlock\n  readConfObject(self.configuration)\n\n  const { level, adapterConfig } = self\n  const parent = getContainingView(self) as LinearComparativeViewModel\n  const sessionId = getRpcSessionId(self)\n  getSnapshot(parent)\n  return parent.initialized\n    ? {\n        rpcManager,\n        renderProps: {\n          ...display.renderProps(),\n          level,\n          view: parent,\n          adapterConfig,\n          sessionId,\n          timeout: 1000000,\n          self,\n        },\n      }\n    : undefined\n}\n\nasync function renderBlockEffect(props: ReturnType<typeof renderBlockData>) {\n  if (!props) {\n    return\n  }\n\n  const { rpcManager, renderProps } = props\n  const { adapterConfig, level } = renderProps\n  const view = renderProps.view.views[level]\n  const features = (await rpcManager.call('getFeats', 'CoreGetFeatures', {\n    regions: view.staticBlocks.contentBlocks,\n    sessionId: 'getFeats',\n    adapterConfig,\n  })) as Feature[]\n\n  return {\n    features: dedupe(features, f => f.id()),\n  }\n}\n\nexport default stateModelFactory\nexport type LinearComparativeDisplayModel = ReturnType<typeof stateModelFactory>\nexport type LinearComparativeDisplay = Instance<LinearComparativeDisplayModel>\n","import { lazy } from 'react'\n\nimport BaseViewModel from '@jbrowse/core/pluggableElementTypes/models/BaseViewModel'\nimport { avg, getSession, isSessionModelWithWidgets } from '@jbrowse/core/util'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport { autorun } from 'mobx'\nimport { addDisposer, cast, getPath, onAction, types } from 'mobx-state-tree'\n\nimport type { LinearSyntenyViewHelperStateModel } from '../LinearSyntenyViewHelper/stateModelFactory'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type {\n  LinearGenomeViewModel,\n  LinearGenomeViewStateModel,\n} from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance, SnapshotIn } from 'mobx-state-tree'\n\n// lazies\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\n\n/**\n * #stateModel LinearComparativeView\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  const LinearSyntenyViewHelper = pluginManager.getViewType(\n    'LinearSyntenyViewHelper',\n  )?.stateModel as LinearSyntenyViewHelperStateModel\n  return types\n    .compose(\n      'LinearComparativeView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('LinearComparativeView'),\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n        /**\n         * #property\n         */\n        showIntraviewLinks: true,\n        /**\n         * #property\n         */\n        linkViews: false,\n        /**\n         * #property\n         */\n        interactiveOverlay: false,\n        /**\n         * #property\n         */\n        levels: types.array(LinearSyntenyViewHelper),\n        /**\n         * #property\n         * currently this is limited to an array of two\n         */\n        views: types.array(\n          pluginManager.getViewType('LinearGenomeView')!\n            .stateModel as LinearGenomeViewStateModel,\n        ),\n\n        /**\n         * #property\n         * this represents tracks specific to this view specifically used for\n         * read vs ref dotplots where this track would not really apply\n         * elsewhere\n         */\n        viewTrackConfigs: types.array(\n          pluginManager.pluggableConfigSchemaType('track'),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      width: undefined as number | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get initialized() {\n        return (\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          self.width !== undefined &&\n          self.views.length > 0 &&\n          self.views.every(view => view.initialized)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get refNames() {\n        return self.views.map(v => [\n          ...new Set(v.staticBlocks.map(m => m.refName)),\n        ])\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        return [...new Set(self.views.flatMap(v => v.assemblyNames))]\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // doesn't link showTrack/hideTrack, doesn't make sense in\n        // synteny views most time\n        const actions = new Set([\n          'horizontalScroll',\n          'zoomTo',\n          'setScaleFactor',\n        ])\n        addDisposer(\n          self,\n          onAction(self, param => {\n            if (self.linkViews) {\n              const { name, path, args } = param\n              if (actions.has(name) && path) {\n                this.onSubviewAction(name, path, args)\n              }\n            }\n          }),\n        )\n      },\n\n      // automatically removes session assemblies associated with this view\n      // e.g. read vs ref\n      beforeDestroy() {\n        const session = getSession(self)\n        for (const name of self.assemblyNames) {\n          session.removeTemporaryAssembly?.(name)\n        }\n      },\n\n      onSubviewAction(actionName: string, path: string, args?: unknown[]) {\n        self.views.forEach(view => {\n          const ret = getPath(view)\n          if (!ret.endsWith(path)) {\n            // @ts-expect-error\n            view[actionName](args?.[0])\n          }\n        })\n      },\n\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.width = newWidth\n      },\n\n      /**\n       * #action\n       */\n      setViews(views: SnapshotIn<LinearGenomeViewModel>[]) {\n        self.views = cast(views)\n      },\n\n      /**\n       * #action\n       */\n      removeView(view: LinearGenomeViewModel) {\n        self.views.remove(view)\n      },\n\n      /**\n       * #action\n       */\n      setLevelHeight(newHeight: number, level = 0) {\n        const l = self.levels[level]!\n        l.setHeight(newHeight)\n        return l.height\n      },\n      /**\n       * #action\n       */\n      setLinkViews(arg: boolean) {\n        self.linkViews = arg\n      },\n      /**\n       * #action\n       */\n      activateTrackSelector(level: number) {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              {\n                view: self.levels[level],\n              },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string, level = 0) {\n        self.levels[level]?.toggleTrack(trackId)\n      },\n      /**\n       * #action\n       */\n      showTrack(trackId: string, level = 0, initialSnapshot = {}) {\n        if (!self.levels[level]) {\n          self.levels[level] = cast({ level })\n        }\n        self.levels[level].showTrack(trackId, initialSnapshot)\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string, level = 0) {\n        self.levels[level]?.hideTrack(trackId)\n      },\n      /**\n       * #action\n       */\n      squareView() {\n        const average = avg(self.views.map(v => v.bpPerPx))\n        for (const view of self.views) {\n          const center = view.pxToBp(view.width / 2)\n          view.setNewView(average, view.offsetPx)\n          if (center.refName) {\n            view.centerAt(center.coord, center.refName, center.index)\n          }\n        }\n      },\n      /**\n       * #action\n       */\n      clearView() {\n        self.views = cast([])\n        self.levels = cast([])\n      },\n    }))\n    .views(() => ({\n      /**\n       * #method\n       * includes a subset of view menu options because the full list is a\n       * little overwhelming. overridden by subclasses\n       */\n      headerMenuItems(): MenuItem[] {\n        return []\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems(): MenuItem[] {\n        return [\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                {\n                  model: self,\n                  handleClose,\n                },\n              ])\n            },\n            icon: FolderOpenIcon,\n          },\n        ]\n      },\n      /**\n       * #method\n       */\n      rubberBandMenuItems() {\n        return [\n          {\n            label: 'Zoom to region(s)',\n            onClick: () => {\n              for (const view of self.views) {\n                const { leftOffset, rightOffset } = view\n                if (leftOffset && rightOffset) {\n                  view.moveTo(leftOffset, rightOffset)\n                }\n              }\n            },\n          },\n        ]\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            if (self.width) {\n              for (const view of self.views) {\n                view.setWidth(self.width)\n              }\n            }\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      const { tracks, levels = [{ tracks, level: 0 }], ...rest } = snap || {}\n      return {\n        ...rest,\n        levels,\n      }\n    })\n}\n\nexport type LinearComparativeViewStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearComparativeViewModel =\n  Instance<LinearComparativeViewStateModel>\n\nexport default stateModelFactory\n","import { lazy } from 'react'\n\nimport { getContainingTrack, getSession } from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { PluggableElementType } from '@jbrowse/core/pluggableElementTypes'\nimport type DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nconst ReadVsRefDialog = lazy(() => import('./LinearReadVsRef'))\n\nfunction isDisplay(elt: { name: string }): elt is DisplayType {\n  return elt.name === 'LinearPileupDisplay'\n}\n\nexport default function LinearReadVsRefMenuItemF(pm: PluginManager) {\n  pm.addToExtensionPoint(\n    'Core-extendPluggableElement',\n    (pluggableElement: PluggableElementType) => {\n      if (!isDisplay(pluggableElement)) {\n        return pluggableElement\n      }\n      pluggableElement.stateModel = pluggableElement.stateModel.extend(self => {\n        const superContextMenuItems = self.contextMenuItems\n        return {\n          views: {\n            contextMenuItems() {\n              const feature = self.contextMenuFeature\n              const track = getContainingTrack(self)\n              return [\n                ...superContextMenuItems(),\n                ...(feature\n                  ? [\n                      {\n                        label: 'Linear read vs ref',\n                        icon: AddIcon,\n                        onClick: () => {\n                          getSession(self).queueDialog(handleClose => [\n                            ReadVsRefDialog,\n                            {\n                              track,\n                              feature,\n                              handleClose,\n                            },\n                          ])\n                        },\n                      },\n                    ]\n                  : []),\n              ]\n            },\n          },\n        }\n      })\n      return pluggableElement\n    },\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport baseModelFactory from '../LinearComparativeDisplay/stateModelFactory'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\ninterface Pos {\n  offsetPx: number\n}\n\nexport interface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\n/**\n * #stateModel LinearSyntenyDisplay\n * extends\n * - [LinearComparativeDisplay](../linearcomparativedisplay)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearSyntenyDisplay',\n      baseModelFactory(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearSyntenyDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       * canvas used for drawing visible screen\n       */\n      mainCanvas: null as HTMLCanvasElement | null,\n\n      /**\n       * #volatile\n       * canvas used for drawing click map with feature ids this renders a\n       * unique color per alignment, so that it can be re-traced after a\n       * feature click with getImageData at that pixel\n       */\n      clickMapCanvas: null as HTMLCanvasElement | null,\n\n      /**\n       * #volatile\n       * canvas used for drawing click map with cigar data this can show if you\n       * are mousing over a insertion/deletion. it is similar in purpose to the\n       * clickMapRef but was not feasible to pack this into the clickMapRef\n       */\n      cigarClickMapCanvas: null as HTMLCanvasElement | null,\n\n      /**\n       * #volatile\n       * canvas for drawing mouseover shading this is separate from the other\n       * code for speed: don't have to redraw entire canvas to do a feature's\n       * mouseover shading\n       */\n      mouseoverCanvas: null as HTMLCanvasElement | null,\n\n      /**\n       * #volatile\n       * assigned by reaction\n       */\n      featPositions: [] as FeatPos[],\n\n      /**\n       * #volatile\n       * currently mouse'd over feature\n       */\n      mouseoverId: undefined as string | undefined,\n\n      /**\n       * #volatile\n       * currently click'd over feature\n       */\n      clickId: undefined as string | undefined,\n\n      /**\n       * #volatile\n       * currently mouseover'd CIGAR subfeature\n       */\n      cigarMouseoverId: -1,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFeatPositions(arg: FeatPos[]) {\n        self.featPositions = arg\n      },\n      /**\n       * #action\n       */\n      setMainCanvasRef(ref: HTMLCanvasElement | null) {\n        self.mainCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setClickMapCanvasRef(ref: HTMLCanvasElement | null) {\n        self.clickMapCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setCigarClickMapCanvasRef(ref: HTMLCanvasElement | null) {\n        self.cigarClickMapCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setMouseoverCanvasRef(ref: HTMLCanvasElement | null) {\n        self.mouseoverCanvas = ref\n      },\n      /**\n       * #action\n       */\n      setMouseoverId(arg?: string) {\n        self.mouseoverId = arg\n      },\n      /**\n       * #action\n       */\n      setCigarMouseoverId(arg: number) {\n        self.cigarMouseoverId = arg\n      },\n      /**\n       * #action\n       */\n      setClickId(arg?: string) {\n        self.clickId = arg\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get adapterConfig() {\n        return {\n          name: self.parentTrack.configuration.adapter.type,\n          assemblyNames: getConf(self, 'assemblyNames'),\n          ...getConf(self.parentTrack, 'adapter'),\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get trackIds() {\n        return getConf(self, 'trackIds') as string[]\n      },\n\n      /**\n       * #getter\n       */\n      get numFeats() {\n        return self.featPositions.length\n      },\n\n      /**\n       * #getter\n       * used for synteny svg rendering\n       */\n      get ready() {\n        return this.numFeats > 0\n      },\n\n      /**\n       * #getter\n       */\n      get featMap() {\n        return Object.fromEntries(self.featPositions.map(f => [f.f.id(), f]))\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const { doAfterAttach } = await import('./afterAttach')\n            doAfterAttach(self)\n          } catch (e) {\n            console.error(e)\n            self.setError(e)\n          }\n        })()\n      },\n    }))\n}\n\nexport type LinearSyntenyDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearSyntenyDisplayModel = Instance<LinearSyntenyDisplayStateModel>\n\nexport default stateModelFactory\n","import { SvgIcon } from '@mui/material'\n\nimport type { SvgIconProps } from '@mui/material'\n\nexport function Curves(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M16.5,21C13.5,21 12.31,16.76 11.05,12.28C10.14,9.04 9,5 7.5,5C4.11,5 4,11.93 4,12H2C2,11.63 2.06,3 7.5,3C10.5,3 11.71,7.25 12.97,11.74C13.83,14.8 15,19 16.5,19C19.94,19 20.03,12.07 20.03,12H22.03C22.03,12.37 21.97,21 16.5,21Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function StraightLines(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M22 12L17 22L7.1 6.04L4.24 12H2L7 2L16.9 17.96L19.76 12H22Z\"\n      />\n    </SvgIcon>\n  )\n}\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { getSession } from '@jbrowse/core/util'\nimport CropFreeIcon from '@mui/icons-material/CropFree'\nimport LinkIcon from '@mui/icons-material/Link'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport { saveAs } from 'file-saver'\nimport { observable, transaction } from 'mobx'\nimport { types } from 'mobx-state-tree'\n\nimport { Curves } from './components/Icons'\nimport baseModel from '../LinearComparativeView/model'\n\nimport type { ImportFormSyntenyTrack } from './types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  scale?: number\n  filename?: string\n  Wrapper?: React.FC<{ children: React.ReactNode }>\n  fontSize?: number\n  rulerHeight?: number\n  textHeight?: number\n  paddingHeight?: number\n  headerHeight?: number\n  cytobandHeight?: number\n  themeName?: string\n  trackLabels?: string\n}\n\n/**\n * #stateModel LinearSyntenyView\n * extends\n * - [LinearComparativeView](../linearcomparativeview)\n */\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'LinearSyntenyView',\n      baseModel(pluginManager),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearSyntenyView'),\n        /**\n         * #property/\n         */\n        drawCIGAR: true,\n        /**\n         * #property\n         */\n        drawCurves: false,\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      importFormSyntenyTrackSelections:\n        observable.array<ImportFormSyntenyTrack>(),\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      importFormRemoveRow(idx: number) {\n        self.importFormSyntenyTrackSelections.splice(idx, 1)\n      },\n      /**\n       * #action\n       */\n      clearImportFormSyntenyTracks() {\n        self.importFormSyntenyTrackSelections.clear()\n      },\n      /**\n       * #action\n       */\n      setImportFormSyntenyTrack(arg: number, val: ImportFormSyntenyTrack) {\n        self.importFormSyntenyTrackSelections[arg] = val\n      },\n      /**\n       * #action\n       */\n      setDrawCurves(arg: boolean) {\n        self.drawCurves = arg\n      },\n      /**\n       * #action\n       */\n      setDrawCIGAR(arg: boolean) {\n        self.drawCIGAR = arg\n      },\n      /**\n       * #action\n       */\n      showAllRegions() {\n        transaction(() => {\n          for (const view of self.views) {\n            view.showAllRegionsInAssembly()\n          }\n        })\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      async exportSvg(opts: ExportSvgOptions) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGLinearSyntenyView'\n        )\n        const html = await renderToSvg(self as LinearSyntenyViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => {\n      const superHeaderMenuItems = self.headerMenuItems\n      const superMenuItems = self.menuItems\n      return {\n        /**\n         * #method\n         * includes a subset of view menu options because the full list is a\n         * little overwhelming\n         */\n        headerMenuItems() {\n          return [\n            ...superHeaderMenuItems(),\n            {\n              label: 'Square view',\n              onClick: self.squareView,\n              description:\n                'Makes both views use the same zoom level, adjusting to the average of each',\n              icon: CropFreeIcon,\n            },\n            {\n              label: 'Show all regions',\n              onClick: self.showAllRegions,\n              description: 'Show entire genome assemblies',\n              icon: VisibilityIcon,\n            },\n            {\n              label: 'Draw CIGAR',\n              onClick: () => {\n                self.setDrawCIGAR(!self.drawCIGAR)\n              },\n              checked: self.drawCIGAR,\n              type: 'checkbox',\n              description: 'Draws per-base CIGAR level alignments',\n            },\n            {\n              label: 'Link views',\n              type: 'checkbox',\n              checked: self.linkViews,\n              icon: LinkIcon,\n              onClick: () => {\n                self.setLinkViews(!self.linkViews)\n              },\n            },\n            {\n              label: 'Use curved lines',\n              type: 'checkbox',\n              checked: self.drawCurves,\n              icon: Curves,\n              onClick: () => {\n                self.setDrawCurves(!self.drawCurves)\n              },\n            },\n            {\n              label: 'Export SVG',\n              icon: PhotoCameraIcon,\n              onClick: (): void => {\n                getSession(self).queueDialog(handleClose => [\n                  ExportSvgDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n        /**\n         * #method\n         */\n        menuItems() {\n          return [\n            ...superMenuItems(),\n            {\n              label: 'Export SVG',\n              icon: PhotoCameraIcon,\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  ExportSvgDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n}\nexport type LinearSyntenyViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearSyntenyViewModel = Instance<LinearSyntenyViewStateModel>\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { transaction } from 'mobx'\nimport { getParent, getRoot, resolveIdentifier, types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\nexport function linearSyntenyViewHelperModelFactory(\n  pluginManager: PluginManager,\n) {\n  return types\n    .model('LinearSyntenyViewHelper', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: 'LinearSyntenyViewHelper',\n      /**\n       * #property\n       */\n      tracks: types.array(\n        pluginManager.pluggableMstType('track', 'stateModel'),\n      ),\n      /**\n       * #property\n       */\n      height: 100,\n      /**\n       * #property\n       */\n      level: types.number,\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setHeight(n: number) {\n        self.height = n\n        return self.height\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const configuration = resolveIdentifier(schema, getRoot(self), trackId)\n        if (!configuration) {\n          throw new Error(`track not found ${trackId}`)\n        }\n        const trackType = pluginManager.getTrackType(configuration.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${configuration.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)!\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.has(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `could not find a compatible display for view type ${self.type}`,\n          )\n        }\n\n        self.tracks.push(\n          trackType.stateModel.create({\n            ...initialSnapshot,\n            type: configuration.type,\n            configuration,\n            displays: [\n              {\n                type: displayConf.type,\n                configuration: displayConf,\n              },\n            ],\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const config = resolveIdentifier(schema, getRoot(self), trackId)\n        const shownTracks = self.tracks.filter(t => t.configuration === config)\n        transaction(() => {\n          shownTracks.forEach(t => {\n            self.tracks.remove(t)\n          })\n        })\n        return shownTracks.length\n      },\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        const hiddenCount = this.hideTrack(trackId)\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n          return true\n        }\n        return false\n      },\n    }))\n    .views(self => ({\n      get assemblyNames() {\n        const p = getParent<{ views: LinearGenomeViewModel[] }>(self, 2)\n        return [\n          p.views[self.level]!.assemblyNames[0],\n          p.views[self.level + 1]!.assemblyNames[0],\n        ]\n      },\n    }))\n}\n\nexport type LinearSyntenyViewHelperStateModel = ReturnType<\n  typeof linearSyntenyViewHelperModelFactory\n>\nexport type LinearSyntenyViewHelperModel =\n  Instance<LinearSyntenyViewHelperStateModel>\n","import ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport { linearSyntenyViewHelperModelFactory } from './stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nfunction UnusedComponent() {\n  return <div />\n}\n\nexport default function LinearSyntenyViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearSyntenyViewHelper',\n      displayName: 'Linear synteny view (helper)',\n      viewMetadata: {\n        hiddenFromGUI: true,\n      },\n      stateModel: linearSyntenyViewHelperModelFactory(pluginManager),\n      ReactComponent: UnusedComponent,\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { stateModelFactory as BaseFeatureWidgetStateModelF } from '@jbrowse/core/BaseFeatureWidget'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('SyntenyFeatureWidget', {})\n\nfunction stateModelF(pluginManager: PluginManager) {\n  return types.compose(\n    BaseFeatureWidgetStateModelF(pluginManager),\n    types.model('SyntenyFeatureWidget', {\n      /**\n       * #property\n       */\n      type: types.literal('SyntenyFeatureWidget'),\n      /**\n       * #property\n       */\n      level: types.maybe(types.number),\n    }),\n  )\n}\n\nexport default function SyntenyFeatureWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'SyntenyFeatureWidget',\n        heading: 'Synteny feature details',\n        configSchema,\n        stateModel: stateModelF(pluginManager),\n        ReactComponent: lazy(() => import('./SyntenyFeatureDetail')),\n      }),\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport CalendarIcon from '@mui/icons-material/CalendarViewDay'\n\nimport LGVSyntenyDisplayF from './LGVSyntenyDisplay'\nimport LaunchLinearSyntenyViewF from './LaunchLinearSyntenyView'\nimport LinearComparativeDisplayF from './LinearComparativeDisplay'\nimport LinearComparativeViewF from './LinearComparativeView'\nimport LinearReadVsRefMenuItemF from './LinearReadVsRef'\nimport LinearSyntenyDisplayF from './LinearSyntenyDisplay'\nimport LinearSyntenyViewF from './LinearSyntenyView'\nimport LinearSyntenyViewHelperF from './LinearSyntenyViewHelper'\nimport SyntenyFeatureWidgetF from './SyntenyFeatureDetail'\nimport SyntenyTrackF from './SyntenyTrack'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default class LinearComparativeViewPlugin extends Plugin {\n  name = 'LinearComparativeViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    LinearSyntenyViewHelperF(pluginManager)\n    LinearComparativeViewF(pluginManager)\n    LinearSyntenyViewF(pluginManager)\n    LinearComparativeDisplayF(pluginManager)\n    LinearSyntenyDisplayF(pluginManager)\n    SyntenyFeatureWidgetF(pluginManager)\n    LGVSyntenyDisplayF(pluginManager)\n    LaunchLinearSyntenyViewF(pluginManager)\n    SyntenyTrackF(pluginManager)\n    LinearReadVsRefMenuItemF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Linear synteny view',\n        icon: CalendarIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearSyntenyView', {})\n        },\n      })\n    }\n  }\n}\n","import { lazy } from 'react'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearComparativeViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearComparativeView',\n      viewMetadata: {\n        hiddenFromGUI: true,\n      },\n      displayName: 'Linear comparative view',\n      stateModel: modelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearComparativeView')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearSyntenyViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearSyntenyView',\n      displayName: 'Linear synteny view',\n      stateModel: modelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearSyntenyView')),\n    })\n  })\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './configSchemaF'\nimport stateModelFactory from './stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearComparativeDisplayF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearComparativeDisplay',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearComparativeView',\n      ReactComponent: () => {\n        return null\n      },\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaF from './configSchemaF'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearSyntenyDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearSyntenyDisplay',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearSyntenyViewHelper',\n      ReactComponent: lazy(() => import('./components/Component')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport baseConfigFactory from '../LinearComparativeDisplay/configSchemaF'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearSyntenyDisplay\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearSyntenyDisplay',\n    {\n      /**\n       * #slot\n       * currently unused\n       */\n      trackIds: {\n        type: 'stringArray',\n        defaultValue: [],\n      },\n\n      /**\n       * #slot\n       * currently unused\n       */\n      middle: {\n        type: 'boolean',\n        defaultValue: true,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       * this refers to the LinearComparativeDisplay\n       */\n      baseConfiguration: baseConfigFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport configSchemaF from './configSchemaF'\nimport stateModelF from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LGVSyntenyDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    const stateModel = stateModelF(configSchema)\n    return new DisplayType({\n      name: 'LGVSyntenyDisplay',\n      configSchema,\n      stateModel,\n      trackType: 'SyntenyTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { notEmpty } from '@jbrowse/core/util'\nimport { when } from 'mobx'\n\nimport type { LinearSyntenyViewModel } from './LinearSyntenyView/model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\ntype LSV = LinearSyntenyViewModel\n\ninterface ViewData {\n  loc: string\n  assembly: string\n  tracks?: string[]\n}\n\ntype MaybeString = string | undefined\n\nfunction makeMultiDimArray(str: string[] | string[][]) {\n  return Array.isArray(str[0]) ? (str as string[][]) : ([str] as string[][])\n}\n\nexport default function LaunchLinearSyntenyView(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-LinearSyntenyView',\n    // @ts-expect-error\n    async ({\n      session,\n      views,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      views: ViewData[]\n      tracks?: string[] | string[][]\n    }) => {\n      try {\n        const { assemblyManager } = session\n        const model = session.addView('LinearSyntenyView', {}) as LSV\n\n        await when(() => !!model.width)\n\n        model.setViews(\n          await Promise.all(\n            views.map(async view => {\n              const asm = await assemblyManager.waitForAssembly(view.assembly)\n              if (!asm) {\n                throw new Error(`Assembly ${view.assembly} failed to load`)\n              }\n              return {\n                type: 'LinearGenomeView' as const,\n                bpPerPx: 1,\n                offsetPx: 0,\n                hideHeader: true,\n                displayedRegions: asm.regions,\n              }\n            }),\n          ),\n        )\n\n        await Promise.all(model.views.map(view => when(() => view.initialized)))\n\n        let idsNotFound = [] as MaybeString[]\n        await Promise.all(\n          views.map(async (data, idx) => {\n            const view = model.views[idx]!\n            const { assembly, loc, tracks = [] } = data\n            const asm = await assemblyManager.waitForAssembly(assembly)\n            if (!asm) {\n              throw new Error(`Assembly ${data.assembly} failed to load`)\n            }\n            await view.navToSearchString({ input: loc, assembly: asm })\n            idsNotFound = [\n              ...idsNotFound,\n              ...tracks.map(trackId =>\n                tryTrackLGV({\n                  model: view,\n                  trackId,\n                }),\n              ),\n            ]\n          }),\n        )\n\n        idsNotFound = [\n          ...idsNotFound,\n          ...makeMultiDimArray(tracks).flatMap((trackSet, level) =>\n            trackSet.map(trackId =>\n              tryTrackSynteny({\n                model,\n                trackId,\n                level,\n              }),\n            ),\n          ),\n        ]\n\n        if (idsNotFound.filter(notEmpty).length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notifyError(`${e}`, e)\n        throw e\n      }\n    },\n  )\n}\n\nfunction tryTrackLGV({\n  model,\n  trackId,\n}: {\n  model: {\n    showTrack: (arg: string) => void\n  }\n  trackId: string\n}) {\n  try {\n    model.showTrack(trackId)\n  } catch (e) {\n    if (\n      /Could not resolve identifier/.exec(`${e}`) ||\n      /track not found/.exec(`${e}`)\n    ) {\n      return trackId\n    } else {\n      throw e\n    }\n  }\n  return undefined\n}\n\nfunction tryTrackSynteny({\n  model,\n  trackId,\n  level,\n}: {\n  model: {\n    showTrack: (arg: string, level?: number) => void\n  }\n  trackId: string\n  level: number\n}) {\n  try {\n    model.showTrack(trackId, level)\n  } catch (e) {\n    if (\n      /Could not resolve identifier/.exec(`${e}`) ||\n      /track not found/.exec(`${e}`)\n    ) {\n      return trackId\n    } else {\n      throw e\n    }\n  }\n  return undefined\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function registerSyntenyTrack(pluginManager: PluginManager) {\n  pluginManager.addTrackType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new TrackType({\n      name: 'SyntenyTrack',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'SyntenyTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config SyntenyTrack\n * extends\n * - [BaseTrack](../basetrack)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'SyntenyTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n\nexport default configSchema\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearLollipopDisplay\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearLollipopDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearLollipopDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #getter\n         */\n        get blockType() {\n          return 'dynamicBlocks'\n        },\n        /**\n         * #getter\n         */\n        get renderDelay() {\n          return 500\n        },\n        /**\n         * #method\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            rpcDriverName: self.rpcDriverName,\n            config: self.configuration.renderer,\n          }\n        },\n        /**\n         * #getter\n         */\n        get rendererTypeName() {\n          return self.configuration.renderer.type\n        },\n      }\n    })\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { doesIntersect2 } from '@jbrowse/core/util/range'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ninterface LayoutItem {\n  uniqueId: string\n  anchorLocation: number\n  width: number\n  height: number\n  data: { score: number }\n}\n\ntype LayoutEntry = LayoutItem & { x: number; y: number }\n\ntype LayoutMap = Map<string, LayoutEntry>\n\nexport class FloatingLayout {\n  width: number\n\n  totalHeight = 0\n\n  rectangles = new Map()\n  constructor({ width }: { width: number }) {\n    if (!width) {\n      throw new Error('width required to make a new FloatingLayout')\n    }\n    this.width = width\n  }\n  discardRange() {\n    /* do nothing */\n    this.items = []\n    this.layout = new Map()\n    this.totalHeight = 0\n  }\n\n  items: LayoutItem[] = []\n\n  layout: LayoutMap = new Map()\n\n  add(\n    uniqueId: string,\n    anchorLocation: number,\n    width: number,\n    height: number,\n    data: { score: number },\n  ) {\n    this.items.push({\n      uniqueId,\n      anchorLocation,\n      width,\n      height,\n      data,\n    })\n  }\n\n  /**\n   * @returns Map of `uniqueId => {x,y,anchorLocation,width,height,data}`\n   */\n  getLayout(configuration?: AnyConfigurationModel) {\n    if (!configuration) {\n      return this.layout\n      // throw new Error('configuration object required')\n    }\n    // this.layout = new Map()\n    // this.totalHeight = 0\n    // console.log(this.items)\n\n    const minY = readConfObject(configuration, 'minStickLength')\n\n    // sort them by score ascending, so higher scores will always end up\n    // stacked last (toward the bottom)\n    const sorted = this.items.sort((a, b) => a.data.score - b.data.score)\n\n    // bump them\n    let maxBottom = 0\n    const layoutEntries: [string, LayoutEntry][] = new Array(sorted.length)\n    for (let i = 0; i < sorted.length; i += 1) {\n      const currentItem = sorted[i]!\n      const { anchorLocation, width, height } = currentItem\n      const start = anchorLocation - width / 2\n      const end = start + width\n      let top = minY\n      let bottom = top + height\n\n      // figure out how far down to put it\n      for (let j = 0; j < i; j += 1) {\n        const [, previouslyLaidOutItem] = layoutEntries[j]!\n        const {\n          x: prevStart,\n          y: prevTop,\n          width: prevWidth,\n          height: prevHeight,\n        } = previouslyLaidOutItem\n        const prevEnd = prevStart + prevWidth\n        const prevBottom = prevTop + prevHeight\n        if (\n          doesIntersect2(prevStart, prevEnd, start, end) &&\n          doesIntersect2(prevTop, prevBottom, top, bottom)\n        ) {\n          // bump this one to the bottom of the previous one\n          top = prevBottom\n          bottom = top + height\n          j = -1 // we need to check all of them again after bumping\n        }\n      }\n\n      // record the entry and update the maxBottom\n      layoutEntries[i] = [\n        currentItem.uniqueId,\n        {\n          ...currentItem,\n          x: start,\n          y: top,\n        },\n      ]\n      if (bottom > maxBottom) {\n        maxBottom = bottom\n      }\n    }\n\n    // try to tile them left to right all at the same level\n    // if they don't fit, try to alternate them on 2 levels, then 3\n    this.totalHeight = maxBottom\n    this.layout = new Map(layoutEntries)\n    return this.layout\n  }\n\n  getTotalHeight() {\n    return this.totalHeight\n  }\n\n  serializeRegion() {\n    return this.toJSON()\n  }\n\n  toJSON() {\n    return {\n      pairs: [...this.getLayout()],\n      totalHeight: this.getTotalHeight(),\n    }\n  }\n\n  static fromJSON() {\n    throw new Error('not supported')\n  }\n}\n\nexport class PrecomputedFloatingLayout {\n  layout: LayoutMap\n\n  totalHeight: number\n\n  constructor({\n    pairs,\n    totalHeight,\n  }: {\n    pairs: [string, LayoutEntry][]\n    totalHeight: number\n  }) {\n    this.layout = new Map(pairs)\n    this.totalHeight = totalHeight\n  }\n\n  add(uniqueId: string) {\n    if (!this.layout.has(uniqueId)) {\n      throw new Error(`layout error, precomputed layout is missing ${uniqueId}`)\n    }\n  }\n\n  getLayout() {\n    return this.layout\n  }\n\n  getTotalHeight() {\n    return this.totalHeight\n  }\n  discardRange() {\n    /* do nothing */\n  }\n  static fromJSON(\n    json: ConstructorParameters<typeof PrecomputedFloatingLayout>[0],\n  ) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import { LayoutSession } from '@jbrowse/core/pluggableElementTypes/renderers/LayoutSession'\nimport { MultiLayout } from '@jbrowse/core/util/layouts'\n\nimport { FloatingLayout } from './Layout'\n\nexport class FloatingLayoutSession extends LayoutSession {\n  // @ts-expect-error\n  makeLayout() {\n    const { end, start } = this.props.regions[0]!\n    const widthPx = (end - start) / this.props.bpPerPx\n    // @ts-expect-error\n    return new MultiLayout(FloatingLayout, { width: widthPx })\n  }\n\n  layoutIsValid() {\n    return false\n  }\n}\n","import BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\n\nimport { FloatingLayoutSession } from './FloatingLayoutSession'\nimport { PrecomputedFloatingLayout } from './Layout'\n\nimport type { LayoutSessionProps } from '@jbrowse/core/pluggableElementTypes/renderers/LayoutSession'\n\nexport default class LollipopRenderer extends BoxRendererType {\n  // @ts-expect-error\n  createLayoutSession(props: LayoutSessionProps) {\n    return new FloatingLayoutSession(props)\n  }\n\n  // @ts-expect-error\n  deserializeLayoutInClient(json: any) {\n    return new PrecomputedFloatingLayout(json)\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { contrastingTextColor } from '@jbrowse/core/util/color'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default function ScoreText({\n  feature,\n  config,\n  layoutRecord: {\n    y,\n    data: { anchorX, radiusPx, score },\n  },\n}: {\n  feature: Feature\n  config: AnyConfigurationModel\n  layoutRecord: {\n    y: number\n    data: { anchorX: number; radiusPx: number; score: number }\n  }\n}) {\n  const innerColor = readConfObject(config, 'innerColor', { feature })\n\n  const scoreString = String(score)\n  const fontWidth = (radiusPx * 2) / scoreString.length\n  const fontHeight = fontWidth * 1.1\n  if (fontHeight < 12) {\n    return null\n  }\n  return (\n    <text\n      style={{\n        pointerEvents: 'none',\n        fontSize: fontHeight,\n        fill: contrastingTextColor(innerColor),\n      }}\n      x={anchorX}\n      y={y + radiusPx - fontHeight / 2.4}\n      textAnchor=\"middle\"\n      dominantBaseline=\"hanging\"\n    >\n      {scoreString}\n    </text>\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\nimport ScoreText from './ScoreText'\n\nconst Lollipop = observer(function Lollipop(props: Record<string, any>) {\n  const { feature, config, layoutRecord, selectedFeatureId } = props\n  const {\n    anchorLocation,\n    y,\n    data: { radiusPx },\n  } = layoutRecord\n\n  const styleOuter = {\n    fill: readConfObject(config, 'strokeColor', { feature }),\n  }\n  if (String(selectedFeatureId) === String(feature.id())) {\n    styleOuter.fill = 'red'\n  }\n\n  const styleInner = {\n    fill: readConfObject(config, 'innerColor', { feature }),\n  }\n\n  const strokeWidth = readConfObject(config, 'strokeWidth', { feature })\n\n  return (\n    <g data-testid={feature.id()}>\n      <title>{readConfObject(config, 'caption', { feature })}</title>\n      <circle\n        cx={anchorLocation}\n        cy={y + radiusPx}\n        r={radiusPx}\n        style={styleOuter}\n        onMouseDown={(event: React.MouseEvent) => {\n          const { onFeatureMouseDown: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseEnter={(event: React.MouseEvent) => {\n          const { onFeatureMouseEnter: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseOut={(event: React.MouseEvent | React.FocusEvent) => {\n          const { onFeatureMouseOut: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseOver={(event: React.MouseEvent | React.FocusEvent) => {\n          const { onFeatureMouseOver: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseUp={(event: React.MouseEvent) => {\n          const { onFeatureMouseUp: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseLeave={(event: React.MouseEvent) => {\n          const { onFeatureMouseLeave: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onMouseMove={(event: React.MouseEvent) => {\n          const { onFeatureMouseMove: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onClick={(event: React.MouseEvent) => {\n          const { onFeatureClick: handler, feature } = props\n          event.stopPropagation()\n          return handler?.(event, feature.id())\n        }}\n        onFocus={(event: React.MouseEvent | React.FocusEvent) => {\n          const { onFeatureMouseOver: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n        onBlur={(event: React.MouseEvent | React.FocusEvent) => {\n          const { onFeatureMouseOut: handler, feature } = props\n          return handler?.(event, feature.id())\n        }}\n      />\n      {radiusPx - strokeWidth <= 2 ? null : (\n        <circle\n          cx={anchorLocation}\n          cy={y + radiusPx}\n          r={radiusPx - strokeWidth}\n          style={styleInner}\n          onMouseDown={(event: React.MouseEvent) => {\n            const { onFeatureMouseDown: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseEnter={(event: React.MouseEvent) => {\n            const { onFeatureMouseEnter: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseOut={(event: React.MouseEvent | React.FocusEvent) => {\n            const { onFeatureMouseOut: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseOver={(event: React.MouseEvent | React.FocusEvent) => {\n            const { onFeatureMouseOver: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseUp={(event: React.MouseEvent) => {\n            const { onFeatureMouseUp: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseLeave={(event: React.MouseEvent) => {\n            const { onFeatureMouseLeave: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onMouseMove={(event: React.MouseEvent) => {\n            const { onFeatureMouseMove: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onClick={(event: React.MouseEvent) => {\n            const { onFeatureClick: handler, feature } = props\n            event.stopPropagation()\n            return handler?.(event, feature.id())\n          }}\n          onFocus={(event: React.MouseEvent | React.FocusEvent) => {\n            const { onFeatureMouseOver: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n          onBlur={(event: React.MouseEvent | React.FocusEvent) => {\n            const { onFeatureMouseOut: handler, feature } = props\n            return handler?.(event, feature.id())\n          }}\n        />\n      )}\n      <ScoreText\n        feature={feature}\n        config={config}\n        layoutRecord={layoutRecord}\n      />\n    </g>\n  )\n})\n\nexport default Lollipop\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst Stick = observer(function Stick({\n  feature,\n  config,\n  layoutRecord: {\n    anchorLocation,\n    y,\n    data: { radiusPx },\n  },\n}: {\n  feature: Feature\n  config: AnyConfigurationModel\n  layoutRecord: {\n    anchorLocation: number\n    y: number\n    data: { radiusPx: number }\n  }\n}) {\n  return (\n    <line\n      x1={anchorLocation}\n      y1={0}\n      x2={anchorLocation}\n      y2={y + 2 * radiusPx}\n      stroke={readConfObject(config, 'stickColor', { feature })}\n      strokeWidth={readConfObject(config, 'stickWidth', { feature })}\n    />\n  )\n})\n\nexport default Stick\n","import type { FocusEvent, MouseEvent } from 'react'\nimport { Fragment, useEffect, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { bpToPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport Lollipop from './Lollipop'\nimport Stick from './Stick'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\n\nfunction layoutFeat(args: {\n  feature: Feature\n  bpPerPx: number\n  region: Region\n  layout: { add: (...args: unknown[]) => void }\n  config: AnyConfigurationModel\n}) {\n  const { feature, bpPerPx, config, region, layout } = args\n\n  const centerBp = Math.abs(feature.get('end') + feature.get('start')) / 2\n  const centerPx = bpToPx(centerBp, region, bpPerPx)\n  const radiusPx = readConfObject(config, 'radius', { feature })\n\n  if (!radiusPx) {\n    console.error(\n      new Error(\n        `lollipop radius ${radiusPx} configured for feature ${feature.id()}`,\n      ),\n    )\n  }\n  layout.add(feature.id(), centerPx, radiusPx * 2, radiusPx * 2, {\n    featureId: feature.id(),\n    anchorX: centerPx,\n    radiusPx,\n    score: readConfObject(args.config, 'score', { feature }),\n  })\n}\n\nconst LollipopRendering = observer(function (props: Record<string, any>) {\n  const onMouseDown = (event: MouseEvent) => {\n    const { onMouseDown: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseUp = (event: MouseEvent) => {\n    const { onMouseUp: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseEnter = (event: MouseEvent | FocusEvent) => {\n    const { onMouseEnter: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseLeave = (event: MouseEvent | FocusEvent) => {\n    const { onMouseLeave: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseOver = (event: MouseEvent) => {\n    const { onMouseOver: handler } = props\n    return handler?.(event)\n  }\n\n  const onMouseOut = (event: MouseEvent) => {\n    const { onMouseOut: handler } = props\n    return handler?.(event)\n  }\n\n  const onClick = (event: MouseEvent) => {\n    const { onClick: handler } = props\n    return handler?.(event)\n  }\n  const [client, setClient] = useState(false)\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  const {\n    regions,\n    bpPerPx,\n    layout,\n    config,\n    features = new Map(),\n    displayModel = {},\n  } = props\n  const { selectedFeatureId } = displayModel\n  const region = regions[0]!\n  for (const feature of features.values()) {\n    layoutFeat({\n      feature,\n      bpPerPx,\n      region,\n      config,\n      layout,\n    })\n  }\n\n  const width = (region.end - region.start) / bpPerPx\n  const records = [...layout.getLayout(config).values()]\n  const height = layout.getTotalHeight()\n\n  return (\n    <svg\n      width={width}\n      height={height}\n      style={{ position: 'relative' }}\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onFocus={onMouseEnter}\n      onBlur={onMouseLeave}\n      onClick={onClick}\n    >\n      {client ? (\n        <>\n          {records.map(layoutRecord => {\n            const feature = features.get(layoutRecord.data.featureId)\n            return (\n              <Fragment key={feature.id()}>\n                <Stick\n                  key={`stick-${feature.id()}`}\n                  {...props}\n                  config={config}\n                  layoutRecord={layoutRecord}\n                  feature={feature}\n                />\n                <Lollipop\n                  key={`body-${feature.id()}`}\n                  {...props}\n                  layoutRecord={layoutRecord}\n                  feature={feature}\n                  selectedFeatureId={selectedFeatureId}\n                />\n              </Fragment>\n            )\n          })}\n        </>\n      ) : null}\n    </svg>\n  )\n})\n\nexport default LollipopRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'LollipopRenderer',\n  {\n    strokeColor: {\n      type: 'color',\n      description: 'the outer color of each lollipop',\n      defaultValue: 'green',\n      contextVariable: ['feature'],\n    },\n    innerColor: {\n      type: 'color',\n      description: 'the inner color of each lollipop',\n      defaultValue: '#7fc75f',\n      contextVariable: ['feature'],\n    },\n    strokeWidth: {\n      type: 'number',\n      description: 'width of the stroked border',\n      defaultValue: 4,\n      contextVariable: ['feature'],\n    },\n    radius: {\n      type: 'number',\n      description: 'radius in pixels of each lollipop body',\n      defaultValue: `jexl:sqrt(max(3, (get(feature,'score')*10)/3.14))`,\n      contextVariable: ['feature'],\n    },\n    caption: {\n      type: 'string',\n      description:\n        'the tooltip caption displayed when the mouse hovers over a lollipop',\n      defaultValue: `jexl:get(feature,'name')`,\n      contextVariable: ['feature'],\n    },\n    minStickLength: {\n      type: 'number',\n      description: 'minimum lollipop \"stick\" length, in pixels',\n      defaultValue: 5,\n    },\n    stickColor: {\n      type: 'color',\n      description: 'color of the lollipop stick',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    stickWidth: {\n      type: 'number',\n      description: 'width in pixels of the lollipop stick',\n      defaultValue: 2,\n      contextVariable: ['feature'],\n    },\n    score: {\n      type: 'number',\n      description:\n        'the \"score\" of each lollipop, displayed as a number in the center of the circle',\n      defaultValue: `jexl:get(feature,'score')`,\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport LinearLollipopDisplayF from './LinearLollipopDisplay'\nimport LollipopRendererF from './LollipopRenderer'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class LollipopPlugin extends Plugin {\n  name = 'LollipopPlugin'\n\n  install(pluginManager: PluginManager) {\n    LollipopRendererF(pluginManager)\n    LinearLollipopDisplayF(pluginManager)\n  }\n}\n","import LollipopRenderer from './LollipopRenderer'\nimport ReactComponent from './components/LollipopRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LollipopRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new LollipopRenderer({\n        name: 'LollipopRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearLollipopDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearLollipopDisplay',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'LollipopTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearLollipopDisplay\n */\nexport function configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearLollipopDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('AboutWidget', {})\n\nconst stateModel = types.model('AboutWidget', {\n  id: ElementId,\n  type: types.literal('AboutWidget'),\n})\n\nexport default function AboutWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'AboutWidget',\n      heading: 'About',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/AboutWidget')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('HelpWidget', {})\n\nconst stateModel = types.model('HelpWidget', {\n  id: ElementId,\n  type: types.literal('HelpWidget'),\n})\n\nexport default function HelpWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'HelpWidget',\n      heading: 'Help',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/HelpWidget')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('ImportSessionWidget', {})\n\nconst stateModel = types.model('ImportSessionWidget', {\n  id: ElementId,\n  type: types.literal('ImportSessionWidget'),\n})\n\nexport default function ImportSessionWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'ImportSessionWidget',\n      heading: 'Import session',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/ImportSessionWidget')),\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport const configSchema = ConfigurationSchema('SessionManager', {})\n\nexport const stateModel = types.model('SessionManager', {\n  id: ElementId,\n  type: types.literal('SessionManager'),\n})\n\nexport default function SessionManagerF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'SessionManager',\n      heading: 'Recent sessions',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/SessionManager')),\n    })\n  })\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport HelpIcon from '@mui/icons-material/Help'\nimport InfoIcon from '@mui/icons-material/Info'\n\nimport AboutWidgetF from './AboutWidget'\nimport HelpWidgetF from './HelpWidget'\nimport ImportSessionWidgetF from './ImportSessionWidget'\nimport SessionManagerF from './SessionManager'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\n\nexport default class MenusPlugin extends Plugin {\n  name = 'MenusPlugin'\n\n  install(pluginManager: PluginManager) {\n    AboutWidgetF(pluginManager)\n    HelpWidgetF(pluginManager)\n    ImportSessionWidgetF(pluginManager)\n    SessionManagerF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'About',\n        icon: InfoIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('AboutWidget', 'aboutWidget')\n          session.showWidget(widget)\n        },\n      })\n      pluginManager.rootModel.appendToMenu('Help', {\n        label: 'Help',\n        icon: HelpIcon,\n        onClick: (session: SessionWithWidgets) => {\n          const widget = session.addWidget('HelpWidget', 'helpWidget')\n          session.showWidget(widget)\n        },\n      })\n    }\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport default ConfigurationSchema(\n  'SPARQLAdapter',\n  {\n    endpoint: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: 'https://somesite.com/sparql',\n        locationType: 'UriLocation',\n      },\n      description: 'URL of the SPARQL endpoint',\n    },\n    queryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query where {start} {end} and {refName} will get replaced for each call',\n    },\n    refNamesQueryTemplate: {\n      type: 'text',\n      defaultValue: '',\n      description:\n        'SPARQL query that returns the possible refNames in a ?refName column',\n    },\n    refNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Possible refNames used by the SPARQL endpoint (ignored if \"refNamesQueryTemplate\" is provided)',\n    },\n    additionalQueryParams: {\n      type: 'stringArray',\n      defaultValue: [],\n      description:\n        'Additional parameters to add to the query, e.g. \"format=JSON\"',\n    },\n  },\n  { explicitlyTyped: true },\n)\n","import Plugin from '@jbrowse/core/Plugin'\nimport { getFileName } from '@jbrowse/core/util/tracks'\n\nimport SPARQLAdapterF from './SPARQLAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AdapterGuesser } from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default class RdfPlugin extends Plugin {\n  name = 'RdfPlugin'\n\n  install(pluginManager: PluginManager) {\n    SPARQLAdapterF(pluginManager)\n    pluginManager.addToExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (adapterGuesser: AdapterGuesser) => {\n        return (\n          file: FileLocation,\n          index?: FileLocation,\n          adapterHint?: string,\n        ) => {\n          const regexGuess = /\\/sparql$/i\n          const adapterName = 'SPARQLAdapter'\n          const fileName = getFileName(file)\n          if (regexGuess.test(fileName) || adapterHint === adapterName) {\n            return {\n              type: adapterName,\n              endpoint: file,\n            }\n          }\n          return adapterGuesser(file, index, adapterHint)\n        }\n      },\n    )\n  }\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SPARQLAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'SPARQLAdapter',\n        displayName: 'SPARQL adapter',\n        configSchema,\n        adapterMetadata: {\n          category: 'Uncommon',\n        },\n        getAdapterClass: () => import('./SPARQLAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config BgzipFastaAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BgzipFastaAdapter = ConfigurationSchema(\n  'BgzipFastaAdapter',\n  {\n    /**\n     * #slot\n     */\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.gz', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/seq.fa.gz.fai',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    metadataLocation: {\n      description: 'Optional metadata file',\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/fa.metadata.yaml',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    gziLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/seq.fa.gz.gzi',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BgzipFastaAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config ChromSizesAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst ChromSizesAdapter = ConfigurationSchema(\n  'ChromSizesAdapter',\n  {\n    /**\n     * #slot\n     */\n    chromSizesLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/species.chrom.sizes',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default ChromSizesAdapter\n","import type { ReactNode } from 'react'\nimport { Fragment } from 'react'\n\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport {\n  bpSpanPx,\n  complement,\n  defaultCodonTable,\n  defaultStarts,\n  defaultStops,\n  generateCodonTable,\n  revcom,\n} from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Frame, Region } from '@jbrowse/core/util'\nimport type { Theme } from '@mui/material'\n\nfunction Translation({\n  codonTable,\n  seq,\n  frame,\n  width,\n  bpPerPx,\n  colorByCDS,\n  region,\n  seqStart,\n  height,\n  y,\n  reverse = false,\n  theme,\n}: {\n  codonTable: Record<string, string>\n  width: number\n  seq: string\n  frame: Frame\n  colorByCDS: boolean\n  bpPerPx: number\n  region: Region\n  seqStart: number\n  reverse?: boolean\n  height: number\n  y: number\n  theme?: Theme\n}) {\n  const normalizedFrame = Math.abs(frame) - 1\n  const seqFrame = seqStart % 3\n  const frameShift = (normalizedFrame - seqFrame + 3) % 3\n\n  const frameShiftAdjustedSeqLength = seq.length - frameShift\n  const multipleOfThreeLength =\n    frameShiftAdjustedSeqLength - (frameShiftAdjustedSeqLength % 3)\n  const seqSliced = seq.slice(frameShift, frameShift + multipleOfThreeLength)\n\n  const translated: { letter: string; codon: string }[] = []\n  for (let i = 0; i < seqSliced.length; i += 3) {\n    const codon = seqSliced.slice(i, i + 3)\n    const normalizedCodon = reverse ? revcom(codon) : codon\n    const aminoAcid = codonTable[normalizedCodon] || ''\n    translated.push({\n      letter: aminoAcid,\n      codon: normalizedCodon.toUpperCase(),\n    })\n  }\n\n  const codonWidth = (1 / bpPerPx) * 3\n  const renderLetter = 1 / bpPerPx >= 12\n  const frameOffset = frameShift / bpPerPx\n  const startOffset = (region.start - seqStart) / bpPerPx\n  const offset = frameOffset - startOffset\n  const defaultFill = colorByCDS\n    ? theme?.palette.framesCDS.at(frame)?.main\n    : theme?.palette.frames.at(frame)?.main\n  return (\n    <>\n      <rect x={0} y={y} width={width} height={height} fill={defaultFill} />\n      {translated.map((element, index) => {\n        const x = region.reversed\n          ? width - (index + 1) * codonWidth - offset\n          : codonWidth * index + offset\n        const { letter, codon } = element\n        const codonFill = defaultStarts.includes(codon)\n          ? theme?.palette.startCodon\n          : defaultStops.includes(codon)\n            ? theme?.palette.stopCodon\n            : undefined\n        return !(renderLetter || codonFill) ? null : (\n          <Fragment key={`${index}-${letter}`}>\n            <rect\n              x={x}\n              y={y}\n              width={\n                renderLetter\n                  ? codonWidth\n                  : codonWidth + 0.7 /* small fudge factor when zoomed out*/\n              }\n              height={height}\n              stroke={renderLetter ? '#555' : 'none'}\n              fill={codonFill || 'none'}\n            />\n            {renderLetter ? (\n              <text\n                x={x + codonWidth / 2}\n                fontSize={height - 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n              >\n                {letter}\n              </text>\n            ) : null}\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nfunction Sequence({\n  bpPerPx,\n  region,\n  feature,\n  sequenceType,\n  theme,\n  height,\n  seq,\n  y,\n}: {\n  seq: string\n  theme: Theme\n  bpPerPx: number\n  sequenceType: string\n  height: number\n  region: Region\n  feature: Feature\n  y: number\n}) {\n  const render = 1 / bpPerPx >= 12\n  const s = feature.get('start')\n  const e = feature.get('end')\n  const [leftPx, rightPx] = bpSpanPx(s, e, region, bpPerPx)\n  const reverse = region.reversed\n  const len = e - s\n  const w = Math.max((rightPx - leftPx) / len, 0.8)\n\n  return (\n    <>\n      {seq.split('').map((letter, index) => {\n        const color =\n          sequenceType === 'dna'\n            ? // @ts-expect-error\n              theme.palette.bases[letter.toUpperCase()]\n            : undefined\n        const x = reverse ? rightPx - (index + 1) * w : leftPx + index * w\n        return (\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          <Fragment key={`${letter}-${index}`}>\n            <rect\n              x={x}\n              y={y}\n              width={w}\n              height={height}\n              fill={color ? color.main : '#aaa'}\n              stroke={render ? '#555' : 'none'}\n            />\n            {render ? (\n              <text\n                x={x + w / 2}\n                y={y + height / 2}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                fontSize={height - 2}\n                fill={\n                  color ? theme.palette.getContrastText(color.main) : 'black'\n                }\n              >\n                {letter}\n              </text>\n            ) : null}\n          </Fragment>\n        )\n      })}\n    </>\n  )\n}\n\nfunction SequenceSVG({\n  regions,\n  width,\n  theme: configTheme,\n  colorByCDS,\n  features = new Map(),\n  showReverse = true,\n  showForward = true,\n  showTranslation = true,\n  sequenceType = 'dna',\n  bpPerPx,\n  rowHeight,\n}: {\n  regions: Region[]\n  width: number\n  theme?: Theme\n  features: Map<string, Feature>\n  colorByCDS: boolean\n  showReverse?: boolean\n  showForward?: boolean\n  showTranslation?: boolean\n  sequenceType?: string\n  bpPerPx: number\n  rowHeight: number\n}) {\n  const region = regions[0]!\n  const theme = createJBrowseTheme(configTheme)\n  const codonTable = generateCodonTable(defaultCodonTable)\n  const [feature] = [...features.values()]\n  if (!feature) {\n    return null\n  }\n  const seq: string = feature.get('seq')\n  if (!seq) {\n    return null\n  }\n\n  // incrementer for the y-position of the current sequence being rendered\n  // (applies to both translation rows and dna rows)\n  let currY = -rowHeight\n\n  const showSequence = bpPerPx <= 1\n\n  const forwardFrames: Frame[] = showTranslation && showForward ? [3, 2, 1] : []\n  const reverseFrames: Frame[] =\n    showTranslation && showReverse ? [-1, -2, -3] : []\n\n  // if region.reversed, the forward translation is on bottom, reverse on top\n  const [topFrames, bottomFrames] = region.reversed\n    ? [reverseFrames.toReversed(), forwardFrames.toReversed()]\n    : [forwardFrames, reverseFrames]\n  return (\n    <>\n      {topFrames.map(index => (\n        <Translation\n          key={`translation-${index}`}\n          width={width}\n          colorByCDS={colorByCDS}\n          seq={seq}\n          y={(currY += rowHeight)}\n          codonTable={codonTable}\n          frame={index}\n          bpPerPx={bpPerPx}\n          region={region}\n          seqStart={feature.get('start')}\n          theme={theme}\n          height={rowHeight}\n          reverse={region.reversed}\n        />\n      ))}\n\n      {showForward && showSequence ? (\n        <Sequence\n          height={rowHeight}\n          sequenceType={sequenceType}\n          y={(currY += rowHeight)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? complement(seq) : seq}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {showReverse && showSequence ? (\n        <Sequence\n          height={rowHeight}\n          sequenceType={sequenceType}\n          y={(currY += rowHeight)}\n          feature={feature}\n          region={region}\n          seq={region.reversed ? seq : complement(seq)}\n          bpPerPx={bpPerPx}\n          theme={theme}\n        />\n      ) : null}\n\n      {bottomFrames.map(index => (\n        <Translation\n          key={`rev-translation-${index}`}\n          width={width}\n          colorByCDS={colorByCDS}\n          seq={seq}\n          y={(currY += rowHeight)}\n          codonTable={codonTable}\n          frame={index}\n          bpPerPx={bpPerPx}\n          region={region}\n          seqStart={feature.get('start')}\n          theme={theme}\n          height={rowHeight}\n          reverse={!region.reversed}\n        />\n      ))}\n    </>\n  )\n}\n\nfunction Wrapper({\n  exportSVG,\n  width,\n  totalHeight,\n  children,\n}: {\n  exportSVG?: { rasterizeLayers: boolean }\n  width: number\n  totalHeight: number\n  children: ReactNode\n}) {\n  return exportSVG ? (\n    children\n  ) : (\n    <svg\n      data-testid=\"sequence_track\"\n      width={width}\n      height={totalHeight}\n      style={{\n        // use block because svg by default is inline, which adds a margin\n        display: 'block',\n        width,\n        height: totalHeight,\n        userSelect: 'none',\n      }}\n    >\n      {children}\n    </svg>\n  )\n}\n\nconst DivSequenceRendering = observer(function ({\n  exportSVG,\n  features,\n  regions,\n  colorByCDS,\n  bpPerPx,\n  rowHeight,\n  sequenceHeight,\n  theme,\n  showForward,\n  showReverse,\n  showTranslation,\n}: {\n  exportSVG?: { rasterizeLayers: boolean }\n  features: Map<string, Feature>\n  regions: Region[]\n  colorByCDS: boolean\n  bpPerPx: number\n  rowHeight: number\n  sequenceHeight: number\n  config: AnyConfigurationModel\n  theme?: Theme\n  showForward?: boolean\n  showReverse?: boolean\n  showTranslation?: boolean\n}) {\n  const region = regions[0]!\n  const width = Math.ceil((region.end - region.start) / bpPerPx)\n\n  return (\n    <Wrapper exportSVG={exportSVG} totalHeight={sequenceHeight} width={width}>\n      <SequenceSVG\n        width={width}\n        showReverse={showReverse}\n        showForward={showForward}\n        theme={theme}\n        showTranslation={showTranslation}\n        colorByCDS={colorByCDS}\n        bpPerPx={bpPerPx}\n        rowHeight={rowHeight}\n        features={features}\n        regions={regions}\n      />\n    </Wrapper>\n  )\n})\n\nexport default DivSequenceRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config DivSequenceRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst DivSequenceRenderer = ConfigurationSchema(\n  'DivSequenceRenderer',\n  {\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'height in pixels of each line of sequence',\n      defaultValue: 16,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default DivSequenceRenderer\n","import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n\nimport ReactComponent from './components/DivSequenceRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Region } from '@jbrowse/core/util/types'\n\n/* adjust in both directions */\nclass DivSequenceRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  getExpandedRegion(region: Region) {\n    return {\n      ...region,\n      start: Math.max(region.start - 3, 0),\n      end: region.end + 3,\n    }\n  }\n}\n\nexport default function DivSequenceRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(\n    () =>\n      new DivSequenceRenderer({\n        name: 'DivSequenceRenderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config IndexedFastaAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst IndexedFastaAdapter = ConfigurationSchema(\n  'IndexedFastaAdapter',\n  {\n    /**\n     * #slot\n     */\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    faiLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/seq.fa.fai', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    metadataLocation: {\n      description: 'Optional metadata file',\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/fa.metadata.yaml',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default IndexedFastaAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport divSequenceRendererConfigSchema from '../DivSequenceRenderer/configSchema'\n\n/**\n * #config LinearReferenceSequenceDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const configSchema = ConfigurationSchema(\n  'LinearReferenceSequenceDisplay',\n  {\n    /**\n     * #slot\n     */\n    renderer: divSequenceRendererConfigSchema,\n  },\n  { explicitIdentifier: 'displayId', explicitlyTyped: true },\n)\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config SequenceSearchAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'SequenceSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    search: {\n      type: 'string',\n      defaultValue: '',\n      description: 'Search string or regex to search for',\n    },\n    /**\n     * #slot\n     */\n    sequenceAdapter: {\n      type: 'frozen',\n      defaultValue: null,\n    },\n    /**\n     * #slot\n     */\n    searchForward: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    searchReverse: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n    /**\n     * #slot\n     */\n    caseInsensitive: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config TwoBitAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst TwoBitAdapter = ConfigurationSchema(\n  'TwoBitAdapter',\n  {\n    /**\n     * #slot\n     */\n    twoBitLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/my.2bit', locationType: 'UriLocation' },\n    },\n    /**\n     * #slot\n     */\n    chromSizesLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/default.chrom.sizes',\n        locationType: 'UriLocation',\n      },\n      description:\n        'An optional chrom.sizes file can be supplied to speed up loading since parsing the twobit file can take time',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default TwoBitAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config UnindexedFastaAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst UnindexedFastaAdapter = ConfigurationSchema(\n  'UnindexedFastaAdapter',\n  {\n    /**\n     * #slot\n     */\n    rewriteRefNames: {\n      type: 'string',\n      defaultValue: '',\n      contextVariable: ['refName'],\n    },\n    /**\n     * #slot\n     */\n    fastaLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/seq.fa',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    metadataLocation: {\n      description: 'Optional metadata file',\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/fa.metadata.yaml',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default UnindexedFastaAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport BgzipFastaAdapterF from './BgzipFastaAdapter'\nimport ChromSizesAdapterF from './ChromSizesAdapter'\nimport DivSequenceRendererF from './DivSequenceRenderer'\nimport IndexedFastaAdapterF from './IndexedFastaAdapter'\nimport LinearReferenceSequenceDisplayF from './LinearReferenceSequenceDisplay'\nimport ReferenceSequenceTrackF from './ReferenceSequenceTrack'\nimport SequenceSearchAdapterF from './SequenceSearchAdapter'\nimport TwoBitAdapterF from './TwoBitAdapter'\nimport UnindexedFastaAdapterF from './UnindexedFastaAdapter'\nimport createExtensionPoints from './createExtensionPoints'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class SequencePlugin extends Plugin {\n  name = 'SequencePlugin'\n\n  install(pluginManager: PluginManager) {\n    DivSequenceRendererF(pluginManager)\n    TwoBitAdapterF(pluginManager)\n    BgzipFastaAdapterF(pluginManager)\n    ChromSizesAdapterF(pluginManager)\n    IndexedFastaAdapterF(pluginManager)\n    UnindexedFastaAdapterF(pluginManager)\n    SequenceSearchAdapterF(pluginManager)\n    ReferenceSequenceTrackF(pluginManager)\n    LinearReferenceSequenceDisplayF(pluginManager)\n    createExtensionPoints(pluginManager)\n  }\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function TwoBitAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'TwoBitAdapter',\n        displayName: 'TwoBit adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./TwoBitAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BgzipFastaAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'BgzipFastaAdapter',\n      displayName: 'Bgzip-indexed FASTA adapter',\n      configSchema,\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      getAdapterClass: () => import('./BgzipFastaAdapter').then(r => r.default),\n    })\n  })\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function ChromSizesAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'ChromSizesAdapter',\n        displayName: 'Chrom sizes adapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () =>\n          import('./ChromSizesAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function IndexedFastaAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'IndexedFastaAdapter',\n      displayName: 'Indexed FASTA adapter',\n      configSchema,\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n\n      getAdapterClass: () =>\n        import('./IndexedFastaAdapter').then(r => r.default),\n    })\n  })\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function UnindexedFastaAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'UnindexedFastaAdapter',\n      displayName: 'Unindexed FASTA adapter',\n      configSchema,\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      getAdapterClass: () =>\n        import('./UnindexedFastaAdapter').then(r => r.default),\n    })\n  })\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SequenceSearchAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'SequenceSearchAdapter',\n      displayName: 'Sequence search adapter',\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n      configSchema,\n      getAdapterClass: () =>\n        import('./SequenceSearchAdapter').then(r => r.default),\n    })\n  })\n}\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport { createReferenceSeqTrackConfig } from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function ReferenceSequenceTrackF(pluginManager: PluginManager) {\n  pluginManager.addTrackType(() => {\n    const configSchema = createReferenceSeqTrackConfig(pluginManager)\n\n    return new TrackType({\n      name: 'ReferenceSequenceTrack',\n      displayName: 'Reference sequence track',\n      configSchema,\n      stateModel: createBaseTrackModel(\n        pluginManager,\n        'ReferenceSequenceTrack',\n        configSchema,\n      ),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n// Note: this is primarily a copy of createBaseTrackConfig, except with a\n// subset of the config slots, to avoid including fields that don't make sense\n// for the ReferenceSequenceTrack\n\n/**\n * #config ReferenceSequenceTrack\n * used to display base level DNA sequence tracks\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport function createReferenceSeqTrackConfig(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'ReferenceSequenceTrack',\n    {\n      /**\n       * #slot\n       * configuration for track adapter\n       */\n      adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n\n      /**\n       * #slot\n       * configuration for the displays e.g. LinearReferenceSequenceDisplay\n       */\n      displays: types.array(pluginManager.pluggableConfigSchemaType('display')),\n\n      /**\n       * #slot\n       */\n      name: {\n        type: 'string',\n        description:\n          'optional track name, otherwise uses the \"Reference sequence (assemblyName)\"',\n        defaultValue: '',\n      },\n\n      /**\n       * #slot\n       */\n      sequenceType: {\n        type: 'string',\n        description: 'either dna or pep',\n        defaultValue: 'dna',\n      },\n\n      /**\n       * #slot\n       */\n      description: {\n        description: 'a description of the track',\n        type: 'string',\n        defaultValue: '',\n      },\n\n      /**\n       * #slot\n       */\n      metadata: {\n        type: 'frozen',\n        description: 'anything to add about this track',\n        defaultValue: {},\n      },\n\n      formatAbout: ConfigurationSchema('FormatAbout', {\n        /**\n         * #slot formatAbout.config\n         */\n        config: {\n          type: 'frozen',\n          description: 'formats configuration in about dialog',\n          defaultValue: {},\n          contextVariable: ['config'],\n        },\n\n        /**\n         * #slot formatAbout.hideUris\n         */\n        hideUris: {\n          type: 'boolean',\n          defaultValue: false,\n        },\n      }),\n    },\n    {\n      preProcessSnapshot: s => {\n        const snap = JSON.parse(JSON.stringify(s))\n        const displayTypes = new Set()\n        const { displays = [] } = snap\n        if (snap.trackId !== 'placeholderId') {\n          // Gets the displays on the track snapshot and the possible displays\n          // from the track type and adds any missing possible displays to the\n          // snapshot\n          displays.forEach((d: any) => d && displayTypes.add(d.type))\n          const trackType = pluginManager.getTrackType(snap.type)\n          trackType?.displayTypes.forEach(displayType => {\n            if (!displayTypes.has(displayType.name)) {\n              displays.push({\n                displayId: `${snap.trackId}-${displayType.name}`,\n                type: displayType.name,\n              })\n            }\n          })\n        }\n        return { ...snap, displays }\n      },\n      /**\n       * #identifier\n       * all tracks have a globally unique 'trackId'\n       */\n      explicitIdentifier: 'trackId',\n      explicitlyTyped: true,\n      actions: (self: any) => ({\n        addDisplayConf(displayConf: { type: string; displayId: string }) {\n          const { type } = displayConf\n          if (!type) {\n            throw new Error(`unknown display type ${type}`)\n          }\n          const display = self.displays.find(\n            (d: any) => d && d.displayId === displayConf.displayId,\n          )\n          if (display) {\n            return display\n          }\n          const length = self.displays.push(displayConf)\n          return self.displays[length - 1]\n        },\n      }),\n    },\n  )\n}\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport { configSchema } from './configSchema'\nimport { modelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearReferenceSequenceDisplayF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addDisplayType(() => {\n    const stateModel = modelFactory(configSchema)\n    return new DisplayType({\n      name: 'LinearReferenceSequenceDisplay',\n      configSchema,\n      stateModel,\n      displayName: 'Reference sequence display',\n      trackType: 'ReferenceSequenceTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getContainingTrack, getContainingView } from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { BaseLinearDisplay } from '@jbrowse/plugin-linear-genome-view'\nimport { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel LinearReferenceSequenceDisplay\n * base model `BaseLinearDisplay`\n */\nexport function modelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearReferenceSequenceDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearReferenceSequenceDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        showForward: true,\n        /**\n         * #property\n         */\n        showReverse: true,\n        /**\n         * #property\n         */\n        showTranslation: true,\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #property\n       */\n      rowHeight: 15,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get sequenceType() {\n        return getConf(getContainingTrack(self), 'sequenceType')\n      },\n\n      /**\n       * #getter\n       * showReverse setting, it is NOT disabled for non-dna sequences\n       */\n      get showForwardActual() {\n        return self.showForward\n      },\n\n      /**\n       * #getter\n       * showReverse setting, is disabled for non-dna sequences\n       */\n      get showReverseActual() {\n        return this.sequenceType === 'dna' ? self.showReverse : false\n      },\n\n      /**\n       * #getter\n       * showTranslation setting is disabled for non-dna sequences\n       */\n      get showTranslationActual() {\n        return this.sequenceType === 'dna' ? self.showTranslation : false\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get sequenceHeight() {\n        const {\n          rowHeight,\n          showTranslationActual,\n          showReverseActual,\n          showForwardActual,\n        } = self\n        const r1 =\n          showReverseActual && showTranslationActual ? rowHeight * 3 : 0\n        const r2 =\n          showForwardActual && showTranslationActual ? rowHeight * 3 : 0\n        const t = r1 + r2\n        const r = showReverseActual ? rowHeight : 0\n        const s = showForwardActual ? rowHeight : 0\n        return t + r + s\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const {\n            rpcDriverName,\n            showForwardActual,\n            showReverseActual,\n            showTranslationActual,\n            rowHeight,\n            sequenceHeight,\n            sequenceType,\n          } = self\n          return {\n            ...superRenderProps(),\n            ...getParentRenderProps(self),\n            config: self.configuration.renderer,\n            rpcDriverName,\n            showForward: showForwardActual,\n            showReverse: showReverseActual,\n            showTranslation: showTranslationActual,\n            sequenceType,\n            rowHeight,\n            sequenceHeight,\n          }\n        },\n      }\n    })\n    .views(self => ({\n      /**\n       * #method\n       */\n      regionCannotBeRendered(/* region */) {\n        const view = getContainingView(self) as LGV\n        return view.bpPerPx > 3 ? 'Zoom in to see sequence' : undefined\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      toggleShowForward() {\n        self.showForward = !self.showForward\n      },\n      /**\n       * #action\n       */\n      toggleShowReverse() {\n        self.showReverse = !self.showReverse\n      },\n      /**\n       * #action\n       */\n      toggleShowTranslation() {\n        self.showTranslation = !self.showTranslation\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const view = getContainingView(self) as LGV\n            if (view.bpPerPx > 3) {\n              self.setHeight(50)\n            } else {\n              self.setHeight(self.sequenceHeight)\n            }\n          }),\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems() {\n        return [\n          ...(self.sequenceType === 'dna'\n            ? [\n                {\n                  label: 'Show forward',\n                  type: 'checkbox',\n                  checked: self.showForward,\n                  onClick: () => {\n                    self.toggleShowForward()\n                  },\n                },\n                {\n                  label: 'Show reverse',\n                  type: 'checkbox',\n                  checked: self.showReverse,\n                  onClick: () => {\n                    self.toggleShowReverse()\n                  },\n                },\n                {\n                  label: 'Show translation',\n                  type: 'checkbox',\n                  checked: self.showTranslation,\n                  onClick: () => {\n                    self.toggleShowTranslation()\n                  },\n                },\n              ]\n            : []),\n        ]\n      },\n    }))\n}\n","import { getFileName, makeIndex } from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function ExtensionPointsF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.2bit$/i\n        const adapterName = 'TwoBitAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          twoBitLocation: file,\n        }\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        }\n        if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'TwoBitAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.(fa|fasta|fas|fna|mfa)$/i\n        const adapterName = 'IndexedFastaAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          fastaLocation: file,\n          faiLocation: index || makeIndex(file, '.fai'),\n        }\n\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        }\n        if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'IndexedFastaAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const regexGuess = /\\.(fa|fasta|fas|fna|mfa)\\.b?gz$/i\n        const adapterName = 'BgzipFastaAdapter'\n        const fileName = getFileName(file)\n        const obj = {\n          type: adapterName,\n          faiLocation: makeIndex(file, '.fai'),\n          gziLocation: makeIndex(file, '.gzi'),\n        }\n\n        if (regexGuess.test(fileName) && !adapterHint) {\n          return obj\n        }\n        if (adapterHint === adapterName) {\n          return obj\n        }\n        return adapterGuesser(file, index, adapterHint)\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        if (adapterName === 'BgzipFastaAdapter') {\n          return 'ReferenceSequenceTrack'\n        }\n        return trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { getParent, types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { FileLocation } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\nconst IMPORT_SIZE_LIMIT = 100_000_000\n\nconst fileTypes = ['VCF', 'BED', 'BEDPE', 'STAR-Fusion']\nconst fileTypeParsers = {\n  VCF: () => import('./importAdapters/VcfImport').then(r => r.parseVcfBuffer),\n  BED: () => import('./importAdapters/BedImport').then(r => r.parseBedBuffer),\n  BEDPE: () =>\n    import('./importAdapters/BedpeImport').then(r => r.parseBedPEBuffer),\n  'STAR-Fusion': () =>\n    import('./importAdapters/STARFusionImport').then(\n      r => r.parseSTARFusionBuffer,\n    ),\n}\n\nfunction getType(adapter: Record<string, unknown>) {\n  if (adapter.vcfLocation || adapter.vcfGzLocation) {\n    return 'VCF'\n  } else if (adapter.bedLocation || adapter.bedGzLocation) {\n    return 'BED'\n  } else if (adapter.bedpeLocation) {\n    return 'BEDPE'\n  } else {\n    return undefined\n  }\n}\n\n// hardcodes a couple different adapter types\nfunction getAdapterLoc(adapter: Record<string, FileLocation>) {\n  return (\n    adapter.vcfLocation ||\n    adapter.vcfGzLocation ||\n    adapter.bedLocation ||\n    adapter.bedGzLocation ||\n    adapter.bedpeLocation\n  )\n}\n\n// regexp used to guess the type of a file or URL from its file extension\nconst fileTypesRegexp = new RegExp(`\\\\.(${fileTypes.join('|')})(\\\\.gz)?$`, 'i')\n\n/**\n * #stateModel SpreadsheetImportWizard\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function stateModelFactory() {\n  return types\n    .model('SpreadsheetImportWizard', {\n      /**\n       * #property\n       */\n      fileType: types.optional(types.enumeration(fileTypes), 'VCF'),\n      /**\n       * #property\n       */\n      hasColumnNameLine: true,\n      /**\n       * #property\n       */\n      columnNameLineNumber: 1,\n      /**\n       * #property\n       */\n      selectedAssemblyName: types.maybe(types.string),\n\n      /**\n       * #property\n       * used specifically for UriLocation's\n       */\n      cachedFileLocation: types.frozen<FileLocation | undefined>(),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      fileTypes,\n      /**\n       * #volatile\n       */\n      fileSource: undefined as any,\n      /**\n       * #volatile\n       */\n      error: undefined as unknown,\n      /**\n       * #volatile\n       */\n      loading: false,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get isReadyToOpen() {\n        return (\n          self.fileSource &&\n          (self.fileSource.blobId ||\n            self.fileSource.localPath ||\n            self.fileSource.uri)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get fileName() {\n        return (\n          self.fileSource.uri ||\n          self.fileSource.localPath ||\n          (self.fileSource.blobId && self.fileSource.name)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get requiresUnzip() {\n        return this.fileName.endsWith('gz')\n      },\n\n      /**\n       * #method\n       */\n      isValidRefName(refName: string, assemblyName?: string) {\n        const { assemblyManager } = getSession(self)\n        return !assemblyName\n          ? false\n          : assemblyManager.isValidRefName(refName, assemblyName)\n      },\n\n      /**\n       * #method\n       */\n      tracksForAssembly(selectedAssembly: string) {\n        const session = getSession(self)\n        const { tracks = [], sessionTracks = [] } = session\n        const allTracks = [\n          ...tracks,\n          ...sessionTracks,\n        ] as AnyConfigurationModel[]\n        return allTracks\n          .map(track => {\n            const assemblyNames = readConfObject(track, 'assemblyNames')\n            const adapter = readConfObject(track, 'adapter')\n            const category = readConfObject(track, 'category').join(',')\n            const loc = getAdapterLoc(adapter)\n            return assemblyNames.includes(selectedAssembly) && loc\n              ? {\n                  track,\n                  label: [\n                    category ? `[${category}]` : '',\n                    getTrackName(track, session),\n                  ]\n                    .filter(f => !!f)\n                    .join(' '),\n                  assemblyNames,\n                  type: getType(adapter) || 'UNKNOWN',\n                  loc,\n                }\n              : undefined\n          })\n          .filter(f => !!f)\n          .sort((a, b) => a.label.localeCompare(b.label))\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSelectedAssemblyName(s: string) {\n        self.selectedAssemblyName = s\n      },\n      /**\n       * #action\n       */\n      setFileSource(newSource: unknown) {\n        self.fileSource = newSource\n        self.error = undefined\n\n        if (self.fileSource) {\n          // try to autodetect the file type, ignore errors\n          const name = self.fileName\n\n          if (name) {\n            const firstMatch = fileTypesRegexp.exec(name)?.[1]\n            if (firstMatch) {\n              self.fileType =\n                firstMatch === 'tsv' && name.includes('star-fusion')\n                  ? 'STAR-Fusion'\n                  : firstMatch.toUpperCase()\n            }\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      setColumnNameLineNumber(newnumber: number) {\n        if (newnumber > 0) {\n          self.columnNameLineNumber = newnumber\n        }\n      },\n\n      /**\n       * #action\n       */\n      setFileType(typeName: string) {\n        self.fileType = typeName\n      },\n\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.error = error\n      },\n\n      /**\n       * #action\n       */\n      setLoading(arg: boolean) {\n        self.loading = arg\n      },\n\n      /**\n       * #action\n       */\n      cancelButton() {\n        self.error = undefined\n        getParent<any>(self).setDisplayMode()\n      },\n      /**\n       * #action\n       */\n      setCachedFileHandle(arg: FileLocation) {\n        self.cachedFileLocation = arg\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * fetch and parse the file, make a new Spreadsheet model for it, then set\n       * the parent to display it\n       */\n      async import(assemblyName: string) {\n        if (!self.fileSource) {\n          return\n        }\n\n        self.selectedAssemblyName = assemblyName\n        const type = self.fileType as keyof typeof fileTypeParsers\n        const typeParser = await fileTypeParsers[type]()\n\n        const { fetchAndMaybeUnzip } = await import('@jbrowse/core/util')\n        const { pluginManager } = getEnv(self)\n        const filehandle = openLocation(self.fileSource, pluginManager)\n        self.setLoading(true)\n        try {\n          const stat = await filehandle.stat()\n          if (stat.size > IMPORT_SIZE_LIMIT) {\n            self.setError(\n              `File is too big. Tabular files are limited to at most ${(\n                IMPORT_SIZE_LIMIT / 1000\n              ).toLocaleString()}kb.`,\n            )\n            return\n          }\n        } catch (e) {\n          // not required for stat to succeed to proceed, but it is helpful\n          console.warn(e)\n        } finally {\n          self.setLoading(false)\n        }\n\n        self.setLoading(true)\n        try {\n          if (self.fileSource.uri) {\n            self.setCachedFileHandle({\n              uri: self.fileSource.uri,\n              baseUri: self.fileSource.baseUri,\n              locationType: 'UriLocation',\n            })\n          }\n          const data = await fetchAndMaybeUnzip(filehandle)\n          getParent<any>(self).displaySpreadsheet({\n            ...typeParser(data),\n            assemblyName,\n          })\n        } catch (e) {\n          console.error(e)\n          self.setError(e)\n        } finally {\n          self.setLoading(false)\n        }\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // just a one-time thing on load\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            if (self.cachedFileLocation && self.selectedAssemblyName) {\n              self.setFileSource(self.cachedFileLocation)\n              await self.import(self.selectedAssemblyName)\n            }\n          } catch (e) {\n            console.error(e)\n            getSession(self).notifyError(`${e}`, e)\n          }\n        })()\n      },\n    }))\n}\nexport type ImportWizardStateModel = ReturnType<typeof stateModelFactory>\nexport type ImportWizardModel = Instance<ImportWizardStateModel>\n","import type { AbstractSessionModel } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nexport function locationLinkClick({\n  assemblyName,\n  session,\n  locString,\n  spreadsheetViewId,\n}: {\n  assemblyName: string\n  session: AbstractSessionModel\n  locString: string\n  spreadsheetViewId: string\n}) {\n  const newViewId = `${spreadsheetViewId}_${assemblyName}`\n  let view = session.views.find(v => v.id === newViewId) as\n    | LinearGenomeViewModel\n    | undefined\n  if (!view) {\n    view = session.addView('LinearGenomeView', {\n      id: newViewId,\n    }) as LinearGenomeViewModel\n  }\n  return view.navToLocString(locString, assemblyName)\n}\n","import { lazy } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { SimpleFeature, assembleLocStringFast } from '@jbrowse/core/util'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport { getEnv } from 'mobx-state-tree'\n\nimport { locationLinkClick } from '../util'\n\nimport type {\n  AbstractSessionModel,\n  SimpleFeatureSerialized,\n} from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nexport default function FeatureMenu({\n  assemblyName,\n  session,\n  spreadsheetViewId,\n  feature,\n}: {\n  spreadsheetViewId: string\n  assemblyName: string\n  session: AbstractSessionModel\n  feature: SimpleFeatureSerialized\n}) {\n  return (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Open in linear genome view',\n          onClick: async () => {\n            try {\n              await locationLinkClick({\n                spreadsheetViewId,\n                assemblyName,\n                session,\n                locString: assembleLocStringFast(feature),\n              })\n            } catch (e) {\n              console.error(e)\n              session.notifyError(`${e}`, e)\n            }\n          },\n        },\n        {\n          label: 'Open in single-level split view',\n          onClick: async () => {\n            const { pluginManager } = getEnv(session)\n            const viewType = pluginManager.getViewType('BreakpointSplitView')!\n            session.queueDialog(handleClose => [\n              BreakendSingleLevelOptionDialog,\n              {\n                handleClose,\n                session,\n                stableViewId: `${spreadsheetViewId}_${assemblyName}_breakpointsplitview_singlelevel`,\n                feature: new SimpleFeature(feature),\n                viewType,\n                assemblyName,\n              },\n            ])\n          },\n        },\n        {\n          label: 'Open in multi-level split view',\n          onClick: async () => {\n            const { pluginManager } = getEnv(session)\n            const viewType = pluginManager.getViewType('BreakpointSplitView')!\n            session.queueDialog(handleClose => [\n              BreakendMultiLevelOptionDialog,\n              {\n                handleClose,\n                session,\n                stableViewId: `${spreadsheetViewId}_${assemblyName}_breakpointsplitview_multilevel`,\n                feature: new SimpleFeature(feature),\n                viewType,\n                assemblyName,\n              },\n            ])\n          },\n        },\n      ]}\n    >\n      <ArrowDropDownIcon />\n    </CascadingMenuButton>\n  )\n}\n","import { assembleLocString, getSession } from '@jbrowse/core/util'\nimport { Link } from '@mui/material'\nimport { getParent } from 'mobx-state-tree'\n\nimport { locationLinkClick } from '../util'\nimport FeatureMenu from './FeatureMenu'\n\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nexport default function LocationCell({\n  model,\n  feature,\n}: {\n  model: { assemblyName?: string }\n  feature: SimpleFeatureSerialized\n}) {\n  return (\n    <>\n      <FeatureMenu\n        session={getSession(model)}\n        spreadsheetViewId={getParent<any>(model).id}\n        assemblyName={model.assemblyName!}\n        feature={feature}\n      />\n      <Link\n        href=\"#\"\n        onClick={async event => {\n          try {\n            event.preventDefault()\n            await locationLinkClick({\n              spreadsheetViewId: getParent<any>(model).id,\n              session: getSession(model),\n              locString: assembleLocString(feature),\n              assemblyName: model.assemblyName!,\n            })\n          } catch (e) {\n            console.error(e)\n            getSession(model).notifyError(`${e}`, e)\n          }\n        }}\n      >\n        {assembleLocString(feature)}\n      </Link>\n    </>\n  )\n}\n","import { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession } from '@jbrowse/core/util'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport { cast, types } from 'mobx-state-tree'\n\nimport ImportWizard from './ImportWizard'\nimport Spreadsheet from './SpreadsheetModel'\n\nimport type { SpreadsheetModel } from './SpreadsheetModel'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { Instance } from 'mobx-state-tree'\n\nconst minHeight = 40\nconst defaultHeight = 440\n\n/**\n * #stateModel SpreadsheetView\n * #category view\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function stateModelFactory() {\n  const ImportWizardModel = ImportWizard()\n  return types\n    .compose(\n      BaseViewModel,\n      types\n        .model('SpreadsheetView', {\n          /**\n           * #property\n           */\n          type: types.literal('SpreadsheetView'),\n          /**\n           * #property\n           */\n          offsetPx: 0,\n          /**\n           * #property\n           */\n          height: types.optional(types.number, defaultHeight),\n          /**\n           * #property\n           */\n          hideVerticalResizeHandle: false,\n          /**\n           * #property\n           */\n          hideFilterControls: false,\n\n          /**\n           * #property\n           */\n          importWizard: types.optional(ImportWizardModel, () =>\n            ImportWizardModel.create(),\n          ),\n          /**\n           * #property\n           */\n          spreadsheet: types.maybe(Spreadsheet()),\n        })\n        .volatile(() => ({\n          /**\n           * #volatile\n           */\n          width: 400,\n          /**\n           * #volatile\n           */\n          rowMenuItems: [] as MenuItem[],\n        }))\n        .views(self => ({\n          /**\n           * #getter\n           */\n          get assembly() {\n            const name = self.spreadsheet?.assemblyName\n            return name\n              ? getSession(self).assemblyManager.get(name)?.configuration\n              : undefined\n          },\n        }))\n        .actions(self => ({\n          /**\n           * #action\n           */\n          setRowMenuItems(newItems: MenuItem[]) {\n            self.rowMenuItems = newItems\n          },\n          /**\n           * #action\n           */\n          setWidth(newWidth: number) {\n            self.width = newWidth\n            return self.width\n          },\n          /**\n           * #action\n           */\n          setHeight(newHeight: number) {\n            self.height = Math.max(newHeight, minHeight)\n            return self.height\n          },\n          /**\n           * #action\n           */\n          resizeHeight(distance: number) {\n            const oldHeight = self.height\n            const newHeight = this.setHeight(self.height + distance)\n            return newHeight - oldHeight\n          },\n          /**\n           * #action\n           */\n          resizeWidth(distance: number) {\n            const oldWidth = self.width\n            const newWidth = this.setWidth(self.width + distance)\n            return newWidth - oldWidth\n          },\n\n          /**\n           * #action\n           * load a new spreadsheet and set our mode to display it\n           */\n          displaySpreadsheet(spreadsheet?: SpreadsheetModel) {\n            self.spreadsheet = cast(spreadsheet)\n          },\n        }))\n        .views(self => ({\n          /**\n           * #method\n           */\n          menuItems() {\n            return [\n              {\n                label: 'Return to import form',\n                icon: FolderOpenIcon,\n                onClick: () => {\n                  self.displaySpreadsheet(undefined)\n                },\n              },\n            ]\n          },\n        })),\n    )\n    .postProcessSnapshot(snap => {\n      const { importWizard, spreadsheet } = snap\n      if (importWizard.cachedFileLocation && spreadsheet) {\n        // don't serialize spreadsheet rows if we have the importForm\n        // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n        const { rowSet, ...rest } = spreadsheet as Omit<\n          typeof spreadsheet,\n          symbol\n        >\n\n        return {\n          ...(snap as Omit<typeof snap, symbol>),\n          spreadsheet: rest,\n        }\n      } else if (spreadsheet) {\n        // don't serialize spreadsheet rows if we have the importForm\n        const { rowSet, ...rest } = spreadsheet as Omit<\n          typeof spreadsheet,\n          symbol\n        >\n        // check stringified length of rows if it is a localfile or similar.\n        // try not to exceed localstorage limits\n        return rowSet && JSON.stringify(rowSet).length > 1_000_000\n          ? {\n              ...(snap as Omit<typeof snap, symbol>),\n              spreadsheet: rest,\n            }\n          : snap\n      }\n      return snap\n    })\n}\n\nexport type SpreadsheetViewStateModel = ReturnType<typeof stateModelFactory>\nexport type SpreadsheetViewModel = Instance<SpreadsheetViewStateModel>\n","import {\n  assembleLocStringFast,\n  getSession,\n  measureGridWidth,\n  toLocale,\n} from '@jbrowse/core/util'\nimport { types } from 'mobx-state-tree'\n\nimport LocationCell from './components/LocationCell'\n\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\nimport type { GridColDef } from '@mui/x-data-grid'\nimport type { Instance } from 'mobx-state-tree'\n\nexport interface Row {\n  // optional feature per-row\n  feature?: SimpleFeatureSerialized\n\n  // new style: object with key->name values\n  cellData?: Record<string, unknown>\n\n  // old style: array of cells\n  cells?: {\n    text: unknown\n  }[]\n}\n\nexport interface RowSet {\n  rows: Row[]\n}\n\n/**\n * #stateModel SpreadsheetViewSpreadsheet\n * #category view\n */\nexport default function stateModelFactory() {\n  return types\n    .model('Spreadsheet', {\n      /**\n       * #property\n       */\n      rowSet: types.frozen<RowSet | undefined>(),\n      /**\n       * #property\n       */\n      columns: types.frozen<{ name: string }[]>(),\n      /**\n       * #property\n       */\n      assemblyName: types.maybe(types.string),\n      /**\n       * #property\n       */\n      visibleColumns: types.frozen<Record<string, boolean>>(),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      visibleRowFlags: undefined as Record<number, boolean> | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rows() {\n        return self.rowSet?.rows.map((row, i) => ({\n          id: i,\n          feature: row.feature,\n          ...Object.fromEntries(\n            self.columns.map((c, idx) => [\n              c.name,\n              row.cellData?.[c.name] ?? row.cells?.[idx]?.text,\n            ]),\n          ),\n        }))\n      },\n\n      /**\n       * #getter\n       */\n      get initialized() {\n        const session = getSession(self)\n        const name = self.assemblyName\n        return (\n          self.rowSet &&\n          (name ? session.assemblyManager.get(name)?.initialized : false)\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get dataGridColumns() {\n        const { rows } = self\n        return rows\n          ? [\n              {\n                field: 'Location',\n                width:\n                  measureGridWidth(\n                    rows.map(row =>\n                      row.feature ? assembleLocStringFast(row.feature) : 0,\n                    ),\n                  ) + 40,\n                renderCell: ({ row }) => {\n                  const { feature } = row\n                  return feature ? (\n                    <LocationCell model={self} feature={feature} />\n                  ) : (\n                    'N/A'\n                  )\n                },\n              } satisfies GridColDef<(typeof rows)[0]>,\n              {\n                field: 'Length',\n                type: 'number',\n                width: measureGridWidth(\n                  rows.map(row => {\n                    const { feature } = row\n                    return feature ? feature.end - feature.start : 0\n                  }),\n                ),\n                valueGetter: (\n                  _val: unknown,\n                  row: { feature?: SimpleFeatureSerialized },\n                ) => {\n                  const { feature } = row\n                  return feature ? feature.end - feature.start : undefined\n                },\n                valueFormatter: arg => toLocale(arg),\n              } satisfies GridColDef<(typeof rows)[0]>,\n\n              ...self.columns.map(\n                f =>\n                  ({\n                    field: f.name,\n                    width: measureGridWidth(\n                      // @ts-expect-error\n                      [...rows.map(r => r[f.name]), f.name],\n                      { minWidth: 20 },\n                    ),\n                    type:\n                      // @ts-expect-error\n                      typeof rows[0][f.name] === 'number'\n                        ? 'number'\n                        : undefined,\n                  }) satisfies GridColDef<(typeof rows)[0]>,\n              ),\n            ]\n          : undefined\n      },\n    }))\n    .views(self => ({\n      get visibleRows() {\n        const { visibleRowFlags } = self\n        return visibleRowFlags\n          ? self.rows?.filter((_f, idx) => !!visibleRowFlags[idx])\n          : self.rows\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setVisibleRows(arg?: Record<number, boolean>) {\n        self.visibleRowFlags = arg\n      },\n      /**\n       * #action\n       */\n      setVisibleColumns(arg: Record<string, boolean>) {\n        self.visibleColumns = arg\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      return snap\n        ? {\n            ...snap,\n            // @ts-expect-error no longer support derived columns\n            columns: snap.columns.filter(f => !f.isDerived),\n            rowSet: snap.rowSet\n              ? {\n                  ...snap.rowSet,\n                  rows: snap.rowSet.rows.map(r => ({\n                    ...r,\n                    feature:\n                      r.feature ??\n                      // @ts-expect-error\n                      (r.extendedData?.vcfFeature as SimpleFeatureSerialized),\n                  })),\n                }\n              : undefined,\n          }\n        : snap\n    })\n}\n\nexport type SpreadsheetStateModel = ReturnType<typeof stateModelFactory>\nexport type SpreadsheetModel = Instance<SpreadsheetStateModel>\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport ViewComfyIcon from '@mui/icons-material/ViewComfy'\n\nimport LaunchSpreadsheetViewF from './LaunchSpreadsheetView'\nimport SpreadsheetViewF from './SpreadsheetView'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default class SpreadsheetViewPlugin extends Plugin {\n  name = 'SpreadsheetViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    SpreadsheetViewF(pluginManager)\n    LaunchSpreadsheetViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    const { rootModel } = pluginManager\n    if (isAbstractMenuManager(rootModel)) {\n      rootModel.appendToSubMenu(['Add'], {\n        label: 'Spreadsheet view',\n        icon: ViewComfyIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SpreadsheetView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  type SpreadsheetViewModel,\n  type SpreadsheetViewStateModel,\n} from './SpreadsheetView'\n","import { lazy } from 'react'\n\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\nimport stateModelFactory from './SpreadsheetViewModel'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function SpreadsheetViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'SpreadsheetView',\n      displayName: 'Spreadsheet view',\n      stateModel: stateModelFactory(),\n      ReactComponent: lazy(() => import('./components/SpreadsheetView')),\n    })\n  })\n}\n\nexport type {\n  SpreadsheetViewModel,\n  SpreadsheetViewStateModel,\n} from './SpreadsheetViewModel'\n","import type { SpreadsheetViewModel } from '../SpreadsheetView'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default function LaunchSpreadsheetViewF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-SpreadsheetView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      uri,\n      fileType,\n    }: {\n      session: AbstractSessionModel\n      assembly: string\n      uri: string\n      fileType?: string\n    }) => {\n      const view = session.addView('SpreadsheetView') as SpreadsheetViewModel\n      const exts = uri.split('.')\n      let ext = exts.pop()?.toUpperCase()\n      if (ext === 'GZ') {\n        ext = exts.pop()?.toUpperCase()\n      }\n\n      view.importWizard.setFileType(fileType || ext || '')\n      view.importWizard.setSelectedAssemblyName(assembly)\n      view.importWizard.setFileSource({\n        uri,\n        locationType: 'UriLocation',\n      })\n      await view.importWizard.import(assembly)\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport { navToMultiLevelBreak } from '@jbrowse/sv-core'\nimport { type IAnyStateTreeNode, getParent } from 'mobx-state-tree'\n\nimport stateModelFactory from './model'\n\nimport type { SvInspectorViewModel } from './model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { CircularViewModel } from '@jbrowse/plugin-circular-view'\n\nfunction defaultOnChordClick(feature: Feature, chordTrack: IAnyStateTreeNode) {\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  ;(async () => {\n    const session = getSession(chordTrack)\n    try {\n      session.setSelection(feature)\n      const view = getContainingView(chordTrack) as CircularViewModel\n      const parentView = getParent<any>(view) as SvInspectorViewModel\n      const stableViewId = `${parentView.id}_spawned`\n      await navToMultiLevelBreak({\n        assemblyName: view.assemblyNames[0]!,\n        session,\n        stableViewId,\n        feature,\n      })\n    } catch (e) {\n      console.error(e)\n      session.notifyError(`${e}`, e)\n    }\n  })()\n}\n\nexport default function SvInspectorViewF(pluginManager: PluginManager) {\n  pluginManager.jexl.addFunction('defaultOnChordClick', defaultOnChordClick)\n\n  pluginManager.addViewType(() => {\n    const stateModel = stateModelFactory(pluginManager)\n    return new ViewType({\n      name: 'SvInspectorView',\n      displayName: 'SV inspector',\n      stateModel,\n      ReactComponent: lazy(() => import('./components/SvInspectorView')),\n    })\n  })\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util/types'\nimport TableChartIcon from '@mui/icons-material/TableChart'\n\nimport LaunchSvInspectorViewF from './LaunchSvInspectorView'\nimport SvInspectorViewF from './SvInspectorView'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util/types'\n\nexport default class SvInspectorViewPlugin extends Plugin {\n  name = 'SvInspectorViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    SvInspectorViewF(pluginManager)\n    LaunchSvInspectorViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'SV inspector',\n        icon: TableChartIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('SvInspectorView', {})\n        },\n      })\n    }\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { getSession } from '@jbrowse/core/util'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport { autorun, reaction } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Region } from '@jbrowse/core/util'\nimport type { CircularViewStateModel } from '@jbrowse/plugin-circular-view'\nimport type { SpreadsheetViewStateModel } from '@jbrowse/plugin-spreadsheet-view'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel SvInspectorView\n * #category view\n * does not extend, but is a combination of a\n * - [SpreadsheetView](../spreadsheetview)\n * - [CircularView](../circularview)\n *\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nfunction SvInspectorViewF(pluginManager: PluginManager) {\n  const SpreadsheetViewType = pluginManager.getViewType('SpreadsheetView')!\n  const CircularViewType = pluginManager.getViewType('CircularView')!\n\n  const SpreadsheetModel =\n    SpreadsheetViewType.stateModel as SpreadsheetViewStateModel\n  const CircularModel = CircularViewType.stateModel as CircularViewStateModel\n\n  const minHeight = 400\n  const defaultHeight = 550\n  const headerHeight = 52\n  const circularViewOptionsBarHeight = 52\n  return types\n    .compose(\n      'SvInspectorView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        id: ElementId,\n        /**\n         * #property\n         */\n        type: types.literal('SvInspectorView'),\n\n        /**\n         * #property\n         */\n        height: types.optional(types.number, defaultHeight),\n        /**\n         * #property\n         */\n        onlyDisplayRelevantRegionsInCircularView: false,\n        /**\n         * #property\n         */\n        spreadsheetView: types.optional(SpreadsheetModel, () =>\n          SpreadsheetModel.create({\n            type: 'SpreadsheetView',\n            hideVerticalResizeHandle: true,\n          }),\n        ),\n        /**\n         * #property\n         */\n        circularView: types.optional(CircularModel, () =>\n          CircularModel.create({\n            type: 'CircularView',\n            hideVerticalResizeHandle: true,\n            hideTrackSelectorButton: true,\n            disableImportForm: true,\n          }),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      width: 800,\n      /**\n       * #volatile\n       */\n      SpreadsheetViewReactComponent: SpreadsheetViewType.ReactComponent,\n      /**\n       * #volatile\n       */\n      CircularViewReactComponent: CircularViewType.ReactComponent,\n      /**\n       * #volatile\n       */\n      circularViewOptionsBarHeight,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyName() {\n        const { assembly } = self.spreadsheetView\n        return assembly\n          ? (readConfObject(assembly, 'name') as string)\n          : undefined\n      },\n      /**\n       * #getter\n       */\n      get showCircularView() {\n        return !!self.spreadsheetView.spreadsheet?.rowSet\n      },\n\n      /**\n       * #getter\n       */\n      get features() {\n        return (\n          structuredClone(self.spreadsheetView.spreadsheet?.visibleRows)\n            ?.map(row => row.feature)\n            .filter(f => !!f) || []\n        )\n      },\n      /**\n       * #getter\n       */\n      get featuresAdapterConfigSnapshot() {\n        return {\n          type: 'FromConfigAdapter',\n          features: this.features,\n        }\n      },\n      /**\n       * #getter\n       */\n      get featureRefNames() {\n        return [\n          ...new Set(\n            [\n              ...this.features.map(r => r.refName),\n              // @ts-expect-error\n              ...this.features.flatMap(r => r.INFO?.CHR2),\n              // @ts-expect-error\n              ...this.features.flatMap(r => r.mate?.refName),\n            ].filter(f => !!f),\n          ),\n        ]\n      },\n      get currentAssembly() {\n        const { assemblyManager } = getSession(self)\n        return this.assemblyName\n          ? assemblyManager.get(this.assemblyName)\n          : undefined\n      },\n\n      /**\n       * #getter\n       */\n      get canonicalFeatureRefNameSet() {\n        const asm = this.currentAssembly\n        return new Set(\n          asm?.initialized\n            ? this.featureRefNames.map(r => asm.getCanonicalRefName(r) || r)\n            : [],\n        )\n      },\n      /**\n       * #getter\n       */\n      get featuresCircularTrackConfiguration() {\n        return {\n          type: 'VariantTrack',\n          trackId: `sv-inspector-variant-track-${self.id}`,\n          name: 'features from tabular data',\n          adapter: this.featuresAdapterConfigSnapshot,\n          assemblyNames: [this.assemblyName],\n          displays: [\n            {\n              type: 'ChordVariantDisplay',\n              displayId: `sv-inspector-variant-track-chord-display-${self.id}`,\n              onChordClick:\n                'jexl:defaultOnChordClick(feature, track, pluginManager)',\n              renderer: {\n                type: 'StructuralVariantChordRenderer',\n              },\n            },\n          ],\n        }\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.width = newWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = Math.max(newHeight, minHeight)\n        return self.height\n      },\n\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: Region[]) {\n        self.circularView.setDisplayedRegions(regions)\n      },\n      /**\n       * #action\n       */\n      setOnlyDisplayRelevantRegionsInCircularView(val: boolean) {\n        self.onlyDisplayRelevantRegionsInCircularView = Boolean(val)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menuItems() {\n        return [\n          {\n            label: 'Return to import form',\n            icon: FolderOpenIcon,\n            onClick: () => {\n              self.spreadsheetView.displaySpreadsheet(undefined)\n            },\n          },\n        ]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = self.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n      afterAttach() {\n        // synchronize subview widths\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              const borderWidth = 1\n              if (self.showCircularView) {\n                const spreadsheetWidth = Math.round(self.width * 0.66)\n                const circularViewWidth = self.width - spreadsheetWidth\n                self.spreadsheetView.setWidth(spreadsheetWidth - borderWidth)\n                self.circularView.setWidth(circularViewWidth)\n              } else {\n                self.spreadsheetView.setWidth(self.width)\n              }\n            },\n            { name: 'SvInspectorView width binding' },\n          ),\n        )\n        // synchronize subview heights\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              self.spreadsheetView.setHeight(self.height - headerHeight)\n              self.circularView.setHeight(\n                self.height - headerHeight - circularViewOptionsBarHeight,\n              )\n            },\n            {\n              name: 'SvInspectorView height binding',\n            },\n          ),\n        )\n\n        // bind circularview displayedRegions to spreadsheet assembly, mediated\n        // by the onlyRelevantRegions toggle\n        addDisposer(\n          self,\n          autorun(\n            async () => {\n              const {\n                onlyDisplayRelevantRegionsInCircularView,\n                circularView,\n                canonicalFeatureRefNameSet,\n                currentAssembly,\n              } = self\n              if (!circularView.initialized || !currentAssembly?.regions) {\n                return\n              } else if (onlyDisplayRelevantRegionsInCircularView) {\n                if (circularView.tracks.length === 1) {\n                  try {\n                    circularView.setDisplayedRegions(\n                      structuredClone(\n                        currentAssembly.regions.filter(r =>\n                          canonicalFeatureRefNameSet.has(r.refName),\n                        ),\n                      ),\n                    )\n                  } catch (e) {\n                    console.error(e)\n                    getSession(self).notifyError(`${e}`, e)\n                  }\n                }\n              } else {\n                circularView.setDisplayedRegions(currentAssembly.regions)\n              }\n            },\n            { name: 'SvInspectorView displayed regions bind' },\n          ),\n        )\n\n        // bind circularview tracks to our track snapshot view\n        addDisposer(\n          self,\n          reaction(\n            () => ({\n              generatedTrackConf: self.featuresCircularTrackConfiguration,\n              assemblyName: self.assemblyName,\n            }),\n            data => {\n              // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n              if (!data) {\n                return\n              }\n              const { assemblyName, generatedTrackConf } = data\n              const { circularView } = self\n              // hide any visible tracks\n              circularView.tracks.forEach(t =>\n                circularView.hideTrack(t.configuration.trackId),\n              )\n\n              // put our track in as the only track\n              if (assemblyName) {\n                // @ts-expect-error\n                circularView.addTrackConf(generatedTrackConf, {\n                  assemblyName,\n                })\n              }\n            },\n            {\n              name: 'SvInspectorView track configuration binding',\n              fireImmediately: true,\n            },\n          ),\n        )\n      },\n    }))\n    .postProcessSnapshot(snap => {\n      const { circularView, ...rest } = snap as Omit<typeof snap, symbol>\n      return rest\n    })\n}\n\nexport type SvInspectorViewStateModel = ReturnType<typeof SvInspectorViewF>\nexport type SvInspectorViewModel = Instance<SvInspectorViewStateModel>\n\nexport default SvInspectorViewF\n","import type { SvInspectorViewModel } from '../SvInspectorView/model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default function LaunchSvInspectorViewF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-SvInspectorView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      uri,\n      fileType,\n    }: {\n      session: AbstractSessionModel\n      assembly: string\n      uri: string\n      fileType?: string\n    }) => {\n      const view = session.addView('SvInspectorView') as SvInspectorViewModel\n      const exts = uri.split('.')\n      let ext = exts.pop()?.toUpperCase()\n      if (ext === 'GZ') {\n        ext = exts.pop()?.toUpperCase()\n      }\n\n      view.spreadsheetView.importWizard.setFileType(fileType || ext || '')\n      view.spreadsheetView.importWizard.setSelectedAssemblyName(assembly)\n      view.spreadsheetView.importWizard.setFileSource({\n        uri,\n        locationType: 'UriLocation',\n      })\n      await view.spreadsheetView.importWizard.import(assembly)\n    },\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport { getViewParams, measureText, stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { isAlive, isStateTreeNode } from 'mobx-state-tree'\n\nimport type { DisplayModel } from './util'\nimport type { Feature, Region } from '@jbrowse/core/util'\n\ninterface ViewParams {\n  start: number\n  end: number\n  offsetPx: number\n  offsetPx1: number\n}\n\nconst FeatureLabel = observer(function ({\n  text,\n  x,\n  y,\n  region,\n  reversed,\n  bpPerPx,\n  exportSVG,\n  feature,\n  viewParams,\n  color = 'black',\n  fontHeight = 11,\n  featureWidth = 0,\n  allowedWidthExpansion = 0,\n  displayModel = {},\n}: {\n  text: string\n  x: number\n  y: number\n  color?: string\n  fontHeight?: number\n  featureWidth?: number\n  bpPerPx: number\n  allowedWidthExpansion?: number\n  feature: Feature\n  reversed?: boolean\n  displayModel?: DisplayModel\n  exportSVG?: unknown\n  region: Region\n  viewParams: ViewParams\n}) {\n  const totalWidth = featureWidth + allowedWidthExpansion\n  const measuredTextWidth = measureText(text, fontHeight)\n  const params =\n    isStateTreeNode(displayModel) && isAlive(displayModel) && !exportSVG\n      ? getViewParams(displayModel)\n      : viewParams\n\n  const viewLeft = reversed ? params.end : params.start\n\n  const [featureLabelsVisible, setFeatureLabelsVisible] = useState(exportSVG)\n  const theme = useTheme()\n\n  // we use an effect to set the label visible because there can be a\n  // mismatch between the server and the client after hydration due to the\n  // floating labels. if we are exporting an SVG we allow it as is though and\n  // do not use the effect\n  useEffect(() => {\n    setFeatureLabelsVisible(true)\n  }, [])\n\n  if (isStateTreeNode(region) && !isAlive(region)) {\n    return null\n  }\n\n  const rstart = region.start\n  const rend = region.end\n  const fstart = feature.get('start')\n  const fend = feature.get('end')\n\n  const featureWidthBp = measuredTextWidth * bpPerPx\n\n  // this tricky bit of code helps smooth over block boundaries\n  // not supported for reverse mode currently\n  // reason: reverse mode allocates space for the label in the \"normal\n  // forward orientation\" making it hard to slide. The reverse mode should\n  // allocate the label space in the reverse orientation to slide it\n  if (\n    viewLeft < rend &&\n    viewLeft > rstart &&\n    fstart < viewLeft &&\n    viewLeft + featureWidthBp < fend\n  ) {\n    x = params.offsetPx\n  } else if (\n    fstart < viewLeft &&\n    viewLeft + featureWidthBp < fend &&\n    viewLeft + featureWidthBp > rstart &&\n    viewLeft + featureWidthBp < rend\n  ) {\n    x = params.offsetPx1\n  }\n\n  return featureLabelsVisible ? (\n    <text\n      x={x}\n      y={y + fontHeight}\n      fill={color === '#f0f' ? stripAlpha(theme.palette.text.primary) : color}\n      fontSize={fontHeight}\n    >\n      {measuredTextWidth > totalWidth\n        ? `${text.slice(0, totalWidth / (fontHeight * 0.6))}...`\n        : text}\n    </text>\n  ) : null\n})\n\nexport default FeatureLabel\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\nimport FeatureLabel from './FeatureLabel'\n\nimport type { DisplayModel } from './util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\n\nconst FeatureGlyph = observer(function (props: {\n  feature: Feature\n  rootLayout: SceneGraph\n  config: AnyConfigurationModel\n  name: string\n  description: string\n  shouldShowName: boolean\n  shouldShowDescription: boolean\n  colorByCDS: boolean\n  fontHeight: number\n  allowedWidthExpansion: number\n  exportSVG?: unknown\n  displayModel?: DisplayModel\n  selected?: boolean\n  reversed?: boolean\n  topLevel?: boolean\n  region: Region\n  viewParams: {\n    end: number\n    start: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  bpPerPx: number\n}) {\n  const {\n    feature,\n    rootLayout,\n    config,\n    name,\n    description,\n    shouldShowName,\n    shouldShowDescription,\n  } = props\n\n  const featureLayout = rootLayout.getSubRecord(String(feature.id()))\n  if (!featureLayout) {\n    return null\n  }\n  const { GlyphComponent } = featureLayout.data || {}\n\n  return (\n    <g>\n      <GlyphComponent featureLayout={featureLayout} {...props} />\n      {shouldShowName ? (\n        <FeatureLabel\n          text={name}\n          x={rootLayout.getSubRecord('nameLabel')?.absolute.left || 0}\n          y={rootLayout.getSubRecord('nameLabel')?.absolute.top || 0}\n          color={readConfObject(config, ['labels', 'nameColor'], { feature })}\n          featureWidth={featureLayout.width}\n          {...props}\n        />\n      ) : null}\n      {shouldShowDescription ? (\n        <FeatureLabel\n          text={description}\n          x={rootLayout.getSubRecord('descriptionLabel')?.absolute.left || 0}\n          y={rootLayout.getSubRecord('descriptionLabel')?.absolute.top || 0}\n          color={readConfObject(config, ['labels', 'descriptionColor'], {\n            feature,\n          })}\n          featureWidth={featureLayout.width}\n          {...props}\n        />\n      ) : null}\n    </g>\n  )\n})\n\nexport default FeatureGlyph\n","import { useEffect, useState } from 'react'\n\nimport { bpSpanPx } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { Feature, Region } from '@jbrowse/core/util'\n\ntype LayoutRecord = [number, number, number, number]\n\ninterface OverlayRectProps extends React.SVGProps<SVGRectElement> {\n  rect?: LayoutRecord\n  region: Region\n  bpPerPx: number\n}\n\nfunction OverlayRect({\n  rect,\n  region,\n  bpPerPx,\n  ...rectProps\n}: OverlayRectProps) {\n  if (!rect) {\n    return null\n  }\n  const [leftBp, topPx, rightBp, bottomPx] = rect\n  const [leftPx, rightPx] = bpSpanPx(leftBp, rightBp, region, bpPerPx)\n  const rectTop = Math.round(topPx)\n  const screenWidth = (region.end - region.start) / bpPerPx\n  const rectHeight = Math.round(bottomPx - topPx)\n  const width = rightPx - leftPx\n\n  if (leftPx + width < 0) {\n    return null\n  }\n  const leftWithinBlock = Math.max(leftPx, 0)\n  const diff = leftWithinBlock - leftPx\n  const widthWithinBlock = Math.max(1, Math.min(width - diff, screenWidth))\n\n  return (\n    <rect\n      x={leftWithinBlock - 2}\n      y={rectTop - 2}\n      width={widthWithinBlock + 4}\n      height={rectHeight + 4}\n      {...rectProps}\n    />\n  )\n}\n\ntype ME = React.MouseEvent<SVGRectElement>\ntype MEFE = ME | React.FocusEvent<SVGRectElement>\n\nconst SvgOverlay = observer(function ({\n  displayModel = {},\n  blockKey,\n  region,\n  bpPerPx,\n  movedDuringLastMouseDown,\n  ...handlers\n}: {\n  region: Region\n  displayModel?: {\n    getFeatureByID?: (arg0: string, arg1: string) => LayoutRecord\n    selectedFeatureId?: string\n    featureIdUnderMouse?: string\n    contextMenuFeature?: Feature\n  }\n  bpPerPx: number\n  blockKey: string\n  movedDuringLastMouseDown?: boolean\n  onFeatureMouseDown?(event: ME, featureId: string): void\n  onFeatureMouseEnter?(event: ME, featureId: string): void\n  onFeatureMouseOut?(event: MEFE, featureId: string): void\n  onFeatureMouseOver?(event: MEFE, featureId: string): void\n  onFeatureMouseUp?(event: ME, featureId: string): void\n  onFeatureMouseLeave?(event: ME, featureId: string): void\n  onFeatureMouseMove?(event: ME, featureId: string): void\n  // synthesized from mouseup and mousedown\n  onFeatureClick?(event: ME, featureId: string): void\n  onFeatureContextMenu?(event: ME, featureId: string): void\n}) {\n  const { selectedFeatureId, featureIdUnderMouse, contextMenuFeature } =\n    displayModel\n\n  const mouseoverFeatureId = featureIdUnderMouse || contextMenuFeature?.id()\n  const [renderOverlay, setRenderOverlay] = useState(false)\n  useEffect(() => {\n    setRenderOverlay(true)\n  }, [])\n\n  function onFeatureMouseDown(event: ME) {\n    const { onFeatureMouseDown: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseEnter(event: ME) {\n    const { onFeatureMouseEnter: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOut(event: ME | React.FocusEvent<SVGRectElement>) {\n    const { onFeatureMouseOut: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseOver(event: ME | React.FocusEvent<SVGRectElement>) {\n    const { onFeatureMouseOver: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseUp(event: ME) {\n    const { onFeatureMouseUp: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseLeave(event: ME) {\n    const { onFeatureMouseLeave: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureMouseMove(event: ME) {\n    const { onFeatureMouseMove: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureClick(event: ME) {\n    if (movedDuringLastMouseDown) {\n      return undefined\n    }\n    const { onFeatureClick: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    event.stopPropagation()\n    handler(event, mouseoverFeatureId)\n  }\n\n  function onFeatureContextMenu(event: ME) {\n    const { onFeatureContextMenu: handler } = handlers\n    if (!(handler && mouseoverFeatureId)) {\n      return undefined\n    }\n    handler(event, mouseoverFeatureId)\n  }\n\n  return renderOverlay ? (\n    <>\n      {mouseoverFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(blockKey, mouseoverFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          fill=\"#000\"\n          fillOpacity=\"0.2\"\n          onMouseDown={onFeatureMouseDown}\n          onMouseEnter={onFeatureMouseEnter}\n          onMouseOut={onFeatureMouseOut}\n          onMouseOver={onFeatureMouseOver}\n          onMouseUp={onFeatureMouseUp}\n          onMouseLeave={onFeatureMouseLeave}\n          onMouseMove={onFeatureMouseMove}\n          onClick={onFeatureClick}\n          onContextMenu={onFeatureContextMenu}\n          onFocus={onFeatureMouseOver}\n          onBlur={onFeatureMouseOut}\n          data-testid={mouseoverFeatureId}\n        />\n      ) : null}\n      {selectedFeatureId ? (\n        <OverlayRect\n          rect={displayModel.getFeatureByID?.(blockKey, selectedFeatureId)}\n          region={region}\n          bpPerPx={bpPerPx}\n          stroke=\"#00b8ff\"\n          fill=\"none\"\n        />\n      ) : null}\n    </>\n  ) : null\n})\n\nexport default SvgOverlay\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\n\nconst Arrow = observer(function Arrow({\n  feature,\n  featureLayout,\n  config,\n  region,\n}: {\n  region: Region\n  feature: Feature\n  featureLayout: SceneGraph\n  config: AnyConfigurationModel\n}) {\n  const strand = feature.get('strand')\n  const size = 5\n  const reverseFlip = region.reversed ? -1 : 1\n  const offset = 7 * strand * reverseFlip\n  const { left = 0, top = 0, width = 0, height = 0 } = featureLayout.absolute\n\n  const c = readConfObject(config, 'color2', { feature })\n  const theme = useTheme()\n  const color2 = c === '#f0f' ? stripAlpha(theme.palette.text.secondary) : c\n  const p =\n    strand * reverseFlip === -1\n      ? left\n      : strand * reverseFlip === 1\n        ? left + width\n        : null\n  const y = top + height / 2\n\n  return p ? (\n    <>\n      <line x1={p} x2={p + offset} y1={y} y2={y} stroke={color2} />\n      <polygon\n        points={[\n          [p + offset / 2, y - size / 2],\n          [p + offset / 2, y + size / 2],\n          [p + offset, y],\n        ].toString()}\n        stroke={color2}\n        fill={color2}\n      />\n    </>\n  ) : null\n})\n\nexport default Arrow\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getFrame } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport Arrow from './Arrow'\nimport { isUTR } from './util'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\n\nconst utrHeightFraction = 0.65\n\nconst Box = observer(function Box(props: {\n  feature: Feature\n  region: Region\n  config: AnyConfigurationModel\n  featureLayout: SceneGraph\n  bpPerPx: number\n  selected?: boolean\n  topLevel?: boolean\n  colorByCDS: boolean\n}) {\n  const theme = useTheme()\n  const {\n    colorByCDS,\n    feature,\n    region,\n    config,\n    featureLayout,\n    bpPerPx,\n    topLevel,\n  } = props\n  const { start, end } = region\n  const screenWidth = Math.ceil((end - start) / bpPerPx)\n  const featureStart = feature.get('start')\n  const featureEnd = feature.get('end')\n  const featureType: string | undefined = feature.get('type')\n  const featureStrand: -1 | 1 | undefined = feature.get('strand')\n  const featurePhase: 0 | 1 | 2 | undefined = feature.get('phase')\n  const width = (featureEnd - featureStart) / bpPerPx\n  const { left = 0 } = featureLayout.absolute\n  let { top = 0, height = 0 } = featureLayout.absolute\n\n  if (left + width < 0) {\n    return null\n  }\n\n  if (isUTR(feature)) {\n    top += ((1 - utrHeightFraction) / 2) * height\n    height *= utrHeightFraction\n  }\n  const leftWithinBlock = Math.max(left, 0)\n  const diff = leftWithinBlock - left\n  const widthWithinBlock = Math.max(2, Math.min(width - diff, screenWidth))\n\n  let fill: string = isUTR(feature)\n    ? readConfObject(config, 'color3', { feature })\n    : readConfObject(config, 'color1', { feature })\n  if (\n    colorByCDS &&\n    featureType === 'CDS' &&\n    featureStrand !== undefined &&\n    featurePhase !== undefined\n  ) {\n    const frame = getFrame(\n      featureStart,\n      featureEnd,\n      featureStrand,\n      featurePhase,\n    )\n    const frameColor = theme.palette.framesCDS.at(frame)?.main\n    if (frameColor) {\n      fill = frameColor\n    }\n  }\n\n  // if feature has parent and type is intron, then don't render the intron\n  // subfeature (if it doesn't have a parent, then maybe the introns are\n  // separately displayed features that should be displayed)\n  return feature.parent() && featureType === 'intron' ? null : (\n    <>\n      {topLevel ? <Arrow {...props} /> : null}\n      <rect\n        data-testid={`box-${feature.id()}`}\n        x={leftWithinBlock}\n        y={top}\n        width={widthWithinBlock}\n        height={height}\n        fill={fill}\n        stroke={readConfObject(config, 'outline', { feature }) as string}\n      />\n    </>\n  )\n})\n\nexport default Box\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport Arrow from './Arrow'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\n\nconst Segments = observer(function Segments(props: {\n  region: Region\n  feature: Feature\n  featureLayout: SceneGraph\n  config: AnyConfigurationModel\n  selected?: boolean\n  reversed?: boolean\n  subfeatures?: Feature[]\n  children?: React.ReactNode\n}) {\n  const {\n    feature,\n    featureLayout,\n    selected,\n    config,\n    // some subfeatures may be computed e.g. makeUTRs,\n    // so these are passed as a prop, or feature.get('subfeatures') by default\n    subfeatures = feature.get('subfeatures'),\n  } = props\n\n  const theme = useTheme()\n  const c = readConfObject(config, 'color2', { feature })\n  const color2 = c === '#f0f' ? stripAlpha(theme.palette.text.secondary) : c\n\n  const { left = 0, top = 0, width = 0, height = 0 } = featureLayout.absolute\n\n  const y = top + height / 2\n  return (\n    <>\n      <line\n        data-testid={feature.id()}\n        x1={left}\n        y1={y}\n        y2={y}\n        x2={left + width}\n        stroke={color2}\n      />\n      {subfeatures?.map(subfeature => {\n        const subfeatureId = String(subfeature.id())\n        const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n        // This subfeature got filtered out\n        if (!subfeatureLayout) {\n          return null\n        }\n        const { GlyphComponent } = subfeatureLayout.data || {}\n        return (\n          <GlyphComponent\n            key={`glyph-${subfeatureId}`}\n            {...props}\n            feature={subfeature}\n            topLevel={false}\n            featureLayout={subfeatureLayout}\n            selected={selected}\n          />\n        )\n      })}\n      <Arrow {...props} />\n    </>\n  )\n})\n\nexport default Segments\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { SimpleFeature } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport Segments from './Segments'\nimport { isUTR, layOutFeature, layOutSubfeatures } from './util'\n\nimport type { ExtraGlyphValidator } from './util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\n\n// returns a callback that will filter features features according to the\n// subParts conf var\nfunction makeSubpartsFilter(\n  confKey: string | string[],\n  config: AnyConfigurationModel,\n) {\n  const filter = readConfObject(config, confKey) as string[] | string\n  const ret = typeof filter === 'string' ? filter.split(/\\s*,\\s*/) : filter\n\n  return (feature: Feature) =>\n    ret\n      .map(typeName => typeName.toLowerCase())\n      .includes(feature.get('type').toLowerCase())\n}\n\nfunction filterSubpart(feature: Feature, config: AnyConfigurationModel) {\n  return makeSubpartsFilter('subParts', config)(feature)\n}\n\nfunction makeUTRs(parent: Feature, subs: Feature[]) {\n  // based on Lincoln's UTR-making code in\n  // Bio::Graphics::Glyph::processed_transcript\n  const subparts = [...subs]\n\n  let codeStart = Number.POSITIVE_INFINITY\n  let codeEnd = Number.NEGATIVE_INFINITY\n\n  let haveLeftUTR: boolean | undefined\n  let haveRightUTR: boolean | undefined\n\n  // gather exons, find coding start and end, and look for UTRs\n  const exons = []\n  for (const subpart of subparts) {\n    const type = subpart.get('type')\n    if (/^cds/i.test(type)) {\n      if (codeStart > subpart.get('start')) {\n        codeStart = subpart.get('start')\n      }\n      if (codeEnd < subpart.get('end')) {\n        codeEnd = subpart.get('end')\n      }\n    } else if (/exon/i.test(type)) {\n      exons.push(subpart)\n    } else if (isUTR(subpart)) {\n      haveLeftUTR = subpart.get('start') === parent.get('start')\n      haveRightUTR = subpart.get('end') === parent.get('end')\n    }\n  }\n\n  // bail if we don't have exons and CDS\n  if (\n    !(\n      exons.length &&\n      codeStart < Number.POSITIVE_INFINITY &&\n      codeEnd > Number.NEGATIVE_INFINITY\n    )\n  ) {\n    return subparts\n  }\n\n  // make sure the exons are sorted by coord\n  exons.sort((a, b) => a.get('start') - b.get('start'))\n\n  const strand = parent.get('strand')\n\n  // make the left-hand UTRs\n  let start: number | undefined\n  let end: number | undefined\n  if (!haveLeftUTR) {\n    for (let i = 0; i < exons.length; i++) {\n      start = exons[i]!.get('start')\n      if (start >= codeStart) {\n        break\n      }\n      end = Math.min(codeStart, exons[i]!.get('end'))\n      const type = strand >= 0 ? 'five_prime_UTR' : 'three_prime_UTR'\n      subparts.unshift(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  // make the right-hand UTRs\n  if (!haveRightUTR) {\n    for (let i = exons.length - 1; i >= 0; i--) {\n      end = exons[i]!.get('end')\n      if (end <= codeEnd) {\n        break\n      }\n\n      start = Math.max(codeEnd, exons[i]!.get('start'))\n      const type = strand >= 0 ? 'three_prime_UTR' : 'five_prime_UTR'\n      subparts.push(\n        new SimpleFeature({\n          parent,\n          id: `${parent.id()}_${type}_${i}`,\n          data: { start, end, strand, type },\n        }),\n      )\n    }\n  }\n\n  return subparts\n}\n\nfunction getSubparts(f: Feature, config: AnyConfigurationModel) {\n  let c = f.get('subfeatures')\n  if (!c || c.length === 0) {\n    return []\n  }\n  const hasUTRs = c.some(child => isUTR(child))\n  const isTranscript = ['mRNA', 'transcript'].includes(f.get('type'))\n  const impliedUTRs = !hasUTRs && isTranscript\n\n  // if we think we should use impliedUTRs, or it is specifically in the\n  // config, then makeUTRs\n  if (impliedUTRs || readConfObject(config, 'impliedUTRs')) {\n    c = makeUTRs(f, c)\n  }\n\n  return c.filter(element => filterSubpart(element, config))\n}\n\nconst ProcessedTranscript = observer(function ProcessedTranscript(props: {\n  feature: Feature\n  region: Region\n  config: AnyConfigurationModel\n  featureLayout: SceneGraph\n  selected?: boolean\n  reversed?: boolean\n  [key: string]: unknown\n}) {\n  const { feature, config } = props\n  const subfeatures = getSubparts(feature, config)\n\n  // we manually compute some subfeatures, so pass these separately\n  return <Segments {...props} subfeatures={subfeatures} />\n})\n\n// @ts-expect-error\nProcessedTranscript.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: {\n  layout: SceneGraph\n  feature: Feature\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n  extraGlyphs: ExtraGlyphValidator[]\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  const subfeatures = getSubparts(feature, config)\n  layOutSubfeatures({\n    layout: subLayout,\n    subfeatures,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  return subLayout\n}\n\nexport default ProcessedTranscript\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\nimport { chooseGlyphComponent, layOut, layOutFeature } from './util'\n\nimport type { ExtraGlyphValidator } from './util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { SceneGraph } from '@jbrowse/core/util/layouts'\nimport type { Feature } from '@jbrowse/core/util/simpleFeature'\n\nconst Subfeatures = observer(function Subfeatures(props: {\n  feature: Feature\n  featureLayout: SceneGraph\n  selected?: boolean\n}) {\n  const { feature, featureLayout, selected } = props\n\n  return feature.get('subfeatures')?.map(subfeature => {\n    const subfeatureId = String(subfeature.id())\n    const subfeatureLayout = featureLayout.getSubRecord(subfeatureId)\n    if (!subfeatureLayout) {\n      return null\n    }\n    const { GlyphComponent } = subfeatureLayout.data || {}\n    return (\n      <GlyphComponent\n        key={`glyph-${subfeatureId}`}\n        {...props}\n        feature={subfeature}\n        featureLayout={subfeatureLayout}\n        selected={selected}\n      />\n    )\n  })\n})\n\n// @ts-expect-error\nSubfeatures.layOut = ({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: {\n  layout: SceneGraph\n  feature: Feature\n  bpPerPx: number\n  reversed: boolean\n  config: AnyConfigurationModel\n  extraGlyphs: ExtraGlyphValidator[]\n}) => {\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  const displayMode = readConfObject(config, 'displayMode')\n  if (displayMode !== 'reducedRepresentation') {\n    let topOffset = 0\n    feature.get('subfeatures')?.forEach(subfeature => {\n      const SubfeatureGlyphComponent = chooseGlyphComponent({\n        feature: subfeature,\n        extraGlyphs,\n        config,\n      })\n      const subfeatureHeight = readConfObject(config, 'height', {\n        feature: subfeature,\n      }) as number\n\n      const subSubLayout = (SubfeatureGlyphComponent.layOut || layOut)({\n        layout: subLayout,\n        feature: subfeature,\n        bpPerPx,\n        reversed,\n        config,\n        extraGlyphs,\n      })\n      subSubLayout.move(0, topOffset)\n      topOffset +=\n        displayMode === 'collapse'\n          ? 0\n          : (displayMode === 'compact'\n              ? subfeatureHeight / 3\n              : subfeatureHeight) + 2\n    })\n  }\n  return subLayout\n}\n\nexport default Subfeatures\n","import type React from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\n\nimport Box from './Box'\nimport ProcessedTranscript from './ProcessedTranscript'\nimport Segments from './Segments'\nimport Subfeatures from './Subfeatures'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type SceneGraph from '@jbrowse/core/util/layouts/SceneGraph'\n\nexport interface Glyph\n  extends React.FC<{\n    colorByCDS: boolean\n    feature: Feature\n    featureLayout: SceneGraph\n    selected?: boolean\n    config: AnyConfigurationModel\n    region: Region\n    bpPerPx: number\n    topLevel?: boolean\n    [key: string]: unknown\n  }> {\n  layOut?: (arg: FeatureLayOutArgs) => SceneGraph\n}\n\ntype LayoutRecord = [number, number, number, number]\n\nexport interface DisplayModel {\n  getFeatureByID?: (arg0: string, arg1: string) => LayoutRecord\n  getFeatureOverlapping?: (\n    blockKey: string,\n    bp: number,\n    y: number,\n  ) => string | undefined\n  selectedFeatureId?: string\n  featureIdUnderMouse?: string\n  contextMenuFeature?: Feature\n}\n\nexport interface ExtraGlyphValidator {\n  glyph: Glyph\n  validator: (feature: Feature) => boolean\n}\n\nexport function chooseGlyphComponent({\n  feature,\n  extraGlyphs,\n  config,\n}: {\n  feature: Feature\n  config: AnyConfigurationModel\n  extraGlyphs?: ExtraGlyphValidator[]\n}): Glyph {\n  const type = feature.get('type')\n  const subfeatures = feature.get('subfeatures')\n  const transcriptTypes = readConfObject(config, 'transcriptTypes')\n  const containerTypes = readConfObject(config, 'containerTypes')\n\n  if (subfeatures?.length && type !== 'CDS') {\n    const hasSubSub = subfeatures.some(f => f.get('subfeatures')?.length)\n    const hasCDS = subfeatures.some(f => f.get('type') === 'CDS')\n    if (transcriptTypes.includes(type) && hasCDS) {\n      return ProcessedTranscript\n    } else if (\n      (!feature.parent() && hasSubSub) ||\n      containerTypes.includes(type)\n    ) {\n      return Subfeatures\n    } else {\n      return Segments\n    }\n  } else {\n    return extraGlyphs?.find(f => f.validator(feature))?.glyph || Box\n  }\n}\n\ninterface BaseLayOutArgs {\n  layout: SceneGraph\n  bpPerPx: number\n  reversed?: boolean\n  config: AnyConfigurationModel\n}\n\ninterface FeatureLayOutArgs extends BaseLayOutArgs {\n  feature: Feature\n  extraGlyphs?: ExtraGlyphValidator[]\n}\n\ninterface SubfeatureLayOutArgs extends BaseLayOutArgs {\n  subfeatures: Feature[]\n  extraGlyphs?: ExtraGlyphValidator[]\n}\n\nexport function layOut({\n  layout,\n  feature,\n  bpPerPx,\n  reversed,\n  config,\n  extraGlyphs,\n}: FeatureLayOutArgs): SceneGraph {\n  const displayMode = readConfObject(config, 'displayMode')\n  const subLayout = layOutFeature({\n    layout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  if (displayMode !== 'reducedRepresentation') {\n    layOutSubfeatures({\n      layout: subLayout,\n      subfeatures: feature.get('subfeatures') || [],\n      bpPerPx,\n      reversed,\n      config,\n      extraGlyphs,\n    })\n  }\n  return subLayout\n}\n\nexport function layOutFeature(args: FeatureLayOutArgs) {\n  const { layout, feature, bpPerPx, reversed, config, extraGlyphs } = args\n  const displayMode = readConfObject(config, 'displayMode') as string\n  const GlyphComponent =\n    displayMode === 'reducedRepresentation'\n      ? Box\n      : chooseGlyphComponent({\n          feature,\n          extraGlyphs,\n          config,\n        })\n  const parentFeature = feature.parent()\n  let x = 0\n  if (parentFeature) {\n    x =\n      (reversed\n        ? parentFeature.get('end') - feature.get('end')\n        : feature.get('start') - parentFeature.get('start')) / bpPerPx\n  }\n  const height = readConfObject(config, 'height', { feature }) as number\n  const width = (feature.get('end') - feature.get('start')) / bpPerPx\n  const layoutParent = layout.parent\n  const top = layoutParent ? layoutParent.top : 0\n  return layout.addChild(\n    String(feature.id()),\n    x,\n    displayMode === 'collapse' ? 0 : top,\n    Math.max(width, 1), // has to be at least one to register in the layout\n    displayMode === 'compact' ? height / 2 : height,\n    { GlyphComponent },\n  )\n}\n\nexport function layOutSubfeatures(args: SubfeatureLayOutArgs) {\n  const { layout, subfeatures, bpPerPx, reversed, config, extraGlyphs } = args\n  subfeatures.forEach(feature => {\n    ;(chooseGlyphComponent({ feature, extraGlyphs, config }).layOut || layOut)({\n      layout,\n      feature,\n      bpPerPx,\n      reversed,\n      config,\n      extraGlyphs,\n    })\n  })\n}\n\nexport function isUTR(feature: Feature) {\n  return /(\\bUTR|_UTR|untranslated[_\\s]region)\\b/i.test(\n    feature.get('type') || '',\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { bpToPx, measureText } from '@jbrowse/core/util'\nimport { SceneGraph } from '@jbrowse/core/util/layouts'\nimport { observer } from 'mobx-react'\n\nimport FeatureGlyph from './FeatureGlyph'\nimport SvgOverlay from './SvgOverlay'\nimport { chooseGlyphComponent, layOut } from './util'\n\nimport type { DisplayModel, ExtraGlyphValidator } from './util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature, Region } from '@jbrowse/core/util'\nimport type { BaseLayout } from '@jbrowse/core/util/layouts'\n\n// used to make features have a little padding for their labels\nconst xPadding = 3\nconst yPadding = 5\n\n// used so that user can click-away-from-feature below the laid out features\n// (issue #1248)\nconst svgHeightPadding = 100\n\nfunction RenderedFeatureGlyph(props: {\n  feature: Feature\n  bpPerPx: number\n  region: Region\n  config: AnyConfigurationModel\n  colorByCDS: boolean\n  layout: BaseLayout<unknown>\n  extraGlyphs?: ExtraGlyphValidator[]\n  displayMode: string\n  exportSVG?: unknown\n  displayModel?: DisplayModel\n  detectRerender?: () => void\n  viewParams: {\n    start: number\n    end: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  [key: string]: unknown\n}) {\n  const {\n    feature,\n    detectRerender,\n    bpPerPx,\n    region,\n    config,\n    displayMode,\n    layout,\n    extraGlyphs,\n  } = props\n\n  // used for unit testing, difficult to mock out so it is in actual source code\n  detectRerender?.()\n\n  const { reversed } = region\n  const start = feature.get(reversed ? 'end' : 'start')\n  const startPx = bpToPx(start, region, bpPerPx)\n  const labelAllowed = displayMode !== 'collapsed'\n\n  const rootLayout = new SceneGraph('root', 0, 0, 0, 0)\n  const GlyphComponent = chooseGlyphComponent({ config, feature, extraGlyphs })\n  const featureLayout = (GlyphComponent.layOut || layOut)({\n    layout: rootLayout,\n    feature,\n    bpPerPx,\n    reversed,\n    config,\n    extraGlyphs,\n  })\n  let shouldShowName = false\n  let shouldShowDescription = false\n  let name = ''\n  let description = ''\n  let fontHeight = 0\n  let expansion = 0\n  if (labelAllowed) {\n    const showLabels = readConfObject(config, 'showLabels')\n    const showDescriptions = readConfObject(config, 'showDescriptions')\n    fontHeight = readConfObject(config, ['labels', 'fontSize'], { feature })\n    expansion = readConfObject(config, 'maxFeatureGlyphExpansion') || 0\n    name = String(readConfObject(config, ['labels', 'name'], { feature }) || '')\n    shouldShowName = /\\S/.test(name) && showLabels\n\n    const getWidth = (text: string) => {\n      const glyphWidth = rootLayout.width + expansion\n      const textWidth = measureText(text, fontHeight)\n      return Math.round(Math.min(textWidth, glyphWidth))\n    }\n\n    description = String(\n      readConfObject(config, ['labels', 'description'], { feature }) || '',\n    )\n    shouldShowDescription = /\\S/.test(description) && showDescriptions\n\n    if (shouldShowName) {\n      rootLayout.addChild(\n        'nameLabel',\n        0,\n        featureLayout.bottom,\n        getWidth(name),\n        fontHeight,\n      )\n    }\n\n    if (shouldShowDescription) {\n      const aboveLayout = shouldShowName\n        ? rootLayout.getSubRecord('nameLabel')\n        : featureLayout\n      if (!aboveLayout) {\n        throw new Error('failed to layout nameLabel')\n      }\n\n      rootLayout.addChild(\n        'descriptionLabel',\n        0,\n        aboveLayout.bottom,\n        getWidth(description),\n        fontHeight,\n      )\n    }\n  }\n\n  const topPx = layout.addRect(\n    feature.id(),\n    feature.get('start'),\n    feature.get('start') + rootLayout.width * bpPerPx + xPadding * bpPerPx,\n    rootLayout.height + yPadding,\n  )\n  if (topPx === null) {\n    return null\n  }\n  rootLayout.move(startPx, topPx)\n\n  return (\n    <FeatureGlyph\n      rootLayout={rootLayout}\n      name={name}\n      shouldShowName={shouldShowName}\n      description={description}\n      shouldShowDescription={shouldShowDescription}\n      fontHeight={fontHeight}\n      allowedWidthExpansion={expansion}\n      reversed={region.reversed}\n      topLevel={true}\n      {...props}\n    />\n  )\n}\n\nconst RenderedFeatures = observer(function RenderedFeatures(props: {\n  features?: Map<string, Feature>\n  isFeatureDisplayed?: (f: Feature) => boolean\n  bpPerPx: number\n  config: AnyConfigurationModel\n  displayMode: string\n  colorByCDS: boolean\n  displayModel?: DisplayModel\n  region: Region\n  exportSVG?: unknown\n  extraGlyphs?: ExtraGlyphValidator[]\n  layout: BaseLayout<unknown>\n  viewParams: {\n    start: number\n    end: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  [key: string]: unknown\n}) {\n  const { features = new Map(), isFeatureDisplayed } = props\n  return (\n    <>\n      {[...features.values()]\n        .filter(feature =>\n          isFeatureDisplayed ? isFeatureDisplayed(feature) : true,\n        )\n        .map(feature => (\n          <RenderedFeatureGlyph\n            key={feature.id()}\n            feature={feature}\n            {...props}\n          />\n        ))}\n    </>\n  )\n})\n\nconst SvgFeatureRendering = observer(function SvgFeatureRendering(props: {\n  layout: BaseLayout<unknown>\n  blockKey: string\n  regions: Region[]\n  bpPerPx: number\n  detectRerender?: () => void\n  config: AnyConfigurationModel\n  colorByCDS: boolean\n  features: Map<string, Feature>\n  displayModel?: DisplayModel\n  exportSVG?: boolean\n  viewParams: {\n    start: number\n    end: number\n    offsetPx: number\n    offsetPx1: number\n  }\n  featureDisplayHandler?: (f: Feature) => boolean\n  extraGlyphs?: ExtraGlyphValidator[]\n  onMouseOut?: React.MouseEventHandler\n  onMouseDown?: React.MouseEventHandler\n  onMouseLeave?: React.MouseEventHandler\n  onMouseEnter?: React.MouseEventHandler\n  onMouseOver?: React.MouseEventHandler\n  onMouseMove?: (event: React.MouseEvent, featureId?: string) => void\n  onMouseUp?: React.MouseEventHandler\n  onClick?: React.MouseEventHandler\n}) {\n  const {\n    layout,\n    blockKey,\n    regions = [],\n    bpPerPx,\n    config,\n    displayModel = {},\n    exportSVG,\n    featureDisplayHandler,\n    onMouseOut,\n    onMouseDown,\n    onMouseLeave,\n    onMouseEnter,\n    onMouseOver,\n    onMouseMove,\n    onMouseUp,\n    onClick,\n  } = props\n\n  const region = regions[0]!\n  const width = (region.end - region.start) / bpPerPx\n  const displayMode = readConfObject(config, 'displayMode') as string\n  const maxConfHeight = readConfObject(config, 'maxHeight') as number\n\n  const ref = useRef<SVGSVGElement>(null)\n  const [mouseIsDown, setMouseIsDown] = useState(false)\n  const [height, setHeight] = useState(maxConfHeight)\n  const [movedDuringLastMouseDown, setMovedDuringLastMouseDown] =\n    useState(false)\n  const [initialMousePos, setInitialMousePos] = useState<{\n    x: number\n    y: number\n  }>()\n\n  const mouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      setMouseIsDown(true)\n      setMovedDuringLastMouseDown(false)\n      setInitialMousePos({\n        x: event.clientX,\n        y: event.clientY,\n      })\n      return onMouseDown?.(event)\n    },\n    [onMouseDown],\n  )\n\n  const mouseUp = useCallback(\n    (event: React.MouseEvent) => {\n      setMouseIsDown(false)\n      setInitialMousePos(undefined)\n      return onMouseUp?.(event)\n    },\n    [onMouseUp],\n  )\n\n  const mouseMove = useCallback(\n    (event: React.MouseEvent) => {\n      if (!ref.current) {\n        return\n      }\n      if (mouseIsDown && initialMousePos) {\n        const dx = event.clientX - initialMousePos.x\n        const dy = event.clientY - initialMousePos.y\n        if (Math.abs(dx) > 8 || Math.abs(dy) > 8) {\n          setMovedDuringLastMouseDown(true)\n        }\n      }\n      const { left, top } = ref.current.getBoundingClientRect()\n      const offsetX = event.clientX - left\n      const offsetY = event.clientY - top\n      const px = region.reversed ? width - offsetX : offsetX\n      const clientBp = region.start + bpPerPx * px\n\n      const featureIdCurrentlyUnderMouse = displayModel.getFeatureOverlapping?.(\n        blockKey,\n        clientBp,\n        offsetY,\n      )\n\n      if (onMouseMove) {\n        onMouseMove(event, featureIdCurrentlyUnderMouse)\n      }\n    },\n    [\n      initialMousePos,\n      blockKey,\n      bpPerPx,\n      mouseIsDown,\n      onMouseMove,\n      region.reversed,\n      region.start,\n      displayModel,\n      width,\n    ],\n  )\n\n  const click = useCallback(\n    (event: React.MouseEvent) => {\n      // don't select a feature if we are clicking and dragging\n      if (movedDuringLastMouseDown) {\n        return\n      }\n      onClick?.(event)\n    },\n    [movedDuringLastMouseDown, onClick],\n  )\n\n  useEffect(() => {\n    setHeight(layout.getTotalHeight())\n  }, [layout])\n\n  return exportSVG ? (\n    <RenderedFeatures\n      displayMode={displayMode}\n      isFeatureDisplayed={featureDisplayHandler}\n      region={region}\n      {...props}\n    />\n  ) : (\n    <svg\n      ref={ref}\n      data-testid=\"svgfeatures\"\n      width={width}\n      height={height + svgHeightPadding}\n      style={{\n        // use block because svg by default is inline, which adds a margin\n        display: 'block',\n      }}\n      onMouseDown={mouseDown}\n      onMouseUp={mouseUp}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onMouseMove={mouseMove}\n      onClick={click}\n    >\n      <RenderedFeatures\n        displayMode={displayMode}\n        region={region}\n        movedDuringLastMouseDown={movedDuringLastMouseDown}\n        isFeatureDisplayed={featureDisplayHandler}\n        {...props}\n      />\n\n      <SvgOverlay\n        {...props}\n        region={region}\n        movedDuringLastMouseDown={movedDuringLastMouseDown}\n      />\n    </svg>\n  )\n})\n\nexport default SvgFeatureRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config SvgFeatureRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst SvgFeatureRenderer = ConfigurationSchema(\n  'SvgFeatureRenderer',\n  {\n    /**\n     * #slot\n     */\n    color1: {\n      type: 'color',\n      description: 'the main color of each feature',\n      defaultValue: 'goldenrod',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    color2: {\n      type: 'color',\n      description:\n        'the secondary color of each feature, used for connecting lines, etc',\n      defaultValue: '#f0f',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    color3: {\n      type: 'color',\n      description:\n        'the tertiary color of each feature, often used for contrasting fills, like on UTRs',\n      defaultValue: '#357089',\n      contextVariable: ['feature'],\n    },\n\n    /**\n     * #slot\n     */\n    outline: {\n      type: 'color',\n      description: 'the outline for features',\n      defaultValue: '',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      description: 'height in pixels of the main body of each feature',\n      defaultValue: 10,\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    showLabels: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n\n    /**\n     * #slot\n     */\n    showDescriptions: {\n      type: 'boolean',\n      defaultValue: true,\n    },\n\n    labels: ConfigurationSchema('SvgFeatureLabels', {\n      /**\n       * #slot labels.name\n       */\n      name: {\n        type: 'string',\n        description:\n          'the primary name of the feature to show, if space is available',\n        defaultValue: `jexl:get(feature,'name') || get(feature,'id')`,\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.nameColor\n       */\n      nameColor: {\n        type: 'color',\n        description: 'the color of the name label, if shown',\n        defaultValue: '#f0f',\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.description\n       */\n      description: {\n        type: 'string',\n        description: 'the text description to show, if space is available',\n        defaultValue: `jexl:get(feature,'note') || get(feature,'description')`,\n        contextVariable: ['feature'],\n      },\n      /**\n       * #slot labels.descriptionColor\n       */\n      descriptionColor: {\n        type: 'color',\n        description: 'the color of the description, if shown',\n        defaultValue: 'blue',\n        contextVariable: ['feature'],\n      },\n\n      /**\n       * #slot labels.fontSize\n       */\n      fontSize: {\n        type: 'number',\n        description:\n          'height in pixels of the text to use for names and descriptions',\n        defaultValue: 12,\n        contextVariable: ['feature'],\n      },\n    }),\n\n    /**\n     * #slot\n     */\n    displayMode: {\n      type: 'stringEnum',\n      model: types.enumeration('displayMode', [\n        'normal',\n        'compact',\n        'reducedRepresentation',\n        'collapse',\n      ]),\n      description: 'Alternative display modes',\n      defaultValue: 'normal',\n    },\n\n    /**\n     * #slot\n     */\n    maxFeatureGlyphExpansion: {\n      type: 'number',\n      description:\n        \"maximum number of pixels on each side of a feature's bounding coordinates that a glyph is allowed to use\",\n      defaultValue: 500,\n    },\n\n    /**\n     * #slot\n     */\n    maxHeight: {\n      type: 'integer',\n      description: 'the maximum height to be used in a svg rendering',\n      defaultValue: 1200,\n    },\n\n    /**\n     * #slot\n     */\n    subParts: {\n      type: 'string',\n      description: 'subparts for a glyph',\n      defaultValue: 'CDS,UTR,five_prime_UTR,three_prime_UTR',\n    },\n\n    /**\n     * #slot\n     */\n    impliedUTRs: {\n      type: 'boolean',\n      description: 'imply UTR from the exon and CDS differences',\n      defaultValue: false,\n    },\n    /**\n     * #slot\n     */\n    transcriptTypes: {\n      type: 'stringArray',\n      defaultValue: ['mRNA', 'transcript', 'primary_transcript'],\n    },\n    /**\n     * #slot\n     */\n    containerTypes: {\n      type: 'stringArray',\n      defaultValue: ['proteoform_orf'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default SvgFeatureRenderer\n","import Plugin from '@jbrowse/core/Plugin'\nimport BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\n\nimport {\n  ReactComponent as SvgFeatureRendererReactComponent,\n  configSchema as svgFeatureRendererConfigSchema,\n} from './SvgFeatureRenderer'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nclass SvgFeatureRenderer extends BoxRendererType {\n  supportsSVG = true\n}\n\nexport default class SVGPlugin extends Plugin {\n  name = 'SVGPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addRendererType(\n      () =>\n        new SvgFeatureRenderer({\n          name: 'SvgFeatureRenderer',\n          ReactComponent: SvgFeatureRendererReactComponent,\n          configSchema: svgFeatureRendererConfigSchema,\n          pluginManager,\n        }),\n    )\n  }\n}\n\nexport {\n  ReactComponent as SvgFeatureRendererReactComponent,\n  configSchema as svgFeatureRendererConfigSchema,\n} from './SvgFeatureRenderer'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config TrixTextSearchAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst TrixTextSearchAdapter = ConfigurationSchema(\n  'TrixTextSearchAdapter',\n  {\n    /**\n     * #slot\n     */\n    ixFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'out.ix', locationType: 'UriLocation' },\n      description: 'the location of the trix ix file',\n    },\n    /**\n     * #slot\n     */\n    ixxFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'out.ixx', locationType: 'UriLocation' },\n      description: 'the location of the trix ixx file',\n    },\n    /**\n     * #slot\n     */\n    metaFilePath: {\n      type: 'fileLocation',\n      defaultValue: { uri: 'meta.json', locationType: 'UriLocation' },\n      description: 'the location of the metadata json file for the trix index',\n    },\n    /**\n     * #slot\n     */\n    tracks: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of tracks covered by text search adapter',\n    },\n    /**\n     * #slot\n     */\n    assemblyNames: {\n      type: 'stringArray',\n      defaultValue: [],\n      description: 'List of assemblies covered by text search adapter',\n    },\n  },\n  {\n    explicitlyTyped: true,\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'textSearchAdapterId',\n  },\n)\n\nexport default TrixTextSearchAdapter\n","import Plugin from '@jbrowse/core/Plugin'\nimport TextSearchAdapterType from '@jbrowse/core/pluggableElementTypes/TextSearchAdapterType'\n\nimport configSchema from './TrixTextSearchAdapter/configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class TrixPlugin extends Plugin {\n  name = 'TrixPlugin'\n\n  install(pluginManager: PluginManager) {\n    pluginManager.addTextSearchAdapterType(() => {\n      return new TextSearchAdapterType({\n        name: 'TrixTextSearchAdapter',\n        displayName: 'Trix text search adapter',\n        configSchema,\n        description: 'Trix text search adapter',\n        getAdapterClass: () =>\n          import('./TrixTextSearchAdapter/TrixTextSearchAdapter').then(\n            d => d.default,\n          ),\n      })\n    })\n  }\n}\n","import Alignments from '@jbrowse/plugin-alignments'\nimport Arc from '@jbrowse/plugin-arc'\nimport Authentication from '@jbrowse/plugin-authentication'\nimport Bed from '@jbrowse/plugin-bed'\nimport BreakpointSplitView from '@jbrowse/plugin-breakpoint-split-view'\nimport CircularView from '@jbrowse/plugin-circular-view'\nimport ComparativeAdapters from '@jbrowse/plugin-comparative-adapters'\nimport Config from '@jbrowse/plugin-config'\nimport DataManagement from '@jbrowse/plugin-data-management'\nimport DotplotView from '@jbrowse/plugin-dotplot-view'\nimport GCContent from '@jbrowse/plugin-gccontent'\nimport Gff3 from '@jbrowse/plugin-gff3'\nimport GridBookmarkPlugin from '@jbrowse/plugin-grid-bookmark'\nimport GtfPlugin from '@jbrowse/plugin-gtf'\nimport HicPlugin from '@jbrowse/plugin-hic'\nimport JobsManagementPlugin from '@jbrowse/plugin-jobs-management'\nimport LegacyJBrowse from '@jbrowse/plugin-legacy-jbrowse'\nimport LinearComparativeView from '@jbrowse/plugin-linear-comparative-view'\nimport LinearGenomeView from '@jbrowse/plugin-linear-genome-view'\nimport Lollipop from '@jbrowse/plugin-lollipop'\nimport Menus from '@jbrowse/plugin-menus'\nimport RDF from '@jbrowse/plugin-rdf'\nimport Sequence from '@jbrowse/plugin-sequence'\nimport SpreadsheetViewPlugin from '@jbrowse/plugin-spreadsheet-view'\nimport SvInspectorPlugin from '@jbrowse/plugin-sv-inspector'\nimport SVG from '@jbrowse/plugin-svg'\nimport TrixPlugin from '@jbrowse/plugin-trix'\nimport Variants from '@jbrowse/plugin-variants'\nimport Wiggle from '@jbrowse/plugin-wiggle'\n\nconst corePlugins = [\n  SVG,\n  LinearGenomeView,\n  Alignments,\n  Authentication,\n  Bed,\n  CircularView,\n  Config,\n  DataManagement,\n  DotplotView,\n  GtfPlugin,\n  Gff3,\n  JobsManagementPlugin,\n  LegacyJBrowse,\n  LinearComparativeView,\n  Lollipop,\n  Menus,\n  RDF,\n  Sequence,\n  Variants,\n  Wiggle,\n  GCContent,\n  SpreadsheetViewPlugin,\n  SvInspectorPlugin,\n  BreakpointSplitView,\n  HicPlugin,\n  TrixPlugin,\n  GridBookmarkPlugin,\n  ComparativeAdapters,\n  Arc,\n]\n\nexport default corePlugins\n","import {\n  getSnapshot,\n  getType,\n  isArrayType,\n  isLateType,\n  isMapType,\n  isModelType,\n  isOptionalType,\n  isStateTreeNode,\n  isType,\n  isUnionType,\n} from 'mobx-state-tree'\n\nimport {\n  getDefaultValue,\n  getSubType,\n  getUnionSubTypes,\n  resolveLateType,\n} from '../util/mst-reflection'\n\nimport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  ConfigurationSchemaForModel,\n  ConfigurationSlotName,\n} from './types'\n\n/**\n * given a configuration model (an instance of a ConfigurationSchema),\n * read the configuration variable at the given path\n *\n * @param model - instance of ConfigurationSchema\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *  will be sent to each of the slotNames\n */\nexport function readConfObject<CONFMODEL extends AnyConfigurationModel>(\n  confObject: CONFMODEL,\n  slotPath?:\n    | ConfigurationSlotName<ConfigurationSchemaForModel<CONFMODEL>>\n    | string[],\n  args: Record<string, unknown> = {},\n): any {\n  if (!slotPath) {\n    return structuredClone(getSnapshot(confObject))\n  } else if (typeof slotPath === 'string') {\n    let slot = confObject[slotPath]\n    // check for the subconf being a map if we don't find it immediately\n    if (\n      !slot &&\n      isStateTreeNode(confObject) &&\n      isMapType(getType(confObject))\n    ) {\n      slot = confObject.get(slotPath)\n    }\n    if (!slot) {\n      return undefined\n      // if we want to be very strict about config slots, we could uncomment the below\n      // instead of returning undefined\n      //\n      // const modelType = getType(model)\n      // const schemaType = model.configuration && getType(model.configuration)\n      // throw new Error(\n      //   `no slot \"${slotName}\" found in ${modelType.name} configuration (${\n      //     schemaType.name\n      //   })`,\n      // )\n    } else {\n      const val = slot.expr ? slot.expr.evalSync(args) : slot\n      return isStateTreeNode(val)\n        ? JSON.parse(JSON.stringify(getSnapshot(val)))\n        : val\n    }\n  } else if (Array.isArray(slotPath)) {\n    const slotName = slotPath[0]!\n    if (slotPath.length > 1) {\n      const newPath = slotPath.slice(1)\n      let subConf = confObject[slotName]\n      // check for the subconf being a map if we don't find it immediately\n      if (\n        !subConf &&\n        isStateTreeNode(confObject) &&\n        isMapType(getType(confObject))\n      ) {\n        subConf = confObject.get(slotName)\n      }\n      return subConf ? readConfObject(subConf, newPath, args) : undefined\n    }\n    return readConfObject(\n      confObject,\n      slotName as ConfigurationSlotName<ConfigurationSchemaForModel<CONFMODEL>>,\n      args,\n    )\n  }\n  throw new TypeError('slotPath must be a string or array')\n}\n\n/**\n * helper method for readConfObject, reads the config from a mst model\n *\n * @param model - object containing a 'configuration' member\n * @param slotPaths - array of paths to read\n * @param args - extra arguments e.g. for a feature callback,\n *   will be sent to each of the slotNames\n */\nexport function getConf<CONFMODEL extends AnyConfigurationModel>(\n  model: { configuration: CONFMODEL },\n  slotPath?: Parameters<typeof readConfObject<CONFMODEL>>[1],\n  args?: Parameters<typeof readConfObject<CONFMODEL>>[2],\n) {\n  const { configuration } = model\n  if (isConfigurationModel(configuration)) {\n    return readConfObject<CONFMODEL>(configuration, slotPath, args)\n  }\n  throw new TypeError('cannot getConf on this model, it has no configuration')\n}\n\n/**\n * given a union of explicitly typed configuration schema types,\n * extract an array of the type names contained in the union\n *\n * @param unionType -\n * @returns Array of type names contained in the union\n */\nexport function getTypeNamesFromExplicitlyTypedUnion(maybeUnionType: unknown) {\n  if (isType(maybeUnionType)) {\n    maybeUnionType = resolveLateType(maybeUnionType)\n    // @ts-expect-error\n    if (isUnionType(maybeUnionType)) {\n      const typeNames: string[] = []\n      getUnionSubTypes(maybeUnionType).forEach(type => {\n        type = resolveLateType(type)\n        let typeName = getTypeNamesFromExplicitlyTypedUnion(type)\n        if (!typeName.length) {\n          const def = getDefaultValue(type)\n          typeName = [def.type]\n        }\n        if (!typeName[0]) {\n          // debugger\n          throw new Error(`invalid config schema type ${type}`)\n        }\n        typeNames.push(...typeName)\n      })\n      return typeNames\n    }\n  }\n  return []\n}\n\nexport function isBareConfigurationSchemaType(\n  thing: unknown,\n): thing is AnyConfigurationSchemaType {\n  if (isType(thing)) {\n    if (\n      isModelType(thing) &&\n      ('isJBrowseConfigurationSchema' in thing ||\n        thing.name.includes('ConfigurationSchema'))\n    ) {\n      return true\n    }\n    // if it's a late type, assume its a config schema\n    if (isLateType(thing)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function isConfigurationSchemaType(\n  thing: unknown,\n): thing is AnyConfigurationSchemaType {\n  // written as a series of if-statements instead of a big logical because this\n  // construction gives much better debugging backtraces.\n\n  // also, note that the order of these statements matters, because for example\n  // some union types are also optional types\n\n  if (!isType(thing)) {\n    return false\n  } else if (isBareConfigurationSchemaType(thing)) {\n    return true\n  } else if (isUnionType(thing)) {\n    return getUnionSubTypes(thing).every(\n      t => isConfigurationSchemaType(t) || t.name === 'undefined',\n    )\n  } else if (\n    isOptionalType(thing) &&\n    isConfigurationSchemaType(getSubType(thing))\n  ) {\n    return true\n  } else if (\n    isArrayType(thing) &&\n    isConfigurationSchemaType(getSubType(thing))\n  ) {\n    return true\n  } else if (isMapType(thing) && isConfigurationSchemaType(getSubType(thing))) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport function isConfigurationModel(\n  thing: unknown,\n): thing is AnyConfigurationModel {\n  return isStateTreeNode(thing) && isConfigurationSchemaType(getType(thing))\n}\n\nexport function isConfigurationSlotType(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'isJBrowseConfigurationSlot' in thing\n  )\n}\n","export default abstract class PluggableElementBase {\n  name: string\n  maybeDisplayName?: string\n\n  constructor(args?: { name?: string; displayName?: string }) {\n    this.name = args?.name || 'UNKNOWN'\n    this.maybeDisplayName = args?.displayName\n  }\n\n  get displayName() {\n    return this.maybeDisplayName || this.name\n  }\n}\n","import { Alert, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { AlertColor } from '@mui/material'\n\nconst useStyles = makeStyles()({\n  ellipses: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n})\n\nexport default function BlockMsg({\n  message,\n  severity,\n  action,\n}: {\n  message: string\n  severity?: AlertColor\n  action?: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  return (\n    <Alert\n      severity={severity}\n      action={action}\n      classes={{\n        message: classes.ellipses,\n      }}\n      onMouseDown={event => {\n        event.stopPropagation()\n      }}\n    >\n      <Tooltip title={message}>\n        <div>{message}</div>\n      </Tooltip>\n    </Alert>\n  )\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport {\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { linearBasicDisplayModelFactory } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel LinearVariantDisplay\n * similar to basic display, but provides custom widget on feature click\n * extends\n *\n * - [LinearBasicDisplay](../linearbasicdisplay)\n */\nexport default function stateModelFactory(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearVariantDisplay',\n      linearBasicDisplayModelFactory(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearVariantDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      async selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const { rpcManager } = session\n          const sessionId = getRpcSessionId(self)\n          const track = getContainingTrack(self)\n          const view = getContainingView(self)\n          const adapterConfig = getConf(track, 'adapter')\n          const descriptions = await rpcManager.call(\n            sessionId,\n            'CoreGetMetadata',\n            {\n              adapterConfig,\n            },\n          )\n          session.showWidget(\n            session.addWidget('VariantFeatureWidget', 'variantFeature', {\n              featureData: feature.toJSON(),\n              view,\n              track,\n              descriptions,\n            }),\n          )\n        }\n\n        session.setSelection(feature)\n      },\n    }))\n}\n\nexport type LinearVariantDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type LinearVariantDisplayModel = Instance<LinearVariantDisplayStateModel>\n","import { lazy } from 'react'\n\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { stopStopToken } from '@jbrowse/core/util/stopToken'\nimport { linearBareDisplayStateModelFactory } from '@jbrowse/plugin-linear-genome-view'\nimport FilterListIcon from '@mui/icons-material/FilterList'\nimport HeightIcon from '@mui/icons-material/Height'\nimport SplitscreenIcon from '@mui/icons-material/Splitscreen'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport deepEqual from 'fast-deep-equal'\nimport { types } from 'mobx-state-tree'\n\nimport type { SampleInfo, Source } from '../shared/types'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst SetColorDialog = lazy(() => import('./components/SetColorDialog'))\nconst MAFFilterDialog = lazy(() => import('./components/MAFFilterDialog'))\nconst ClusterDialog = lazy(() => import('./components/ClusterDialog'))\nconst SetRowHeightDialog = lazy(() => import('./components/SetRowHeightDialog'))\n\n/**\n * #stateModel MultiVariantBaseModel\n * extends\n * - [LinearBareDisplay](../linearbaredisplay)\n */\nexport default function MultiVariantBaseModelF(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearVariantMatrixDisplay',\n      linearBareDisplayStateModelFactory(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearVariantMatrixDisplay'),\n\n        /**\n         * #property\n         */\n        layout: types.optional(types.frozen<Source[]>(), []),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n\n        /**\n         * #property\n         */\n        minorAlleleFrequencyFilter: types.optional(types.number, 0.1),\n\n        /**\n         * #property\n         */\n        showSidebarLabelsSetting: true,\n\n        /**\n         * #property\n         */\n        renderingMode: types.optional(types.string, 'alleleCount'),\n\n        /**\n         * #property\n         * used only if autoHeight is false\n         */\n        rowHeightSetting: types.optional(types.number, 8),\n\n        /**\n         * #property\n         * used only if autoHeight is false\n         */\n        autoHeight: true,\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      sourcesLoadingStopToken: undefined as string | undefined,\n      /**\n       * #volatile\n       */\n      featureUnderMouseVolatile: undefined as Feature | undefined,\n      /**\n       * #volatile\n       */\n      sourcesVolatile: undefined as Source[] | undefined,\n      /**\n       * #volatile\n       */\n      featuresVolatile: undefined as Feature[] | undefined,\n      /**\n       * #volatile\n       */\n      hasPhased: false,\n      /**\n       * #volatile\n       */\n      sampleInfo: undefined as undefined | Record<string, SampleInfo>,\n      /**\n       * #volatile\n       */\n      hoveredGenotype: undefined as string | undefined,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setRowHeight(arg: number) {\n        self.rowHeightSetting = arg\n      },\n      /**\n       * #action\n       */\n      setHoveredGenotype(arg: string) {\n        self.hoveredGenotype = arg\n      },\n      /**\n       * #action\n       */\n      setFeatures(f: Feature[]) {\n        self.featuresVolatile = f\n      },\n      /**\n       * #action\n       */\n      setLayout(layout: Source[]) {\n        self.layout = layout\n      },\n      /**\n       * #action\n       */\n      clearLayout() {\n        self.layout = []\n      },\n      /**\n       * #action\n       */\n      setSourcesLoading(str: string) {\n        if (self.sourcesLoadingStopToken) {\n          stopStopToken(self.sourcesLoadingStopToken)\n        }\n        self.sourcesLoadingStopToken = str\n      },\n\n      /**\n       * #action\n       */\n      setSources(sources: Source[]) {\n        if (!deepEqual(sources, self.sourcesVolatile)) {\n          self.sourcesVolatile = sources\n        }\n      },\n      /**\n       * #action\n       */\n      setMafFilter(arg: number) {\n        self.minorAlleleFrequencyFilter = arg\n      },\n      /**\n       * #action\n       */\n      setShowSidebarLabels(arg: boolean) {\n        self.showSidebarLabelsSetting = arg\n      },\n      /**\n       * #action\n       */\n      setPhasedMode(arg: string) {\n        self.renderingMode = arg\n      },\n      /**\n       * #action\n       */\n      setAutoHeight(arg: boolean) {\n        self.autoHeight = arg\n      },\n      /**\n       * #action\n       */\n      setHasPhased(arg: boolean) {\n        self.hasPhased = arg\n      },\n      /**\n       * #action\n       */\n      setSampleInfo(arg: Record<string, SampleInfo>) {\n        if (!deepEqual(arg, self.sampleInfo)) {\n          self.sampleInfo = arg\n        }\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get preSources() {\n        return self.layout.length ? self.layout : self.sourcesVolatile\n      },\n      /**\n       * #getter\n       */\n      get sources() {\n        if (this.preSources) {\n          const rows = []\n          const sources = Object.fromEntries(\n            self.sourcesVolatile?.map(s => [s.name, s]) || [],\n          )\n          for (const row of this.preSources) {\n            // make separate rows for each haplotype in phased mode\n            if (self.renderingMode === 'phased') {\n              const info = self.sampleInfo?.[row.name]\n              if (info?.isPhased) {\n                const ploidy = info.maxPloidy\n                for (let i = 0; i < ploidy; i++) {\n                  const id = `${row.name} HP${i}`\n                  rows.push({\n                    ...sources[row.name],\n                    ...row,\n                    label: id,\n                    HP: i,\n                    id: id,\n                  })\n                }\n              }\n            }\n            // non-phased mode does not make separate rows\n            else {\n              rows.push({\n                ...sources[row.name],\n                ...row,\n                label: row.name,\n                id: row.name,\n              })\n            }\n          }\n          return rows\n        }\n        return undefined\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n\n      return {\n        /**\n         * #getter\n         */\n        get rowHeight() {\n          const { sources, autoHeight, rowHeightSetting, height } = self\n          return autoHeight ? height / (sources?.length || 1) : rowHeightSetting\n        },\n        /**\n         * #method\n         */\n        adapterProps() {\n          const superProps = superRenderProps()\n          return {\n            ...superProps,\n            rpcDriverName: self.rpcDriverName,\n            displayModel: self,\n            config: self.rendererConfig,\n          }\n        },\n        /**\n         * #method\n         */\n        trackMenuItems() {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Show sidebar labels',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showSidebarLabelsSetting,\n              onClick: () => {\n                self.setShowSidebarLabels(!self.showSidebarLabelsSetting)\n              },\n            },\n\n            {\n              label: 'Row height',\n              icon: HeightIcon,\n              subMenu: [\n                {\n                  label: 'Manually set row height',\n                  disabled: self.autoHeight,\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SetRowHeightDialog,\n                      {\n                        model: self,\n                        handleClose,\n                      },\n                    ])\n                  },\n                },\n                {\n                  label: 'Auto-adjust to display height',\n                  type: 'checkbox',\n                  checked: self.autoHeight,\n                  onClick: () => {\n                    self.setAutoHeight(!self.autoHeight)\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Rendering mode',\n              icon: SplitscreenIcon,\n              subMenu: [\n                {\n                  label: 'Allele count',\n                  type: 'radio',\n                  checked: self.renderingMode === 'alleleCount',\n                  onClick: () => {\n                    self.setPhasedMode('alleleCount')\n                  },\n                },\n                {\n                  label: `Phased${\n                    !self.hasPhased\n                      ? ' (disabled, no phased variants found)'\n                      : ''\n                  }`,\n                  disabled: !self.hasPhased,\n                  checked: self.renderingMode === 'phased',\n                  type: 'radio',\n                  onClick: () => {\n                    self.setPhasedMode('phased')\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Filter by',\n              icon: FilterListIcon,\n              subMenu: [\n                {\n                  label: 'Minor allele frequency',\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      MAFFilterDialog,\n                      {\n                        model: self,\n                        handleClose,\n                      },\n                    ])\n                  },\n                },\n              ],\n            },\n            {\n              label: 'Cluster by genotype',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  ClusterDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n            {\n              label: 'Edit group colors/arrangement...',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetColorDialog,\n                  {\n                    model: self,\n                    handleClose,\n                  },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n    .views(self => ({\n      get canDisplayLabels() {\n        return self.rowHeight > 8 && self.showSidebarLabelsSetting\n      },\n      /**\n       * #getter\n       */\n      get totalHeight() {\n        return self.rowHeight * (self.sources?.length || 1)\n      },\n    }))\n    .views(self => ({\n      renderProps() {\n        const superProps = self.adapterProps()\n        return {\n          ...superProps,\n          notReady:\n            superProps.notReady || !self.sources || !self.featuresVolatile,\n          height: self.height,\n          totalHeight: self.totalHeight,\n          renderingMode: self.renderingMode,\n          minorAlleleFrequencyFilter: self.minorAlleleFrequencyFilter,\n          rowHeight: self.rowHeight,\n          sources: self.sources,\n          scrollTop: self.scrollTop,\n        }\n      },\n    }))\n}\n\nexport type MultiVariantBaseStateModel = ReturnType<\n  typeof MultiVariantBaseModelF\n>\nexport type MultiVariantBaseModel = Instance<MultiVariantBaseStateModel>\n","import { getSession } from '@jbrowse/core/util'\nimport { isAlive, types } from 'mobx-state-tree'\n\nimport MultiVariantBaseModelF from '../shared/MultiVariantBaseModel'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { ExportSvgDisplayOptions } from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel MultiLinearVariantDisplay\n * extends\n * - [MultiVariantBaseModel](../linearbaredisplay)\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'MultiLinearVariantDisplay',\n      MultiVariantBaseModelF(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('MultiLinearVariantDisplay'),\n        /**\n         * #property\n         * used only if autoHeight is false\n         */\n        rowHeightSetting: types.optional(types.number, 11),\n        /**\n         * #property\n         */\n        minorAlleleFrequencyFilter: types.optional(types.number, 0),\n        /**\n         * #property\n         */\n        autoHeight: false,\n      }),\n    )\n    .views(() => ({\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return 'MultiVariantRenderer'\n      },\n    }))\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n      return {\n        afterAttach() {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          ;(async () => {\n            try {\n              const { getMultiVariantSourcesAutorun } = await import(\n                '../getMultiVariantSourcesAutorun'\n              )\n              const { getMultiVariantFeaturesAutorun } = await import(\n                '../getMultiVariantFeaturesAutorun'\n              )\n\n              getMultiVariantSourcesAutorun(self)\n              getMultiVariantFeaturesAutorun(self)\n            } catch (e) {\n              if (isAlive(self)) {\n                console.error(e)\n                getSession(self).notifyError(`${e}`, e)\n              }\n            }\n          })()\n        },\n\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type MultiLinearVariantDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type MultiLinearVariantDisplayModel =\n  Instance<MultiLinearVariantDisplayStateModel>\n\nexport default stateModelFactory\n","import { getContainingView } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport MultiVariantTooltip from '../../shared/components/MultiVariantTooltip'\n\nimport type { MultiLinearVariantMatrixDisplayModel } from '../model'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nconst useStyles = makeStyles()({\n  cursor: {\n    pointerEvents: 'none',\n    zIndex: 800,\n    position: 'relative',\n  },\n})\n\nconst Crosshair = observer(function ({\n  mouseX,\n  mouseY,\n  model,\n}: {\n  mouseX: number\n  mouseY: number\n  model: MultiLinearVariantMatrixDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { hoveredGenotype, lineZoneHeight, totalHeight, rowHeight, sources } =\n    model\n  const { width } = getContainingView(model) as LinearGenomeViewModel\n  const source = sources?.[Math.floor((mouseY - lineZoneHeight) / rowHeight)]\n  const yoff = mouseY - lineZoneHeight\n  return source ? (\n    <>\n      <svg\n        className={classes.cursor}\n        width={width}\n        height={totalHeight}\n        style={{\n          top: lineZoneHeight,\n        }}\n      >\n        <line x1={0} x2={width} y1={yoff} y2={yoff} stroke=\"black\" />\n        <line x1={mouseX} x2={mouseX} y1={0} y2={totalHeight} stroke=\"black\" />\n      </svg>\n      <MultiVariantTooltip source={{ ...source, hoveredGenotype }} />\n    </>\n  ) : null\n})\n\nexport default Crosshair\n","import { useRef, useState } from 'react'\n\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\n\nimport Crosshair from './Crosshair'\nimport LinesConnectingMatrixToGenomicPosition from './LinesConnectingMatrixToGenomicPosition'\nimport LegendBar from '../../shared/components/LegendBar'\n\nimport type { MultiLinearVariantMatrixDisplayModel } from '../model'\n\nconst MultiLinearVariantMatrixDisplayComponent = observer(function (props: {\n  model: MultiLinearVariantMatrixDisplayModel\n}) {\n  const { model } = props\n  const { lineZoneHeight } = model\n  const ref = useRef<HTMLDivElement>(null)\n  const [mouseY, setMouseY] = useState<number>()\n  const [mouseX, setMouseX] = useState<number>()\n\n  return (\n    <div\n      ref={ref}\n      onMouseMove={event => {\n        const rect = ref.current?.getBoundingClientRect()\n        const top = rect?.top || 0\n        const left = rect?.left || 0\n        setMouseY(event.clientY - top)\n        setMouseX(event.clientX - left)\n      }}\n      onMouseLeave={() => {\n        setMouseY(undefined)\n        setMouseX(undefined)\n      }}\n    >\n      <div style={{ position: 'relative' }}>\n        <LinesConnectingMatrixToGenomicPosition model={model} />\n        <div style={{ position: 'absolute', top: lineZoneHeight }}>\n          <LegendBar model={model} />\n          <BaseLinearDisplayComponent {...props} />\n        </div>\n      </div>\n\n      {mouseX && mouseY && mouseY > lineZoneHeight ? (\n        <Crosshair mouseX={mouseX} mouseY={mouseY} model={model} />\n      ) : null}\n    </div>\n  )\n})\nexport default MultiLinearVariantMatrixDisplayComponent\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config LinearVariantMatrixRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst LinearVariantMatrixRenderer = ConfigurationSchema(\n  'LinearVariantMatrixRenderer',\n  {},\n  { explicitlyTyped: true },\n)\nexport default LinearVariantMatrixRenderer\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport configSchema from '../MultiLinearVariantMatrixRenderer/configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearVariantMatrixDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearVariantMatrixDisplay',\n    {\n      /**\n       * #slot\n       * MultiLinearVariantMatrixRenderer\n       */\n      renderer: configSchema,\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 250,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { clamp, getSession } from '@jbrowse/core/util'\nimport { isAlive, types } from 'mobx-state-tree'\n\nimport MultiVariantBaseModelF from '../shared/MultiVariantBaseModel'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { ExportSvgDisplayOptions } from '@jbrowse/plugin-linear-genome-view'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel LinearVariantMatrixDisplay\n * extends\n * - [MultiVariantBaseModel](../multivariantbasemodel)\n */\nexport default function stateModelFactory(\n  configSchema: AnyConfigurationSchemaType,\n) {\n  return types\n    .compose(\n      'LinearVariantMatrixDisplay',\n      MultiVariantBaseModelF(configSchema),\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearVariantMatrixDisplay'),\n\n        /**\n         * #property\n         */\n        rowHeightSetting: types.optional(types.number, 1),\n        /**\n         * #property\n         */\n        lineZoneHeight: 20,\n      }),\n    )\n    .views(self => ({\n      get nrow() {\n        return self.sources?.length || 1\n      },\n      /**\n       * #getter\n       */\n      get blockType() {\n        return 'dynamicBlocks'\n      },\n      /**\n       * #getter\n       */\n      get totalHeight() {\n        return self.autoHeight\n          ? self.height - self.lineZoneHeight\n          : this.nrow * self.rowHeightSetting\n      },\n\n      /**\n       * #getter\n       */\n      get rowHeight() {\n        return self.autoHeight\n          ? self.totalHeight / this.nrow\n          : self.rowHeightSetting\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #method\n       */\n      renderProps() {\n        const superProps = self.adapterProps()\n        return {\n          ...superProps,\n          notReady:\n            superProps.notReady || !self.sources || !self.featuresVolatile,\n          renderingMode: self.renderingMode,\n          minorAlleleFrequencyFilter: self.minorAlleleFrequencyFilter,\n          height: self.totalHeight,\n          sources: self.sources,\n        }\n      },\n      /**\n       * #getter\n       */\n      get canDisplayLabels() {\n        return self.rowHeight > 8 && self.showSidebarLabelsSetting\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLineZoneHeight(n: number) {\n        self.lineZoneHeight = clamp(n, 10, 1000)\n        return self.lineZoneHeight\n      },\n    }))\n    .actions(self => {\n      const { renderSvg: superRenderSvg } = self\n      return {\n        /**\n         * #action\n         */\n        setLineZoneHeight(n: number) {\n          self.lineZoneHeight = clamp(n, 10, 1000)\n          return self.lineZoneHeight\n        },\n        afterAttach() {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          ;(async () => {\n            try {\n              const { getMultiVariantSourcesAutorun } = await import(\n                '../getMultiVariantSourcesAutorun'\n              )\n              const { getMultiVariantFeaturesAutorun } = await import(\n                '../getMultiVariantFeaturesAutorun'\n              )\n\n              getMultiVariantSourcesAutorun(self)\n              getMultiVariantFeaturesAutorun(self)\n            } catch (e) {\n              if (isAlive(self)) {\n                console.error(e)\n                getSession(self).notifyError(`${e}`, e)\n              }\n            }\n          })()\n        },\n\n        /**\n         * #action\n         */\n        async renderSvg(opts: ExportSvgDisplayOptions) {\n          const { renderSvg } = await import('./renderSvg')\n          return renderSvg(self, opts, superRenderSvg)\n        },\n      }\n    })\n}\n\nexport type MultiLinearVariantMatrixDisplayStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type MultiLinearVariantMatrixDisplayModel =\n  Instance<MultiLinearVariantMatrixDisplayStateModel>\n","import BoxRendererType from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\nimport { SimpleFeature, renderToAbstractCanvas } from '@jbrowse/core/util'\n\nimport type { RenderArgsDeserialized } from './types'\nimport type { Feature } from '@jbrowse/core/util'\nexport default class LinearVariantMatrixRenderer extends BoxRendererType {\n  supportsSVG = true\n\n  async render(renderProps: RenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { height, sources, regions, bpPerPx } = renderProps\n    const region = regions[0]!\n    const { end, start } = region\n\n    const width = (end - start) / bpPerPx\n    const { makeImageData } = await import('./makeImageData')\n    // @ts-expect-error\n    const { mafs, ...res } = await renderToAbstractCanvas(\n      width,\n      height,\n      renderProps,\n      ctx =>\n        makeImageData({\n          ctx,\n          canvasWidth: width,\n          canvasHeight: height,\n          renderArgs: {\n            ...renderProps,\n            features,\n            sources,\n          },\n        }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...res,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...res,\n      features: new Map(),\n      simplifiedFeatures: mafs.map(\n        ({ feature }: { feature: Feature }) =>\n          new SimpleFeature({\n            id: feature.id(),\n            data: {\n              start: feature.get('start'),\n              end: feature.get('end'),\n              refName: feature.get('refName'),\n            },\n          }),\n      ),\n      height,\n      width,\n    }\n  }\n}\n\nexport type {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsDeserialized,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/BoxRendererType'\n","import { useRef } from 'react'\n\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nconst LinearVariantMatrixRendering = observer(function (props: {\n  width: number\n  height: number\n  displayModel: any\n  arr: string[]\n}) {\n  const { arr, width, height, displayModel } = props\n  const ref = useRef<HTMLDivElement>(null)\n\n  function getFeatureUnderMouse(eventClientX: number, eventClientY: number) {\n    // calculates feature under mouse\n    let offsetX = 0\n    let offsetY = 0\n    if (ref.current) {\n      const r = ref.current.getBoundingClientRect()\n      offsetX = eventClientX - r.left\n      offsetY = eventClientY - r.top\n    }\n\n    const dimY = arr.length\n    const dimX = arr[0]?.length || 0\n    return arr[Math.floor((offsetX / width) * dimY)]?.[\n      Math.floor((offsetY / height) * dimX)\n    ]\n  }\n  return (\n    <div\n      ref={ref}\n      onMouseMove={e =>\n        displayModel.setHoveredGenotype?.(\n          getFeatureUnderMouse(e.clientX, e.clientY),\n        )\n      }\n      onMouseLeave={() => {\n        displayModel.setHoveredGenotype?.(undefined)\n      }}\n      onMouseOut={() => {\n        displayModel.setHoveredGenotype?.(undefined)\n      }}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height,\n      }}\n    >\n      <PrerenderedCanvas {...props} />\n    </div>\n  )\n})\n\nexport default LinearVariantMatrixRendering\n","import FeatureRendererType from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\nimport { renderToAbstractCanvas } from '@jbrowse/core/util'\n\nimport type { MultiRenderArgsDeserialized } from './types'\nimport type { Feature } from '@jbrowse/core/util'\n\nexport default class MultiVariantBaseRenderer extends FeatureRendererType {\n  supportsSVG = true\n\n  async render(renderProps: MultiRenderArgsDeserialized) {\n    const features = await this.getFeatures(renderProps)\n    const { height, regions, bpPerPx } = renderProps\n    const region = regions[0]!\n    const width = (region.end - region.start) / bpPerPx\n\n    const { makeImageData } = await import('./makeImageData')\n\n    const rest = await renderToAbstractCanvas(width, height, renderProps, ctx =>\n      makeImageData(ctx, {\n        ...renderProps,\n        features,\n      }),\n    )\n\n    const results = await super.render({\n      ...renderProps,\n      ...rest,\n      features,\n      height,\n      width,\n    })\n\n    return {\n      ...results,\n      ...rest,\n      features: new Map<string, Feature>(),\n      height,\n      width,\n      containsNoTransferables: true,\n    }\n  }\n}\n\nexport type {\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsDeserialized,\n  ResultsSerialized,\n} from '@jbrowse/core/pluggableElementTypes/renderers/FeatureRendererType'\n","import { useMemo, useRef } from 'react'\n\nimport { PrerenderedCanvas } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport RBush from 'rbush'\n\nimport type { Source } from '../../shared/types'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { Region } from '@jbrowse/core/util/types'\n\nconst MultiVariantRendering = observer(function (props: {\n  regions: Region[]\n  features: Map<string, Feature>\n  bpPerPx: number\n  width: number\n  height: number\n  sources: Source[]\n  scrollTop: number\n  totalHeight: number\n  rbush: RBush<{ genotype: string }>\n  displayModel: any\n  onMouseLeave?: (event: React.MouseEvent) => void\n  onMouseMove?: (event: React.MouseEvent, arg?: Feature) => void\n  onFeatureClick?: (event: React.MouseEvent, arg?: Feature) => void\n}) {\n  const { totalHeight, scrollTop } = props\n  const { rbush, displayModel } = props\n  const ref = useRef<HTMLDivElement>(null)\n  const rbush2 = useMemo(\n    () => new RBush<{ genotype: string }>().fromJSON(rbush),\n    [rbush],\n  )\n\n  function getFeatureUnderMouse(eventClientX: number, eventClientY: number) {\n    let offsetX = 0\n    let offsetY = 0\n    if (ref.current) {\n      const r = ref.current.getBoundingClientRect()\n      offsetX = eventClientX - r.left\n      offsetY = eventClientY - r.top\n    }\n    const ret = rbush2.search({\n      minX: offsetX,\n      maxX: offsetX + 3,\n      minY: offsetY,\n      maxY: offsetY + 3,\n    })\n    return ret[0]?.genotype\n  }\n\n  return (\n    <div\n      ref={ref}\n      onMouseMove={e =>\n        displayModel.setHoveredGenotype?.(\n          getFeatureUnderMouse(e.clientX, e.clientY),\n        )\n      }\n      onMouseLeave={() => {\n        displayModel.setHoveredGenotype?.(undefined)\n      }}\n      onMouseOut={() => {\n        displayModel.setHoveredGenotype?.(undefined)\n      }}\n      style={{\n        overflow: 'visible',\n        position: 'relative',\n        height: totalHeight,\n      }}\n    >\n      <PrerenderedCanvas\n        {...props}\n        style={{\n          position: 'absolute',\n          left: 0,\n          top: scrollTop,\n        }}\n      />\n    </div>\n  )\n})\n\nexport default MultiVariantRendering\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config MultiVariantRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'MultiVariantRenderer',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    explicitlyTyped: true,\n  },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config VcfTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst SplitVcfTabixAdapter = ConfigurationSchema(\n  'SplitVcfTabixAdapter',\n  {\n    /**\n     * #slot\n     * object like {chr1:{uri:'url to file'}}\n     */\n    vcfGzLocationMap: {\n      type: 'frozen',\n      defaultValue: {},\n    },\n    /**\n     * #slot\n     * object like {chr1:{uri:'url to index'}}\n     */\n    indexLocationMap: {\n      type: 'frozen',\n      defaultValue: {},\n    },\n\n    /**\n     * #slot\n     */\n    indexType: {\n      type: 'string',\n      defaultValue: 'TBI',\n    },\n\n    /**\n     * #slot\n     */\n    samplesTsvLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/samples.tsv',\n        description:\n          'tsv with header like name\\tpopulation\\tetc. where the first column is required, and is the sample names',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default SplitVcfTabixAdapter\n","import { useState } from 'react'\n\nimport { parseBreakend } from '@gmod/vcf'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { getStrokeProps, polarToCartesian } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type { AnyRegion, Block } from './types'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\nfunction bpToRadians(block: Block, pos: number) {\n  const blockStart = block.region.elided ? 0 : block.region.start\n  const blockEnd = block.region.elided ? 0 : block.region.end\n  const bpOffset = block.flipped ? blockEnd - pos : pos - blockStart\n  return bpOffset / block.bpPerRadian + block.startRadians\n}\n\nconst Chord = observer(function Chord({\n  feature,\n  blocksForRefs,\n  radius,\n  config,\n  bezierRadius,\n  selected,\n  onClick,\n}: {\n  feature: Feature\n  blocksForRefs: Record<string, Block>\n  radius: number\n  config: AnyConfigurationModel\n  bezierRadius: number\n  selected: boolean\n  onClick: (feat: Feature, reg: AnyRegion, end: AnyRegion, evt: unknown) => void\n}) {\n  const [hovered, setHovered] = useState(false)\n  // find the blocks that our start and end points belong to\n  const startBlock = blocksForRefs[feature.get('refName')]\n  if (!startBlock) {\n    return null\n  }\n  let svType: string | undefined\n  if (feature.get('INFO')) {\n    ;[svType] = feature.get('INFO').SVTYPE || []\n  } else if (feature.get('mate')) {\n    svType = 'mate'\n  }\n  let endPosition: number\n  let endBlock: Block | undefined\n  const alt = feature.get('ALT')?.[0]\n  const bnd = alt && parseBreakend(alt)\n  const startPos = feature.get('start')\n  if (bnd) {\n    // VCF BND\n    const matePosition = bnd.MatePosition.split(':')\n    endPosition = +matePosition[1]\n    endBlock = blocksForRefs[matePosition[0]]\n  } else if (alt === '<TRA>') {\n    // VCF TRA\n    const chr2 = feature.get('INFO')?.CHR2?.[0]\n    const end = feature.get('INFO')?.END?.[0]\n    endPosition = Number.parseInt(end, 10)\n    endBlock = blocksForRefs[chr2]\n  } else if (svType === 'mate') {\n    // generic simplefeatures arcs\n    const mate = feature.get('mate')\n    const chr2 = mate.refName\n    endPosition = mate.start\n    endBlock = blocksForRefs[chr2]\n  } else {\n    endBlock = startBlock\n    endPosition = feature.get('end')\n  }\n\n  if (endBlock) {\n    const startRadians = bpToRadians(startBlock, startPos)\n    const endRadians = bpToRadians(endBlock, endPosition)\n    const startXY = polarToCartesian(radius, startRadians)\n    const endXY = polarToCartesian(radius, endRadians)\n    const controlXY = polarToCartesian(\n      bezierRadius,\n      (endRadians + startRadians) / 2,\n    )\n\n    const strokeColor = selected\n      ? readConfObject(config, 'strokeColorSelected', { feature })\n      : readConfObject(config, 'strokeColor', { feature })\n\n    const hoverStrokeColor = readConfObject(config, 'strokeColorHover', {\n      feature,\n    })\n    return (\n      <path\n        data-testid={`chord-${feature.id()}`}\n        cursor=\"crosshair\"\n        fill=\"none\"\n        d={['M', ...startXY, 'Q', ...controlXY, ...endXY].join(' ')}\n        {...getStrokeProps(hovered ? hoverStrokeColor : strokeColor)}\n        strokeWidth={hovered ? 3 : 1}\n        onClick={evt => {\n          onClick(feature, startBlock.region, endBlock.region, evt)\n        }}\n        onMouseOver={() => {\n          if (!selected) {\n            setHovered(true)\n          }\n        }}\n        onMouseOut={() => {\n          if (!selected) {\n            setHovered(false)\n          }\n        }}\n      />\n    )\n  }\n\n  return null\n})\n\nexport default Chord\n","import { useMemo } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport Chord from './Chord'\n\nimport type { AnyRegion, Block } from './types'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst StructuralVariantChordsReactComponent = observer(function ({\n  features,\n  config,\n  blockDefinitions,\n  radius,\n  bezierRadius,\n  displayModel,\n  onChordClick,\n}: {\n  features: Map<string, Feature>\n  radius: number\n  config: AnyConfigurationModel\n  displayModel?: {\n    id: string\n    selectedFeatureId: string\n  }\n  blockDefinitions: Block[]\n  bezierRadius: number\n  onChordClick: (\n    feature: Feature,\n    reg: AnyRegion,\n    endBlock: AnyRegion,\n    evt: unknown,\n  ) => void\n}) {\n  const { selectedFeatureId } = displayModel || {}\n  const blocksForRefsMemo = useMemo(() => {\n    const blocksForRefs = {} as Record<string, Block>\n    for (const block of blockDefinitions) {\n      const regions = block.region.elided\n        ? block.region.regions\n        : [block.region]\n      for (const region of regions) {\n        blocksForRefs[region.refName] = block\n      }\n    }\n    return blocksForRefs\n  }, [blockDefinitions])\n\n  return (\n    <g data-testid=\"structuralVariantChordRenderer\">\n      {[...features.values()].map(feature => {\n        const id = feature.id()\n        const selected = String(selectedFeatureId) === String(id)\n        return (\n          <Chord\n            key={id}\n            feature={feature}\n            config={config}\n            radius={radius}\n            bezierRadius={bezierRadius}\n            blocksForRefs={blocksForRefsMemo}\n            selected={selected}\n            onClick={onChordClick}\n          />\n        )\n      })}\n    </g>\n  )\n})\n\nexport default StructuralVariantChordsReactComponent\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config StructuralVariantChordRenderer\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'StructuralVariantChordRenderer',\n  {\n    /**\n     * #slot\n     */\n    strokeColor: {\n      type: 'color',\n      description: 'the line color of each arc',\n      defaultValue: 'rgba(255,133,0,0.32)',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    strokeColorSelected: {\n      type: 'color',\n      description: 'the line color of an arc that has been selected',\n      defaultValue: 'black',\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     */\n    strokeColorHover: {\n      type: 'color',\n      description:\n        'the line color of an arc that is being hovered over with the mouse',\n      defaultValue: '#555',\n      contextVariable: ['feature'],\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nexport const configSchema = ConfigurationSchema('VariantFeatureWidget', {})\n","import { stateModelFactory as baseModelFactory } from '@jbrowse/core/BaseFeatureWidget'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\nexport function stateModelFactory(pluginManager: PluginManager) {\n  const baseModel = baseModelFactory(pluginManager)\n  return types.compose(\n    baseModel,\n    types.model('VariantFeatureWidget', {\n      /**\n       * #property\n       */\n\n      type: types.literal('VariantFeatureWidget'),\n      /**\n       * #property\n       */\n      descriptions: types.frozen(),\n    }),\n  )\n}\n\nexport type VariantFeatureWidgetStateModel = ReturnType<\n  typeof stateModelFactory\n>\nexport type VariantFeatureWidgetModel = Instance<VariantFeatureWidgetStateModel>\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\nimport { firstValueFrom, toArray } from 'rxjs'\n\nimport { getFeaturesThatPassMinorAlleleFrequencyFilter } from '../shared/minorAlleleFrequencyUtils'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\nexport class MultiVariantGetGenotypeMatrix extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'MultiVariantGetGenotypeMatrix'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const {\n      sources,\n      minorAlleleFrequencyFilter,\n      regions,\n      adapterConfig,\n      sessionId,\n    } = deserializedArgs\n    const adapter = await getAdapter(pm, sessionId, adapterConfig)\n    const dataAdapter = adapter.dataAdapter as BaseFeatureDataAdapter\n\n    const feats = await firstValueFrom(\n      dataAdapter\n        .getFeaturesInMultipleRegions(regions, deserializedArgs)\n        .pipe(toArray()),\n    )\n\n    const genotypeFactor = new Set<string>()\n    const mafs = getFeaturesThatPassMinorAlleleFrequencyFilter(\n      feats,\n      minorAlleleFrequencyFilter,\n    )\n\n    for (const { alleleCounts } of mafs) {\n      for (const alt of alleleCounts.keys()) {\n        genotypeFactor.add(alt)\n      }\n    }\n\n    const rows = {} as Record<string, { name: string; genotypes: string[] }>\n    for (const { feature } of mafs) {\n      const genotypes = feature.get('genotypes') as Record<string, string>\n      for (const { name } of sources) {\n        if (!rows[name]) {\n          rows[name] = {\n            name,\n            genotypes: [],\n          }\n        }\n        const val = genotypes[name]!\n        const alleles = val.split(/[/|]/)\n\n        // Calculate '012' status of the allele for a VCF genotype matrix\n        // Similar to vcftools --012 https://vcftools.github.io/man_latest.html\n        // Note: could also consider https://www.rdocumentation.org/packages/fastcluster/versions/1.2.6/topics/hclust.vector for clustering true multi-dimensional allele count vectors\n        let genotypeStatus = '0'\n        let nonRefCount = 0\n        let uncalledCount = 0\n        for (const l of alleles) {\n          if (l === '.') {\n            uncalledCount++\n          } else if (l !== '0') {\n            nonRefCount++\n          }\n        }\n\n        if (uncalledCount === alleles.length) {\n          genotypeStatus = '-1' // All no-call\n        } else if (nonRefCount === 0) {\n          genotypeStatus = '0' // Homozygous reference\n        } else if (nonRefCount === alleles.length) {\n          genotypeStatus = '2' // Homozygous alternate\n        } else {\n          genotypeStatus = '1' // Heterozygous\n        }\n\n        rows[name].genotypes.push(genotypeStatus)\n      }\n    }\n\n    return rows\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\nimport { firstValueFrom, toArray } from 'rxjs'\n\nimport { getFeaturesThatPassMinorAlleleFrequencyFilter } from '../shared/minorAlleleFrequencyUtils'\n\nimport type { SampleInfo } from '../shared/types'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util'\n\nexport class MultiVariantGetSimplifiedFeatures extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'MultiVariantGetSimplifiedFeatures'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { minorAlleleFrequencyFilter, regions, adapterConfig, sessionId } =\n      deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    const feats = await firstValueFrom(\n      (dataAdapter as BaseFeatureDataAdapter)\n        .getFeaturesInMultipleRegions(regions, deserializedArgs)\n        .pipe(toArray()),\n    )\n\n    const features = getFeaturesThatPassMinorAlleleFrequencyFilter(\n      feats,\n      minorAlleleFrequencyFilter,\n    )\n\n    const sampleInfo = {} as Record<string, SampleInfo>\n    let hasPhased = false\n\n    for (const { feature } of features) {\n      const samp = feature.get('genotypes') as Record<string, string>\n      for (const [key, val] of Object.entries(samp)) {\n        const isPhased = val.includes('|')\n        hasPhased ||= isPhased\n        sampleInfo[key] = {\n          maxPloidy: Math.max(\n            sampleInfo[key]?.maxPloidy || 0,\n            val.split('|').length,\n          ),\n          isPhased: sampleInfo[key]?.isPhased || isPhased,\n        }\n      }\n    }\n    return {\n      hasPhased,\n      sampleInfo,\n      features: features.map(({ feature }) => ({\n        id: feature.id(),\n        data: {\n          start: feature.get('start'),\n          end: feature.get('end'),\n          refName: feature.get('refName'),\n        },\n      })),\n    }\n  }\n}\n","import { getAdapter } from '@jbrowse/core/data_adapters/dataAdapterCache'\nimport RpcMethodTypeWithFiltersAndRenameRegions from '@jbrowse/core/pluggableElementTypes/RpcMethodTypeWithFiltersAndRenameRegions'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Region } from '@jbrowse/core/util'\n\nexport class MultiVariantGetSources extends RpcMethodTypeWithFiltersAndRenameRegions {\n  name = 'MultiVariantGetSources'\n\n  async execute(\n    args: {\n      adapterConfig: AnyConfigurationModel\n      stopToken?: string\n      sessionId: string\n      headers?: Record<string, string>\n      regions: Region[]\n      bpPerPx: number\n    },\n    rpcDriverClassName: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(\n      args,\n      rpcDriverClassName,\n    )\n    const { regions, adapterConfig, sessionId } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    // @ts-expect-error\n    return dataAdapter.getSources(regions, deserializedArgs)\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config VcfAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst VcfAdapter = ConfigurationSchema(\n  'VcfAdapter',\n  {\n    /**\n     * #slot\n     */\n    vcfLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.vcf',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     */\n    samplesTsvLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/samples.tsv',\n        description:\n          'tsv with header like name\\tpopulation\\tetc. where the first column is required, and is the sample names',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            vcfLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default VcfAdapter\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config VcfTabixAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst VcfTabixAdapter = ConfigurationSchema(\n  'VcfTabixAdapter',\n  {\n    /**\n     * #slot\n     */\n    vcfGzLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my.vcf.gz',\n        locationType: 'UriLocation',\n      },\n    },\n\n    index: ConfigurationSchema('VcfIndex', {\n      /**\n       * #slot index.indexType\n       */\n      indexType: {\n        model: types.enumeration('IndexType', ['TBI', 'CSI']),\n        type: 'stringEnum',\n        defaultValue: 'TBI',\n      },\n      /**\n       * #slot index.location\n       */\n      location: {\n        type: 'fileLocation',\n        defaultValue: {\n          uri: '/path/to/my.vcf.gz.tbi',\n          locationType: 'UriLocation',\n        },\n      },\n    }),\n    /**\n     * #slot\n     */\n    samplesTsvLocation: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/samples.tsv',\n        description:\n          'tsv with header like name\\tpopulation\\tetc. where the first column is required, and is the sample names',\n        locationType: 'UriLocation',\n      },\n    },\n  },\n  {\n    explicitlyTyped: true,\n\n    /**\n     * #preProcessSnapshot\n     * will populate the index field from vcfGzLocation\n     */\n    preProcessSnapshot: snap => {\n      // populate from just snap.uri\n      return snap.uri\n        ? {\n            ...snap,\n            vcfGzLocation: {\n              uri: snap.uri,\n              baseUri: snap.baseUri,\n            },\n            index: {\n              location: {\n                uri: `${snap.uri}.tbi`,\n                baseUri: snap.baseUri,\n              },\n            },\n          }\n        : snap\n    },\n  },\n)\n\nexport default VcfTabixAdapter\n","import Plugin from '@jbrowse/core/Plugin'\n\nimport ChordVariantDisplayF from './ChordVariantDisplay'\nimport LinearVariantDisplayF from './LinearVariantDisplay'\nimport MultiLinearVariantDisplayF from './MultiLinearVariantDisplay'\nimport LinearVariantMatrixDisplayF from './MultiLinearVariantMatrixDisplay'\nimport LinearVariantMatrixRendererF from './MultiLinearVariantMatrixRenderer'\nimport MultiVariantRendererF from './MultiLinearVariantRenderer'\nimport SplitVcfTabixAdapterF from './SplitVcfTabixAdapter'\nimport StructuralVariantChordRendererF from './StructuralVariantChordRenderer'\nimport VariantFeatureWidgetF from './VariantFeatureWidget'\nimport { MultiVariantGetGenotypeMatrix } from './VariantRPC/MultiVariantGetGenotypeMatrix'\nimport { MultiVariantGetSimplifiedFeatures } from './VariantRPC/MultiVariantGetSimplifiedFeatures'\nimport { MultiVariantGetSources } from './VariantRPC/MultiVariantGetSources'\nimport VariantTrackF from './VariantTrack'\nimport VcfAdapterF from './VcfAdapter'\nimport VcfTabixAdapterF from './VcfTabixAdapter'\nimport ExtensionPointsF from './extensionPoints'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default class VariantsPlugin extends Plugin {\n  name = 'VariantsPlugin'\n\n  install(pluginManager: PluginManager) {\n    VcfAdapterF(pluginManager)\n    VcfTabixAdapterF(pluginManager)\n    SplitVcfTabixAdapterF(pluginManager)\n    VariantFeatureWidgetF(pluginManager)\n    VariantTrackF(pluginManager)\n    ExtensionPointsF(pluginManager)\n    LinearVariantDisplayF(pluginManager)\n    LinearVariantMatrixDisplayF(pluginManager)\n    MultiLinearVariantDisplayF(pluginManager)\n    MultiVariantRendererF(pluginManager)\n    LinearVariantMatrixRendererF(pluginManager)\n    StructuralVariantChordRendererF(pluginManager)\n    ChordVariantDisplayF(pluginManager)\n\n    pluginManager.addRpcMethod(() => new MultiVariantGetSources(pluginManager))\n    pluginManager.addRpcMethod(\n      () => new MultiVariantGetGenotypeMatrix(pluginManager),\n    )\n    pluginManager.addRpcMethod(\n      () => new MultiVariantGetSimplifiedFeatures(pluginManager),\n    )\n  }\n}\n\nexport { default as VcfFeature } from './VcfFeature'\n","import TrackType from '@jbrowse/core/pluggableElementTypes/TrackType'\nimport { createBaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function VariantTrackF(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'VariantTrack',\n      displayName: 'Variant track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'VariantTrack', configSchema),\n    })\n  })\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function VcfAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'VcfAdapter',\n        displayName: 'VCF adapter',\n        configSchema,\n        getAdapterClass: () => import('./VcfAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport { default as configSchema } from './configSchema'\n\nexport default function VcfTabixAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'VcfTabixAdapter',\n        displayName: 'VCF tabix adapter',\n        configSchema,\n        getAdapterClass: () => import('./VcfTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import AdapterType from '@jbrowse/core/pluggableElementTypes/AdapterType'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport { default as configSchema } from './configSchema'\n\nexport default function VcfTabixAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'SplitVcfTabixAdapter',\n        displayName: 'VCF tabix adapter (split across multiple files)',\n        configSchema,\n        getAdapterClass: () =>\n          import('./SplitVcfTabixAdapter').then(r => r.default),\n      }),\n  )\n}\n","import { lazy } from 'react'\n\nimport WidgetType from '@jbrowse/core/pluggableElementTypes/WidgetType'\n\nimport { configSchema } from './configSchema'\nimport { stateModelFactory } from './stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function VariantFeatureWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(\n    () =>\n      new WidgetType({\n        name: 'VariantFeatureWidget',\n        heading: 'Feature details',\n        configSchema: configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(() => import('./VariantFeatureWidget')),\n      }),\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config VariantTrack\n * Mostly similar to feature track, but has `ChordDisplayType` registered to it,\n * and custom feature details in `LinearVariantDisplay`\n */\nexport default function VariantTrackF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'VariantTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n    },\n  )\n}\n","import { testAdapter } from '@jbrowse/core/util'\nimport {\n  getFileName,\n  makeIndex,\n  makeIndexType,\n} from '@jbrowse/core/util/tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AdapterGuesser,\n  TrackTypeGuesser,\n} from '@jbrowse/core/util/tracks'\nimport type { FileLocation } from '@jbrowse/core/util/types'\n\nexport default function ExtensionPointsF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'Core-guessAdapterForLocation',\n    (adapterGuesser: AdapterGuesser) => {\n      return (\n        file: FileLocation,\n        index?: FileLocation,\n        adapterHint?: string,\n      ) => {\n        const fileName = getFileName(file)\n        const indexName = index && getFileName(index)\n        if (\n          testAdapter(fileName, /\\.vcf\\.b?gz$/i, adapterHint, 'VcfTabixAdapter')\n        ) {\n          return {\n            type: 'VcfTabixAdapter',\n            vcfGzLocation: file,\n            index: {\n              location: index || makeIndex(file, '.tbi'),\n              indexType: makeIndexType(indexName, 'CSI', 'TBI'),\n            },\n          }\n        } else if (\n          testAdapter(fileName, /\\.vcf(\\.gz)?$/i, adapterHint, 'VcfAdapter')\n        ) {\n          return {\n            type: 'VcfAdapter',\n            vcfLocation: file,\n          }\n        } else {\n          return adapterGuesser(file, index, adapterHint)\n        }\n      }\n    },\n  )\n  pluginManager.addToExtensionPoint(\n    'Core-guessTrackTypeForLocation',\n    (trackTypeGuesser: TrackTypeGuesser) => {\n      return (adapterName: string) => {\n        return ['VcfTabixAdapter', 'VcfAdapter'].includes(adapterName)\n          ? 'VariantTrack'\n          : trackTypeGuesser(adapterName)\n      }\n    },\n  )\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\n\nimport configSchemaF from './configSchema'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearVariantDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearVariantDisplay',\n      displayName: 'Variant display',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'VariantTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { linearBasicDisplayConfigSchemaFactory } from '@jbrowse/plugin-linear-genome-view'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #config LinearVariantDisplay\n * mostly empty, this display type is very much\n * like a `FeatureTrack` with a `LinearBasicDisplay` except it has a custom\n * feature details widget\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function configSchemaF(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearVariantDisplay',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: linearBasicDisplayConfigSchemaFactory(pluginManager),\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport type LinearVariantDisplayConfigModel = ReturnType<typeof configSchemaF>\nexport type LinearVariantDisplayConfig =\n  Instance<LinearVariantDisplayConfigModel>\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport MultiLinearVariantMatrixDisplayComponent from './components/VariantDisplayComponent'\nimport configSchemaF from './configSchema'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearVariantMatrixDisplayF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    return new DisplayType({\n      name: 'LinearVariantMatrixDisplay',\n      displayName: 'Multi-variant display (matrix)',\n      configSchema,\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'VariantTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: MultiLinearVariantMatrixDisplayComponent,\n    })\n  })\n}\n","import { lazy } from 'react'\n\nimport DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\n\nimport configSchemaFactory from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function MultiLinearVariantDisplayF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'MultiLinearVariantDisplay',\n      displayName: 'Multi-variant display (regular)',\n      configSchema,\n      stateModel: modelFactory(configSchema),\n      trackType: 'VariantTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: lazy(\n        () => import('./components/VariantDisplayComponent'),\n      ),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\n// locals\nimport sharedVariantConfigFactory from '../shared/SharedVariantConfigSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config MultiLinearVariantDisplay\n * extends\n * - [SharedVariantDisplay](../sharedvariantdisplay)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default function VariantConfigFactory(pluginManager: PluginManager) {\n  const MultiVariantRendererConfigSchema = pluginManager.getRendererType(\n    'MultiVariantRenderer',\n  )!.configSchema\n\n  return ConfigurationSchema(\n    'MultiLinearVariantDisplay',\n    {\n      /**\n       * #slot\n       */\n      defaultRendering: {\n        type: 'stringEnum',\n        model: types.enumeration('Rendering', ['multivariant']),\n        defaultValue: 'multivariant',\n      },\n\n      /**\n       * #slot\n       */\n      renderers: ConfigurationSchema('RenderersConfiguration', {\n        MultiVariantRenderer: MultiVariantRendererConfigSchema,\n      }),\n\n      /**\n       * #slot\n       */\n      height: {\n        type: 'number',\n        defaultValue: 200,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: sharedVariantConfigFactory(),\n      explicitlyTyped: true,\n    },\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseLinearDisplayConfigSchema } from '@jbrowse/plugin-linear-genome-view'\nimport { types } from 'mobx-state-tree'\n\n/**\n * #config SharedVariantDisplay\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport default function sharedVariantConfigFactory() {\n  return ConfigurationSchema(\n    'SharedVariantDisplay',\n    {\n      /**\n       * #slot\n       */\n      autoscale: {\n        type: 'stringEnum',\n        defaultValue: 'local',\n        model: types.enumeration('Autoscale type', [\n          'global',\n          'local',\n          'globalsd',\n          'localsd',\n          'zscore',\n        ]),\n        description:\n          'global/local using their min/max values or w/ standard deviations (globalsd/localsd)',\n      },\n\n      /**\n       * #slot\n       */\n      minimalTicks: {\n        type: 'boolean',\n        defaultValue: false,\n        description: 'use the minimal amount of ticks',\n      },\n\n      /**\n       * #slot\n       */\n      minScore: {\n        type: 'number',\n        defaultValue: Number.MIN_VALUE,\n        description: 'minimum value for the y-scale',\n      },\n      /**\n       * #slot\n       */\n      maxScore: {\n        type: 'number',\n        description: 'maximum value for the y-scale',\n        defaultValue: Number.MAX_VALUE,\n      },\n      /**\n       * #slot\n       */\n      numStdDev: {\n        type: 'number',\n        description:\n          'number of standard deviations to use for autoscale types globalsd or localsd',\n        defaultValue: 3,\n      },\n      /**\n       * #slot\n       */\n      scaleType: {\n        type: 'stringEnum',\n        model: types.enumeration('Scale type', ['linear', 'log']), // todo zscale\n        description: 'The type of scale to use',\n        defaultValue: 'linear',\n      },\n\n      /**\n       * #slot\n       */\n      inverted: {\n        type: 'boolean',\n        description: 'draw upside down',\n        defaultValue: false,\n      },\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n","import MultiVariantRenderer from './MultiVariantRenderer'\nimport ReactComponent from './components/MultiVariantRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n// locals\n\nexport default function MultiVariantRendererF(pluginManager: PluginManager) {\n  pluginManager.addRendererType(() => {\n    return new MultiVariantRenderer({\n      name: 'MultiVariantRenderer',\n      ReactComponent,\n      configSchema,\n      pluginManager,\n    })\n  })\n}\n","import LinearVariantMatrixRenderer from './LinearVariantMatrixRenderer'\nimport PrerenderedCanvas from './components/LinearVariantMatrixRendering'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearVariantMatrixRendererF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addRendererType(() => {\n    return new LinearVariantMatrixRenderer({\n      name: 'LinearVariantMatrixRenderer',\n      displayName: 'Linear variant matrix renderer',\n      ReactComponent: PrerenderedCanvas,\n      configSchema,\n      pluginManager,\n    })\n  })\n}\n","import ChordRendererType from '@jbrowse/core/pluggableElementTypes/renderers/CircularChordRendererType'\n\nimport ReactComponent from './ReactComponent'\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function StructuralVariantChordRendererF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addRendererType(\n    () =>\n      new ChordRendererType({\n        name: 'StructuralVariantChordRenderer',\n        displayName: 'SV chord renderer',\n        ReactComponent,\n        configSchema,\n        pluginManager,\n      }),\n  )\n}\n","import DisplayType from '@jbrowse/core/pluggableElementTypes/DisplayType'\nimport { BaseChordDisplayComponent } from '@jbrowse/plugin-circular-view'\n\nimport configSchemaF from './models/configSchema'\nimport stateModelF from './models/stateModelFactory'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function ChordVariantDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaF(pluginManager)\n    const stateModel = stateModelF(configSchema)\n    return new DisplayType({\n      name: 'ChordVariantDisplay',\n      displayName: 'Chord variant display',\n      configSchema,\n      stateModel,\n      trackType: 'VariantTrack',\n      viewType: 'CircularView',\n      ReactComponent: BaseChordDisplayComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { baseChordDisplayConfig } from '@jbrowse/plugin-circular-view'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config ChordVariantDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nfunction stateModelFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'ChordVariantDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: types.optional(\n        pluginManager.pluggableConfigSchemaType('renderer'),\n        { type: 'StructuralVariantChordRenderer' },\n      ),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseChordDisplayConfig,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default stateModelFactory\n","import { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { BaseChordDisplayModel } from '@jbrowse/plugin-circular-view'\nimport { types } from 'mobx-state-tree'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { CircularViewModel } from '@jbrowse/plugin-circular-view'\n\n/**\n * #stateModel ChordVariantDisplay\n * extends\n * - [BaseChordDisplay](../basechorddisplay)\n */\nconst stateModelFactory = (configSchema: AnyConfigurationSchemaType) => {\n  return types\n    .compose(\n      'ChordVariantDisplay',\n      BaseChordDisplayModel,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('ChordVariantDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return self.configuration.renderer.type\n      },\n\n      /**\n       * #method\n       */\n      renderProps(): Record<string, unknown> {\n        const view = getContainingView(self) as CircularViewModel\n        return {\n          ...getParentRenderProps(self),\n          rpcDriverName: self.rpcDriverName,\n          displayModel: self,\n          bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n          radius: view.radiusPx,\n          blockDefinitions: self.blockDefinitions,\n          config: self.configuration.renderer,\n          onChordClick: (arg: Feature) => {\n            self.onChordClick(arg)\n          },\n        }\n      },\n    }))\n}\n\n// http://localhost:3000/test_data/hs37d5.HG002-SequelII-CCS.sv.vcf.gz.tbi\n\n// render request is for 1.5x the current viewing window\n\n// tracks all have a height\n//\nexport default stateModelFactory\n","/**\n * source https://github.com/panstromek/zebra-rs/blob/82d616225930b3ad423a2c6d883c79b94ee08ba6/webzebra/src/stopToken.ts#L34C1-L57C16\n *\n * blogpost https://yoyo-code.com/how-to-stop-synchronous-web-worker/\n *\n * license \"I explicitly added MIT license to the stopToken file to make it more\n * permissive\"\n *\n * Copyright (c) 2022 Matyáš Racek\n *\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nfunction isWebWorker() {\n  return (\n    // @ts-expect-error\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // @ts-expect-error\n    self instanceof WorkerGlobalScope\n  )\n}\nexport function createStopToken() {\n  // URL not available in jest and can't properly mock it\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return URL.createObjectURL?.(new Blob()) || `${Math.random()}`\n}\n\nexport function stopStopToken(stopToken: string) {\n  // URL not available in jest and can't properly mock it\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  URL.revokeObjectURL?.(stopToken)\n}\n\nexport function checkStopToken(stopToken?: string) {\n  // avoid doing synchronous web worker on main thread\n  if (typeof jest === 'undefined' && stopToken !== undefined && isWebWorker()) {\n    const xhr = new XMLHttpRequest()\n\n    // synchronous XHR usage to check the token\n    xhr.open('GET', stopToken, false)\n    try {\n      xhr.send(null)\n    } catch (e) {\n      throw new Error('aborted')\n    }\n  }\n}\n","import { Typography } from '@mui/material'\nimport { keyframes } from 'tss-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { TypographyProps } from '@mui/material'\n\nconst useStyles = makeStyles()({\n  dots: {\n    '&::after': {\n      display: 'inline-block',\n      content: '\"\"',\n      width: '1em',\n      textAlign: 'left',\n      animation: `${keyframes`\n      0% {\n        content: '';\n      }\n      25% {\n          content: '.';\n      }\n      50% {\n        content: '..';\n      }\n      75% {\n        content: '...';\n      }\n      `} 1.2s infinite ease-in-out`,\n    },\n  },\n})\n\ninterface Props extends TypographyProps {\n  message?: string\n}\n\nexport default function LoadingEllipses({\n  message,\n  variant = 'body2',\n  ...rest\n}: Props) {\n  const { cx, classes } = useStyles()\n  return (\n    <Typography\n      className={cx(classes.dots, rest.className)}\n      {...rest}\n      variant={variant}\n    >\n      {message || 'Loading'}\n    </Typography>\n  )\n}\n","import { firstValueFrom } from 'rxjs'\nimport { reduce } from 'rxjs/operators'\n\nimport type { Feature } from './simpleFeature'\nimport type { NoAssemblyRegion } from './types'\nimport type { Observable } from 'rxjs'\n\nexport interface UnrectifiedQuantitativeStats {\n  scoreMin: number\n  scoreMax: number\n  scoreSum: number\n  scoreSumSquares: number\n  featureCount: number\n  basesCovered: number\n}\nexport interface QuantitativeStats extends UnrectifiedQuantitativeStats {\n  currStatsBpPerPx: number\n  featureDensity: number\n  scoreMean: number\n  scoreStdDev: number\n}\n\n/**\n * calculate standard deviation using the 'shortcut method' that accepts\n * the sum and the sum squares of the elements\n *\n * @param sum - sum(i, 1..n)\n * @param sumSquares - sum(i^2, 1..n)\n * @param n - number of elements\n * @param population - boolean: use population instead of sample correction\n * @returns - the estimated std deviation\n */\nexport function calcStdFromSums(\n  sum: number,\n  sumSquares: number,\n  n: number,\n  population = false,\n): number {\n  if (n === 0) {\n    return 0\n  }\n  let variance: number\n  if (population) {\n    variance = sumSquares / n - (sum * sum) / (n * n)\n  } else {\n    // sample correction is n-1\n    variance = sumSquares - (sum * sum) / n\n    if (n > 1) {\n      variance /= n - 1\n    }\n  }\n\n  return variance < 0 ? 0 : Math.sqrt(variance)\n}\n\n/**\n * @param stats - a summary stats object with scoreSum, featureCount,\n * scoreSumSquares, and basesCovered\n * @returns - a summary stats object with\n * scoreMean, scoreStdDev, and featureDensity added\n */\nexport function rectifyStats(s: UnrectifiedQuantitativeStats) {\n  return {\n    ...s,\n    scoreMean: (s.scoreSum || 0) / (s.featureCount || s.basesCovered || 1),\n    scoreStdDev: calcStdFromSums(\n      s.scoreSum,\n      s.scoreSumSquares,\n      s.featureCount || s.basesCovered,\n    ),\n    featureDensity: (s.featureCount || 1) / s.basesCovered,\n  } as QuantitativeStats\n}\n\n/**\n * transform a list of scores to summary statistics\n *\n * @param region - object with start, end\n * @param features - array of features which are possibly summary features\n * @returns - object with scoreMax, scoreMin, scoreSum, scoreSumSquares, etc\n */\nexport async function scoresToStats(\n  region: NoAssemblyRegion,\n  feats: Observable<Feature>,\n) {\n  const { start, end } = region\n  const seed = {\n    scoreMin: Number.MAX_VALUE,\n    scoreMax: Number.MIN_VALUE,\n    scoreSum: 0,\n    scoreSumSquares: 0,\n    featureCount: 0,\n  }\n  let found = false\n\n  const { scoreMin, scoreMax, scoreSum, scoreSumSquares, featureCount } =\n    await firstValueFrom(\n      feats.pipe(\n        reduce((acc, f) => {\n          const s = f.get('score')\n          const summary = f.get('summary')\n          const { scoreMax, scoreMin } = acc\n          acc.scoreMax = Math.max(scoreMax, summary ? f.get('maxScore') : s)\n          acc.scoreMin = Math.min(scoreMin, summary ? f.get('minScore') : s)\n          acc.scoreSum += s\n          acc.scoreSumSquares += s * s\n          acc.featureCount += 1\n          found = true\n\n          return acc\n        }, seed),\n      ),\n    )\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return found\n    ? rectifyStats({\n        scoreMax,\n        scoreMin,\n        scoreSum,\n        scoreSumSquares,\n        featureCount,\n        basesCovered: end - start + 1,\n      })\n    : blankStats()\n}\n\nexport function blankStats() {\n  return {\n    scoreMin: 0,\n    scoreMax: 0,\n    scoreMean: 0,\n    scoreStdDev: 0,\n    scoreSum: 0,\n    scoreSumSquares: 0,\n    featureCount: 0,\n    featureDensity: 0,\n    basesCovered: 0,\n  } as QuantitativeStats\n}\n","import { useEffect, useRef, useState } from 'react'\n\nexport default function useMeasure() {\n  const ref = useRef<HTMLDivElement>(null)\n  const [dims, setDims] = useState<{ width?: number; height?: number }>({\n    width: undefined,\n    height: undefined,\n  })\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n    const RS =\n      typeof window !== 'undefined' && 'ResizeObserver' in window\n        ? window.ResizeObserver\n        : undefined\n\n    if (!RS) {\n      return\n    }\n    const observer = new RS(entries => {\n      setDims({\n        width: entries[0]!.contentRect.width,\n        height: entries[0]!.contentRect.height,\n      })\n    })\n    observer.observe(ref.current)\n\n    // Callback fired when component is unmounted\n    return () => {\n      observer.disconnect()\n    }\n  }, [])\n\n  return [ref, dims] as const\n}\n","const category10 = [\n  '#1f77b4',\n  '#ff7f0e',\n  '#2ca02c',\n  '#d62728',\n  '#9467bd',\n  '#8c564b',\n  '#e377c2',\n  '#7f7f7f',\n  '#bcbd22',\n  '#17becf',\n]\nconst dark2 = [\n  '#1b9e77',\n  '#d95f02',\n  '#7570b3',\n  '#e7298a',\n  '#66a61e',\n  '#e6ab02',\n  '#a6761d',\n  '#666666',\n]\nconst set1 = [\n  '#377eb8',\n  '#e41a1c',\n  '#4daf4a',\n  '#984ea3',\n  '#ff7f00',\n  '#ffff33',\n  '#a65628',\n  '#f781bf',\n  '#999999',\n]\nconst set2 = [\n  '#66c2a5',\n  '#fc8d62',\n  '#8da0cb',\n  '#e78ac3',\n  '#a6d854',\n  '#ffd92f',\n  '#e5c494',\n  '#b3b3b3',\n]\nconst tableau10 = [\n  '#4e79a7',\n  '#f28e2c',\n  '#e15759',\n  '#76b7b2',\n  '#59a14f',\n  '#edc949',\n  '#af7aa1',\n  '#ff9da7',\n  '#9c755f',\n  '#bab0ab',\n]\n\nconst ggplot2Colors6 = [\n  '#F8766D',\n  '#B79F00',\n  '#00BA38',\n  '#00BFC4',\n  '#619CFF',\n  '#F564E3',\n]\n\nconst ggplot2Colors5 = ['#F8766D', '#A3A500', '#00BF7D', '#00B0F6', '#E76BF3']\nconst ggplot2Colors4 = ['#F8766D', '#7CAE00', '#00BFC4', '#C77CFF']\nconst ggplot2Colors3 = ['#F8766D', '#00BA38', '#619CFF']\n\nexport {\n  category10,\n  dark2,\n  ggplot2Colors3,\n  ggplot2Colors4,\n  ggplot2Colors5,\n  ggplot2Colors6,\n  set1,\n  set2,\n  tableau10,\n}\n","import { types } from 'mobx-state-tree'\n\nimport { getEnv } from '../util'\nimport { stringToJexlExpression } from '../util/jexlStrings'\nimport { FileLocation } from '../util/types/mst'\n\nimport type { IAnyComplexType, IAnyModelType } from 'mobx-state-tree'\n\nfunction isValidColorString(/* str */) {\n  // TODO: check all the crazy cases for whether it's a valid HTML/CSS color string\n  return true\n}\nconst typeModels: Record<string, any> = {\n  stringArray: types.array(types.string),\n  stringArrayMap: types.map(types.array(types.string)),\n  numberMap: types.map(types.number),\n  boolean: types.boolean,\n  color: types.refinement('Color', types.string, isValidColorString),\n  integer: types.integer,\n  number: types.number,\n  string: types.string,\n  text: types.string,\n  fileLocation: FileLocation,\n  frozen: types.frozen(),\n}\n\n// default values we use if the defaultValue is malformed or does not work\nconst fallbackDefaults: Record<string, any> = {\n  stringArray: [],\n  stringArrayMap: {},\n  numberMap: {},\n  boolean: true,\n  color: 'black',\n  integer: 1,\n  number: 1,\n  string: '',\n  text: '',\n  fileLocation: { uri: '/path/to/resource.txt', locationType: 'UriLocation' },\n  frozen: {},\n}\n\nconst literalJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return self.value\n    },\n  },\n})\n\nconst objectJSON = (self: { value: any }) => ({\n  views: {\n    get valueJSON() {\n      return JSON.stringify(self.value)\n    },\n  },\n})\n\n// custom actions for modifying the value models\nconst typeModelExtensions: Record<string, (self: any) => any> = {\n  fileLocation: objectJSON,\n  number: literalJSON,\n  integer: literalJSON,\n  boolean: literalJSON,\n  frozen: objectJSON,\n  // special actions for working with stringArray slots\n  stringArray: (self: { value: string[] }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(val: string) {\n        self.value.push(val)\n      },\n      removeAtIndex(idx: number) {\n        self.value.splice(idx, 1)\n      },\n      setAtIndex(idx: number, val: string) {\n        self.value[idx] = val\n      },\n    },\n  }),\n  stringArrayMap: (self: { value: Map<string, string[]> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: any) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n      addToKey(key: string, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.push(val)\n      },\n      removeAtKeyIndex(key: string, idx: number) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar.splice(idx, 1)\n      },\n      setAtKeyIndex(key: string, idx: number, val: string) {\n        const ar = self.value.get(key)\n        if (!ar) {\n          throw new Error(`${key} not found`)\n        }\n        ar[idx] = val\n      },\n    },\n  }),\n  numberMap: (self: { value: Map<string, number> }) => ({\n    views: {\n      get valueJSON() {\n        return JSON.stringify(self.value)\n      },\n    },\n    actions: {\n      add(key: string, val: number) {\n        self.value.set(key, val)\n      },\n      remove(key: string) {\n        self.value.delete(key)\n      },\n    },\n  }),\n}\n\n// const FunctionStringType = types.refinement(\n//   'FunctionString',\n//   types.string,\n//   str => functionRegexp.test(str),\n// )\n\nconst JexlStringType = types.refinement('JexlString', types.string, str =>\n  str.startsWith('jexl:'),\n)\nfunction json(value: any) {\n  return value?.toJSON ? value.toJSON() : `\"${value}\"`\n}\nexport interface ConfigSlotDefinition {\n  /** human-readable description of the slot's meaning */\n  description?: string\n  /** custom base MST model for the slot's value */\n  model?: IAnyModelType | IAnyComplexType\n  /** name of the type of slot, e.g. \"string\", \"number\", \"stringArray\" */\n  type: string\n  /** default value of the slot */\n  defaultValue: any\n  /** parameter names of the function callback */\n  contextVariable?: string[]\n}\n\n/**\n * builds a MST model for a configuration slot\n *\n * @param slotName -\n * @param  definition -\n */\nexport default function ConfigSlot(\n  slotName: string,\n  {\n    description = '',\n    model,\n    type,\n    defaultValue,\n    contextVariable = [],\n  }: ConfigSlotDefinition,\n) {\n  if (!type) {\n    throw new Error('type name required')\n  }\n  if (!model) {\n    model = typeModels[type]\n  }\n  if (!model) {\n    throw new Error(\n      `no builtin config slot type \"${type}\", and no 'model' param provided`,\n    )\n  }\n\n  if (defaultValue === undefined) {\n    throw new Error(\"no 'defaultValue' provided\")\n  }\n\n  // if the `type` is something like `color`, then the model name\n  // here will be `ColorConfigSlot`\n  const configSlotModelName = `${slotName\n    .charAt(0)\n    .toUpperCase()}${slotName.slice(1)}ConfigSlot`\n  let slot = types\n    .model(configSlotModelName, {\n      name: types.literal(slotName),\n      description: types.literal(description),\n      type: types.literal(type),\n      value: types.optional(types.union(JexlStringType, model), defaultValue),\n    })\n    .volatile(() => ({\n      contextVariable,\n    }))\n    .views(self => ({\n      get isCallback() {\n        return String(self.value).startsWith('jexl:')\n      },\n    }))\n    .views(self => ({\n      get expr() {\n        if (self.isCallback) {\n          // compile as jexl function\n          const { pluginManager } = getEnv(self)\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          if (!pluginManager && typeof jest === 'undefined') {\n            console.warn(\n              'no pluginManager detected on config env (if you dynamically instantiate a config, for example in renderProps for your display model, check that you add the env argument)',\n            )\n          }\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          return stringToJexlExpression(String(self.value), pluginManager?.jexl)\n        }\n        return { evalSync: () => self.value }\n      },\n\n      // JS representation of the value of this slot, suitable\n      // for embedding in either JSON or a JS function string.\n      // many of the data types override this in typeModelExtensions\n      get valueJSON(): any[] | Record<string, any> | string | undefined {\n        if (self.isCallback) {\n          return undefined\n        }\n\n        return json(self.value)\n      },\n    }))\n    .preProcessSnapshot(val =>\n      typeof val === 'object' && val.name === slotName\n        ? val\n        : {\n            name: slotName,\n            description,\n            type,\n            value: val,\n          },\n    )\n    .postProcessSnapshot(snap => {\n      if (typeof snap.value === 'object') {\n        return JSON.stringify(snap.value) !== JSON.stringify(defaultValue)\n          ? snap.value\n          : undefined\n      }\n      return snap.value !== defaultValue ? snap.value : undefined\n    })\n    .actions(self => ({\n      set(newVal: any) {\n        self.value = newVal\n      },\n      reset() {\n        self.value = defaultValue\n      },\n      convertToCallback() {\n        if (self.isCallback) {\n          return\n        }\n        self.value = `jexl:${self.valueJSON || \"''\"}`\n      },\n      convertToValue() {\n        if (!self.isCallback) {\n          return\n        }\n        // try calling it with no arguments\n        try {\n          const funcResult = self.expr.evalSync()\n          if (funcResult !== undefined) {\n            self.value = funcResult\n            return\n          }\n        } catch (e) {\n          /* ignore */\n        }\n        self.value = defaultValue\n        // if it is still a callback (happens if the defaultValue is a\n        // callback), then use the last-resort fallback default\n        // if defaultValue has jexl: string, run this part\n        if (!(type in fallbackDefaults)) {\n          throw new Error(`no fallbackDefault defined for type ${type}`)\n        }\n        self.value = fallbackDefaults[type]\n      },\n    }))\n\n  // if there are any type-specific extensions (views or actions)\n  //  to the slot, add those in\n  if (typeModelExtensions[type]) {\n    slot = slot.extend(typeModelExtensions[type])\n  }\n\n  const completeModel = types.optional(slot, {\n    name: slotName,\n    type,\n    description,\n    value: defaultValue,\n  })\n  const m = completeModel\n  Object.defineProperty(m, 'isJBrowseConfigurationSlot', { value: true })\n  return m\n}\n","import {\n  getSnapshot,\n  isLateType,\n  isStateTreeNode,\n  isType,\n  types,\n} from 'mobx-state-tree'\n\nimport ConfigSlot from './configurationSlot'\nimport { isConfigurationSchemaType } from './util'\nimport { ElementId } from '../util/types/mst'\n\nimport type { ConfigSlotDefinition } from './configurationSlot'\nimport type { AnyConfigurationSchemaType } from './types'\nimport type { IAnyType, SnapshotOut } from 'mobx-state-tree'\n\nexport type {\n  AnyConfigurationModel,\n  AnyConfigurationSchemaType,\n  AnyConfigurationSlot,\n  AnyConfigurationSlotType,\n} from './types'\n\nfunction isEmptyObject(thing: unknown) {\n  return (\n    typeof thing === 'object' &&\n    !Array.isArray(thing) &&\n    thing !== null &&\n    Object.keys(thing).length === 0\n  )\n}\n\nfunction isEmptyArray(thing: unknown) {\n  return Array.isArray(thing) && thing.length === 0\n}\n\nexport interface ConfigurationSchemaDefinition {\n  [n: string]:\n    | ConfigSlotDefinition\n    | ConfigurationSchemaDefinition\n    | string\n    | number\n    | IAnyType\n}\n\nexport interface ConfigurationSchemaOptions<\n  BASE_SCHEMA extends AnyConfigurationSchemaType | undefined,\n  EXPLICIT_IDENTIFIER extends string | undefined,\n> {\n  explicitlyTyped?: boolean\n  explicitIdentifier?: EXPLICIT_IDENTIFIER\n  implicitIdentifier?: string | boolean\n  baseConfiguration?: BASE_SCHEMA\n\n  actions?: (self: unknown) => any\n  views?: (self: unknown) => any\n  extend?: (self: unknown) => any\n  preProcessSnapshot?: (\n    snapshot: Record<string, unknown>,\n  ) => Record<string, unknown>\n}\n\nfunction preprocessConfigurationSchemaArguments(\n  modelName: string,\n  inputSchemaDefinition: ConfigurationSchemaDefinition,\n  inputOptions: ConfigurationSchemaOptions<any, any> = {},\n) {\n  if (typeof modelName !== 'string') {\n    throw new Error(\n      'first arg must be string name of the model that this config schema goes with',\n    )\n  }\n\n  // if we have a base configuration schema that we are\n  // extending, grab the slot definitions from that\n  let schemaDefinition = inputSchemaDefinition\n  let options = inputOptions\n  if (inputOptions.baseConfiguration?.jbrowseSchemaDefinition) {\n    schemaDefinition = {\n      ...inputOptions.baseConfiguration.jbrowseSchemaDefinition,\n      ...schemaDefinition,\n    }\n    options = {\n      ...inputOptions.baseConfiguration.jbrowseSchemaOptions,\n      ...inputOptions,\n    }\n    options.baseConfiguration = undefined\n  }\n  return { schemaDefinition, options }\n}\n\nfunction makeConfigurationSchemaModel<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<any, any>,\n>(modelName: string, schemaDefinition: DEFINITION, options: OPTIONS) {\n  // now assemble the MST model of the configuration schema\n  const modelDefinition: Record<string, any> = {}\n  let identifier: string | undefined\n\n  if (options.explicitlyTyped) {\n    modelDefinition.type = types.optional(types.literal(modelName), modelName)\n  }\n\n  if (options.explicitIdentifier && options.implicitIdentifier) {\n    throw new Error(\n      `Cannot have both explicit and implicit identifiers in ${modelName}`,\n    )\n  }\n  if (options.explicitIdentifier) {\n    if (typeof options.explicitIdentifier === 'string') {\n      modelDefinition[options.explicitIdentifier] = types.identifier\n      identifier = options.explicitIdentifier\n    } else {\n      modelDefinition.id = types.identifier\n      identifier = 'id'\n    }\n  } else if (options.implicitIdentifier) {\n    if (typeof options.implicitIdentifier === 'string') {\n      modelDefinition[options.implicitIdentifier] = ElementId\n      identifier = options.implicitIdentifier\n    } else {\n      modelDefinition.id = ElementId\n      identifier = 'id'\n    }\n  }\n\n  const volatileConstants: Record<string, any> = {\n    isJBrowseConfigurationSchema: true,\n    jbrowseSchema: {\n      modelName,\n      definition: schemaDefinition,\n      options,\n    },\n  }\n  Object.entries(schemaDefinition).forEach(([slotName, slotDefinition]) => {\n    if (\n      (isType(slotDefinition) && isLateType(slotDefinition)) ||\n      isConfigurationSchemaType(slotDefinition)\n    ) {\n      // this is either an MST late() type (which we assume to be a sub-configuration),\n      // or an actual sub-configuration\n      modelDefinition[slotName] = slotDefinition\n    } else if (\n      typeof slotDefinition === 'string' ||\n      typeof slotDefinition === 'number'\n    ) {\n      volatileConstants[slotName] = slotDefinition\n    } else if (typeof slotDefinition === 'object') {\n      // this is a slot definition\n      if (!slotDefinition.type) {\n        throw new Error(`no type set for config slot ${modelName}.${slotName}`)\n      }\n      try {\n        modelDefinition[slotName] = ConfigSlot(\n          slotName,\n          slotDefinition as ConfigSlotDefinition,\n        )\n      } catch (e) {\n        throw new Error(\n          `invalid config slot definition for ${modelName}.${slotName}: ${e}`,\n        )\n      }\n    } else {\n      throw new Error(\n        `invalid configuration schema definition, \"${slotName}\" must be either a valid configuration slot definition, a constant, or a nested configuration schema`,\n      )\n    }\n  })\n\n  let completeModel = types\n    .model(`${modelName}ConfigurationSchema`, modelDefinition)\n    .actions(self => ({\n      setSubschema(slotName: string, data: Record<string, unknown>) {\n        if (!isConfigurationSchemaType(modelDefinition[slotName])) {\n          throw new Error(`${slotName} is not a subschema, cannot replace`)\n        }\n        const newSchema = isStateTreeNode(data)\n          ? data\n          : modelDefinition[slotName].create(data)\n        self[slotName] = newSchema\n        return newSchema\n      },\n    }))\n\n  if (Object.keys(volatileConstants).length) {\n    completeModel = completeModel.volatile((/* self */) => volatileConstants)\n  }\n  if (options.actions) {\n    completeModel = completeModel.actions(options.actions)\n  }\n  if (options.views) {\n    completeModel = completeModel.views(options.views)\n  }\n  if (options.extend) {\n    completeModel = completeModel.extend(options.extend)\n  }\n\n  const identifierDefault = identifier ? { [identifier]: 'placeholderId' } : {}\n  const modelDefault = options.explicitlyTyped\n    ? { type: modelName, ...identifierDefault }\n    : identifierDefault\n\n  const defaultSnap = getSnapshot(completeModel.create(modelDefault))\n  completeModel = completeModel.postProcessSnapshot(snap => {\n    const newSnap: SnapshotOut<typeof completeModel> = {}\n    let matchesDefault = true\n    // let keyCount = 0\n    for (const [key, value] of Object.entries(snap)) {\n      if (matchesDefault) {\n        if (typeof defaultSnap[key] === 'object' && typeof value === 'object') {\n          if (JSON.stringify(defaultSnap[key]) !== JSON.stringify(value)) {\n            matchesDefault = false\n          }\n        } else if (defaultSnap[key] !== value) {\n          matchesDefault = false\n        }\n      }\n      if (\n        value !== undefined &&\n        volatileConstants[key] === undefined &&\n        !isEmptyObject(value) &&\n        !isEmptyArray(value)\n      ) {\n        // keyCount += 1\n        newSnap[key] = value\n      }\n    }\n    if (matchesDefault) {\n      return {}\n    }\n    return newSnap\n  })\n\n  if (options.preProcessSnapshot) {\n    completeModel = completeModel.preProcessSnapshot(options.preProcessSnapshot)\n  }\n\n  return types.optional(completeModel, modelDefault)\n}\n\nexport interface ConfigurationSchemaType<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<any, any>,\n> extends ReturnType<typeof makeConfigurationSchemaModel<DEFINITION, OPTIONS>> {\n  isJBrowseConfigurationSchema: boolean\n  jbrowseSchemaDefinition: DEFINITION\n  jbrowseSchemaOptions: OPTIONS\n  type: string\n  [key: string]: unknown\n}\n\nexport function ConfigurationSchema<\n  DEFINITION extends ConfigurationSchemaDefinition,\n  OPTIONS extends ConfigurationSchemaOptions<BASE_SCHEMA, EXPLICIT_IDENTIFIER>,\n  BASE_SCHEMA extends AnyConfigurationSchemaType | undefined = undefined,\n  EXPLICIT_IDENTIFIER extends string | undefined = undefined,\n>(\n  modelName: string,\n  inputSchemaDefinition: DEFINITION,\n  inputOptions?: ConfigurationSchemaOptions<BASE_SCHEMA, EXPLICIT_IDENTIFIER>,\n): ConfigurationSchemaType<DEFINITION, OPTIONS> {\n  const { schemaDefinition, options } = preprocessConfigurationSchemaArguments(\n    modelName,\n    inputSchemaDefinition,\n    inputOptions,\n  )\n  const schemaType = makeConfigurationSchemaModel(\n    modelName,\n    schemaDefinition,\n    options,\n  ) as AnyConfigurationSchemaType\n  // saving a couple of jbrowse-specific things in the type object. hope nobody gets mad.\n  schemaType.isJBrowseConfigurationSchema = true\n  schemaType.jbrowseSchemaDefinition = schemaDefinition\n  schemaType.jbrowseSchemaOptions = options\n  return schemaType\n}\n\nexport function ConfigurationReference<\n  SCHEMATYPE extends AnyConfigurationSchemaType,\n>(schemaType: SCHEMATYPE) {\n  // we cast this to SCHEMATYPE, because the reference *should* behave just\n  // like the object it points to. It won't be undefined (this is a\n  // `reference`, not a `safeReference`)\n  return types.union(types.reference(schemaType), schemaType) as SCHEMATYPE\n}\n","import { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseBlock } from '@jbrowse/core/util/blockTypes'\n\nconst useStyles = makeStyles()(theme => ({\n  contentBlock: {\n    position: 'relative',\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n  },\n  elidedBlock: {\n    minHeight: '100%',\n    boxSizing: 'border-box',\n    backgroundColor: '#999',\n    backgroundImage:\n      'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n  },\n  interRegionPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.text.disabled,\n  },\n  boundaryPaddingBlock: {\n    minHeight: '100%',\n    backgroundColor: theme.palette.action.disabledBackground,\n  },\n}))\n\nconst ContentBlock = observer(function ({\n  block,\n  children,\n}: {\n  block: BaseBlock\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const { widthPx } = block\n  return (\n    <div style={{ width: widthPx }} className={classes.contentBlock}>\n      {children}\n    </div>\n  )\n})\n\nfunction ElidedBlock({ width }: { width: number }) {\n  const { classes } = useStyles()\n  return <div className={classes.elidedBlock} style={{ width }} />\n}\n\nfunction InterRegionPaddingBlock({\n  boundary,\n  width,\n  style = {},\n}: {\n  boundary: boolean\n  width: number\n  style?: React.CSSProperties\n}) {\n  const { classes } = useStyles()\n  return (\n    <div\n      style={{\n        ...style,\n        width,\n      }}\n      className={\n        boundary\n          ? classes.boundaryPaddingBlock\n          : classes.interRegionPaddingBlock\n      }\n    />\n  )\n}\n\nexport { ContentBlock, ElidedBlock, InterRegionPaddingBlock }\n","import createJexlInstance from './jexl'\n\nconst compilationCache: Record<string, any> = {}\n\n// revert function strings back to main, create a different file for\n// jexlStrings.ts pass the jexl property of the pluginManager as a param\n\n/**\n * compile a jexlExpression to a string\n *\n * @param str - string of code like `jexl:...`\n * @param options -\n */\nexport function stringToJexlExpression(str: string, jexl?: any) {\n  const cacheKey = `nosig|${str}`\n  if (!compilationCache[cacheKey]) {\n    const match = str.startsWith('jexl:')\n    if (!match) {\n      throw new Error('string does not appear to be in jexl format')\n    }\n    const code = str.split('jexl:')[1]!\n    const compiled = jexl\n      ? jexl.compile(code)\n      : createJexlInstance().compile(code)\n    compilationCache[cacheKey] = compiled\n  }\n\n  return compilationCache[cacheKey]\n}\n","import { Box, Button, FormControl, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { isElectron } from '../../util'\nimport { getBlob, storeBlobLocation } from '../../util/tracks'\n\nimport type {\n  BlobLocation,\n  FileLocation,\n  LocalPathLocation,\n} from '../../util/types'\n\nfunction isLocalPathLocation(loc: FileLocation): loc is LocalPathLocation {\n  return 'localPath' in loc\n}\n\nfunction isBlobLocation(loc: FileLocation): loc is BlobLocation {\n  return 'blobId' in loc\n}\n\nconst useStyles = makeStyles()(theme => ({\n  filename: {\n    marginLeft: theme.spacing(1),\n  },\n}))\n\nfunction LocalFileChooser({\n  location,\n  setLocation,\n}: {\n  location?: FileLocation\n  setLocation: (arg: FileLocation) => void\n}) {\n  const { classes } = useStyles()\n  const filename =\n    location &&\n    ((isBlobLocation(location) && location.name) ||\n      (isLocalPathLocation(location) && location.localPath))\n\n  const needToReload =\n    location && isBlobLocation(location) && !getBlob(location.blobId)\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n      <Box>\n        <FormControl fullWidth>\n          <Button variant=\"outlined\" component=\"label\">\n            Choose File\n            <input\n              type=\"file\"\n              hidden\n              onChange={({ target }) => {\n                const file = target.files?.[0]\n                if (file) {\n                  if (isElectron) {\n                    const { webUtils } = window.require('electron')\n                    setLocation({\n                      localPath: webUtils.getPathForFile(file),\n                      locationType: 'LocalPathLocation',\n                    })\n                  } else {\n                    // @ts-expect-error\n                    setLocation(storeBlobLocation({ blob: file }))\n                  }\n                }\n              }}\n            />\n          </Button>\n        </FormControl>\n      </Box>\n      <Box>\n        <Typography\n          component=\"span\"\n          className={classes.filename}\n          color={filename ? 'initial' : 'textSecondary'}\n        >\n          {filename || 'No file chosen'}\n        </Typography>\n        {needToReload ? (\n          <Typography color=\"error\">(need to reload)</Typography>\n        ) : null}\n      </Box>\n    </Box>\n  )\n}\n\nexport default LocalFileChooser\n","import type { BaseAdapter } from './BaseAdapter'\nimport type { BaseFeatureDataAdapter } from './BaseFeatureDataAdapter'\nimport type { BaseRefNameAliasAdapter } from './BaseRefNameAliasAdapter'\nimport type { BaseSequenceAdapter } from './BaseSequenceAdapter'\nimport type { BaseTextSearchAdapter } from './BaseTextSearchAdapter'\nimport type { RegionsAdapter } from './RegionsAdapter'\n\nexport type AnyDataAdapter =\n  | BaseAdapter\n  | BaseFeatureDataAdapter\n  | BaseRefNameAliasAdapter\n  | BaseTextSearchAdapter\n  | RegionsAdapter\n  | BaseSequenceAdapter\n\nexport function isSequenceAdapter(t: AnyDataAdapter): t is BaseSequenceAdapter {\n  return 'getRegions' in t && 'getFeatures' in t\n}\n\nexport function isRegionsAdapter(t: AnyDataAdapter): t is RegionsAdapter {\n  return 'getRegions' in t\n}\n\nexport function isFeatureAdapter(\n  t: AnyDataAdapter,\n): t is BaseFeatureDataAdapter {\n  return 'getFeatures' in t\n}\n\nexport function isRefNameAliasAdapter(t: object): t is BaseRefNameAliasAdapter {\n  return 'getRefNameAliases' in t\n}\n\nexport function isTextSearchAdapter(\n  t: AnyDataAdapter,\n): t is BaseTextSearchAdapter {\n  return 'searchIndex' in t\n}\n","import { getSnapshot, isStateTreeNode } from 'mobx-state-tree'\n\nimport { ConfigurationSchema, readConfObject } from '../../configuration'\nimport idMaker from '../../util/idMaker'\n\nimport type PluginManager from '../../PluginManager'\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { AugmentedRegion as Region } from '../../util/types'\nimport type { getSubAdapterType } from '../dataAdapterCache'\n\nconst EmptyConfig = ConfigurationSchema('empty', {})\n\nexport abstract class BaseAdapter {\n  public id: string\n\n  static capabilities = [] as string[]\n\n  constructor(\n    public config: AnyConfigurationModel = EmptyConfig.create(),\n    public getSubAdapter?: getSubAdapterType,\n    public pluginManager?: PluginManager,\n  ) {\n    // note: we use switch on jest here for more simple feature IDs\n    // in test environment\n    if (typeof jest === 'undefined') {\n      const data = isStateTreeNode(config) ? getSnapshot(config) : config\n      this.id = `${idMaker(data)}`\n    } else {\n      this.id = 'test'\n    }\n  }\n\n  /**\n   * Same as `readConfObject(this.config, arg)`.\n   * Note: Does not offer the same TS type checking as `readConfObject`,\n   * consider using that instead.\n   */\n  getConf(arg: string | string[]) {\n    return readConfObject(this.config, arg)\n  }\n\n  /**\n   * Called to provide a hint that data tied to a certain region will not be\n   * needed for the foreseeable future and can be purged from caches, etc\n   * @param region - Region\n   */\n  public abstract freeResources(region: Region): void\n}\n","import { firstValueFrom, merge } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport { BaseAdapter } from './BaseAdapter'\nimport { max, min, sum } from '../../util'\nimport { ObservableCreate } from '../../util/rxjs'\nimport { blankStats, rectifyStats, scoresToStats } from '../../util/stats'\nimport { checkStopToken } from '../../util/stopToken'\n\nimport type { BaseOptions } from './BaseOptions'\nimport type { FeatureDensityStats } from './types'\nimport type { Feature } from '../../util/simpleFeature'\nimport type { AugmentedRegion as Region } from '../../util/types'\nimport type { Observable } from 'rxjs'\n\n/**\n * Base class for feature adapters to extend. Defines some methods that\n * subclasses must implement.\n */\nexport abstract class BaseFeatureDataAdapter extends BaseAdapter {\n  /**\n   * Get all reference sequence names used in the data source\n   * Example:\n   * public async getRefNames(opts?: BaseOptions): Promise\\<string[]\\> \\}\n   *   await this.setup()\n   *   const \\{ refNames \\} = this.metadata\n   *   return refNames\n   * \\}\n   *\n   *\n   * NOTE: If an adapter is unable to determine the reference sequence names,\n   * the array will be empty\n   * @param opts - Feature adapter options\n   */\n  public abstract getRefNames(opts?: BaseOptions): Promise<string[]>\n\n  /**\n   * Get features from the data source that overlap a region\n   * Example:\n   * public getFeatures(\n   *   region: Region,\n   *   opts: BaseOptions,\n   * ): Observable<Feature> \\{\n   *   return ObservableCreate(observer =\\> \\{\n   *     const records = getRecords(assembly, refName, start, end)\n   *     records.forEach(record =\\> \\{\n   *       observer.next(this.recordToFeature(record))\n   *     \\})\n   *     observer.complete()\n   *   \\})\n   * \\}\n   * @param region - Region\n   * @param opts - Feature adapter options\n   * @returns Observable of Feature objects in the region\n   */\n  public abstract getFeatures(\n    region: Region,\n    opts?: BaseOptions,\n  ): Observable<Feature>\n\n  /**\n   * Return \"header info\" that is fetched from the data file, or other info\n   * that would not simply be in the config of the file. The return value can\n   * be `{tag:string, data: any}[]` e.g. list of tags with their values which\n   * is how VCF,BAM,CRAM return values for getInfo or it can be a nested JSON\n   * object\n   */\n  public async getHeader(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Return info that is primarily used for interpreting the data that is there,\n   * primarily in reference to being used for augmenting feature details panels\n   */\n  public async getMetadata(_opts?: BaseOptions): Promise<unknown> {\n    return null\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   */\n  public getFeaturesInRegion(region: Region, opts: BaseOptions = {}) {\n    return ObservableCreate<Feature>(async observer => {\n      const hasData = await this.hasDataForRefName(region.refName, opts)\n      checkStopToken(opts.stopToken)\n      if (!hasData) {\n        observer.complete()\n      } else {\n        this.getFeatures(region, opts).subscribe(observer)\n      }\n    })\n  }\n\n  /**\n   * Checks if the store has data for the given assembly and reference\n   * sequence, and then gets the features in the region if it does.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters that\n   * are frequently called on multiple regions simultaneously may want to\n   * implement a more efficient custom version of this method.\n   *\n   * Currently this just calls getFeatureInRegion for each region. Adapters that\n   * are frequently called on multiple regions simultaneously may want to\n   * implement a more efficient custom version of this method.\n   *\n   * @param regions - Regions\n   * @param opts - Feature adapter options\n   * @returns Observable of Feature objects in the regions\n   */\n  public getFeaturesInMultipleRegions(\n    regions: Region[],\n    opts: BaseOptions = {},\n  ) {\n    return merge(\n      ...regions.map(region => this.getFeaturesInRegion(region, opts)),\n    )\n  }\n\n  /**\n   * Check if the store has data for the given reference name.\n   * @param refName - Name of the reference sequence\n   * @returns Whether data source has data for the given reference name\n   */\n  public async hasDataForRefName(refName: string, opts: BaseOptions = {}) {\n    const refNames = await this.getRefNames(opts)\n    return refNames.includes(refName)\n  }\n\n  /**\n   * Calculates the minimum score, maximum score, and other statistics from\n   * features over a region, primarily used for quantitative tracks\n   */\n  public async getRegionQuantitativeStats(region: Region, opts?: BaseOptions) {\n    const feats = this.getFeatures(region, opts)\n    return scoresToStats(region, feats)\n  }\n  /**\n   * Calculates the minimum score, maximum score, and other statistics from\n   * features over multiple regions, primarily used for quantitative tracks\n   */\n  public async getMultiRegionQuantitativeStats(\n    regions: Region[] = [],\n    opts?: BaseOptions,\n  ) {\n    if (!regions.length) {\n      return blankStats()\n    }\n    const feats = await Promise.all(\n      regions.map(region => this.getRegionQuantitativeStats(region, opts)),\n    )\n\n    const scoreMax = max(feats.map(a => a.scoreMax))\n    const scoreMin = min(feats.map(a => a.scoreMin))\n    const scoreSum = sum(feats.map(a => a.scoreSum))\n    const scoreSumSquares = sum(feats.map(a => a.scoreSumSquares))\n    const featureCount = sum(feats.map(a => a.featureCount))\n    const basesCovered = sum(feats.map(a => a.basesCovered))\n\n    return rectifyStats({\n      scoreMin,\n      scoreMax,\n      featureCount,\n      basesCovered,\n      scoreSumSquares,\n      scoreSum,\n    })\n  }\n\n  /**\n   * Calculates the \"feature density\" of a region. The primary purpose of this\n   * API is to alert the user if they are going to be downloading too much\n   * information, and give them a hint to zoom in to see more. The default\n   * implementation samples from the regions, downloads feature data with\n   * getFeatures, and returns an object with the form \\{featureDensity:number\\}\n   *\n   * Derived classes can override this to return alternative calculations for\n   * featureDensity, or they can also return an object containing a byte size\n   * calculation with the format \\{bytes:number, fetchSizeLimit:number\\} where\n   * fetchSizeLimit is the adapter-defined limit for what it thinks is 'too\n   * much data' (e.g. CRAM and BAM may vary on what they think too much data\n   * is)\n   */\n  getRegionFeatureDensityStats(region: Region, opts?: BaseOptions) {\n    let lastTime = +Date.now()\n    const statsFromInterval = async (length: number, expansionTime: number) => {\n      const { start, end } = region\n      const sampleCenter = start * 0.75 + end * 0.25\n\n      const features = await firstValueFrom(\n        this.getFeatures(\n          {\n            ...region,\n            start: Math.max(0, Math.round(sampleCenter - length / 2)),\n            end: Math.min(Math.round(sampleCenter + length / 2), end),\n          },\n          opts,\n        ).pipe(toArray()),\n      )\n\n      return maybeRecordStats(\n        length,\n        { featureDensity: features.length / length },\n        features.length,\n        expansionTime,\n      )\n    }\n\n    const maybeRecordStats = async (\n      interval: number,\n      stats: FeatureDensityStats,\n      statsSampleFeatures: number,\n      expansionTime: number,\n    ): Promise<FeatureDensityStats> => {\n      const refLen = region.end - region.start\n      if (statsSampleFeatures >= 70 || interval * 2 > refLen) {\n        return stats\n      } else if (expansionTime <= 5000) {\n        const currTime = +Date.now()\n        expansionTime += currTime - lastTime\n        lastTime = currTime\n        return statsFromInterval(interval * 2, expansionTime)\n      } else {\n        console.warn(\n          \"Stats estimation reached timeout, or didn't get enough features\",\n        )\n        return { featureDensity: Number.POSITIVE_INFINITY }\n      }\n    }\n\n    return statsFromInterval(1000, 0)\n  }\n\n  /**\n   * Calculates the \"feature density\" of a set of regions. The primary purpose\n   * of this API is to alert the user if they are going to be downloading too\n   * much information, and give them a hint to zoom in to see more. The default\n   * implementation samples from the regions, downloads feature data with\n   * getFeatures, and returns an object with the form \\{featureDensity:number\\}\n   *\n   * Derived classes can override this to return alternative calculations for\n   * featureDensity, or they can also return an object containing a byte size\n   * calculation with the format \\{bytes:number, fetchSizeLimit:number\\} where\n   * fetchSizeLimit is the adapter-defined limit for what it thinks is 'too\n   * much data' (e.g. CRAM and BAM may vary on what they think too much data\n   * is)\n   */\n  public async getMultiRegionFeatureDensityStats(\n    regions: Region[],\n    opts?: BaseOptions,\n  ) {\n    if (!regions.length) {\n      throw new Error('No regions supplied')\n    }\n    return this.getRegionFeatureDensityStats(regions[0]!, opts)\n  }\n\n  async getSources(\n    regions: Region[],\n  ): Promise<{ name: string; color?: string; [key: string]: unknown }[]> {\n    const features = await firstValueFrom(\n      this.getFeaturesInMultipleRegions(regions).pipe(toArray()),\n    )\n    const sources = new Set<string>()\n    for (const f of features) {\n      sources.add(f.get('source'))\n    }\n    return [...sources].map(source => ({\n      name: source,\n    }))\n  }\n}\n","import { BaseFeatureDataAdapter } from './BaseFeatureDataAdapter'\n\nimport type { BaseOptions } from './types'\nimport type { NoAssemblyRegion } from '../../util'\nimport type { RegionsAdapter } from '../BaseAdapter'\n\nexport abstract class BaseSequenceAdapter\n  extends BaseFeatureDataAdapter\n  implements RegionsAdapter\n{\n  async getMultiRegionFeatureDensityStats() {\n    return { featureDensity: 0 }\n  }\n\n  /**\n   * Fetches a list of 'regions' with refName, start, and extends\n   */\n  abstract getRegions(opts: BaseOptions): Promise<NoAssemblyRegion[]>\n}\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { AnyAdapter } from '../data_adapters/BaseAdapter'\n\nexport interface AdapterMetadata {\n  category?: string\n  hiddenFromGUI?: boolean\n  description?: string\n}\n\nexport default class AdapterType extends PluggableElementBase {\n  getAdapterClass: () => Promise<AnyAdapter>\n\n  configSchema: AnyConfigurationSchemaType\n\n  adapterCapabilities: string[]\n\n  adapterMetadata?: AdapterMetadata\n\n  constructor(\n    stuff: {\n      name: string\n      configSchema: AnyConfigurationSchemaType\n      displayName?: string\n      adapterCapabilities?: string[]\n      adapterMetadata?: AdapterMetadata\n    } & (\n      | {\n          AdapterClass: AnyAdapter\n        }\n      | {\n          getAdapterClass: () => Promise<AnyAdapter>\n        }\n    ),\n  ) {\n    super(stuff)\n    this.getAdapterClass =\n      'AdapterClass' in stuff\n        ? async () => stuff.AdapterClass\n        : stuff.getAdapterClass\n    this.configSchema = stuff.configSchema\n    this.adapterCapabilities = stuff.adapterCapabilities || []\n    this.adapterMetadata = stuff.adapterMetadata\n  }\n}\n","function findCircleIntersectionX(\n  y: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(y - cy)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([cx, y])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([cx - solution, y], [cx + solution, y])\n}\n\nfunction findCircleIntersectionY(\n  x: number,\n  cx: number,\n  cy: number,\n  r: number,\n  resultArray: [number, number][],\n) {\n  const d = Math.abs(x - cx)\n  if (d > r) {\n    return\n  }\n  if (d === r) {\n    resultArray.push([x, cy])\n  }\n  const solution = Math.sqrt(r * r - d * d)\n  resultArray.push([x, cy - solution], [x, cy + solution])\n}\n\nfunction cartesianToTheta(x: number, y: number) {\n  let theta = (Math.atan(y / x) + 2 * Math.PI) % (2 * Math.PI)\n  if (x < 0) {\n    if (y <= 0) {\n      theta += Math.PI\n    } else {\n      theta -= Math.PI\n    }\n  }\n  return theta\n}\n\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  if (rho === 0) {\n    return [0, 0] as const\n  }\n  const theta = cartesianToTheta(x, y)\n  return [rho, theta] as const\n}\n\nconst twoPi = 2 * Math.PI\nexport function thetaRangesOverlap(\n  r1start: number,\n  r1length: number,\n  r2start: number,\n  r2length: number,\n) {\n  if (r1length <= 0 || r2length <= 0) {\n    return false\n  }\n  if (r1length + 0.0001 >= twoPi || r2length + 0.0001 >= twoPi) {\n    return true\n  }\n\n  // put both range starts between 2π and 4π\n  r1start = (((r1start % twoPi) + twoPi) % twoPi) + twoPi\n  r2start = (((r2start % twoPi) + twoPi) % twoPi) + twoPi\n\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move r2 2π to the left and check\n  r2start -= twoPi\n  if (r1start < r2start + r2length && r1start + r1length > r2start) {\n    return true\n  }\n\n  // move it 2π to the right and check\n  r2start += twoPi + twoPi\n  return r1start < r2start + r2length && r1start + r1length > r2start\n}\n\n// return which arc range has any part of the circle visible in the viewport\nexport function viewportVisibleSection(\n  viewSides: [number, number, number, number],\n  circleCenter: [number, number],\n  circleRadius: number,\n) {\n  let [viewL, viewR, viewT, viewB] = viewSides\n  const [cx, cy] = circleCenter\n\n  // transform coordinate system to center of circle\n  viewL -= cx\n  viewR -= cx\n  viewT -= cy\n  viewB -= cy\n\n  const centerIsInsideViewport =\n    viewL < 0 && viewR > 0 && viewT < 0 && viewB > 0\n\n  if (centerIsInsideViewport) {\n    const vertices = [\n      [viewL, viewT],\n      [viewR, viewT],\n      [viewL, viewB],\n      [viewR, viewB],\n    ] as const\n    let maxRho = Number.NEGATIVE_INFINITY\n    for (const [x, y] of vertices) {\n      const rho = Math.sqrt(x * x + y * y)\n      if (rho > maxRho) {\n        maxRho = rho\n      }\n    }\n    return {\n      rho: [0, Math.min(circleRadius, maxRho)] as [number, number],\n      theta: [0, 2 * Math.PI] as [number, number],\n    }\n  }\n  // const viewportCompletelyContainsCircle =\n  //   circleCenter[0] - viewL >= circleRadius &&\n  //   viewR - circleCenter[0] >= circleRadius &&\n  //   circleCenter[1] - viewT >= circleRadius &&\n  //   viewB - circleCenter[1] >= circleRadius\n\n  // if (viewportCompletelyContainsCircle) {\n  //   return [0, 2 * Math.PI]\n  // }\n\n  // const distToCenterSquared = ([x, y]) => {\n  //   const [cx, cy] = circleCenter\n  //   const sq = n => n * n\n  //   return sq(x - cx) + sq(y - cy)\n  // }\n  // const circleRadiusSquared = circleRadius * circleRadius\n\n  // const tlInside = distToCenterSquared([viewL, viewT]) <= circleRadiusSquared\n  // const trInside = distToCenterSquared([viewR, viewT]) <= circleRadiusSquared\n  // const blInside = distToCenterSquared([viewL, viewB]) <= circleRadiusSquared\n  // const brInside = distToCenterSquared([viewR, viewB]) <= circleRadiusSquared\n\n  // const noIntersection = !tlInside && !trInside && !blInside && !brInside\n  // if (noIntersection) return undefined\n\n  // const circleCompletelyContainsViewport =\n  //   tlInside && trInside && blInside && brInside\n  // if (circleCompletelyContainsViewport) {\n  //   // viewport is in the circle, but the center is not in it, so take max\n  //   // and min of thetas to the center\n  //   const thetas = [\n  //     Math.atan(viewT / viewL),\n  //     Math.atan(viewT / viewR),\n  //     Math.atan(viewB / viewL),\n  //     Math.atan(viewB / viewR),\n  //   ]\n\n  //   return [Math.min(...thetas), Math.max(...thetas)]\n  // }\n\n  // if we get here, the viewport is partly in, partly out of the circle\n\n  // const viewLIntersects = Math.abs(viewL - circleCenter[0]) <= circleRadius\n  // const viewRIntersects = Math.abs(viewR - circleCenter[0]) <= circleRadius\n  // const viewTIntersects = Math.abs(viewT - circleCenter[1]) <= circleRadius\n  // const viewBIntersects = Math.abs(viewB - circleCenter[1]) <= circleRadius\n\n  // const numIntersectingSides =\n  //   Number(viewLIntersects) +\n  //   Number(viewRIntersects) +\n  //   Number(viewTIntersects) +\n  //   Number(viewBIntersects)\n\n  // if (numIntersectingSides === 4) return [0, 2 * Math.PI]\n  // if (numIntersectingSides === 3) {\n  //   // TODO calculate the thetas of the\n  // } else if (numIntersectingSides === 2) {\n  //   // TODO calculate the thetas of the 2 intersection points\n  // } else if (numIntersectingSides === 1) {\n  //   // TODO calculate the thetas of the 1-2 intersection points of the line, and the angle between\n  // }\n\n  // make a list of vertices-of-interest that lie inside both shapes to examine\n  // to determine the range covered by their intersection\n\n  // transform coordinates to have the circle as the origin and find the intersections\n  // of the circle and the view rectangle\n  const vertices: [number, number][] = [\n    [viewL, viewT],\n    [viewR, viewT],\n    [viewL, viewB],\n    [viewR, viewB],\n  ]\n  findCircleIntersectionY(viewL, 0, 0, circleRadius, vertices)\n  findCircleIntersectionY(viewR, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewT, 0, 0, circleRadius, vertices)\n  findCircleIntersectionX(viewB, 0, 0, circleRadius, vertices)\n\n  // for each edge, also look at the closest point to center if it is inside the circle\n  if (-viewL < circleRadius) {\n    vertices.push([viewL, 0])\n  }\n  if (viewR < circleRadius) {\n    vertices.push([viewR, 0])\n  }\n  if (-viewT < circleRadius) {\n    vertices.push([0, viewT])\n  }\n  if (viewB < circleRadius) {\n    vertices.push([0, viewB])\n  }\n\n  // const verticesOriginal = vertices.map(([x, y]) => [x + cx, y + cy])\n\n  // now convert them all to polar and take the max and min of rho and theta\n\n  // const viewportCenterTheta = cartesianToTheta(viewR + viewL, viewT + viewB)\n  const reflect = viewL >= 0 ? -1 : 1\n  // viewportCenterTheta < Math.PI / 2 || viewportCenterTheta > 1.5 * Math.PI\n  //   ? -1\n  //   : 1\n  let rhoMin = Number.POSITIVE_INFINITY\n  let rhoMax = Number.NEGATIVE_INFINITY\n  let thetaMin = Number.POSITIVE_INFINITY\n  let thetaMax = Number.NEGATIVE_INFINITY\n  for (const [vx, vy] of vertices) {\n    // ignore vertex if outside the viewport\n    if (vx >= viewL && vx <= viewR && vy >= viewT && vy <= viewB) {\n      const [rho, theta] = cartesianToPolar(vx * reflect, vy * reflect)\n      // ignore vertex if outside the circle\n      if (rho <= circleRadius + 0.001) {\n        // ignore theta if rho is 0\n        if (theta < thetaMin && rho > 0.0001) {\n          thetaMin = theta\n        }\n        if (theta > thetaMax && rho > 0.0001) {\n          thetaMax = theta\n        }\n        if (rho < rhoMin) {\n          rhoMin = rho\n        }\n        if (rho > rhoMax) {\n          rhoMax = rho\n        }\n      }\n    }\n  }\n\n  if (reflect === -1) {\n    thetaMin += Math.PI\n    thetaMax += Math.PI\n  }\n\n  if (thetaMin > 2 * Math.PI && thetaMax > 2 * Math.PI) {\n    thetaMin -= 2 * Math.PI\n    thetaMax -= 2 * Math.PI\n  }\n\n  return {\n    rho: [rhoMin, Math.min(circleRadius, rhoMax)] as [number, number],\n    theta: [thetaMin, thetaMax] as [number, number],\n  }\n}\n","import { assembleLocString, polarToCartesian } from '@jbrowse/core/util'\n\nimport { thetaRangesOverlap } from './viewportVisibleRegion'\n\nimport type { Region } from '@jbrowse/core/util'\n\nexport interface SliceElidedRegion {\n  elided: true\n  widthBp: number\n  regions: Region[]\n}\n\nexport interface SliceNonElidedRegion {\n  elided: false\n  widthBp: number\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\nexport type SliceRegion = SliceNonElidedRegion | SliceElidedRegion\n\nexport class Slice {\n  key: string\n\n  startRadians: number\n\n  endRadians: number\n\n  bpPerRadian: number\n\n  flipped: boolean\n\n  constructor(\n    view: { bpPerRadian: number },\n    public region: SliceRegion,\n    public offsetRadians: number,\n    public radianWidth: number,\n  ) {\n    const { bpPerRadian } = view\n    this.key =\n      'regions' in region\n        ? JSON.stringify(region.regions)\n        : assembleLocString(region)\n    this.bpPerRadian = bpPerRadian\n    this.flipped = false\n\n    this.startRadians = offsetRadians\n    this.endRadians = region.widthBp / this.bpPerRadian + offsetRadians\n    Object.freeze(this)\n  }\n\n  bpToXY(bp: number, radiusPx: number) {\n    let offsetBp: number | undefined\n    if (this.region.elided) {\n      offsetBp = this.region.widthBp / 2\n    } else if (this.flipped) {\n      offsetBp = this.region.end - bp\n    } else {\n      offsetBp = bp - this.region.start\n    }\n    const totalRadians = offsetBp / this.bpPerRadian + this.offsetRadians\n    return polarToCartesian(radiusPx, totalRadians)\n  }\n\n  toJSON() {\n    return Object.fromEntries(Object.entries(this))\n  }\n}\n\nfunction calculateStaticSlices(self: {\n  elidedRegions: readonly SliceRegion[]\n  bpPerRadian: number\n  spacingPx: number\n  pxPerRadian: number\n}) {\n  const slices = []\n  let currentRadianOffset = 0\n  const { bpPerRadian, spacingPx, pxPerRadian } = self\n  for (const region of self.elidedRegions) {\n    const radianWidth = region.widthBp / bpPerRadian + spacingPx / pxPerRadian\n    slices.push(new Slice(self, region, currentRadianOffset, radianWidth))\n    currentRadianOffset += radianWidth\n  }\n  return slices\n}\n\nfunction sliceIsVisible(\n  self: { offsetRadians: number; visibleSection: { theta: [number, number] } },\n  slice: Slice,\n) {\n  const {\n    theta: [visibleThetaMin, visibleThetaMax],\n  } = self.visibleSection\n\n  return thetaRangesOverlap(\n    slice.offsetRadians + self.offsetRadians,\n    slice.radianWidth,\n    visibleThetaMin,\n    visibleThetaMax - visibleThetaMin,\n  )\n}\n\nexport { calculateStaticSlices, sliceIsVisible }\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  clamp,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport { saveAs } from 'file-saver'\nimport { transaction } from 'mobx'\nimport { cast, getRoot, resolveIdentifier, types } from 'mobx-state-tree'\n\nimport { calculateStaticSlices, sliceIsVisible } from './slices'\nimport { viewportVisibleSection } from './viewportVisibleRegion'\n\nimport type { SliceRegion } from './slices'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { Region as IRegion } from '@jbrowse/core/util/types'\nimport type { Region } from '@jbrowse/core/util/types/mst'\nimport type { Instance, SnapshotOrInstance } from 'mobx-state-tree'\n\n// lazies\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\n\nexport interface ExportSvgOptions {\n  rasterizeLayers?: boolean\n  filename?: string\n  Wrapper?: React.FC<{ children: React.ReactNode }>\n  themeName?: string\n}\n\n/**\n * #stateModel CircularView\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nfunction stateModelFactory(pluginManager: PluginManager) {\n  const minHeight = 40\n  const minWidth = 100\n  const defaultHeight = 400\n  return types\n    .compose(\n      'CircularView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('CircularView'),\n        /**\n         * #property\n         * similar to offsetPx in linear genome view\n         */\n        offsetRadians: -Math.PI / 2,\n        /**\n         * #property\n         */\n        bpPerPx: 200,\n        /**\n         * #property\n         */\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        /**\n         * #property\n         */\n        hideVerticalResizeHandle: false,\n        /**\n         * #property\n         */\n        hideTrackSelectorButton: false,\n        /**\n         * #property\n         */\n        lockedFitToWindow: true,\n        /**\n         * #property\n         */\n        disableImportForm: false,\n\n        /**\n         * #property\n         */\n        height: types.optional(types.number, defaultHeight),\n        /*\n         * #property\n         */\n        displayedRegions: types.optional(types.frozen<IRegion[]>(), []),\n        /**\n         * #property\n         */\n        scrollX: 0,\n        /**\n         * #property\n         */\n        scrollY: 0,\n\n        /**\n         * #property\n         */\n        minimumRadiusPx: 25,\n        /**\n         * #property\n         */\n        spacingPx: 10,\n        /**\n         * #property\n         */\n        paddingPx: 80,\n        /**\n         * #property\n         */\n        lockedPaddingPx: 100,\n        /**\n         * #property\n         */\n        minVisibleWidth: 6,\n        /**\n         * #property\n         */\n        minimumBlockWidth: 20,\n        /**\n         * #property\n         */\n        trackSelectorType: 'hierarchical',\n      }),\n    )\n    .volatile(() => ({\n      volatileWidth: undefined as number | undefined,\n      error: undefined as unknown,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get width() {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'wait for view to be initialized first before accessing width',\n          )\n        }\n        return self.volatileWidth\n      },\n\n      /**\n       * #getter\n       */\n      get visibleSection() {\n        const { scrollX, scrollY, width, height } = self\n        return viewportVisibleSection(\n          [scrollX, scrollX + width, scrollY, scrollY + height],\n          this.centerXY,\n          this.radiusPx,\n        )\n      },\n      /**\n       * #getter\n       */\n      get circumferencePx() {\n        let elidedBp = 0\n\n        for (const r of this.elidedRegions) {\n          elidedBp += r.widthBp\n        }\n        return (\n          elidedBp / self.bpPerPx + self.spacingPx * this.elidedRegions.length\n        )\n      },\n      /**\n       * #getter\n       */\n      get radiusPx() {\n        return this.circumferencePx / (2 * Math.PI)\n      },\n      /**\n       * #getter\n       */\n      get bpPerRadian() {\n        return self.bpPerPx * this.radiusPx\n      },\n      /**\n       * #getter\n       */\n      get pxPerRadian() {\n        return this.radiusPx\n      },\n      /**\n       * #getter\n       */\n      get centerXY(): [number, number] {\n        return [this.radiusPx + self.paddingPx, this.radiusPx + self.paddingPx]\n      },\n      /**\n       * #getter\n       */\n      get totalBp() {\n        let total = 0\n        for (const region of self.displayedRegions) {\n          total += region.end - region.start\n        }\n        return total\n      },\n      /**\n       * #getter\n       */\n      get maximumRadiusPx() {\n        return self.lockedFitToWindow\n          ? Math.min(self.width, self.height) / 2 - self.lockedPaddingPx\n          : 1000000\n      },\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        const minCircumferencePx = 2 * Math.PI * self.minimumRadiusPx\n        return this.totalBp / minCircumferencePx\n      },\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        // min depends on window dimensions, clamp between old min(0.01) and max\n        const maxCircumferencePx = 2 * Math.PI * this.maximumRadiusPx\n        return clamp(\n          this.totalBp / maxCircumferencePx,\n          0.0000000001,\n          this.maxBpPerPx,\n        )\n      },\n      /**\n       * #getter\n       */\n      get atMaxBpPerPx() {\n        return self.bpPerPx >= this.maxBpPerPx\n      },\n      /**\n       * #getter\n       */\n      get atMinBpPerPx() {\n        return self.bpPerPx <= this.minBpPerPx\n      },\n      /**\n       * #getter\n       */\n      get tooSmallToLock() {\n        return this.minBpPerPx <= 0.0000000001\n      },\n      /**\n       * #getter\n       */\n      get figureDimensions(): [number, number] {\n        return [\n          this.radiusPx * 2 + 2 * self.paddingPx,\n          this.radiusPx * 2 + 2 * self.paddingPx,\n        ]\n      },\n      /**\n       * #getter\n       */\n      get figureWidth() {\n        return this.figureDimensions[0]\n      },\n      /**\n       * #getter\n       */\n      get figureHeight() {\n        return this.figureDimensions[1]\n      },\n      /**\n       * #getter\n       * this is displayedRegions, post-processed to elide regions that are too\n       * small to see reasonably\n       */\n      get elidedRegions() {\n        const visible: SliceRegion[] = []\n        self.displayedRegions.forEach(region => {\n          const widthBp = region.end - region.start\n          const widthPx = widthBp / self.bpPerPx\n          if (widthPx < self.minVisibleWidth) {\n            // too small to see, collapse into a single elision region\n            const lastVisible = visible.at(-1)\n            if (lastVisible?.elided) {\n              lastVisible.regions.push({ ...region })\n              lastVisible.widthBp += widthBp\n            } else {\n              visible.push({\n                elided: true,\n                widthBp,\n                regions: [{ ...region }],\n              })\n            }\n          } else {\n            // big enough to see, display it\n            visible.push({ ...region, widthBp, elided: false })\n          }\n        })\n\n        // remove any single-region elisions\n        for (let i = 0; i < visible.length; i += 1) {\n          const v = visible[i]!\n          if (v.elided && v.regions.length === 1) {\n            visible[i] = { ...v, ...v.regions[0]!, elided: false }\n          }\n        }\n        return visible\n      },\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        const assemblyNames: string[] = []\n        self.displayedRegions.forEach(displayedRegion => {\n          if (!assemblyNames.includes(displayedRegion.assemblyName)) {\n            assemblyNames.push(displayedRegion.assemblyName)\n          }\n        })\n        return assemblyNames\n      },\n      /**\n       * #getter\n       */\n      get initialized() {\n        const { assemblyManager } = getSession(self)\n        return (\n          self.volatileWidth !== undefined &&\n          this.assemblyNames.every(a => assemblyManager.get(a)?.initialized)\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get staticSlices() {\n        return calculateStaticSlices(self)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get visibleStaticSlices() {\n        return self.staticSlices.filter(s => sliceIsVisible(self, s))\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = Math.max(newWidth, minWidth)\n        return self.volatileWidth\n      },\n      /**\n       * #action\n       */\n      setHeight(newHeight: number) {\n        self.height = Math.max(newHeight, minHeight)\n        return self.height\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        this.setModelViewWhenAdjust(!self.tooSmallToLock)\n        return newHeight - oldHeight\n      },\n      /**\n       * #action\n       */\n      resizeWidth(distance: number) {\n        const oldWidth = self.width\n        const newWidth = this.setWidth(self.width + distance)\n        this.setModelViewWhenAdjust(!self.tooSmallToLock)\n        return newWidth - oldWidth\n      },\n      /**\n       * #action\n       */\n      rotateClockwiseButton() {\n        this.rotateClockwise(Math.PI / 6)\n      },\n\n      /**\n       * #action\n       */\n      rotateCounterClockwiseButton() {\n        this.rotateCounterClockwise(Math.PI / 6)\n      },\n\n      /**\n       * #action\n       */\n      rotateClockwise(distance = 0.17) {\n        self.offsetRadians += distance\n      },\n\n      /**\n       * #action\n       */\n      rotateCounterClockwise(distance = 0.17) {\n        self.offsetRadians -= distance\n      },\n\n      /**\n       * #action\n       */\n      zoomInButton() {\n        this.setBpPerPx(self.bpPerPx / 1.4)\n      },\n\n      /**\n       * #action\n       */\n      zoomOutButton() {\n        this.setBpPerPx(self.bpPerPx * 1.4)\n      },\n\n      /**\n       * #action\n       */\n      setBpPerPx(newVal: number) {\n        self.bpPerPx = clamp(newVal, self.minBpPerPx, self.maxBpPerPx)\n      },\n\n      /**\n       * #action\n       */\n      setModelViewWhenAdjust(secondCondition: boolean) {\n        if (self.lockedFitToWindow && secondCondition) {\n          this.setBpPerPx(self.minBpPerPx)\n        }\n      },\n\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: SnapshotOrInstance<typeof Region>[]) {\n        const previouslyEmpty = self.displayedRegions.length === 0\n        self.displayedRegions = cast(regions)\n\n        if (previouslyEmpty) {\n          this.setBpPerPx(self.minBpPerPx)\n        } else {\n          this.setBpPerPx(self.bpPerPx)\n        }\n      },\n\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        const hiddenCount = this.hideTrack(trackId)\n        if (!hiddenCount) {\n          this.showTrack(trackId)\n          return true\n        }\n        return false\n      },\n\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.error = error\n      },\n\n      /**\n       * #action\n       */\n      showTrack(trackId: string, initialSnapshot = {}) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const trackType = pluginManager.getTrackType(conf.type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${conf.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)!\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          supportedDisplays.has(d.type),\n        )\n        const track = trackType.stateModel.create({\n          ...initialSnapshot,\n          type: conf.type,\n          configuration: conf,\n          displays: [{ type: displayConf.type, configuration: displayConf }],\n        })\n        self.tracks.push(track)\n      },\n\n      /**\n       * #action\n       */\n      addTrackConf(configuration: AnyConfigurationModel, initialSnapshot = {}) {\n        const { type } = configuration\n        const name = readConfObject(configuration, 'name')\n        const trackType = pluginManager.getTrackType(type)\n        if (!trackType) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)!\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = configuration.displays.find(\n          (d: AnyConfigurationModel) => supportedDisplays.has(d.type),\n        )\n        self.tracks.push(\n          trackType.stateModel.create({\n            ...initialSnapshot,\n            name,\n            type,\n            configuration,\n            displays: [{ type: displayConf.type, configuration: displayConf }],\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => {\n          t.forEach(t => self.tracks.remove(t))\n        })\n        return t.length\n      },\n\n      /**\n       * #action\n       */\n      toggleFitToWindowLock() {\n        // when going unlocked -> locked and circle is cut off, set to the\n        // locked minBpPerPx\n        self.lockedFitToWindow = !self.lockedFitToWindow\n        this.setModelViewWhenAdjust(self.atMinBpPerPx)\n        return self.lockedFitToWindow\n      },\n      /**\n       * #action\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import('./svgcomponents/SVGCircularView')\n        const html = await renderToSvg(self as CircularViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * return the view menu items\n       */\n      menuItems(): MenuItem[] {\n        return [\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              self.setDisplayedRegions([])\n            },\n            icon: FolderOpenIcon,\n          },\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n          {\n            label: 'Open track selector',\n            onClick: self.activateTrackSelector,\n            icon: TrackSelectorIcon,\n          },\n        ]\n      },\n    }))\n}\n\nexport type CircularViewStateModel = ReturnType<typeof stateModelFactory>\nexport type CircularViewModel = Instance<CircularViewStateModel>\n\nexport default stateModelFactory\n","import { observer } from 'mobx-react'\n\nconst DisplayError = observer(function ({\n  model,\n}: {\n  model: { renderProps: { radius: number }; error: unknown }\n}) {\n  const {\n    renderProps: { radius },\n    error,\n  } = model\n  return (\n    <g>\n      <defs>\n        <pattern\n          id=\"diagonalHatch\"\n          width=\"10\"\n          height=\"10\"\n          patternTransform=\"rotate(45 0 0)\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"10\"\n            style={{ stroke: 'rgba(255,0,0,0.5)', strokeWidth: 10 }}\n          />\n        </pattern>\n      </defs>\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#ffb4b4\" />\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n      <text\n        x=\"0\"\n        y=\"0\"\n        transform=\"rotate(90 0 0)\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n      >\n        {String(error)}\n      </text>\n    </g>\n  )\n})\n\nexport default DisplayError\n","import { useEffect, useState } from 'react'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const offset = 2\n  const duration = 1.4\n\n  const { primary, secondary, tertiary, quaternary } = theme.palette\n  return {\n    path: {\n      strokeDasharray: 187,\n      strokeDashoffset: 50,\n      animation: `$dash ${duration}s ease-in-out infinite, $colors ${\n        duration * 4\n      }s ease-in-out infinite`,\n    },\n    '@keyframes colors': {\n      '0%': {\n        stroke: primary.light,\n      },\n      '25%': {\n        stroke: secondary.light,\n      },\n      '50%': {\n        stroke: tertiary.light,\n      },\n      '75%': {\n        stroke: quaternary.light,\n      },\n      '100%': {\n        stroke: primary.light,\n      },\n    },\n\n    '@keyframes dash': {\n      '0%': {\n        strokeDashoffset: offset,\n      },\n      '50%': {\n        strokeDashoffset: offset / 4,\n        transform: 'rotate(135deg)',\n      },\n      '100%': {\n        strokeDashoffset: offset,\n        transform: 'rotate(720deg)',\n      },\n    },\n  }\n})\n\nconst Loading = observer(function ({\n  model: {\n    renderProps: { radius },\n  },\n}: {\n  model: { renderProps: { radius: number } }\n}) {\n  const { classes } = useStyles()\n\n  // only show the loading message after 400ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShown(true)\n    }, 400)\n    return () => {\n      clearTimeout(timeout)\n    }\n  })\n\n  return !shown ? null : (\n    <g>\n      <defs>\n        <pattern\n          id=\"diagonalHatch\"\n          width=\"10\"\n          height=\"10\"\n          patternTransform=\"rotate(45 0 0)\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"0\"\n            y2=\"10\"\n            style={{ stroke: 'rgba(255,255,255,0.5)', strokeWidth: 10 }}\n          />\n        </pattern>\n      </defs>\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#f1f1f1\" />\n      <circle cx=\"0\" cy=\"0\" r={radius} fill=\"url(#diagonalHatch)\" />\n      <text\n        x=\"0\"\n        y=\"0\"\n        transform=\"rotate(90 0 0)\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n      >\n        Loading&hellip;\n      </text>\n      <circle\n        className={classes.path}\n        fill=\"none\"\n        strokeWidth=\"4\"\n        strokeLinecap=\"round\"\n        cx=\"0\"\n        cy=\"0\"\n        r=\"60\"\n      />\n    </g>\n  )\n})\n\nexport default Loading\n","import { observer } from 'mobx-react'\n\nimport DisplayError from './DisplayError'\nimport Loading from './Loading'\n\nconst BaseChordDisplay = observer(function ({\n  display,\n}: {\n  display: {\n    filled: boolean\n    error: unknown\n    reactElement: React.ReactElement\n    renderProps: { radius: number }\n  }\n}) {\n  if (display.error) {\n    return <DisplayError model={display} />\n  } else if (!display.filled) {\n    return <Loading model={display} />\n  } else {\n    return display.reactElement\n  }\n})\n\nexport default BaseChordDisplay\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BaseChordDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst baseChordDisplayConfig = ConfigurationSchema(\n  'BaseChordDisplay',\n  {\n    /**\n     * #slot\n     */\n    onChordClick: {\n      type: 'boolean',\n      description:\n        'callback that should be run when a chord in the track is clicked',\n      defaultValue: false,\n      contextVariable: ['feature', 'track', 'pluginManager'],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'displayId',\n  },\n)\n\nexport { baseChordDisplayConfig }\n","import { getContainingView, getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\n\nimport type { CircularViewModel } from '../CircularView/model'\n\nexport function renderReactionData(self: any) {\n  const view = getContainingView(self) as CircularViewModel\n  const { rendererType } = self\n  const { rpcManager } = getSession(view)\n\n  return {\n    rendererType,\n    rpcManager,\n    renderProps: self.renderProps(),\n    renderArgs: {\n      assemblyName: view.displayedRegions[0]!.assemblyName,\n      adapterConfig: structuredClone(self.adapterConfig),\n      rendererType: rendererType.name,\n      regions: structuredClone(view.displayedRegions),\n      blockDefinitions: self.blockDefinitions,\n      sessionId: getRpcSessionId(self),\n      timeout: 1000000,\n    },\n  }\n}\n\nexport async function renderReactionEffect(props?: any, stopToken?: string) {\n  if (!props) {\n    throw new Error('cannot render with no props')\n  }\n\n  const {\n    rendererType,\n    rpcManager,\n    cannotBeRenderedReason,\n    renderArgs,\n    renderProps,\n    exportSVG,\n  } = props\n\n  if (cannotBeRenderedReason) {\n    return { message: cannotBeRenderedReason }\n  }\n\n  // don't try to render 0 or NaN radius or no regions\n  if (!renderProps.radius || !renderArgs.regions?.length) {\n    return { message: 'Skipping render' }\n  }\n\n  const { html, ...data } = await rendererType.renderInClient(rpcManager, {\n    ...renderArgs,\n    ...renderProps,\n    exportSVG,\n    stopToken,\n  })\n\n  return {\n    html,\n    data,\n    reactElement: data.reactElement,\n    renderingComponent: rendererType.ReactComponent,\n  }\n}\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  ReactRendering,\n  getContainingView,\n  getEnv,\n  getSession,\n  isFeature,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport {\n  getParentRenderProps,\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\nimport { getParent, isAlive, types } from 'mobx-state-tree'\n\nimport { baseChordDisplayConfig } from './configSchema'\nimport { renderReactionData, renderReactionEffect } from './renderReaction'\n\nimport type { CircularViewModel, ExportSvgOptions } from '../CircularView/model'\nimport type { AnyReactComponentType, Feature } from '@jbrowse/core/util'\nimport type { ThemeOptions } from '@mui/material'\n\n/**\n * #stateModel BaseChordDisplay\n * extends\n * - [BaseDisplay](../basedisplay)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const BaseChordDisplayModel = types\n  .compose(\n    'BaseChordDisplay',\n    BaseDisplay,\n    types.model({\n      /**\n       * #property\n       */\n      bezierRadiusRatio: 0.1,\n      /**\n       * #property\n       */\n      assemblyName: types.maybe(types.string),\n      /**\n       * #property\n       */\n      configuration: ConfigurationReference(baseChordDisplayConfig),\n    }),\n  )\n  .volatile(() => ({\n    // NOTE: all this volatile stuff has to be filled in at once\n    // so that it stays consistent\n    /**\n     * #volatile\n     */\n    filled: false,\n    /**\n     * #volatile\n     */\n    reactElement: undefined as React.ReactElement | undefined,\n    /**\n     * #volatile\n     */\n    data: undefined,\n    /**\n     * #volatile\n     */\n    html: undefined as string | undefined,\n    /**\n     * #volatile\n     */\n    message: '',\n    /**\n     * #volatile\n     */\n    renderingComponent: undefined as undefined | AnyReactComponentType,\n    /**\n     * #volatile\n     */\n    refNameMap: undefined as Record<string, string> | undefined,\n  }))\n  .actions(self => {\n    const { pluginManager } = getEnv(self)\n    const track = self\n    return {\n      /**\n       * #action\n       */\n      onChordClick(feature: Feature) {\n        getConf(self, 'onChordClick', { feature, track, pluginManager })\n      },\n    }\n  })\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get blockDefinitions() {\n      const view = getContainingView(self) as CircularViewModel\n      const origSlices = view.staticSlices\n      if (!self.refNameMap) {\n        return origSlices\n      }\n\n      const slices = structuredClone(origSlices)\n\n      for (const slice of slices) {\n        const regions = slice.region.elided\n          ? slice.region.regions\n          : [slice.region]\n        for (const region of regions) {\n          const renamed = self.refNameMap[region.refName]\n          if (renamed && region.refName !== renamed) {\n            region.refName = renamed\n          }\n        }\n      }\n      return slices\n    },\n\n    /**\n     * #method\n     */\n    renderProps() {\n      const view = getContainingView(self) as CircularViewModel\n      return {\n        ...getParentRenderProps(self),\n        rpcDriverName: self.rpcDriverName,\n        bezierRadius: view.radiusPx * self.bezierRadiusRatio,\n        radius: view.radiusPx,\n        blockDefinitions: this.blockDefinitions,\n        onChordClick: self.onChordClick,\n      }\n    },\n\n    /**\n     * #getter\n     * the pluggable element type object for this display's renderer\n     */\n    get rendererType() {\n      return getEnv(self).pluginManager.getRendererType(self.rendererTypeName)\n    },\n\n    /**\n     * #getter\n     * returns a string feature ID if the globally-selected object is probably\n     * a feature\n     */\n    get selectedFeatureId() {\n      if (!isAlive(self)) {\n        return undefined\n      }\n      const { selection } = getSession(self)\n      return isFeature(selection) ? selection.id() : undefined\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    renderStarted() {\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.data = undefined\n      self.html = undefined\n      self.error = undefined\n      self.renderingComponent = undefined\n    },\n    /**\n     * #action\n     */\n    renderSuccess({\n      message,\n      data,\n      reactElement,\n      html,\n      renderingComponent,\n    }: {\n      message?: string\n      data?: any\n      html?: string\n      reactElement?: React.ReactElement\n      renderingComponent?: AnyReactComponentType\n    }) {\n      if (message) {\n        self.filled = false\n        self.message = message\n        self.reactElement = undefined\n        self.data = undefined\n        self.html = undefined\n        self.error = undefined\n        self.renderingComponent = undefined\n      } else {\n        self.filled = true\n        self.message = ''\n        self.reactElement = reactElement\n        self.data = data\n        self.html = html\n        self.error = undefined\n        self.renderingComponent = renderingComponent\n      }\n    },\n    /**\n     * #action\n     */\n    renderError(error: unknown) {\n      console.error(error)\n      // the rendering failed for some reason\n      self.filled = false\n      self.message = ''\n      self.reactElement = undefined\n      self.html = undefined\n      self.data = undefined\n      self.error = error\n      self.renderingComponent = undefined\n    },\n\n    /**\n     * #action\n     */\n    setRefNameMap(refNameMap: Record<string, string>) {\n      self.refNameMap = refNameMap\n    },\n  }))\n  .actions(self => ({\n    afterAttach() {\n      makeAbortableReaction(\n        self,\n        renderReactionData,\n        renderReactionEffect,\n        {\n          name: `${self.type} ${self.id} rendering`,\n          fireImmediately: true,\n        },\n        self.renderStarted,\n        self.renderSuccess,\n        self.renderError,\n      )\n\n      makeAbortableReaction(\n        self,\n        () => {\n          return {\n            assemblyNames: getTrackAssemblyNames(self.parentTrack),\n            adapter: getConf(getParent<any>(self, 2), 'adapter'),\n            assemblyManager: getSession(self).assemblyManager,\n          } as const\n        },\n        async (args, stopToken) => {\n          return args\n            ? args.assemblyManager.getRefNameMapForAdapter(\n                args.adapter,\n                args.assemblyNames[0],\n                {\n                  stopToken,\n                  sessionId: getRpcSessionId(self),\n                },\n              )\n            : undefined\n        },\n        {\n          name: `${self.type} ${self.id} getting refNames`,\n          fireImmediately: true,\n        },\n        () => {},\n        refNameMap => {\n          if (refNameMap) {\n            self.setRefNameMap(refNameMap)\n          }\n        },\n        error => {\n          console.error(error)\n          self.setError(error)\n        },\n      )\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     */\n    async renderSvg(\n      opts: ExportSvgOptions & {\n        theme?: ThemeOptions\n      },\n    ) {\n      const data = renderReactionData(self)\n      const rendering = await renderReactionEffect({\n        ...data,\n        exportSVG: opts,\n        theme: opts.theme || data.renderProps.theme,\n      })\n      return <ReactRendering rendering={rendering} />\n    },\n  }))\n","import Plugin from '@jbrowse/core/Plugin'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport DataUsageIcon from '@mui/icons-material/DataUsage'\n\nimport CircularViewF from './CircularView'\nimport LaunchCircularViewF from './LaunchCircularView'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default class CircularViewPlugin extends Plugin {\n  name = 'CircularViewPlugin'\n\n  install(pluginManager: PluginManager) {\n    CircularViewF(pluginManager)\n    LaunchCircularViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Circular view',\n        icon: DataUsageIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('CircularView', {})\n        },\n      })\n    }\n  }\n}\n\nexport {\n  BaseChordDisplayComponent,\n  BaseChordDisplayModel,\n  baseChordDisplayConfig,\n} from './BaseChordDisplay'\n\nexport {\n  type CircularViewModel,\n  type CircularViewStateModel,\n} from './CircularView/model'\n","import { lazy } from 'react'\n\nimport ViewType from '@jbrowse/core/pluggableElementTypes/ViewType'\n\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function CircularViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(\n    () =>\n      new ViewType({\n        ReactComponent: lazy(() => import('./components/CircularView')),\n        stateModel: stateModelFactory(pluginManager),\n        name: 'CircularView',\n        displayName: 'Circular view',\n      }),\n  )\n}\n","import { when } from 'mobx'\n\nimport type { CircularViewModel } from '../CircularView/model'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\ntype CGV = CircularViewModel\n\nexport default function LaunchCircularViewF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-CircularView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      tracks = [],\n    }: {\n      session: AbstractSessionModel\n      assembly?: string\n      loc: string\n      tracks?: string[]\n    }) => {\n      const { assemblyManager } = session\n      const view = session.addView('CircularView', {}) as CGV\n\n      await when(() => view.initialized)\n\n      if (!assembly) {\n        throw new Error(\n          'No assembly provided when launching circular genome view',\n        )\n      }\n\n      const asm = await assemblyManager.waitForAssembly(assembly)\n      if (!asm) {\n        throw new Error(\n          `Assembly \"${assembly}\" not found when launching circular genome view`,\n        )\n      }\n\n      view.setDisplayedRegions(asm.regions || [])\n\n      tracks.forEach(track => {\n        view.showTrack(track)\n      })\n    },\n  )\n}\n","// get relative reference sequence positions for positions given relative to\n// the read sequence\nexport function getNextRefPos(cigarOps: string[], positions: number[]) {\n  let readPos = 0\n  let refPos = 0\n  let currPos = 0\n  const ret = []\n  for (let i = 0; i < cigarOps.length && currPos < positions.length; i += 2) {\n    const len = +cigarOps[i]!\n    const op = cigarOps[i + 1]!\n    if (op === 'S' || op === 'I') {\n      for (let i = 0; i < len && currPos < positions.length; i++) {\n        if (positions[currPos] === readPos + i) {\n          currPos++\n        }\n      }\n      readPos += len\n    } else if (op === 'D' || op === 'N') {\n      refPos += len\n    } else if (op === 'M' || op === 'X' || op === '=') {\n      for (let i = 0; i < len && currPos < positions.length; i++) {\n        if (positions[currPos] === readPos + i) {\n          ret.push({\n            ref: refPos + i,\n            idx: currPos,\n          })\n          currPos++\n        }\n      }\n      readPos += len\n      refPos += len\n    }\n  }\n  return ret\n}\n","import { useEffect, useState } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { clamp, getSession } from '@jbrowse/core/util'\n\nimport type { LayoutRecord } from './types'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LGV = LinearGenomeViewModel\n\ninterface Display {\n  height: number\n  scrollTop: number\n  SNPCoverageDisplay?: { height: number }\n  searchFeatureByID?: (str: string) => LayoutRecord\n}\n\ninterface Track {\n  displays: Display[]\n}\n\nconst [, TOP, , BOTTOM] = [0, 1, 2, 3] as const\n\nfunction cheight(chunk: LayoutRecord) {\n  return chunk[BOTTOM] - chunk[TOP]\n}\n\nexport function heightFromSpecificLevel(\n  views: LGV[],\n  trackId: string,\n  level: number,\n  getYPosOverride?: (trackId: string, level: number) => number,\n) {\n  return getYPosOverride\n    ? getYPosOverride(trackId, level)\n    : views[level]!.trackRefs[trackId]?.getBoundingClientRect().top || 0\n}\n\nexport function getPxFromCoordinate(view: LGV, refName: string, coord: number) {\n  return (view.bpToPx({ refName, coord })?.offsetPx || 0) - view.offsetPx\n}\n\n// get's the yposition of a layout record in a track\nexport function yPos(\n  trackId: string,\n  level: number,\n  views: LGV[],\n  tracks: Track[],\n  c: LayoutRecord,\n  getYPosOverride?: (trackId: string, level: number) => number,\n) {\n  const display = tracks[level]!.displays[0]!\n  const min = 0\n  const max = display.height\n  let offset = 0\n  const { SNPCoverageDisplay } = display\n  if (SNPCoverageDisplay) {\n    offset = SNPCoverageDisplay.height\n  }\n  const yPos = getYPosOverride ? 0 : display.scrollTop\n  return (\n    clamp(c[TOP] - yPos + cheight(c) / 2 + offset, min, max) +\n    heightFromSpecificLevel(views, trackId, level, getYPosOverride) +\n    display.scrollTop\n  )\n}\n\n// we combo a useEffect and useState combo to force rerender on snap changing.\n// the setup of this being a useEffect+useState makes it re-render once the\n// useEffect is called, which is generally the \"next frame\". If we removed the\n// below use\nexport const useNextFrame = (variable: unknown) => {\n  const [, setNextFrameState] = useState<unknown>()\n  useEffect(() => {\n    setNextFrameState(variable)\n  }, [variable])\n}\n\n// https://stackoverflow.com/a/49186706/2129219 the array-intersection package\n// on npm has a large kb size, and we are just intersecting open track ids so\n// simple is better\nexport function intersect<T>(\n  cb: (l: T) => string,\n  a1: T[] = [],\n  a2: T[] = [],\n  ...rest: T[][]\n): T[] {\n  const ids = new Set(a2.map(elt => cb(elt)))\n  const a12 = a1.filter(value => ids.has(cb(value)))\n  return rest.length === 0 ? a12 : intersect(cb, a12, ...rest)\n}\n\nconst startClip = new RegExp(/(\\d+)[SH]$/)\nconst endClip = new RegExp(/^(\\d+)([SH])/)\n\nexport function getClip(cigar: string, strand: number) {\n  return strand === -1\n    ? +(startClip.exec(cigar) || [])[1]! || 0\n    : +(endClip.exec(cigar) || [])[1]! || 0\n}\n\nexport function calc(track: Track, f: Feature) {\n  return track.displays[0]!.searchFeatureByID?.(f.id())\n}\n\nexport async function getBlockFeatures(\n  model: { views: LinearGenomeViewModel[] },\n  track: { configuration: AnyConfigurationModel },\n) {\n  const { views } = model\n  const { rpcManager, assemblyManager } = getSession(model)\n  const assemblyName = model.views[0]?.assemblyNames[0]\n  if (!assemblyName) {\n    return undefined\n  }\n  const assembly = await assemblyManager.waitForAssembly(assemblyName)\n  if (!assembly) {\n    return undefined // throw new Error(`assembly not found: \"${assemblyName}\"`)\n  }\n  const sessionId = track.configuration.trackId\n  return Promise.all(\n    views.map(async view =>\n      (\n        (await rpcManager.call(sessionId, 'CoreGetFeatures', {\n          adapterConfig: getConf(track, ['adapter']),\n          sessionId,\n          regions: view.staticBlocks.contentBlocks,\n        })) as Feature[][]\n      ).flat(),\n    ),\n  )\n}\n","import BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { dedupe } from '@jbrowse/core/util'\n\nimport type { SearchScope } from '@jbrowse/core/TextSearch/TextSearchManager'\nimport type { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport type { SearchType } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { TextSearchManager } from '@jbrowse/core/util'\n\nexport async function fetchResults({\n  queryString,\n  searchType,\n  searchScope,\n  rankSearchResults,\n  textSearchManager,\n  assembly,\n}: {\n  queryString: string\n  searchScope: SearchScope\n  rankSearchResults: (results: BaseResult[]) => BaseResult[]\n  searchType?: SearchType\n  textSearchManager?: TextSearchManager\n  assembly?: Assembly\n}) {\n  if (!textSearchManager) {\n    console.warn('No text search manager')\n  }\n\n  const textSearchResults = await textSearchManager?.search(\n    {\n      queryString,\n      searchType,\n    },\n    searchScope,\n    rankSearchResults,\n  )\n\n  const refNameResults = assembly?.allRefNames\n    ?.filter(ref => ref.toLowerCase().startsWith(queryString.toLowerCase()))\n    .slice(0, 10)\n    .map(r => new BaseResult({ label: r }))\n\n  return dedupe(\n    [...(refNameResults || []), ...(textSearchResults || [])],\n    elt => elt.getId(),\n  )\n}\n\n// splits on the last instance of a character\nexport function splitLast(str: string, split: string): [string, string] {\n  const lastIndex = str.lastIndexOf(split)\n  if (lastIndex === -1) {\n    return [str, '']\n  } else {\n    const before = str.slice(0, lastIndex)\n    const after = str.slice(lastIndex + 1)\n    return [before, after]\n  }\n}\n\nexport function getRelativeX(\n  event: { clientX: number; target: EventTarget | null },\n  element: HTMLElement | null,\n) {\n  return event.clientX - (element?.getBoundingClientRect().left || 0)\n}\n\nexport function getCytobands(assembly: Assembly | undefined, refName: string) {\n  return (\n    assembly?.cytobands\n      ?.map(f => ({\n        refName:\n          assembly.getCanonicalRefName(f.get('refName')) || f.get('refName'),\n        start: f.get('start'),\n        end: f.get('end'),\n        type: f.get('gieStain') as string,\n      }))\n      .filter(f => f.refName === refName) || []\n  )\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config BaseLinearDisplay\n * #category display\n *\n * `BaseLinearDisplay` is a \"base\" config that is extended by other configs including\n * - `LinearBasicDisplay` (used for feature tracks, etc)\n * - `LinearBareDisplay` (more stripped down than even the basic display, not\n *   commonly used)\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst baseLinearDisplayConfigSchema = ConfigurationSchema(\n  'BaseLinearDisplay',\n  {\n    /**\n     * #slot\n     */\n    maxFeatureScreenDensity: {\n      type: 'number',\n      description:\n        'maximum features per pixel that is displayed in the view, used if byte size estimates not available',\n      defaultValue: 0.3,\n    },\n    /**\n     * #slot\n     */\n    fetchSizeLimit: {\n      type: 'number',\n      defaultValue: 1_000_000,\n      description:\n        \"maximum data to attempt to download for a given track, used if adapter doesn't specify one\",\n    },\n    /**\n     * #slot\n     */\n    height: {\n      type: 'number',\n      defaultValue: 100,\n      description: 'default height for the track',\n    },\n    /**\n     * #slot\n     */\n    mouseover: {\n      type: 'string',\n      description: 'text to display when the cursor hovers over a feature',\n      defaultValue: `jexl:get(feature,'name')`,\n\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot\n     * config jexlFilters are deferred evaluated so they are prepended with\n     * jexl at runtime rather than being stored with jexl in the config\n     */\n    jexlFilters: {\n      type: 'stringArray',\n      description:\n        'default set of jexl filters to apply to a track. note: these do not use the jexl prefix because they have a deferred evaluation system',\n      defaultValue: [],\n    },\n  },\n  {\n    /**\n     * #identifier\n     */\n    explicitIdentifier: 'displayId',\n  },\n)\n\nexport default baseLinearDisplayConfigSchema\n","// takes an array or Map or Set (anything iterable with values()) of Maps and\n// lets you query them as one Map\nexport default class CompositeMap<T, U> {\n  constructor(private submaps: Map<T, U>[]) {}\n\n  has(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  get(id: T) {\n    for (const submap of this.submaps.values()) {\n      if (submap.has(id)) {\n        return submap.get(id)\n      }\n    }\n    return undefined\n  }\n\n  *values() {\n    for (const key of this.keys()) {\n      yield this.get(key) as U\n    }\n  }\n\n  *keys() {\n    const keys = new Set<T>()\n    for (const submap of this.submaps.values()) {\n      for (const key of submap.keys()) {\n        keys.add(key)\n      }\n    }\n    for (const key of keys) {\n      yield key\n    }\n  }\n\n  find<V>(f: (arg0: U) => V) {\n    for (const submap of this.submaps.values()) {\n      for (const value of submap.values()) {\n        const found = f(value)\n        if (found) {\n          return value\n        }\n      }\n    }\n    return undefined\n  }\n\n  *[Symbol.iterator]() {\n    for (const key of this.keys()) {\n      yield [key, this.get(key)]\n    }\n  }\n\n  *entries() {\n    for (const k of this.keys()) {\n      yield [k, this.get(k)]\n    }\n  }\n}\n","import { Button } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\n\nimport BlockMsg from '../components/BlockMsg'\n\nimport type { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\n\nconst TooLargeMessage = observer(function ({\n  model,\n}: {\n  model: {\n    regionTooLargeReason: string\n    featureDensityStats?: FeatureDensityStats\n    setFeatureDensityStatsLimit: (s?: FeatureDensityStats) => void\n    reload: () => void\n  }\n}) {\n  const { regionTooLargeReason } = model\n  return (\n    <BlockMsg\n      severity=\"warning\"\n      action={\n        <Button\n          onClick={() => {\n            if (isAlive(model)) {\n              model.setFeatureDensityStatsLimit(model.featureDensityStats)\n              model.reload()\n            }\n          }}\n        >\n          Force load\n        </Button>\n      }\n      message={[\n        regionTooLargeReason,\n        'Zoom in to see features or force load (may be slow)',\n      ]\n        .filter(f => !!f)\n        .join('. ')}\n    />\n  )\n})\n\nexport default TooLargeMessage\n","import { getConf } from '@jbrowse/core/configuration'\nimport { getContainingView } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport { addDisposer, isAlive, types } from 'mobx-state-tree'\n\nimport autorunFeatureDensityStats from './autorunFeatureDensityStats'\nimport { getDisplayStr, getFeatureDensityStatsPre } from './util'\nimport TooLargeMessage from '../components/TooLargeMessage'\n\nimport type { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport type { FeatureDensityStats } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { Region } from '@jbrowse/core/util/types'\n\ntype LGV = LinearGenomeViewModel\n\n/**\n * #stateModel FeatureDensityMixin\n * #category display\n */\nexport default function FeatureDensityMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      userBpPerPxLimit: types.maybe(types.number),\n      /**\n       * #property\n       */\n\n      userByteSizeLimit: types.maybe(types.number),\n    })\n    .volatile(() => ({\n      featureDensityStatsP: undefined as\n        | undefined\n        | Promise<FeatureDensityStats>,\n      featureDensityStats: undefined as undefined | FeatureDensityStats,\n      currStatsBpPerPx: 0,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get currentBytesRequested() {\n        return self.featureDensityStats?.bytes || 0\n      },\n\n      /**\n       * #getter\n       */\n      get currentFeatureScreenDensity() {\n        const view = getContainingView(self) as LGV\n        return (self.featureDensityStats?.featureDensity || 0) * view.bpPerPx\n      },\n\n      /**\n       * #getter\n       */\n      get maxFeatureScreenDensity() {\n        // @ts-expect-error\n        return getConf(self, 'maxFeatureScreenDensity')\n      },\n      /**\n       * #getter\n       */\n      get featureDensityStatsReady() {\n        const view = getContainingView(self) as LGV\n        return (\n          self.currStatsBpPerPx === view.bpPerPx &&\n          (!!self.featureDensityStats || !!self.userBpPerPxLimit)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get maxAllowableBytes() {\n        return (\n          self.userByteSizeLimit ||\n          self.featureDensityStats?.fetchSizeLimit ||\n          // @ts-expect-error\n          (getConf(self, 'fetchSizeLimit') as number)\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => autorunFeatureDensityStats(self as any)),\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setCurrStatsBpPerPx(n: number) {\n        self.currStatsBpPerPx = n\n      },\n      /**\n       * #action\n       */\n      setFeatureDensityStatsLimit(stats?: FeatureDensityStats) {\n        const view = getContainingView(self) as LGV\n        if (stats?.bytes) {\n          self.userByteSizeLimit = stats.bytes\n        } else {\n          self.userBpPerPxLimit = view.bpPerPx\n        }\n      },\n      /**\n       * #action\n       */\n      getFeatureDensityStats() {\n        if (!self.featureDensityStatsP) {\n          self.featureDensityStatsP = getFeatureDensityStatsPre(\n            self as any,\n          ).catch((e: unknown) => {\n            if (isAlive(self)) {\n              this.setFeatureDensityStatsP(undefined)\n            }\n            throw e\n          })\n        }\n        return self.featureDensityStatsP\n      },\n\n      /**\n       * #action\n       */\n      setFeatureDensityStatsP(arg: any) {\n        self.featureDensityStatsP = arg\n      },\n\n      /**\n       * #action\n       */\n      setFeatureDensityStats(featureDensityStats?: FeatureDensityStats) {\n        self.featureDensityStats = featureDensityStats\n      },\n      /**\n       * #action\n       */\n      clearFeatureDensityStats() {\n        self.featureDensityStatsP = undefined\n        self.featureDensityStats = undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * region is too large if:\n       * - stats are ready\n       * - region is greater than 20kb (don't warn when zoomed in less than that)\n       * - and bytes is greater than max allowed bytes or density greater than max\n       *   density\n       */\n      get regionTooLarge() {\n        const view = getContainingView(self) as LGV\n        if (\n          !self.featureDensityStatsReady ||\n          view.dynamicBlocks.totalBp < 20_000\n        ) {\n          return false\n        }\n        return (\n          self.currentBytesRequested > self.maxAllowableBytes ||\n          (self.userBpPerPxLimit\n            ? view.bpPerPx > self.userBpPerPxLimit\n            : self.currentFeatureScreenDensity > self.maxFeatureScreenDensity)\n        )\n      },\n\n      /**\n       * #getter\n       * only shows a message of bytes requested is defined, the feature density\n       * based stats don't produce any helpful message besides to zoom in\n       */\n      get regionTooLargeReason() {\n        const req = self.currentBytesRequested\n        const max = self.maxAllowableBytes\n\n        return req && req > max\n          ? `Requested too much data (${getDisplayStr(req)})`\n          : ''\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get statsReadyAndRegionNotTooLarge() {\n        return self.featureDensityStatsReady && !self.regionTooLarge\n      },\n      /**\n       * #method\n       */\n      regionCannotBeRenderedText(_region: Region) {\n        return self.regionTooLarge ? 'Force load to see features' : ''\n      },\n\n      /**\n       * #method\n       * @param region -\n       * @returns falsy if the region is fine to try rendering. Otherwise,\n       *  return a react node + string of text.\n       *  string of text describes why it cannot be rendered\n       *  react node allows user to force load at current setting\n       */\n      regionCannotBeRendered(_region: Region) {\n        return self.regionTooLarge ? (\n          <TooLargeMessage model={self as any} />\n        ) : null\n      },\n    }))\n}\n","import { getContainingView, isAbortException } from '@jbrowse/core/util'\nimport { isAlive } from 'mobx-state-tree'\n\nimport type { BaseLinearDisplayModel } from './BaseLinearDisplayModel'\nimport type { LinearGenomeViewModel } from '../../LinearGenomeView'\n\n// stats estimation autorun calls getFeatureDensityStats against the data\n// adapter which by default uses featureDensity, but can also respond with a\n// byte size estimate and fetch size limit (data adapter can define what is too\n// much data)\nexport default async function autorunFeatureDensityStats(\n  self: BaseLinearDisplayModel,\n) {\n  try {\n    const view = getContainingView(self) as LinearGenomeViewModel\n\n    // extra check for contentBlocks.length\n    // https://github.com/GMOD/jbrowse-components/issues/2694\n    if (\n      !view.initialized ||\n      !view.staticBlocks.contentBlocks.length ||\n      view.bpPerPx === self.currStatsBpPerPx ||\n      self.error\n    ) {\n      return\n    }\n\n    // don't re-estimate featureDensity even if zoom level changes,\n    // jbrowse 1-style assume it's sort of representative\n    if (self.featureDensityStats?.featureDensity !== undefined) {\n      self.setCurrStatsBpPerPx(view.bpPerPx)\n      return\n    }\n\n    self.clearFeatureDensityStats()\n    self.setCurrStatsBpPerPx(view.bpPerPx)\n    const stats = await self.getFeatureDensityStats()\n    if (isAlive(self)) {\n      self.setFeatureDensityStats(stats)\n    }\n  } catch (e) {\n    console.error(e)\n    if (isAlive(self) && !isAbortException(e)) {\n      self.setError(e)\n    }\n  }\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nconst minDisplayHeight = 20\n\n/**\n * #stateModel TrackHeightMixin\n * #category display\n */\nexport default function TrackHeightMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      heightPreConfig: types.maybe(\n        types.refinement(\n          'displayHeight',\n          types.number,\n          n => n >= minDisplayHeight,\n        ),\n      ),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      scrollTop: 0,\n    }))\n    .views(self => ({\n      get height() {\n        // @ts-expect-error\n        return self.heightPreConfig ?? (getConf(self, 'height') as number)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setScrollTop(scrollTop: number) {\n        self.scrollTop = scrollTop\n      },\n      /**\n       * #action\n       */\n      setHeight(displayHeight: number) {\n        self.heightPreConfig = Math.max(displayHeight, minDisplayHeight)\n        return self.height\n      },\n      /**\n       * #action\n       */\n      resizeHeight(distance: number) {\n        const oldHeight = self.height\n        const newHeight = this.setHeight(self.height + distance)\n        return newHeight - oldHeight\n      },\n    }))\n}\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { ConfigurationReference } from '@jbrowse/core/configuration'\nimport { BaseDisplay } from '@jbrowse/core/pluggableElementTypes/models'\nimport {\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isFeature,\n  isSelectionContainer,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport CompositeMap from '@jbrowse/core/util/compositeMap'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport CenterFocusStrongIcon from '@mui/icons-material/CenterFocusStrong'\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\nimport { autorun } from 'mobx'\nimport { addDisposer, isAlive, types } from 'mobx-state-tree'\n\nimport FeatureDensityMixin from './FeatureDensityMixin'\nimport TrackHeightMixin from './TrackHeightMixin'\nimport configSchema from './configSchema'\nimport BlockState from './serverSideRenderedBlock'\n\nimport type { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport type { ExportSvgOptions } from '../../LinearGenomeView/types'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { AnyReactComponentType, Feature } from '@jbrowse/core/util'\nimport type { BaseBlock } from '@jbrowse/core/util/blockTypes'\nimport type { ThemeOptions } from '@mui/material'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst Tooltip = lazy(() => import('../components/Tooltip'))\n\ntype LGV = LinearGenomeViewModel\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\n\ntype LayoutRecord = [number, number, number, number]\n\nexport interface ExportSvgDisplayOptions extends ExportSvgOptions {\n  overrideHeight: number\n  theme: ThemeOptions\n}\n\n/**\n * #stateModel BaseLinearDisplay\n * #category display\n *\n * BaseLinearDisplay is used as the basis for many linear genome view tracks.\n * It is block based, and can use 'static blocks' or 'dynamic blocks'\n *\n * extends\n * - [BaseDisplay](../basedisplay)\n * - [TrackHeightMixin](../trackheightmixin)\n * - [FeatureDensityMixin](../featuredensitymixin)\n */\nfunction stateModelFactory() {\n  return types\n    .compose(\n      'BaseLinearDisplay',\n      BaseDisplay,\n      TrackHeightMixin(),\n      FeatureDensityMixin(),\n      types.model({\n        /**\n         * #property\n         * updated via autorun\n         */\n        blockState: types.map(BlockState),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      featureIdUnderMouse: undefined as undefined | string,\n      /**\n       * #volatile\n       */\n      contextMenuFeature: undefined as undefined | Feature,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * if a display-level message should be displayed instead of the blocks,\n       * make this return a react component\n       */\n      get DisplayMessageComponent(): undefined | React.FC<any> {\n        return undefined\n      },\n      /**\n       * #getter\n       */\n      get blockType(): 'staticBlocks' | 'dynamicBlocks' {\n        return 'staticBlocks'\n      },\n      /**\n       * #getter\n       */\n      get blockDefinitions() {\n        const view = getContainingView(self) as LGV\n        if (!view.initialized) {\n          throw new Error('view not initialized yet')\n        }\n        return view[this.blockType]\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * how many milliseconds to wait for the display to\n       * \"settle\" before re-rendering a block\n       */\n      get renderDelay() {\n        return 50\n      },\n\n      /**\n       * #getter\n       */\n      get TooltipComponent(): AnyReactComponentType {\n        return Tooltip as AnyReactComponentType\n      },\n\n      /**\n       * #getter\n       * returns a string feature ID if the globally-selected object\n       * is probably a feature\n       */\n      get selectedFeatureId() {\n        if (isAlive(self)) {\n          const { selection } = getSession(self)\n          // does it quack like a feature?\n          if (isFeature(selection)) {\n            return selection.id()\n          }\n        }\n        return undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * a CompositeMap of `featureId -> feature obj` that\n       * just looks in all the block data for that feature\n       */\n      get features() {\n        const featureMaps = []\n        for (const block of self.blockState.values()) {\n          if (block.features) {\n            featureMaps.push(block.features)\n          }\n        }\n        return new CompositeMap(featureMaps)\n      },\n\n      /**\n       * #getter\n       */\n      get featureUnderMouse() {\n        const feat = self.featureIdUnderMouse\n        return feat ? this.features.get(feat) : undefined\n      },\n\n      /**\n       * #getter\n       */\n      getFeatureOverlapping(\n        blockKey: string,\n        x: number,\n        y: number,\n      ): string | undefined {\n        return self.blockState.get(blockKey)?.layout?.getByCoord(x, y)\n      },\n\n      /**\n       * #getter\n       */\n      getFeatureByID(blockKey: string, id: string): LayoutRecord | undefined {\n        return self.blockState.get(blockKey)?.layout?.getByID(id)\n      },\n\n      /**\n       * #getter\n       */\n      searchFeatureByID(id: string): LayoutRecord | undefined {\n        let ret: LayoutRecord | undefined\n        self.blockState.forEach(block => {\n          const val = block.layout?.getByID(id)\n          if (val) {\n            ret = val\n          }\n        })\n        return ret\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addBlock(key: string, block: BaseBlock) {\n        self.blockState.set(\n          key,\n          BlockState.create({\n            key,\n            region: block.toRegion(),\n          }),\n        )\n      },\n\n      /**\n       * #action\n       */\n      deleteBlock(key: string) {\n        self.blockState.delete(key)\n      },\n      /**\n       * #action\n       */\n      selectFeature(feature: Feature) {\n        const session = getSession(self)\n        if (isSessionModelWithWidgets(session)) {\n          const featureWidget = session.addWidget(\n            'BaseFeatureWidget',\n            'baseFeature',\n            {\n              view: getContainingView(self),\n              track: getContainingTrack(self),\n              featureData: feature.toJSON(),\n            },\n          )\n\n          session.showWidget(featureWidget)\n        }\n        if (isSelectionContainer(session)) {\n          session.setSelection(feature)\n        }\n      },\n      /**\n       * #action\n       */\n      navToFeature(feature: Feature) {\n        const view = getContainingView(self) as LGV\n        view.navTo({\n          refName: feature.get('refName'),\n          start: feature.get('start'),\n          end: feature.get('end'),\n        })\n      },\n      /**\n       * #action\n       */\n      clearFeatureSelection() {\n        getSession(self).clearSelection()\n      },\n      /**\n       * #action\n       */\n      setFeatureIdUnderMouse(feature?: string) {\n        self.featureIdUnderMouse = feature\n      },\n\n      /**\n       * #action\n       */\n      setContextMenuFeature(feature?: Feature) {\n        self.contextMenuFeature = feature\n      },\n    }))\n\n    .actions(self => {\n      const { reload: superReload } = self\n\n      return {\n        /**\n         * #action\n         */\n        async reload() {\n          self.setError()\n          self.setCurrStatsBpPerPx(0)\n          self.clearFeatureDensityStats()\n          ;[...self.blockState.values()].forEach(val => {\n            val.doReload()\n          })\n          superReload()\n        },\n      }\n    })\n\n    .views(self => ({\n      /**\n       * #method\n       */\n      trackMenuItems(): MenuItem[] {\n        return []\n      },\n\n      /**\n       * #method\n       */\n      contextMenuItems(): MenuItem[] {\n        return [\n          ...(self.contextMenuFeature\n            ? [\n                {\n                  label: 'Open feature details',\n                  icon: MenuOpenIcon,\n                  onClick: () => {\n                    if (self.contextMenuFeature) {\n                      self.selectFeature(self.contextMenuFeature)\n                    }\n                  },\n                },\n                {\n                  label: 'Zoom to feature',\n                  icon: CenterFocusStrongIcon,\n                  onClick: () => {\n                    if (self.contextMenuFeature) {\n                      self.navToFeature(self.contextMenuFeature)\n                    }\n                  },\n                },\n              ]\n            : []),\n        ]\n      },\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          notReady: !self.featureDensityStatsReady,\n          rpcDriverName: self.rpcDriverName,\n\n          displayModel: self,\n          onFeatureClick(_: unknown, featureId?: string) {\n            const f = featureId || self.featureIdUnderMouse\n            if (!f) {\n              self.clearFeatureSelection()\n            } else {\n              const feature = self.features.get(f)\n              if (feature) {\n                self.selectFeature(feature)\n              }\n            }\n          },\n          onClick() {\n            self.clearFeatureSelection()\n          },\n          // similar to click but opens a menu with further options\n          onFeatureContextMenu(_: unknown, featureId?: string) {\n            const f = featureId || self.featureIdUnderMouse\n            if (!f) {\n              self.clearFeatureSelection()\n            } else {\n              // feature id under mouse passed to context menu\n              self.setContextMenuFeature(self.features.get(f))\n            }\n          },\n\n          onMouseMove(_: unknown, featureId?: string) {\n            self.setFeatureIdUnderMouse(featureId)\n          },\n\n          onMouseLeave(_: unknown) {\n            self.setFeatureIdUnderMouse(undefined)\n          },\n\n          onContextMenu() {\n            self.setContextMenuFeature(undefined)\n            self.clearFeatureSelection()\n          },\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #method\n       */\n      async renderSvg(opts: ExportSvgDisplayOptions) {\n        const { renderBaseLinearDisplaySvg } = await import('./renderSvg')\n        return renderBaseLinearDisplaySvg(self as BaseLinearDisplayModel, opts)\n      },\n      afterAttach() {\n        // watch the parent's blocks to update our block state when they\n        // change, then we recreate the blocks on our own model (creating and\n        // deleting to match the parent blocks)\n        addDisposer(\n          self,\n          autorun(() => {\n            const blocksPresent: Record<string, boolean> = {}\n            const view = getContainingView(self) as LGV\n            if (!view.initialized) {\n              return\n            }\n            self.blockDefinitions.contentBlocks.forEach(block => {\n              blocksPresent[block.key] = true\n              if (!self.blockState.has(block.key)) {\n                self.addBlock(block.key, block)\n              }\n            })\n            self.blockState.forEach((_, key) => {\n              if (!blocksPresent[key]) {\n                self.deleteBlock(key as string)\n              }\n            })\n          }),\n        )\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!snap) {\n        return snap\n      }\n      // rewrite \"height\" from older snapshots to \"heightPreConfig\", this allows\n      // us to maintain a height \"getter\" going forward\n      // @ts-expect-error\n      const { height, ...rest } = snap\n      return { heightPreConfig: height, ...rest }\n    })\n    .postProcessSnapshot(snap => {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const r = snap as Omit<typeof snap, symbol>\n      const { blockState, ...rest } = r\n      return rest\n    })\n}\n\nexport const BaseLinearDisplay = stateModelFactory()\n\nexport type BaseLinearDisplayStateModel = typeof BaseLinearDisplay\nexport type BaseLinearDisplayModel = Instance<BaseLinearDisplayStateModel>\n","import { getContainingView } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from './Block'\n\nimport type { LinearGenomeViewModel } from '../../LinearGenomeView'\nimport type { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  linearBlocks: {\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    position: 'absolute',\n    minHeight: '100%',\n    display: 'flex',\n  },\n  heightOverflowed: {\n    position: 'absolute',\n    color: 'rgb(77,77,77)',\n    borderBottom: '2px solid rgb(77,77,77)',\n    textShadow: 'white 0px 0px 1px',\n    whiteSpace: 'nowrap',\n    width: '100%',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    zIndex: 2000,\n    boxSizing: 'border-box',\n  },\n})\n\nconst RenderedBlocks = observer(function ({\n  model,\n}: {\n  model: BaseLinearDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { blockDefinitions, blockState } = model\n  return (\n    <>\n      {blockDefinitions.map(block => {\n        const key = `${model.id}-${block.key}`\n        if (block.type === 'ContentBlock') {\n          const state = blockState.get(block.key)\n          return (\n            <ContentBlockComponent block={block} key={key}>\n              {state?.ReactComponent ? (\n                <state.ReactComponent model={state} />\n              ) : null}\n              {state?.maxHeightReached ? (\n                <div\n                  className={classes.heightOverflowed}\n                  style={{\n                    top: state.layout.getTotalHeight() - 16,\n                    pointerEvents: 'none',\n                    height: 16,\n                  }}\n                >\n                  Max height reached\n                </div>\n              ) : null}\n            </ContentBlockComponent>\n          )\n        }\n        if (block.type === 'ElidedBlock') {\n          return <ElidedBlockComponent key={key} width={block.widthPx} />\n        }\n        if (block.type === 'InterRegionPaddingBlock') {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={key}\n              width={block.widthPx}\n              style={{ background: 'none' }}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        throw new Error(`invalid block type ${JSON.stringify(block)}`)\n      })}\n    </>\n  )\n})\n\nexport { RenderedBlocks }\n\nconst LinearBlocks = observer(function ({\n  model,\n}: {\n  model: BaseLinearDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { blockDefinitions } = model\n  const viewModel = getContainingView(model) as LGV\n  return (\n    <div\n      className={classes.linearBlocks}\n      style={{\n        left: blockDefinitions.offsetPx - viewModel.offsetPx,\n      }}\n    >\n      <RenderedBlocks model={model} />\n    </div>\n  )\n})\n\nexport default LinearBlocks\n","import { Suspense, useRef, useState } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { Menu } from '@jbrowse/core/ui'\nimport { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport LinearBlocks from './LinearBlocks'\n\nimport type { BaseLinearDisplayModel } from '../models/BaseLinearDisplayModel'\n\nconst useStyles = makeStyles()({\n  display: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    textAlign: 'left',\n    width: '100%',\n    minHeight: '100%',\n  },\n})\n\ntype Coord = [number, number]\n\nconst BaseLinearDisplay = observer(function (props: {\n  model: BaseLinearDisplayModel\n  children?: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const ref = useRef<HTMLDivElement>(null)\n  const [clientRect, setClientRect] = useState<DOMRect>()\n  const [offsetMouseCoord, setOffsetMouseCoord] = useState<Coord>([0, 0])\n  const [clientMouseCoord, setClientMouseCoord] = useState<Coord>([0, 0])\n  const [contextCoord, setContextCoord] = useState<Coord>()\n  const { model, children } = props\n  const { TooltipComponent, DisplayMessageComponent, height } = model\n  const items = model.contextMenuItems()\n  return (\n    <div\n      ref={ref}\n      data-testid={`display-${getConf(model, 'displayId')}`}\n      className={classes.display}\n      onContextMenu={event => {\n        event.preventDefault()\n        if (contextCoord) {\n          // There's already a context menu open, so close it\n          setContextCoord(undefined)\n        } else if (ref.current) {\n          setContextCoord([event.clientX, event.clientY])\n        }\n      }}\n      onMouseMove={event => {\n        if (!ref.current) {\n          return\n        }\n        const rect = ref.current.getBoundingClientRect()\n        const { left, top } = rect\n        setOffsetMouseCoord([event.clientX - left, event.clientY - top])\n        setClientMouseCoord([event.clientX, event.clientY])\n        setClientRect(rect)\n      }}\n    >\n      {DisplayMessageComponent ? (\n        <DisplayMessageComponent model={model} />\n      ) : (\n        <LinearBlocks {...props} />\n      )}\n      {children}\n\n      <Suspense fallback={null}>\n        <TooltipComponent\n          model={model}\n          height={height}\n          offsetMouseCoord={offsetMouseCoord}\n          clientMouseCoord={clientMouseCoord}\n          clientRect={clientRect}\n          mouseCoord={offsetMouseCoord}\n        />\n      </Suspense>\n\n      <Menu\n        open={Boolean(contextCoord) && items.length > 0}\n        onMenuItemClick={(_, callback) => {\n          callback()\n          setContextCoord(undefined)\n        }}\n        onClose={() => {\n          setContextCoord(undefined)\n          model.setContextMenuFeature(undefined)\n        }}\n        slotProps={{\n          transition: {\n            onExit: () => {\n              setContextCoord(undefined)\n              model.setContextMenuFeature(undefined)\n            },\n          },\n        }}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextCoord\n            ? { top: contextCoord[1], left: contextCoord[0] }\n            : undefined\n        }\n        style={{\n          zIndex: theme.zIndex.tooltip,\n        }}\n        menuItems={items}\n      />\n    </div>\n  )\n})\n\nexport default BaseLinearDisplay\n\nexport { default as Tooltip } from './Tooltip'\nexport { default as BlockMsg } from './BlockMsg'\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearBareDisplay\n * #category display\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBareDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport { configSchemaFactory }\n","import { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { types } from 'mobx-state-tree'\n\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #stateModel LinearBareDisplay\n * #category display\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nexport function stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBareDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearBareDisplay'),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n      }),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n        const config = configBlob as Omit<typeof configBlob, symbol>\n\n        return self.rendererType.configSchema.create(config, getEnv(self))\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n    }))\n    .views(self => {\n      const { renderProps: superRenderProps } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          return {\n            ...superRenderProps(),\n            ...getParentRenderProps(self),\n            rpcDriverName: self.rpcDriverName,\n            config: self.rendererConfig,\n          }\n        },\n      }\n    })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\nimport { baseLinearDisplayConfigSchema } from '../BaseLinearDisplay'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config LinearBasicDisplay\n * #category display\n */\nfunction configSchemaFactory(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'LinearBasicDisplay',\n    {\n      /**\n       * #slot\n       */\n      renderer: pluginManager.pluggableConfigSchemaType('renderer'),\n    },\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: baseLinearDisplayConfigSchema,\n      explicitlyTyped: true,\n    },\n  )\n}\n\nexport default configSchemaFactory\n","import { lazy } from 'react'\n\nimport { ConfigurationReference, getConf } from '@jbrowse/core/configuration'\nimport SerializableFilterChain from '@jbrowse/core/pluggableElementTypes/renderers/util/serializableFilterChain'\nimport { getSession } from '@jbrowse/core/util'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport { cast, getEnv, types } from 'mobx-state-tree'\n\nimport { BaseLinearDisplay } from '../BaseLinearDisplay'\n\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { Instance } from 'mobx-state-tree'\n\nconst SetMaxHeightDialog = lazy(() => import('./components/SetMaxHeightDialog'))\nconst AddFiltersDialog = lazy(() => import('./components/AddFiltersDialog'))\n\n/**\n * #stateModel LinearBasicDisplay\n * #category display\n * used by `FeatureTrack`, has simple settings like \"show/hide feature labels\",\n * etc.\n *\n * extends\n * - [BaseLinearDisplay](../baselineardisplay)\n */\nfunction stateModelFactory(configSchema: AnyConfigurationSchemaType) {\n  return types\n    .compose(\n      'LinearBasicDisplay',\n      BaseLinearDisplay,\n      types.model({\n        /**\n         * #property\n         */\n        type: types.literal('LinearBasicDisplay'),\n        /**\n         * #property\n         */\n        trackShowLabels: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackShowDescriptions: types.maybe(types.boolean),\n        /**\n         * #property\n         */\n        trackDisplayMode: types.maybe(types.string),\n        /**\n         * #property\n         */\n        trackMaxHeight: types.maybe(types.number),\n        /**\n         * #property\n         */\n        configuration: ConfigurationReference(configSchema),\n        /**\n         * #property\n         */\n        jexlFilters: types.maybe(types.array(types.string)),\n      }),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get activeFilters() {\n        // config jexlFilters are deferred evaluated so they are prepended with\n        // jexl at runtime rather than being stored with jexl in the config\n        return (\n          self.jexlFilters ??\n          getConf(self, 'jexlFilters').map((r: string) => `jexl:${r}`)\n        )\n      },\n      /**\n       * #getter\n       */\n      get rendererTypeName() {\n        return getConf(self, ['renderer', 'type'])\n      },\n\n      /**\n       * #getter\n       */\n      get showLabels() {\n        return self.trackShowLabels ?? getConf(self, ['renderer', 'showLabels'])\n      },\n\n      /**\n       * #getter\n       */\n      get showDescriptions() {\n        return (\n          self.trackShowDescriptions ??\n          getConf(self, ['renderer', 'showDescriptions'])\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get maxHeight() {\n        return self.trackMaxHeight ?? getConf(self, ['renderer', 'maxHeight'])\n      },\n\n      /**\n       * #getter\n       */\n      get displayMode() {\n        return (\n          self.trackDisplayMode ?? getConf(self, ['renderer', 'displayMode'])\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rendererConfig() {\n        const configBlob = getConf(self, ['renderer']) || {}\n        const config = configBlob as Omit<typeof configBlob, symbol>\n\n        return self.rendererType.configSchema.create(\n          {\n            ...config,\n            showLabels: self.showLabels,\n            showDescriptions: self.showDescriptions,\n            displayMode: self.displayMode,\n            maxHeight: self.maxHeight,\n          },\n          getEnv(self),\n        )\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setJexlFilters(f?: string[]) {\n        self.jexlFilters = cast(f)\n      },\n      /**\n       * #action\n       */\n      toggleShowLabels() {\n        self.trackShowLabels = !self.showLabels\n      },\n      /**\n       * #action\n       */\n      toggleShowDescriptions() {\n        self.trackShowDescriptions = !self.showDescriptions\n      },\n      /**\n       * #action\n       */\n      setDisplayMode(val: string) {\n        self.trackDisplayMode = val\n      },\n      /**\n       * #action\n       */\n      setMaxHeight(val?: number) {\n        self.trackMaxHeight = val\n      },\n    }))\n    .views(self => {\n      const {\n        trackMenuItems: superTrackMenuItems,\n        renderProps: superRenderProps,\n      } = self\n      return {\n        /**\n         * #method\n         */\n        renderProps() {\n          const superProps = superRenderProps()\n          return {\n            ...(superProps as Omit<typeof superProps, symbol>),\n            config: self.rendererConfig,\n            filters: new SerializableFilterChain({\n              filters: self.activeFilters,\n            }),\n          }\n        },\n\n        /**\n         * #method\n         */\n        trackMenuItems(): MenuItem[] {\n          return [\n            ...superTrackMenuItems(),\n            {\n              label: 'Show labels',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showLabels,\n              onClick: () => {\n                self.toggleShowLabels()\n              },\n            },\n            {\n              label: 'Show descriptions',\n              icon: VisibilityIcon,\n              type: 'checkbox',\n              checked: self.showDescriptions,\n              onClick: () => {\n                self.toggleShowDescriptions()\n              },\n            },\n            {\n              label: 'Display mode',\n              icon: VisibilityIcon,\n              subMenu: [\n                'compact',\n                'reducedRepresentation',\n                'normal',\n                'collapse',\n              ].map(val => ({\n                label: val,\n                onClick: () => {\n                  self.setDisplayMode(val)\n                },\n              })),\n            },\n            {\n              label: 'Set max height',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  SetMaxHeightDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n            {\n              label: 'Edit filters',\n              onClick: () => {\n                getSession(self).queueDialog(handleClose => [\n                  AddFiltersDialog,\n                  { model: self, handleClose },\n                ])\n              },\n            },\n          ]\n        },\n      }\n    })\n}\n\nexport type FeatureTrackStateModel = ReturnType<typeof stateModelFactory>\nexport type FeatureTrackModel = Instance<FeatureTrackStateModel>\n\nexport default stateModelFactory\n","import ArrowBackIcon from '@mui/icons-material/ArrowBack'\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward'\nimport { Button, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { SPACING } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\nconst useStyles = makeStyles()(theme => ({\n  panButton: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    color: theme.palette.text.primary,\n    margin: SPACING,\n  },\n\n  buttonSpacer: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nexport default function HeaderPanControls({ model }: { model: LGV }) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => {\n          model.slide(-0.9)\n        }}\n      >\n        <ArrowBackIcon />\n      </Button>\n      <Button\n        variant=\"outlined\"\n        className={classes.panButton}\n        onClick={() => {\n          model.slide(0.9)\n        }}\n      >\n        <ArrowForwardIcon />\n      </Button>\n    </>\n  )\n}\n","import { getBpDisplayStr } from '@jbrowse/core/util'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()({\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 5,\n    cursor: 'pointer',\n  },\n})\n\nconst HeaderRegionWidth = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const { coarseTotalBp } = model\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.bp}>\n      {getBpDisplayStr(coarseTotalBp)}\n    </Typography>\n  )\n})\n\nexport default HeaderRegionWidth\n","import { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(theme => ({\n  toggleButton: {\n    height: 44,\n    border: 'none',\n    marginLeft: theme.spacing(4),\n  },\n}))\n\nconst HeaderTrackSelectorButton = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <IconButton\n      onClick={model.activateTrackSelector}\n      className={classes.toggleButton}\n      title=\"Open track selector\"\n      value=\"track_select\"\n    >\n      <TrackSelectorIcon />\n    </IconButton>\n  )\n})\n\nexport default HeaderTrackSelectorButton\n","import { lazy, useEffect, useState } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession } from '@jbrowse/core/util'\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport { IconButton, Slider, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\n// lazies\nconst RegionWidthEditorDialog = lazy(() => import('./RegionWidthEditorDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  slider: {\n    width: 100,\n    color: theme.palette.text.secondary,\n  },\n}))\n\nconst HeaderZoomControls = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const { maxBpPerPx, minBpPerPx, bpPerPx } = model\n  const [value, setValue] = useState(-Math.log2(bpPerPx) * 100)\n  useEffect(() => {\n    setValue(-Math.log2(bpPerPx) * 100)\n  }, [bpPerPx])\n  const zoomInDisabled = bpPerPx <= minBpPerPx + 0.0001\n  const zoomOutDisabled = bpPerPx >= maxBpPerPx - 0.0001\n  return (\n    <div className={classes.container}>\n      <Tooltip title=\"Zoom out 2x\">\n        <span>\n          <IconButton\n            data-testid=\"zoom_out\"\n            disabled={zoomOutDisabled}\n            onClick={() => {\n              model.zoom(bpPerPx * 2)\n            }}\n          >\n            <ZoomOut />\n          </IconButton>\n        </span>\n      </Tooltip>\n\n      <Slider\n        size=\"small\"\n        className={classes.slider}\n        value={value}\n        min={-Math.log2(maxBpPerPx) * 100}\n        max={-Math.log2(minBpPerPx) * 100}\n        onChangeCommitted={() => model.zoomTo(2 ** (-value / 100))}\n        onChange={(_, val) => {\n          setValue(val as number)\n        }}\n      />\n      <Tooltip title=\"Zoom in 2x\">\n        <span>\n          <IconButton\n            data-testid=\"zoom_in\"\n            disabled={zoomInDisabled}\n            onClick={() => {\n              model.zoom(model.bpPerPx / 2)\n            }}\n          >\n            <ZoomIn />\n          </IconButton>\n        </span>\n      </Tooltip>\n\n      <CascadingMenuButton\n        menuItems={[\n          ...[100, 50, 10].map(r => ({\n            label: `Zoom in ${r}x`,\n            onClick: () => {\n              model.zoom(model.bpPerPx / r)\n            },\n          })),\n          ...[10, 50, 100].map(r => ({\n            label: `Zoom out ${r}x`,\n            onClick: () => {\n              model.zoom(model.bpPerPx * r)\n            },\n          })),\n          {\n            label: 'Custom zoom',\n            onClick: () => {\n              getSession(model).queueDialog(handleClose => [\n                RegionWidthEditorDialog,\n                {\n                  model,\n                  handleClose,\n                },\n              ])\n            },\n          },\n        ]}\n      >\n        <MoreVert />\n      </CascadingMenuButton>\n    </div>\n  )\n})\n\nexport default HeaderZoomControls\n","import { getSession, notEmpty } from '@jbrowse/core/util'\nimport { colord } from '@jbrowse/core/util/colord'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '../model'\nimport type { SessionWithWidgets } from '@jbrowse/core/util'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  highlight: {\n    height: '100%',\n    position: 'absolute',\n    background: colord(theme.palette.highlight.main).alpha(0.35).toRgbString(),\n    borderLeft: `1px solid ${theme.palette.highlight.main}`,\n    borderRight: `1px solid ${theme.palette.highlight.main}`,\n  },\n}))\n\nconst OverviewHighlight = observer(function OverviewHighlight({\n  model,\n  overview,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n}) {\n  const { classes } = useStyles()\n  const { highlight, cytobandOffset } = model\n\n  const session = getSession(model) as SessionWithWidgets\n  const { assemblyManager } = session\n  return highlight\n    .map(r => {\n      const asm = assemblyManager.get(r.assemblyName)\n      const refName = asm?.getCanonicalRefName(r.refName) ?? r.refName\n      const s = overview.bpToPx({\n        ...r,\n        refName,\n        coord: r.start,\n      })\n      const e = overview.bpToPx({\n        ...r,\n        refName,\n        coord: r.end,\n      })\n      return s !== undefined && e !== undefined\n        ? {\n            width: Math.abs(e - s),\n            left: s + cytobandOffset,\n          }\n        : undefined\n    })\n    .filter(notEmpty)\n    .map(({ left, width }, idx) => (\n      <div\n        /* biome-ignore lint/suspicious/noArrayIndexKey: */\n        key={`${left}_${width}_${idx}`}\n        className={classes.highlight}\n        style={{\n          width: width,\n          left: left,\n        }}\n      />\n    ))\n})\n\nexport default OverviewHighlight\n","import { useEffect, useRef, useState } from 'react'\n\nimport { getSession, stringify } from '@jbrowse/core/util'\nimport { Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport RubberbandSpan from './RubberbandSpan'\nimport { getRelativeX } from './util'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  rubberbandControl: {\n    cursor: 'crosshair',\n    width: '100%',\n    minHeight: 8,\n  },\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n  },\n  rel: {\n    position: 'relative',\n  },\n})\n\nconst HoverTooltip = observer(function ({\n  model,\n  open,\n  guideX,\n  overview,\n}: {\n  model: LGV\n  open: boolean\n  guideX: number\n  overview: Base1DViewModel\n}) {\n  const { classes } = useStyles()\n  const { cytobandOffset } = model\n  const { assemblyManager } = getSession(model)\n\n  const px = overview.pxToBp(guideX - cytobandOffset)\n  const assembly = assemblyManager.get(px.assemblyName)\n  const cytoband = assembly?.cytobands?.find(\n    f =>\n      px.coord > f.get('start') &&\n      px.coord < f.get('end') &&\n      px.refName === assembly.getCanonicalRefName(f.get('refName')),\n  )\n\n  return (\n    <Tooltip\n      open={open}\n      placement=\"top\"\n      title={[stringify(px), cytoband?.get('name')].join(' ')}\n      arrow\n    >\n      <div className={classes.guide} style={{ left: guideX }} />\n    </Tooltip>\n  )\n})\n\nconst OverviewRubberband = observer(function OverviewRubberband({\n  model,\n  overview,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  ControlComponent?: React.ReactElement\n}) {\n  const { cytobandOffset } = model\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined\n\n  useEffect(() => {\n    function globalMouseMove(event: MouseEvent) {\n      const ref = controlsRef.current\n      if (ref && mouseDragging) {\n        setCurrentX(getRelativeX(event, ref))\n      }\n    }\n\n    function globalMouseUp() {\n      // click and drag\n      if (startX !== undefined && currentX !== undefined) {\n        if (Math.abs(currentX - startX) > 3) {\n          const left = Math.min(startX, currentX)\n          const right = Math.max(startX, currentX)\n          model.moveTo(\n            overview.pxToBp(left - cytobandOffset),\n            overview.pxToBp(right - cytobandOffset),\n          )\n        }\n      }\n\n      // just a click\n      if (startX !== undefined && currentX === undefined) {\n        const click = overview.pxToBp(startX - cytobandOffset)\n        if (!click.refName) {\n          getSession(model).notify('unknown position clicked')\n          console.error('unknown position clicked', click)\n        } else {\n          model.centerAt(Math.round(click.coord), click.refName, click.index)\n        }\n      }\n      setStartX(undefined)\n      setCurrentX(undefined)\n\n      if (startX !== undefined) {\n        setGuideX(undefined)\n      }\n    }\n\n    function globalKeyDown(event: KeyboardEvent) {\n      if (event.key === 'Escape') {\n        setStartX(undefined)\n        setCurrentX(undefined)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      window.addEventListener('keydown', globalKeyDown, true)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n        window.removeEventListener('keydown', globalKeyDown, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, currentX, startX, model, overview, cytobandOffset])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    setStartX(getRelativeX(event, controlsRef.current))\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    setGuideX(getRelativeX(event, controlsRef.current))\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n  }\n\n  if (startX === undefined) {\n    return (\n      <div className={classes.rel}>\n        {guideX !== undefined ? (\n          <HoverTooltip\n            model={model}\n            open={!mouseDragging}\n            overview={overview}\n            guideX={guideX}\n          />\n        ) : null}\n        <div\n          className={classes.rubberbandControl}\n          ref={controlsRef}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </div>\n    )\n  }\n\n  let left = startX || 0\n  let width = 0\n  if (currentX !== undefined) {\n    left = Math.min(currentX, startX)\n    width = currentX - startX\n  }\n  // calculate the start and end bp of drag\n  let leftBpOffset: ReturnType<typeof overview.pxToBp> | undefined\n  let rightBpOffset: ReturnType<typeof overview.pxToBp> | undefined\n  if (startX) {\n    leftBpOffset = overview.pxToBp(startX - cytobandOffset)\n    rightBpOffset = overview.pxToBp(startX + width - cytobandOffset)\n    if (currentX !== undefined && currentX < startX) {\n      ;[leftBpOffset, rightBpOffset] = [rightBpOffset, leftBpOffset]\n    }\n  }\n\n  return (\n    <div className={classes.rel}>\n      {leftBpOffset && rightBpOffset ? (\n        <RubberbandSpan\n          leftBpOffset={leftBpOffset}\n          rightBpOffset={rightBpOffset}\n          width={Math.abs(width)}\n          left={left}\n        />\n      ) : null}\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n    </div>\n  )\n})\n\nexport default OverviewRubberband\n","import { getSession, getTickDisplayStr } from '@jbrowse/core/util'\nimport { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\n// core\nimport { HEADER_OVERVIEW_HEIGHT } from '../consts'\nimport { chooseGridPitch } from '../util'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport type { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\nconst useStyles = makeStyles()({\n  scalebarLabel: {\n    height: HEADER_OVERVIEW_HEIGHT,\n    position: 'absolute',\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n})\n\nconst OverviewScalebarTickLabels = observer(function ({\n  block,\n  scale,\n  overview,\n  model,\n}: {\n  model: LinearGenomeViewModel\n  scale: number\n  block: ContentBlock\n  overview: Base1DViewModel\n}) {\n  const { classes } = useStyles()\n  const { start, end, reversed, refName, assemblyName } = block\n  const { majorPitch } = chooseGridPitch(scale, 120, 15)\n  const { assemblyManager } = getSession(model)\n  const assembly = assemblyManager.get(assemblyName)\n  const refNameColor = assembly?.getRefNameColor(refName)\n\n  const tickLabels = []\n  for (let i = 0; i < Math.floor((end - start) / majorPitch); i++) {\n    const offsetLabel = (i + 1) * majorPitch\n    tickLabels.push(reversed ? end - offsetLabel : start + offsetLabel)\n  }\n  return tickLabels.map((tickLabel, labelIdx) => (\n    <Typography\n      key={`${JSON.stringify(block)}-${tickLabel}-${labelIdx}`}\n      className={classes.scalebarLabel}\n      variant=\"body2\"\n      style={{\n        left: ((labelIdx + 1) * majorPitch) / scale,\n        pointerEvents: 'none',\n        color: refNameColor,\n      }}\n    >\n      {getTickDisplayStr(tickLabel, overview.bpPerPx)}\n    </Typography>\n  ))\n})\n\nexport default OverviewScalebarTickLabels\n","import { useMemo } from 'react'\n\n// core\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport { Typography, alpha, useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Cytobands from './Cytobands'\nimport OverviewHighlight from './OverviewHighlight'\nimport OverviewRubberband from './OverviewRubberband'\nimport OverviewScalebarPolygon from './OverviewScalebarPolygon'\nimport OverviewScalebarTickLabels from './OverviewScalebarTickLabels'\nimport { getCytobands } from './util'\nimport { HEADER_BAR_HEIGHT, HEADER_OVERVIEW_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport type { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\nconst wholeSeqSpacer = 2\n\nconst useStyles = makeStyles()(theme => ({\n  scalebar: {\n    height: HEADER_OVERVIEW_HEIGHT,\n  },\n  scalebarBorder: {\n    border: '1px solid',\n  },\n  scalebarContig: {\n    backgroundColor: theme.palette.background.default,\n    position: 'absolute',\n    top: 0,\n    height: HEADER_OVERVIEW_HEIGHT,\n    overflow: 'hidden',\n  },\n  scalebarContigForward: {\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M-.1 0L6 4.5L-.1 9' fill='none' stroke='${theme.palette.divider}'/%3E%3C/svg%3E\")`,\n    backgroundRepeat: 'repeat',\n  },\n  scalebarContigReverse: {\n    backgroundImage: `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 15 9'%3E%3Cpath d='M6 0L0 4.5L6 9' fill='none' stroke='${theme.palette.divider}'/%3E%3C/svg%3E\")`,\n    backgroundRepeat: 'repeat',\n  },\n\n  scalebarRefName: {\n    position: 'absolute',\n    fontWeight: 'bold',\n    pointerEvents: 'none',\n    zIndex: 100,\n  },\n  scalebarVisibleRegion: {\n    position: 'absolute',\n    height: HEADER_OVERVIEW_HEIGHT,\n    pointerEvents: 'none',\n    zIndex: 100,\n    border: '1px solid',\n  },\n  overview: {\n    height: HEADER_BAR_HEIGHT,\n    position: 'relative',\n  },\n  overviewSvg: {\n    pointerEvents: 'none',\n    width: '100%',\n    position: 'absolute',\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\nconst OverviewBox = observer(function ({\n  scale,\n  model,\n  block,\n  overview,\n}: {\n  scale: number\n  model: LGV\n  block: ContentBlock\n  overview: Base1DViewModel\n}) {\n  const { classes, cx } = useStyles()\n  const theme = useTheme()\n  const { cytobandOffset, showCytobands } = model\n  const { reversed, refName, assemblyName } = block\n  const { assemblyManager } = getSession(model)\n  const assembly = assemblyManager.get(assemblyName)\n  const refNameColor = assembly?.getRefNameColor(refName)\n\n  const canDisplayCytobands =\n    showCytobands && getCytobands(assembly, block.refName).length\n\n  return (\n    <div>\n      {/* name of sequence */}\n      <Typography\n        style={{\n          left: block.offsetPx + 3,\n          color: canDisplayCytobands\n            ? theme.palette.text.primary\n            : refNameColor,\n        }}\n        className={classes.scalebarRefName}\n      >\n        {refName}\n      </Typography>\n      <div\n        className={cx(\n          classes.scalebarContig,\n          canDisplayCytobands\n            ? undefined\n            : reversed\n              ? classes.scalebarContigReverse\n              : classes.scalebarContigForward,\n          !canDisplayCytobands ? classes.scalebarBorder : undefined,\n        )}\n        style={{\n          left: block.offsetPx + cytobandOffset,\n          width: block.widthPx,\n          borderColor: refNameColor,\n        }}\n      >\n        {canDisplayCytobands ? (\n          <svg style={{ width: '100%' }}>\n            <Cytobands overview={overview} assembly={assembly} block={block} />\n          </svg>\n        ) : (\n          <OverviewScalebarTickLabels\n            model={model}\n            overview={overview}\n            scale={scale}\n            block={block}\n          />\n        )}\n      </div>\n    </div>\n  )\n})\n\nconst Scalebar = observer(function ({\n  model,\n  scale,\n  overview,\n}: {\n  model: LGV\n  overview: Base1DViewModel\n  scale: number\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const { dynamicBlocks, showCytobands, cytobandOffset } = model\n  const { pluginManager } = getEnv(model)\n  const visibleRegions = dynamicBlocks.contentBlocks\n  const overviewVisibleRegions = overview.dynamicBlocks\n  const scalebarColor = theme.palette.tertiary.light\n  // catches possible null from at's below\n  if (!visibleRegions.length) {\n    return null\n  }\n\n  const first = visibleRegions.at(0)!\n  const last = visibleRegions.at(-1)!\n\n  const firstOverviewPx =\n    overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0\n\n  const lastOverviewPx =\n    overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0\n\n  const color = showCytobands ? '#f00' : scalebarColor\n  const transparency = showCytobands ? 0.1 : 0.3\n\n  const additional = pluginManager.evaluateExtensionPoint(\n    'LinearGenomeView-OverviewScalebarComponent',\n    undefined,\n    { model, overview },\n  ) as React.ReactNode\n\n  return (\n    <div className={classes.scalebar}>\n      <div\n        className={classes.scalebarVisibleRegion}\n        style={{\n          width: lastOverviewPx - firstOverviewPx,\n          left: firstOverviewPx + cytobandOffset,\n          background: alpha(color, transparency),\n          borderColor: color,\n        }}\n      />\n      {/* this is the entire scale bar */}\n      {overviewVisibleRegions.map((block, idx) => {\n        return !(block.type === 'ContentBlock') ? (\n          <div\n            key={`${JSON.stringify(block)}-${idx}`}\n            className={classes.scalebarContig}\n            style={{\n              width: block.widthPx,\n              left: block.offsetPx,\n              backgroundColor: '#999',\n              backgroundImage:\n                'repeating-linear-gradient(90deg, transparent, transparent 1px, rgba(255,255,255,.5) 1px, rgba(255,255,255,.5) 3px)',\n            }}\n          />\n        ) : (\n          <OverviewBox\n            scale={scale}\n            block={block}\n            model={model}\n            overview={overview}\n            key={`${JSON.stringify(block)}-${idx}`}\n          />\n        )\n      })}\n      <OverviewHighlight model={model} overview={overview} />\n      {additional}\n    </div>\n  )\n})\n\nconst OverviewScalebar = observer(function ({\n  model,\n  children,\n}: {\n  model: LGV\n  children: React.ReactNode\n}) {\n  const { classes } = useStyles()\n  const {\n    minimumBlockWidth,\n    totalBp,\n    width,\n    cytobandOffset,\n    displayedRegions,\n  } = model\n\n  const modWidth = width - cytobandOffset\n  const str = JSON.stringify(displayedRegions)\n  const overview = useMemo(() => {\n    const overview = Base1DView.create({\n      displayedRegions: JSON.parse(str),\n      interRegionPaddingWidth: 0,\n      minimumBlockWidth,\n    })\n\n    overview.setVolatileWidth(modWidth)\n    overview.showAllRegions()\n    return overview\n  }, [str, minimumBlockWidth, modWidth])\n\n  const scale =\n    totalBp / (modWidth - (displayedRegions.length - 1) * wholeSeqSpacer)\n\n  return (\n    <div>\n      <OverviewRubberband\n        model={model}\n        overview={overview}\n        ControlComponent={\n          <Scalebar model={model} overview={overview} scale={scale} />\n        }\n      />\n      <div className={classes.overview}>\n        <svg height={HEADER_BAR_HEIGHT} className={classes.overviewSvg}>\n          <OverviewScalebarPolygon model={model} overview={overview} />\n        </svg>\n        {children}\n      </div>\n    </div>\n  )\n})\n\nexport default OverviewScalebar\n","import { Suspense, lazy, useState } from 'react'\n\nimport HelpIcon from '@mui/icons-material/Help'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { IconButton, InputAdornment } from '@mui/material'\n\n// lazy\nconst HelpDialog = lazy(() => import('./HelpDialog'))\n\nfunction HelpAdornment() {\n  const [isHelpDialogDisplayed, setHelpDialogDisplayed] = useState(false)\n  return (\n    <>\n      <IconButton\n        onClick={() => {\n          setHelpDialogDisplayed(true)\n        }}\n        size=\"small\"\n      >\n        <HelpIcon fontSize=\"small\" />\n      </IconButton>\n      {isHelpDialogDisplayed ? (\n        <Suspense fallback={null}>\n          <HelpDialog\n            handleClose={() => {\n              setHelpDialogDisplayed(false)\n            }}\n          />\n        </Suspense>\n      ) : null}\n    </>\n  )\n}\n\nexport default function EndAdornment({ showHelp }: { showHelp?: boolean }) {\n  return (\n    <>\n      <InputAdornment position=\"end\" style={{ marginRight: 7 }}>\n        <SearchIcon fontSize=\"small\" />\n        {showHelp ? <HelpAdornment /> : null}\n      </InputAdornment>\n    </>\n  )\n}\n","import { getSession } from '@jbrowse/core/util'\nimport { alpha, useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport RefNameAutocomplete from './RefNameAutocomplete'\nimport EndAdornment from './RefNameAutocomplete/EndAdornment'\nimport { fetchResults } from './util'\nimport { handleSelectedRegion, navToOption } from '../../searchUtils'\nimport { SPACING, WIDGET_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(() => ({\n  headerRefName: {\n    minWidth: 100,\n  },\n}))\n\nconst SearchBox = observer(function ({\n  model,\n  showHelp = true,\n}: {\n  showHelp?: boolean\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const theme = useTheme()\n  const session = getSession(model)\n\n  const { textSearchManager, assemblyManager } = session\n  const { assemblyNames, rankSearchResults } = model\n  const assemblyName = assemblyNames[0]!\n  const assembly = assemblyManager.get(assemblyName)\n  const searchScope = model.searchScope(assemblyName)\n\n  return (\n    <RefNameAutocomplete\n      onSelect={async option => {\n        try {\n          if (option.hasLocation()) {\n            await navToOption({ option, model, assemblyName })\n          } else if (option.results?.length) {\n            model.setSearchResults(option.results, option.getLabel())\n          } else if (assembly) {\n            await handleSelectedRegion({\n              input: option.getLabel(),\n              assembly,\n              model,\n            })\n          }\n        } catch (e) {\n          console.error(e)\n          getSession(model).notify(`${e}`, 'warning')\n        }\n      }}\n      assemblyName={assemblyName}\n      fetchResults={queryString =>\n        fetchResults({\n          queryString,\n          searchScope,\n          rankSearchResults,\n          textSearchManager,\n          assembly,\n        })\n      }\n      model={model}\n      minWidth={175}\n      TextFieldProps={{\n        variant: 'outlined',\n        className: classes.headerRefName,\n        style: {\n          margin: SPACING,\n        },\n        slotProps: {\n          input: {\n            style: {\n              padding: 0,\n              height: WIDGET_HEIGHT,\n              background: alpha(theme.palette.background.paper, 0.8),\n            },\n            endAdornment: <EndAdornment showHelp={showHelp} />,\n          },\n        },\n      }}\n    />\n  )\n})\n\nexport default SearchBox\n","import { FormGroup } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport HeaderPanControls from './HeaderPanControls'\nimport HeaderRegionWidth from './HeaderRegionWidth'\nimport HeaderTrackSelectorButton from './HeaderTrackSelectorButton'\nimport HeaderZoomControls from './HeaderZoomControls'\nimport OverviewScalebar from './OverviewScalebar'\nimport SearchBox from './SearchBox'\nimport { HEADER_BAR_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()({\n  headerBar: {\n    display: 'flex',\n    height: HEADER_BAR_HEIGHT,\n  },\n  headerForm: {\n    flexWrap: 'nowrap',\n    marginRight: 7,\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n})\n\nconst Controls = function ({ model }: { model: LinearGenomeViewModel }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.headerBar}>\n      <HeaderTrackSelectorButton model={model} />\n      <div className={classes.spacer} />\n      <FormGroup row className={classes.headerForm}>\n        <HeaderPanControls model={model} />\n        <SearchBox model={model} />\n      </FormGroup>\n      <HeaderRegionWidth model={model} />\n      <HeaderZoomControls model={model} />\n      <div className={classes.spacer} />\n    </div>\n  )\n}\n\nconst LinearGenomeViewHeader = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { hideHeader, hideHeaderOverview } = model\n  return !hideHeader ? (\n    hideHeaderOverview ? (\n      <Controls model={model} />\n    ) : (\n      <OverviewScalebar model={model}>\n        <Controls model={model} />\n      </OverviewScalebar>\n    )\n  ) : null\n})\n\nexport default LinearGenomeViewHeader\n","import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession } from '@jbrowse/core/util'\nimport ArrowDown from '@mui/icons-material/KeyboardArrowDown'\nimport ZoomIn from '@mui/icons-material/ZoomIn'\nimport ZoomOut from '@mui/icons-material/ZoomOut'\nimport { IconButton, Paper, alpha } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst useStyles = makeStyles()(theme => ({\n  background: {\n    position: 'absolute',\n    right: 0,\n    background: theme.palette.background.paper,\n  },\n  focusedBackground: {\n    background: alpha(theme.palette.secondary.light, 0.2),\n  },\n}))\n\nconst MiniControls = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  const { id, bpPerPx, maxBpPerPx, minBpPerPx, scaleFactor, hideHeader } = model\n  const { focusedViewId } = getSession(model)\n  return hideHeader ? (\n    <Paper className={classes.background}>\n      <Paper\n        className={focusedViewId === id ? classes.focusedBackground : undefined}\n      >\n        <CascadingMenuButton menuItems={model.menuItems()}>\n          <ArrowDown fontSize=\"small\" />\n        </CascadingMenuButton>\n        <IconButton\n          data-testid=\"zoom_out\"\n          onClick={() => {\n            model.zoom(bpPerPx * 2)\n          }}\n          disabled={bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1}\n        >\n          <ZoomOut fontSize=\"small\" />\n        </IconButton>\n        <IconButton\n          data-testid=\"zoom_in\"\n          onClick={() => {\n            model.zoom(bpPerPx / 2)\n          }}\n          disabled={bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1}\n        >\n          <ZoomIn fontSize=\"small\" />\n        </IconButton>\n      </Paper>\n    </Paper>\n  ) : null\n})\n\nexport default MiniControls\n","import type React from 'react'\nimport { lazy } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { BaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport { VIEW_HEADER_HEIGHT } from '@jbrowse/core/ui'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport {\n  assembleLocString,\n  clamp,\n  findLast,\n  getSession,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n  localStorageGetBoolean,\n  localStorageGetItem,\n  localStorageSetItem,\n  measureText,\n  springAnimate,\n  sum,\n} from '@jbrowse/core/util'\nimport { bpToPx, moveTo, pxToBp } from '@jbrowse/core/util/Base1DUtils'\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport calculateDynamicBlocks from '@jbrowse/core/util/calculateDynamicBlocks'\nimport calculateStaticBlocks from '@jbrowse/core/util/calculateStaticBlocks'\nimport { getParentRenderProps } from '@jbrowse/core/util/tracks'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { isSessionWithMultipleViews } from '@jbrowse/product-core'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport LabelIcon from '@mui/icons-material/Label'\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen'\nimport PaletteIcon from '@mui/icons-material/Palette'\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera'\nimport SearchIcon from '@mui/icons-material/Search'\nimport SyncAltIcon from '@mui/icons-material/SyncAlt'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport ZoomInIcon from '@mui/icons-material/ZoomIn'\nimport { saveAs } from 'file-saver'\nimport { autorun, transaction, when } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getRoot,\n  getSnapshot,\n  resolveIdentifier,\n  types,\n} from 'mobx-state-tree'\n\nimport Header from './components/Header'\nimport {\n  calculateVisibleLocStrings,\n  generateLocations,\n  parseLocStrings,\n} from './util'\nimport { handleSelectedRegion } from '../searchUtils'\nimport MiniControls from './components/MiniControls'\nimport {\n  HEADER_BAR_HEIGHT,\n  HEADER_OVERVIEW_HEIGHT,\n  INTER_REGION_PADDING_WIDTH,\n  RESIZE_HANDLE_HEIGHT,\n  SCALE_BAR_HEIGHT,\n} from './consts'\n\nimport type {\n  BpOffset,\n  ExportSvgOptions,\n  HighlightType,\n  NavLocation,\n} from './types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport type { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\nimport type { ParsedLocString } from '@jbrowse/core/util'\nimport type { BaseBlock, BlockSet } from '@jbrowse/core/util/blockTypes'\nimport type { Region, Region as IRegion } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\n// lazies\nconst ReturnToImportFormDialog = lazy(\n  () => import('@jbrowse/core/ui/ReturnToImportFormDialog'),\n)\nconst SequenceSearchDialog = lazy(\n  () => import('./components/SequenceSearchDialog'),\n)\nconst ExportSvgDialog = lazy(() => import('./components/ExportSvgDialog'))\nconst GetSequenceDialog = lazy(() => import('./components/GetSequenceDialog'))\nconst SearchResultsDialog = lazy(\n  () => import('./components/SearchResultsDialog'),\n)\n\n/**\n * #stateModel LinearGenomeView\n * #category view\n *\n * extends\n * - [BaseViewModel](../baseviewmodel)\n */\nexport function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'LinearGenomeView',\n      BaseViewModel,\n      types.model({\n        /**\n         * #property\n         */\n        id: ElementId,\n\n        /**\n         * #property\n         * this is a string instead of the const literal 'LinearGenomeView' to\n         * reduce some typescripting strictness, but you should pass the string\n         * 'LinearGenomeView' to the model explicitly\n         */\n        type: types.literal('LinearGenomeView') as unknown as string,\n\n        /**\n         * #property\n         * corresponds roughly to the horizontal scroll of the LGV\n         */\n        offsetPx: 0,\n\n        /**\n         * #property\n         * corresponds roughly to the zoom level, base-pairs per pixel\n         */\n        bpPerPx: 1,\n\n        /**\n         * #property\n         * currently displayed regions, can be a single chromosome, arbitrary\n         * subsections, or the entire  set of chromosomes in the genome, but it not\n         * advised to use the entire set of chromosomes if your assembly is very\n         * fragmented\n         */\n        displayedRegions: types.optional(types.frozen<IRegion[]>(), []),\n\n        /**\n         * #property\n         * array of currently displayed tracks state models instances\n         */\n        tracks: types.array(\n          pluginManager.pluggableMstType('track', 'stateModel'),\n        ),\n\n        /**\n         * #property\n         */\n        hideHeader: false,\n\n        /**\n         * #property\n         */\n        hideHeaderOverview: false,\n\n        /**\n         * #property\n         */\n        hideNoTracksActive: false,\n\n        /**\n         * #property\n         */\n        trackSelectorType: types.optional(\n          types.enumeration(['hierarchical']),\n          'hierarchical',\n        ),\n        /**\n         * #property\n         * show the \"center line\"\n         */\n        showCenterLine: types.optional(types.boolean, () =>\n          localStorageGetBoolean('lgv-showCenterLine', false),\n        ),\n\n        /**\n         * #property\n         * show the \"cytobands\" in the overview scale bar\n         */\n        showCytobandsSetting: types.optional(types.boolean, () =>\n          localStorageGetBoolean('lgv-showCytobands', true),\n        ),\n\n        /**\n         * #property\n         * how to display the track labels, can be \"overlapping\", \"offset\", or\n         * \"hidden\", or empty string \"\" (which results in conf being used). see\n         * LinearGenomeViewPlugin\n         * https://jbrowse.org/jb2/docs/config/lineargenomeviewplugin/ docs for\n         * how conf is used\n         */\n        trackLabels: types.optional(\n          types.string,\n          () => localStorageGetItem('lgv-trackLabels') || '',\n        ),\n\n        /**\n         * #property\n         * show the \"gridlines\" in the track area\n         */\n        showGridlines: true,\n\n        /**\n         * #property\n         * highlights on the LGV from the URL parameters\n         */\n        highlight: types.optional(\n          types.array(types.frozen<HighlightType>()),\n          [],\n        ),\n\n        /**\n         * #property\n         * color by CDS\n         */\n        colorByCDS: types.optional(types.boolean, () =>\n          localStorageGetBoolean('lgv-colorByCDS', false),\n        ),\n\n        /**\n         * #property\n         * color by CDS\n         */\n        showTrackOutlines: types.optional(types.boolean, () =>\n          localStorageGetBoolean('lgv-showTrackOutlines', true),\n        ),\n      }),\n    )\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      volatileWidth: undefined as number | undefined,\n      /**\n       * #volatile\n       */\n      minimumBlockWidth: 3,\n      /**\n       * #volatile\n       */\n      draggingTrackId: undefined as undefined | string,\n      /**\n       * #volatile\n       */\n      volatileError: undefined as unknown,\n\n      /**\n       * #volatile\n       * array of callbacks to run after the next set of the displayedRegions,\n       * which is basically like an onLoad\n       */\n      afterDisplayedRegionsSetCallbacks: [] as (() => void)[],\n      /**\n       * #volatile\n       */\n      scaleFactor: 1,\n      /**\n       * #volatile\n       */\n      trackRefs: {} as Record<string, HTMLDivElement>,\n      /**\n       * #volatile\n       */\n      coarseDynamicBlocks: [] as BaseBlock[],\n      /**\n       * #volatile\n       */\n      coarseTotalBp: 0,\n      /**\n       * #volatile\n       */\n      leftOffset: undefined as undefined | BpOffset,\n      /**\n       * #volatile\n       */\n      rightOffset: undefined as undefined | BpOffset,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get pinnedTracks() {\n        return self.tracks.filter(t => t.pinned)\n      },\n      /**\n       * #getter\n       */\n      get unpinnedTracks() {\n        return self.tracks.filter(t => !t.pinned)\n      },\n      /**\n       * #getter\n       * this is the effective value of the track labels setting, incorporating\n       * both the config and view state. use this instead of view.trackLabels\n       */\n      get trackLabelsSetting() {\n        const sessionSetting = getConf(getSession(self), [\n          'LinearGenomeViewPlugin',\n          'trackLabels',\n        ])\n        return self.trackLabels || sessionSetting\n      },\n      /**\n       * #getter\n       */\n      get width(): number {\n        if (self.volatileWidth === undefined) {\n          throw new Error(\n            'width undefined, make sure to check for model.initialized',\n          )\n        }\n        return self.volatileWidth\n      },\n      /**\n       * #getter\n       */\n      get interRegionPaddingWidth() {\n        return INTER_REGION_PADDING_WIDTH\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNames() {\n        return [\n          ...new Set(self.displayedRegions.map(region => region.assemblyName)),\n        ]\n      },\n      get stickyViewHeaders() {\n        const session = getSession(self)\n        return isSessionWithMultipleViews(session)\n          ? session.stickyViewHeaders\n          : false\n      },\n\n      get pinnedTracksTop() {\n        let pinnedTracksTop = 0\n        if (this.stickyViewHeaders) {\n          pinnedTracksTop = VIEW_HEADER_HEIGHT + SCALE_BAR_HEIGHT\n          if (!self.hideHeader) {\n            pinnedTracksTop += HEADER_BAR_HEIGHT\n            if (!self.hideHeaderOverview) {\n              pinnedTracksTop += HEADER_OVERVIEW_HEIGHT\n            }\n          }\n        }\n        return pinnedTracksTop\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      scaleBarDisplayPrefix() {\n        return getParent<any>(self, 2).type === 'LinearSyntenyView'\n          ? self.assemblyNames[0]\n          : ''\n      },\n      /**\n       * #method\n       */\n\n      MiniControlsComponent(): React.FC<any> {\n        return MiniControls\n      },\n\n      /**\n       * #method\n       */\n\n      HeaderComponent(): React.FC<any> {\n        return Header\n      },\n\n      /**\n       * #getter\n       */\n      get assembliesNotFound() {\n        const { assemblyManager } = getSession(self)\n        const r0 = self.assemblyNames\n          .map(a => (!assemblyManager.get(a) ? a : undefined))\n          .filter(f => !!f)\n          .join(',')\n        return r0 ? `Assemblies ${r0} not found` : undefined\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyErrors() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames\n          .map(a => assemblyManager.get(a)?.error)\n          .filter(f => !!f)\n          .join(', ')\n      },\n\n      /**\n       * #getter\n       */\n      get assembliesInitialized() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames.every(\n          a => assemblyManager.get(a)?.initialized,\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get initialized() {\n        return self.volatileWidth !== undefined && this.assembliesInitialized\n      },\n\n      /**\n       * #getter\n       */\n      get hasDisplayedRegions() {\n        return self.displayedRegions.length > 0\n      },\n\n      /**\n       * #getter\n       */\n      get scaleBarHeight() {\n        return SCALE_BAR_HEIGHT + RESIZE_HANDLE_HEIGHT\n      },\n\n      /**\n       * #getter\n       */\n      get headerHeight() {\n        if (self.hideHeader) {\n          return 0\n        } else if (self.hideHeaderOverview) {\n          return HEADER_BAR_HEIGHT\n        } else {\n          return HEADER_BAR_HEIGHT + HEADER_OVERVIEW_HEIGHT\n        }\n      },\n\n      /**\n       * #getter\n       */\n      get trackHeights() {\n        return sum(self.tracks.map(t => t.displays[0].height))\n      },\n\n      /**\n       * #getter\n       */\n      get trackHeightsWithResizeHandles() {\n        return this.trackHeights + self.tracks.length * RESIZE_HANDLE_HEIGHT\n      },\n\n      /**\n       * #getter\n       */\n      get height() {\n        return (\n          this.trackHeightsWithResizeHandles +\n          this.headerHeight +\n          this.scaleBarHeight\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get totalBp() {\n        return sum(self.displayedRegions.map(r => r.end - r.start))\n      },\n\n      /**\n       * #getter\n       */\n      get maxBpPerPx() {\n        return this.totalBp / (self.width * 0.9)\n      },\n\n      /**\n       * #getter\n       */\n      get minBpPerPx() {\n        return 1 / 50\n      },\n\n      /**\n       * #getter\n       */\n      get error(): unknown {\n        return (\n          self.volatileError || this.assemblyErrors || this.assembliesNotFound\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get maxOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const leftPadding = 10\n        return this.displayedRegionsTotalPx - leftPadding\n      },\n\n      /**\n       * #getter\n       */\n      get minOffset() {\n        // objectively determined to keep the linear genome on the main screen\n        const rightPadding = 30\n        return -self.width + rightPadding\n      },\n\n      /**\n       * #getter\n       */\n      get displayedRegionsTotalPx() {\n        return this.totalBp / self.bpPerPx\n      },\n\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          ...getParentRenderProps(self),\n          bpPerPx: self.bpPerPx,\n          colorByCDS: self.colorByCDS,\n        }\n      },\n\n      /**\n       * #method\n       */\n      searchScope(assemblyName: string) {\n        return {\n          assemblyName,\n          includeAggregateIndexes: true,\n          tracks: self.tracks,\n        }\n      },\n\n      /**\n       * #method\n       */\n      getTrack(id: string) {\n        return self.tracks.find(t => t.configuration.trackId === id)\n      },\n\n      /**\n       * #method\n       */\n      rankSearchResults(results: BaseResult[]) {\n        // order of rank\n        const openTrackIds = new Set(\n          self.tracks.map(track => track.configuration.trackId),\n        )\n        for (const result of results) {\n          if (openTrackIds.has(result.trackId)) {\n            result.updateScore(result.getScore() + 1)\n          }\n        }\n        return results\n      },\n\n      /**\n       * #method\n       * modifies view menu action onClick to apply to all tracks of same type\n       */\n      rewriteOnClicks(trackType: string, viewMenuActions: MenuItem[]) {\n        viewMenuActions.forEach(action => {\n          // go to lowest level menu\n          if ('subMenu' in action) {\n            this.rewriteOnClicks(trackType, action.subMenu)\n          }\n          if ('onClick' in action) {\n            const holdOnClick = action.onClick\n            action.onClick = (...args: unknown[]) => {\n              self.tracks.forEach(track => {\n                if (track.type === trackType) {\n                  holdOnClick.apply(track, [track, ...args])\n                }\n              })\n            }\n          }\n        })\n      },\n      /**\n       * #getter\n       */\n      get trackTypeActions() {\n        const allActions = new Map<string, MenuItem[]>()\n        self.tracks.forEach(track => {\n          const trackInMap = allActions.get(track.type)\n          if (!trackInMap) {\n            const viewMenuActions = structuredClone(track.viewMenuActions)\n            this.rewriteOnClicks(track.type, viewMenuActions)\n            allActions.set(track.type, viewMenuActions)\n          }\n        })\n\n        return allActions\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setShowTrackOutlines(arg: boolean) {\n        self.showTrackOutlines = arg\n      },\n      /**\n       * #action\n       */\n      setColorByCDS(flag: boolean) {\n        self.colorByCDS = flag\n      },\n      /**\n       * #action\n       */\n      setShowCytobands(flag: boolean) {\n        self.showCytobandsSetting = flag\n      },\n      /**\n       * #action\n       */\n      setWidth(newWidth: number) {\n        self.volatileWidth = newWidth\n      },\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.volatileError = error\n      },\n      /**\n       * #action\n       */\n      setHideHeader(b: boolean) {\n        self.hideHeader = b\n      },\n      /**\n       * #action\n       */\n      setHideHeaderOverview(b: boolean) {\n        self.hideHeaderOverview = b\n      },\n      /**\n       * #action\n       */\n      setHideNoTracksActive(b: boolean) {\n        self.hideNoTracksActive = b\n      },\n      /**\n       * #action\n       */\n      setShowGridlines(b: boolean) {\n        self.showGridlines = b\n      },\n      /**\n       * #action\n       */\n      addToHighlights(highlight: HighlightType) {\n        self.highlight.push(highlight)\n      },\n      /**\n       * #action\n       */\n      setHighlight(highlight?: HighlightType[]) {\n        self.highlight = cast(highlight)\n      },\n      /**\n       * #action\n       */\n      removeHighlight(highlight: HighlightType) {\n        self.highlight.remove(highlight)\n      },\n      /**\n       * #action\n       */\n      scrollTo(offsetPx: number) {\n        const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n        self.offsetPx = newOffsetPx\n        return newOffsetPx\n      },\n\n      /**\n       * #action\n       */\n      zoomTo(bpPerPx: number, offset = self.width / 2, centerAtOffset = false) {\n        const newBpPerPx = clamp(bpPerPx, self.minBpPerPx, self.maxBpPerPx)\n        if (newBpPerPx === self.bpPerPx) {\n          return newBpPerPx\n        }\n        const oldBpPerPx = self.bpPerPx\n\n        if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n          console.warn('zoomTo bpPerPx rounding error')\n          return oldBpPerPx\n        }\n        self.bpPerPx = newBpPerPx\n\n        // tweak the offset so that the center of the view remains at the same\n        // coordinate\n        this.scrollTo(\n          Math.round(\n            ((self.offsetPx + offset) * oldBpPerPx) / newBpPerPx -\n              (centerAtOffset ? self.width / 2 : offset),\n          ),\n        )\n        return newBpPerPx\n      },\n\n      /**\n       * #action\n       * sets offsets of rubberband, used in the get sequence dialog can call\n       * view.getSelectedRegions(view.leftOffset,view.rightOffset) to compute\n       * the selected regions from the offsets\n       */\n      setOffsets(left?: BpOffset, right?: BpOffset) {\n        self.leftOffset = left\n        self.rightOffset = right\n      },\n\n      /**\n       * #action\n       */\n      setSearchResults(\n        searchResults: BaseResult[],\n        searchQuery: string,\n        assemblyName?: string,\n      ) {\n        getSession(self).queueDialog(handleClose => [\n          SearchResultsDialog,\n          {\n            model: self as LinearGenomeViewModel,\n            searchResults,\n            searchQuery,\n            handleClose,\n            assemblyName,\n          },\n        ])\n      },\n\n      /**\n       * #action\n       */\n      setNewView(bpPerPx: number, offsetPx: number) {\n        this.zoomTo(bpPerPx)\n        this.scrollTo(offsetPx)\n      },\n\n      /**\n       * #action\n       */\n      horizontallyFlip() {\n        self.displayedRegions = cast(\n          [...self.displayedRegions]\n            .reverse()\n            .map(region => ({ ...region, reversed: !region.reversed })),\n        )\n        this.scrollTo(self.totalBp / self.bpPerPx - self.offsetPx - self.width)\n      },\n\n      /**\n       * #action\n       */\n      showTrack(\n        trackId: string,\n        initialSnapshot = {},\n        displayInitialSnapshot = {},\n      ) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        if (!conf) {\n          throw new Error(`Could not resolve identifier \"${trackId}\"`)\n        }\n        const trackType = pluginManager.getTrackType(conf?.type)\n        if (!trackType) {\n          throw new Error(`Unknown track type ${conf.type}`)\n        }\n        const viewType = pluginManager.getViewType(self.type)!\n        const supportedDisplays = new Set(\n          viewType.displayTypes.map(d => d.name),\n        )\n        const displayConf = conf.displays.find((d: AnyConfigurationModel) =>\n          supportedDisplays.has(d.type),\n        )\n        if (!displayConf) {\n          throw new Error(\n            `Could not find a compatible display for view type ${self.type}`,\n          )\n        }\n\n        const t = self.tracks.filter(t => t.configuration === conf)\n        if (t.length === 0) {\n          const track = trackType.stateModel.create({\n            ...initialSnapshot,\n            type: conf.type,\n            configuration: conf,\n            displays: [\n              {\n                type: displayConf.type,\n                configuration: displayConf,\n                ...displayInitialSnapshot,\n              },\n            ],\n          })\n          self.tracks.push(track)\n          return track\n        }\n        return t[0]\n      },\n      /**\n       * #action\n       */\n      hideTrack(trackId: string) {\n        const schema = pluginManager.pluggableConfigSchemaType('track')\n        const conf = resolveIdentifier(schema, getRoot(self), trackId)\n        const t = self.tracks.filter(t => t.configuration === conf)\n        transaction(() => {\n          t.forEach(t => self.tracks.remove(t))\n        })\n        return t.length\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      moveTrackDown(id: string) {\n        const idx = self.tracks.findIndex(v => v.id === id)\n        if (idx === -1) {\n          return\n        }\n\n        if (idx !== -1 && idx < self.tracks.length - 1) {\n          self.tracks.splice(idx, 2, self.tracks[idx + 1], self.tracks[idx])\n        }\n      },\n      /**\n       * #action\n       */\n      moveTrackUp(id: string) {\n        const idx = self.tracks.findIndex(track => track.id === id)\n        if (idx > 0) {\n          self.tracks.splice(idx - 1, 2, self.tracks[idx], self.tracks[idx - 1])\n        }\n      },\n      /**\n       * #action\n       */\n      moveTrackToTop(id: string) {\n        const idx = self.tracks.findIndex(track => track.id === id)\n        self.tracks = cast([\n          self.tracks[idx],\n          ...self.tracks.filter(track => track.id !== id),\n        ])\n      },\n      /**\n       * #action\n       */\n      moveTrackToBottom(id: string) {\n        const idx = self.tracks.findIndex(track => track.id === id)\n        self.tracks = cast([\n          ...self.tracks.filter(track => track.id !== id),\n          self.tracks[idx],\n        ])\n      },\n      /**\n       * #action\n       */\n      moveTrack(movingId: string, targetId: string) {\n        const oldIndex = self.tracks.findIndex(track => track.id === movingId)\n        if (oldIndex === -1) {\n          throw new Error(`Track ID ${movingId} not found`)\n        }\n        const newIndex = self.tracks.findIndex(track => track.id === targetId)\n        if (newIndex === -1) {\n          throw new Error(`Track ID ${targetId} not found`)\n        }\n\n        const tracks = self.tracks.filter((_, idx) => idx !== oldIndex)\n        tracks.splice(newIndex, 0, self.tracks[oldIndex])\n        self.tracks = cast(tracks)\n      },\n\n      /**\n       * #action\n       */\n      toggleTrack(trackId: string) {\n        // if we have any tracks with that configuration, turn them off\n        const hiddenCount = self.hideTrack(trackId)\n        // if none had that configuration, turn one on\n        if (!hiddenCount) {\n          self.showTrack(trackId)\n          return true\n        }\n        return false\n      },\n\n      /**\n       * #action\n       */\n      setTrackLabels(setting: 'overlapping' | 'offset' | 'hidden') {\n        localStorage.setItem('lgv-trackLabels', setting)\n        self.trackLabels = setting\n      },\n\n      /**\n       * #action\n       */\n      setShowCenterLine(b: boolean) {\n        self.showCenterLine = b\n      },\n\n      /**\n       * #action\n       */\n      setDisplayedRegions(regions: Region[]) {\n        self.displayedRegions = cast(regions)\n        self.zoomTo(self.bpPerPx)\n      },\n\n      /**\n       * #action\n       */\n      activateTrackSelector() {\n        if (self.trackSelectorType === 'hierarchical') {\n          const session = getSession(self)\n          if (isSessionModelWithWidgets(session)) {\n            const selector = session.addWidget(\n              'HierarchicalTrackSelectorWidget',\n              'hierarchicalTrackSelector',\n              { view: self },\n            )\n            session.showWidget(selector)\n            return selector\n          }\n        }\n        throw new Error(`invalid track selector type ${self.trackSelectorType}`)\n      },\n\n      /**\n       * #method\n       * Helper method for the fetchSequence.\n       * Retrieves the corresponding regions that were selected by the\n       * rubberband\n       *\n       * @param leftOffset - `object as {start, end, index, offset}`, offset = start\n       * of user drag\n       * @param rightOffset - `object as {start, end, index, offset}`,\n       * offset = end of user drag\n       * @returns array of Region[]\n       */\n      getSelectedRegions(leftOffset?: BpOffset, rightOffset?: BpOffset) {\n        const snap = getSnapshot(self)\n        const simView = Base1DView.create({\n          ...snap,\n          interRegionPaddingWidth: self.interRegionPaddingWidth,\n        })\n\n        simView.setVolatileWidth(self.width)\n        simView.moveTo(leftOffset, rightOffset)\n\n        return simView.dynamicBlocks.contentBlocks.map(region => ({\n          // eslint-disable-next-line @typescript-eslint/no-misused-spread\n          ...region,\n          start: Math.floor(region.start),\n          end: Math.ceil(region.end),\n        }))\n      },\n\n      /**\n       * #action\n       * schedule something to be run after the next time displayedRegions is\n       * set\n       */\n      afterDisplayedRegionsSet(cb: () => void) {\n        self.afterDisplayedRegionsSetCallbacks.push(cb)\n      },\n\n      /**\n       * #action\n       */\n      horizontalScroll(distance: number) {\n        const oldOffsetPx = self.offsetPx\n        // newOffsetPx is the actual offset after the scroll is clamped\n        const newOffsetPx = self.scrollTo(self.offsetPx + distance)\n        return newOffsetPx - oldOffsetPx\n      },\n\n      /**\n       * #action\n       */\n      center() {\n        const centerBp = self.totalBp / 2\n        const centerPx = centerBp / self.bpPerPx\n        self.scrollTo(Math.round(centerPx - self.width / 2))\n      },\n\n      /**\n       * #action\n       */\n      showAllRegions() {\n        self.zoomTo(self.maxBpPerPx)\n        this.center()\n      },\n\n      /**\n       * #action\n       */\n      showAllRegionsInAssembly(assemblyName?: string) {\n        const session = getSession(self)\n        const { assemblyManager } = session\n        if (!assemblyName) {\n          const names = new Set(self.displayedRegions.map(r => r.assemblyName))\n          if (names.size > 1) {\n            session.notify(\n              `Can't perform operation with multiple assemblies currently`,\n            )\n            return\n          }\n          ;[assemblyName] = [...names]\n        }\n        const assembly = assemblyManager.get(assemblyName!)\n        if (assembly) {\n          const { regions } = assembly\n          if (regions) {\n            this.setDisplayedRegions(regions)\n            self.zoomTo(self.maxBpPerPx)\n            this.center()\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      setDraggingTrackId(idx?: string) {\n        self.draggingTrackId = idx\n      },\n\n      /**\n       * #action\n       */\n      setScaleFactor(factor: number) {\n        self.scaleFactor = factor\n      },\n\n      /**\n       * #action\n       * this \"clears the view\" and makes the view return to the import form\n       */\n      clearView() {\n        this.setDisplayedRegions([])\n        self.tracks.clear()\n        // it is necessary to run these after setting displayed regions empty\n        // or else model.offsetPx gets set to Infinity and breaks\n        // mobx-state-tree snapshot\n        self.scrollTo(0)\n        self.zoomTo(10)\n      },\n\n      /**\n       * #method\n       * creates an svg export and save using FileSaver\n       */\n      async exportSvg(opts: ExportSvgOptions = {}) {\n        const { renderToSvg } = await import(\n          './svgcomponents/SVGLinearGenomeView'\n        )\n        const html = await renderToSvg(self as LinearGenomeViewModel, opts)\n        const blob = new Blob([html], { type: 'image/svg+xml' })\n        saveAs(blob, opts.filename || 'image.svg')\n      },\n    }))\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      /**\n       * #action\n       * perform animated slide\n       */\n      function slide(viewWidths: number) {\n        const [animate, cancelAnimation] = springAnimate(\n          self.offsetPx,\n          self.offsetPx + self.width * viewWidths,\n          self.scrollTo,\n          undefined,\n          undefined,\n          200,\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation!\n        animate!()\n      }\n\n      return { slide }\n    })\n    .actions(self => {\n      let cancelLastAnimation = () => {}\n\n      /**\n       * #action\n       * perform animated zoom\n       */\n      function zoom(targetBpPerPx: number) {\n        self.zoomTo(self.bpPerPx)\n        if (\n          // already zoomed all the way in\n          (targetBpPerPx < self.bpPerPx && self.bpPerPx === self.minBpPerPx) ||\n          // already zoomed all the way out\n          (targetBpPerPx > self.bpPerPx && self.bpPerPx === self.maxBpPerPx)\n        ) {\n          return\n        }\n        const factor = self.bpPerPx / targetBpPerPx\n        const [animate, cancelAnimation] = springAnimate(\n          1,\n          factor,\n          self.setScaleFactor,\n          () => {\n            self.zoomTo(targetBpPerPx)\n            self.setScaleFactor(1)\n          },\n        )\n        cancelLastAnimation()\n        cancelLastAnimation = cancelAnimation!\n        animate!()\n      }\n\n      return { zoom }\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get canShowCytobands() {\n        return self.displayedRegions.length === 1 && this.anyCytobandsExist\n      },\n      /**\n       * #getter\n       */\n      get showCytobands() {\n        return this.canShowCytobands && self.showCytobandsSetting\n      },\n      /**\n       * #getter\n       */\n      get anyCytobandsExist() {\n        const { assemblyManager } = getSession(self)\n        return self.assemblyNames.some(\n          a => assemblyManager.get(a)?.cytobands?.length,\n        )\n      },\n      /**\n       * #getter\n       * the cytoband is displayed to the right of the chromosome name, and\n       * that offset is calculated manually with this method\n       */\n      get cytobandOffset() {\n        return this.showCytobands\n          ? measureText(self.displayedRegions[0]?.refName || '', 12) + 15\n          : 0\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * return the view menu items\n       */\n      menuItems(): MenuItem[] {\n        const { canShowCytobands, showCytobands } = self\n        const session = getSession(self)\n        const menuItems: MenuItem[] = [\n          {\n            label: 'Return to import form',\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ReturnToImportFormDialog,\n                { model: self, handleClose },\n              ])\n            },\n            icon: FolderOpenIcon,\n          },\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Sequence search',\n                  icon: SearchIcon,\n                  onClick: () => {\n                    getSession(self).queueDialog(handleClose => [\n                      SequenceSearchDialog,\n                      { model: self, handleClose },\n                    ])\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Export SVG',\n            icon: PhotoCameraIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                ExportSvgDialog,\n                { model: self, handleClose },\n              ])\n            },\n          },\n          {\n            label: 'Open track selector',\n            onClick: self.activateTrackSelector,\n            icon: TrackSelectorIcon,\n          },\n          {\n            label: 'Horizontally flip',\n            icon: SyncAltIcon,\n            onClick: self.horizontallyFlip,\n          },\n          {\n            label: 'Color by CDS',\n            type: 'checkbox',\n            checked: self.colorByCDS,\n            icon: PaletteIcon,\n            onClick: () => {\n              self.setColorByCDS(!self.colorByCDS)\n            },\n          },\n          {\n            label: 'Show...',\n            icon: VisibilityIcon,\n            subMenu: [\n              {\n                label: 'Show all regions in assembly',\n                onClick: self.showAllRegionsInAssembly,\n              },\n              {\n                label: 'Show center line',\n                type: 'checkbox',\n                checked: self.showCenterLine,\n                onClick: () => {\n                  self.setShowCenterLine(!self.showCenterLine)\n                },\n              },\n              {\n                label: 'Show header',\n                type: 'checkbox',\n                checked: !self.hideHeader,\n                onClick: () => {\n                  self.setHideHeader(!self.hideHeader)\n                },\n              },\n\n              {\n                label: 'Show track outlines',\n                type: 'checkbox',\n                checked: self.showTrackOutlines,\n                onClick: () => {\n                  self.setShowTrackOutlines(!self.showTrackOutlines)\n                },\n              },\n              {\n                label: 'Show header overview',\n                type: 'checkbox',\n                checked: !self.hideHeaderOverview,\n                onClick: () => {\n                  self.setHideHeaderOverview(!self.hideHeaderOverview)\n                },\n                disabled: self.hideHeader,\n              },\n              {\n                label: 'Show no tracks active button',\n                type: 'checkbox',\n                checked: !self.hideNoTracksActive,\n                onClick: () => {\n                  self.setHideNoTracksActive(!self.hideNoTracksActive)\n                },\n              },\n              {\n                label: 'Show guidelines',\n                type: 'checkbox',\n                checked: self.showGridlines,\n                onClick: () => {\n                  self.setShowGridlines(!self.showGridlines)\n                },\n              },\n              ...(canShowCytobands\n                ? [\n                    {\n                      label: 'Show ideogram',\n                      type: 'checkbox' as const,\n                      checked: self.showCytobands,\n                      onClick: () => {\n                        self.setShowCytobands(!showCytobands)\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          },\n          {\n            label: 'Track labels',\n            icon: LabelIcon,\n            subMenu: [\n              {\n                label: 'Overlapping',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabelsSetting === 'overlapping',\n                onClick: () => {\n                  self.setTrackLabels('overlapping')\n                },\n              },\n              {\n                label: 'Offset',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabelsSetting === 'offset',\n                onClick: () => {\n                  self.setTrackLabels('offset')\n                },\n              },\n              {\n                label: 'Hidden',\n                icon: VisibilityIcon,\n                type: 'radio',\n                checked: self.trackLabelsSetting === 'hidden',\n                onClick: () => {\n                  self.setTrackLabels('hidden')\n                },\n              },\n            ],\n          },\n        ]\n\n        // add track's view level menu options\n        for (const [key, value] of self.trackTypeActions.entries()) {\n          if (value.length) {\n            menuItems.push(\n              { type: 'divider' },\n              { type: 'subHeader', label: key },\n            )\n            value.forEach(action => menuItems.push(action))\n          }\n        }\n\n        return menuItems\n      },\n    }))\n    .views(self => {\n      let currentlyCalculatedStaticBlocks: BlockSet | undefined\n      let stringifiedCurrentlyCalculatedStaticBlocks = ''\n      return {\n        /**\n         * #getter\n         * static blocks are an important concept jbrowse uses to avoid\n         * re-rendering when you scroll to the side. when you horizontally\n         * scroll to the right, old blocks to the left may be removed, and new\n         * blocks may be instantiated on the right. tracks may use the static\n         * blocks to render their data for the region represented by the block\n         */\n        get staticBlocks() {\n          const ret = calculateStaticBlocks(self)\n          const sret = JSON.stringify(ret)\n          if (stringifiedCurrentlyCalculatedStaticBlocks !== sret) {\n            currentlyCalculatedStaticBlocks = ret\n            stringifiedCurrentlyCalculatedStaticBlocks = sret\n          }\n          return currentlyCalculatedStaticBlocks!\n        },\n        /**\n         * #getter\n         * dynamic blocks represent the exact coordinates of the currently\n         * visible genome regions on the screen. they are similar to static\n         * blocks, but static blocks can go offscreen while dynamic blocks\n         * represent exactly what is on screen\n         */\n        get dynamicBlocks() {\n          return calculateDynamicBlocks(self)\n        },\n        /**\n         * #getter\n         * rounded dynamic blocks are dynamic blocks without fractions of bp\n         */\n        get roundedDynamicBlocks() {\n          return this.dynamicBlocks.contentBlocks.map(\n            block =>\n              ({\n                // eslint-disable-next-line @typescript-eslint/no-misused-spread\n                ...block,\n                start: Math.floor(block.start),\n                end: Math.ceil(block.end),\n              }) as BaseBlock,\n          )\n        },\n\n        /**\n         * #getter\n         * a single \"combo-locstring\" representing all the regions visible on\n         * the screen\n         */\n        get visibleLocStrings() {\n          return calculateVisibleLocStrings(this.dynamicBlocks.contentBlocks)\n        },\n\n        /**\n         * #getter\n         * same as visibleLocStrings, but only updated every 300ms\n         */\n        get coarseVisibleLocStrings() {\n          return calculateVisibleLocStrings(self.coarseDynamicBlocks)\n        },\n      }\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setCoarseDynamicBlocks(blocks: BlockSet) {\n        self.coarseDynamicBlocks = blocks.contentBlocks\n        self.coarseTotalBp = blocks.totalBp\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(\n            () => {\n              if (self.initialized) {\n                this.setCoarseDynamicBlocks(self.dynamicBlocks)\n              }\n            },\n            { delay: 150 },\n          ),\n        )\n\n        addDisposer(\n          self,\n          autorun(() => {\n            const s = (s: unknown) => JSON.stringify(s)\n            const { showCytobandsSetting, showCenterLine, colorByCDS } = self\n            localStorageSetItem('lgv-showCytobands', s(showCytobandsSetting))\n            localStorageSetItem('lgv-showCenterLine', s(showCenterLine))\n            localStorageSetItem('lgv-colorByCDS', s(colorByCDS))\n          }),\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * offset is the base-pair-offset in the displayed region, index is the\n       * index of the displayed region in the linear genome view\n       *\n       * @param start - object as `{start, end, offset, index}`\n       * @param end - object as `{start, end, offset, index}`\n       */\n      moveTo(start?: BpOffset, end?: BpOffset) {\n        moveTo(self, start, end)\n      },\n\n      /**\n       * #action\n       * Navigate to the given locstring, will change displayed regions if\n       * needed, and wait for assemblies to be initialized\n       *\n       * @param input - e.g. \"chr1:1-100\", \"chr1:1-100 chr2:1-100\", \"chr 1 100\"\n       * @param optAssemblyName - (optional) the assembly name to use when\n       * navigating to the locstring\n       */\n      async navToLocString(input: string, optAssemblyName?: string) {\n        const { assemblyNames } = self\n        const { assemblyManager } = getSession(self)\n        const assemblyName = optAssemblyName || assemblyNames[0]!\n        if (assemblyName) {\n          await assemblyManager.waitForAssembly(assemblyName)\n        }\n\n        return this.navToLocations(\n          parseLocStrings(input, assemblyName, (ref, asm) =>\n            assemblyManager.isValidRefName(ref, asm),\n          ),\n          assemblyName,\n        )\n      },\n\n      /**\n       * #action\n       * Performs a text index search, and navigates to it immediately if a\n       * single result is returned. Will pop up a search dialog if multiple\n       * results are returned\n       */\n      async navToSearchString({\n        input,\n        assembly,\n      }: {\n        input: string\n        assembly: Assembly\n      }) {\n        await handleSelectedRegion({\n          input,\n          assembly,\n          model: self as LinearGenomeViewModel,\n        })\n      },\n\n      /**\n       * #action\n       * Similar to `navToLocString`, but accepts parsed location objects\n       * instead of strings. Will try to perform `setDisplayedRegions` if\n       * changing regions\n       */\n      async navToLocations(\n        parsedLocStrings: ParsedLocString[],\n        assemblyName?: string,\n      ) {\n        const { assemblyManager } = getSession(self)\n        await when(() => self.volatileWidth !== undefined)\n\n        const locations = await generateLocations(\n          parsedLocStrings,\n          assemblyManager,\n          assemblyName,\n        )\n\n        if (locations.length === 1) {\n          const loc = locations[0]!\n          const { reversed, parentRegion, start, end } = loc\n          self.setDisplayedRegions([{ reversed, ...parentRegion }])\n\n          this.navTo({\n            ...loc,\n            start: clamp(start ?? 0, 0, parentRegion.end),\n            end: clamp(end ?? parentRegion.end, 0, parentRegion.end),\n          })\n        } else {\n          self.setDisplayedRegions(\n            // @ts-expect-error\n            locations.map(r => (r.start === undefined ? r.parentRegion : r)),\n          )\n          self.showAllRegions()\n        }\n      },\n\n      /**\n       * #action\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Will not try to change displayed regions, use\n       * `navToLocations` instead. Only navigates to a location if it is\n       * entirely within a displayedRegion. Navigates to the first matching\n       * location encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param query - a proposed location to navigate to\n       */\n      navTo(query: NavLocation) {\n        this.navToMultiple([query])\n      },\n\n      /**\n       * #action\n       * Navigate to a location based on its refName and optionally start, end,\n       * and assemblyName. Will not try to change displayed regions, use\n       * navToLocations instead. Only navigates to a location if it is entirely\n       * within a displayedRegion. Navigates to the first matching location\n       * encountered.\n       *\n       * Throws an error if navigation was unsuccessful\n       *\n       * @param locations - proposed location to navigate to\n       */\n      navToMultiple(locations: NavLocation[]) {\n        if (\n          locations.some(\n            l =>\n              l.start !== undefined && l.end !== undefined && l.start > l.end,\n          )\n        ) {\n          throw new Error('found start greater than end')\n        }\n        const f1 = locations.at(0)\n        const f2 = locations.at(-1)\n        if (!f1 || !f2) {\n          return\n        }\n        const a = self.assemblyNames[0]!\n        const { assemblyManager } = getSession(self)\n        const assembly1 = assemblyManager.get(f1.assemblyName || a)\n        const assembly2 = assemblyManager.get(f2.assemblyName || a)\n        const ref1 = assembly1?.getCanonicalRefName(f1.refName) || f1.refName\n        const ref2 = assembly2?.getCanonicalRefName(f2.refName) || f2.refName\n        const r1 = self.displayedRegions.find(r => r.refName === ref1)\n        const r2 = findLast(self.displayedRegions, r => r.refName === ref2)\n        if (!r1) {\n          throw new Error(`could not find a region with refName \"${ref1}\"`)\n        }\n        if (!r2) {\n          throw new Error(`could not find a region with refName \"${ref2}\"`)\n        }\n\n        const s1 = f1.start === undefined ? r1.start : f1.start\n        const e1 = f1.end === undefined ? r1.end : f1.end\n        const s2 = f2.start === undefined ? r2.start : f2.start\n        const e2 = f2.end === undefined ? r2.end : f2.end\n\n        const index = self.displayedRegions.findIndex(\n          r =>\n            ref1 === r.refName &&\n            s1 >= r.start &&\n            s1 <= r.end &&\n            e1 <= r.end &&\n            e1 >= r.start,\n        )\n\n        const index2 = self.displayedRegions.findIndex(\n          r =>\n            ref2 === r.refName &&\n            s2 >= r.start &&\n            s2 <= r.end &&\n            e2 <= r.end &&\n            e2 >= r.start,\n        )\n\n        if (index === -1 || index2 === -1) {\n          throw new Error(\n            `could not find a region that contained \"${locations.map(l =>\n              assembleLocString(l),\n            )}\"`,\n          )\n        }\n\n        const sd = self.displayedRegions[index]!\n        const ed = self.displayedRegions[index2]!\n\n        this.moveTo(\n          {\n            index,\n            offset: sd.reversed ? sd.end - e1 : s1 - sd.start,\n          },\n          {\n            index: index2,\n            offset: ed.reversed ? ed.end - s2 : e2 - ed.start,\n          },\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      rubberBandMenuItems(): MenuItem[] {\n        return [\n          {\n            label: 'Zoom to region',\n            icon: ZoomInIcon,\n            onClick: () => {\n              self.moveTo(self.leftOffset, self.rightOffset)\n            },\n          },\n          {\n            label: 'Get sequence',\n            icon: MenuOpenIcon,\n            onClick: () => {\n              getSession(self).queueDialog(handleClose => [\n                GetSequenceDialog,\n\n                { model: self as any, handleClose },\n              ])\n            },\n          },\n        ]\n      },\n\n      /**\n       * #method\n       */\n      bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      }: {\n        refName: string\n        coord: number\n        regionNumber?: number\n      }) {\n        return bpToPx({ refName, coord, regionNumber, self })\n      },\n\n      /**\n       * #method\n       * scrolls the view to center on the given bp. if that is not in any of\n       * the displayed regions, does nothing\n       *\n       * @param coord - basepair at which you want to center the view\n       * @param refName - refName of the displayedRegion you are centering at\n       * @param regionNumber - index of the displayedRegion\n       */\n      centerAt(coord: number, refName: string, regionNumber?: number) {\n        const centerPx = this.bpToPx({\n          refName,\n          coord,\n          regionNumber,\n        })\n        if (centerPx !== undefined) {\n          self.scrollTo(Math.round(centerPx.offsetPx - self.width / 2))\n        }\n      },\n\n      /**\n       * #method\n       */\n      pxToBp(px: number) {\n        return pxToBp(self, px)\n      },\n\n      /**\n       * #getter\n       */\n      get centerLineInfo() {\n        return self.displayedRegions.length > 0\n          ? this.pxToBp(self.width / 2)\n          : undefined\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        function handler(e: KeyboardEvent) {\n          const session = getSession(self)\n          if (session.focusedViewId === self.id && (e.ctrlKey || e.metaKey)) {\n            if (e.code === 'ArrowLeft') {\n              e.preventDefault()\n              self.slide(-0.9)\n            } else if (e.code === 'ArrowRight') {\n              e.preventDefault()\n              self.slide(0.9)\n            } else if (e.code === 'ArrowUp' && self.scaleFactor === 1) {\n              e.preventDefault()\n              self.zoom(self.bpPerPx / 2)\n            } else if (e.code === 'ArrowDown' && self.scaleFactor === 1) {\n              e.preventDefault()\n              self.zoom(self.bpPerPx * 2)\n            }\n          }\n        }\n        document.addEventListener('keydown', handler)\n        addDisposer(self, () => {\n          document.removeEventListener('keydown', handler)\n        })\n      },\n    }))\n    .preProcessSnapshot(snap => {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!snap) {\n        return snap\n      }\n      const { highlight, ...rest } = snap\n      return {\n        highlight:\n          Array.isArray(highlight) || highlight === undefined\n            ? highlight\n            : [highlight],\n        ...rest,\n      }\n    })\n}\n\nexport type LinearGenomeViewStateModel = ReturnType<typeof stateModelFactory>\nexport type LinearGenomeViewModel = Instance<LinearGenomeViewStateModel>\n\nexport {\n  default as LinearGenomeView,\n  default as ReactComponent,\n} from './components/LinearGenomeView'\n\nexport { default as RefNameAutocomplete } from './components/RefNameAutocomplete'\nexport { default as SearchBox } from './components/SearchBox'\n\nexport { renderToSvg } from './svgcomponents/SVGLinearGenomeView'\n","import Plugin from '@jbrowse/core/Plugin'\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport LineStyleIcon from '@mui/icons-material/LineStyle'\nimport { types } from 'mobx-state-tree'\n\nimport {\n  BaseLinearDisplay,\n  BaseLinearDisplayComponent,\n  baseLinearDisplayConfigSchema,\n} from './BaseLinearDisplay'\nimport BasicTrackF from './BasicTrack'\nimport FeatureTrackF from './FeatureTrack'\nimport LaunchLinearGenomeViewF from './LaunchLinearGenomeView'\nimport LinearBareDisplayF from './LinearBareDisplay'\nimport LinearBasicDisplayF from './LinearBasicDisplay'\nimport LinearGenomeViewF, {\n  LinearGenomeView,\n  SearchBox,\n} from './LinearGenomeView'\nimport ZoomControls from './LinearGenomeView/components/HeaderZoomControls'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport default class LinearGenomeViewPlugin extends Plugin {\n  name = 'LinearGenomeViewPlugin'\n\n  exports = {\n    BaseLinearDisplayComponent,\n    BaseLinearDisplay,\n    baseLinearDisplayConfigSchema,\n    SearchBox,\n    ZoomControls,\n    LinearGenomeView,\n  }\n\n  /**\n   * #config LinearGenomeViewConfigSchema\n   */\n  configurationSchema = ConfigurationSchema('LinearGenomeViewConfigSchema', {\n    /**\n     * #slot configuration.LinearGenomeViewPlugin.trackLabels\n     */\n    trackLabels: {\n      type: 'string',\n      defaultValue: 'overlapping',\n      model: types.enumeration('trackLabelOptions', [\n        'offset',\n        'overlapping',\n        'hidden',\n      ]),\n    },\n  })\n\n  install(pluginManager: PluginManager) {\n    FeatureTrackF(pluginManager)\n    BasicTrackF(pluginManager)\n    LinearBasicDisplayF(pluginManager)\n    LinearGenomeViewF(pluginManager)\n    LinearBareDisplayF(pluginManager)\n    LaunchLinearGenomeViewF(pluginManager)\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      pluginManager.rootModel.appendToSubMenu(['Add'], {\n        label: 'Linear genome view',\n        icon: LineStyleIcon,\n        onClick: (session: AbstractSessionModel) => {\n          session.addView('LinearGenomeView', {})\n        },\n      })\n    }\n  }\n}\n\nexport type {\n  BaseLinearDisplayModel,\n  BlockModel,\n  ExportSvgDisplayOptions,\n} from './BaseLinearDisplay'\n\nexport {\n  configSchemaFactory as linearBareDisplayConfigSchemaFactory,\n  stateModelFactory as linearBareDisplayStateModelFactory,\n} from './LinearBareDisplay'\nexport {\n  BaseLinearDisplay,\n  BaseLinearDisplayComponent,\n  BlockMsg,\n  FeatureDensityMixin,\n  TooLargeMessage,\n  TrackHeightMixin,\n  baseLinearDisplayConfigSchema,\n} from './BaseLinearDisplay'\nexport {\n  type LinearGenomeViewModel,\n  type LinearGenomeViewStateModel,\n  RefNameAutocomplete,\n  SearchBox,\n} from './LinearGenomeView'\nexport {\n  SVGRuler,\n  SVGTracks,\n  renderToSvg,\n} from './LinearGenomeView/svgcomponents/SVGLinearGenomeView'\nexport { totalHeight } from './LinearGenomeView/svgcomponents/util'\nexport {\n  configSchema as linearBasicDisplayConfigSchemaFactory,\n  modelFactory as linearBasicDisplayModelFactory,\n} from './LinearBasicDisplay'\n","import {\n  TrackType,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function FeatureTrackF(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n    return new TrackType({\n      name: 'FeatureTrack',\n      displayName: 'Feature track',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'FeatureTrack', configSchema),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config FeatureTrack\n * #category track\n * used for basic gene and feature tracks, generally used with LinearBasicDisplay\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'FeatureTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n      /**\n       * #identifier\n       */\n      explicitIdentifier: 'trackId',\n    },\n  )\n\nexport default configSchema\n","import {\n  TrackType,\n  createBaseTrackModel,\n} from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchemaF from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function BasicTrackF(pm: PluginManager) {\n  pm.addTrackType(() => {\n    const configSchema = configSchemaF(pm)\n\n    return new TrackType({\n      name: 'BasicTrack',\n      configSchema,\n      stateModel: createBaseTrackModel(pm, 'BasicTrack', configSchema),\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { createBaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n/**\n * #config BasicTrack\n * #category track\n * synonym for FeatureTrack\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = (pluginManager: PluginManager) =>\n  ConfigurationSchema(\n    'BasicTrack',\n    {},\n    {\n      /**\n       * #baseConfiguration\n       */\n      baseConfiguration: createBaseTrackConfig(pluginManager),\n      explicitIdentifier: 'trackId',\n    },\n  )\nexport default configSchema\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\n\nimport { BaseLinearDisplayComponent } from '../BaseLinearDisplay'\nimport configSchema from './configSchema'\nimport modelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearBasicDisplay(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const config = configSchema(pluginManager)\n    return new DisplayType({\n      name: 'LinearBasicDisplay',\n      displayName: 'Basic feature display',\n      configSchema: config,\n      stateModel: modelFactory(config),\n      trackType: 'FeatureTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { default as modelFactory } from './model'\nexport { default as configSchema } from './configSchema'\n","import { lazy } from 'react'\n\nimport { ViewType } from '@jbrowse/core/pluggableElementTypes'\n\nimport { stateModelFactory } from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearGenomeViewF(pluginManager: PluginManager) {\n  pluginManager.addViewType(() => {\n    return new ViewType({\n      name: 'LinearGenomeView',\n      displayName: 'Linear genome view',\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/LinearGenomeView')),\n    })\n  })\n}\n\nexport * from './model'\n","import { DisplayType } from '@jbrowse/core/pluggableElementTypes'\n\nimport { configSchemaFactory } from './configSchema'\nimport { stateModelFactory } from './model'\nimport { BaseLinearDisplayComponent } from '../BaseLinearDisplay/'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function LinearBareDisplayF(pluginManager: PluginManager) {\n  pluginManager.addDisplayType(() => {\n    const configSchema = configSchemaFactory(pluginManager)\n    return new DisplayType({\n      name: 'LinearBareDisplay',\n      configSchema,\n      displayName: 'Bare feature display',\n      stateModel: stateModelFactory(configSchema),\n      trackType: 'BasicTrack',\n      viewType: 'LinearGenomeView',\n      ReactComponent: BaseLinearDisplayComponent,\n    })\n  })\n}\n\nexport { configSchemaFactory } from './configSchema'\nexport { stateModelFactory } from './model'\n","import { parseLocString, when } from '@jbrowse/core/util'\n\nimport { handleSelectedRegion } from '../searchUtils'\n\nimport type { LinearGenomeViewModel } from '../LinearGenomeView'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\ntype LGV = LinearGenomeViewModel\n\nexport default function LaunchLinearGenomeViewF(pluginManager: PluginManager) {\n  pluginManager.addToExtensionPoint(\n    'LaunchView-LinearGenomeView',\n    // @ts-expect-error\n    async ({\n      session,\n      assembly,\n      loc,\n      tracks = [],\n      tracklist,\n      nav,\n      highlight,\n    }: {\n      session: AbstractSessionModel\n      assembly?: string\n      loc: string\n      tracks?: string[]\n      tracklist?: boolean\n      nav?: boolean\n      highlight?: string[]\n    }) => {\n      try {\n        const { assemblyManager } = session\n        const view = session.addView('LinearGenomeView', {}) as LGV\n        await when(() => !!view.volatileWidth)\n\n        if (!assembly) {\n          throw new Error(\n            'No assembly provided when launching linear genome view',\n          )\n        }\n\n        const asm = await assemblyManager.waitForAssembly(assembly)\n        if (!asm) {\n          throw new Error(\n            `Assembly \"${assembly}\" not found when launching linear genome view`,\n          )\n        }\n\n        if (tracklist) {\n          view.activateTrackSelector()\n        }\n        if (nav !== undefined) {\n          view.setHideHeader(!nav)\n        }\n        if (highlight !== undefined) {\n          highlight.forEach(async h => {\n            const p = parseLocString(h, refName =>\n              assemblyManager.isValidRefName(refName, assembly),\n            )\n            const { start, end } = p\n            if (start !== undefined && end !== undefined) {\n              view.addToHighlights({\n                ...p,\n                start,\n                end,\n                assemblyName: assembly,\n              })\n            }\n          })\n        }\n\n        await handleSelectedRegion({ input: loc, model: view, assembly: asm })\n\n        const idsNotFound = [] as string[]\n        tracks.forEach(track => {\n          tryTrack(view, track, idsNotFound)\n        })\n        if (idsNotFound.length) {\n          throw new Error(\n            `Could not resolve identifiers: ${idsNotFound.join(',')}`,\n          )\n        }\n      } catch (e) {\n        session.notifyError(`${e}`, e)\n        throw e\n      }\n    },\n  )\n}\n\nfunction tryTrack(\n  model: {\n    showTrack: (arg: string) => void\n  },\n  trackId: string,\n  idsNotFound: string[],\n) {\n  try {\n    model.showTrack(trackId)\n  } catch (e) {\n    if (/Could not resolve identifier/.exec(`${e}`)) {\n      idsNotFound.push(trackId)\n    } else {\n      throw e\n    }\n  }\n}\n","import { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { getParent } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n  }\n})\n\nconst BlockLoadingMessage = observer(function ({\n  model,\n}: {\n  model: { status?: string }\n}) {\n  const { classes } = useStyles()\n  const { status: blockStatus } = model\n  const { message: displayStatus } = getParent<{ message?: string }>(model, 2)\n  const status = displayStatus || blockStatus\n  return (\n    <div className={classes.loading}>\n      <LoadingEllipses message={status} />\n    </div>\n  )\n})\n\nexport default BlockLoadingMessage\n","import { Suspense, isValidElement, lazy } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport BlockLoadingMessage from './BlockLoadingMessage'\nimport BlockMsg from './BlockMsg'\n\n// lazies\nconst BlockErrorMessage = lazy(() => import('./BlockErrorMessage'))\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  model: {\n    error?: unknown\n    reload: () => void\n    message: React.ReactNode\n    filled?: boolean\n    status?: string\n    reactElement?: React.ReactElement\n  }\n}) {\n  if (model.error) {\n    return (\n      <Suspense fallback={null}>\n        <BlockErrorMessage model={model} />\n      </Suspense>\n    )\n  } else if (model.message) {\n    // the message can be a fully rendered react component, e.g. the region too\n    // large message\n    return isValidElement(model.message) ? (\n      model.message\n    ) : (\n      <BlockMsg message={`${model.message}`} severity=\"info\" />\n    )\n  } else if (!model.filled) {\n    return <BlockLoadingMessage model={model} />\n  } else {\n    return model.reactElement\n  }\n})\n\nexport default ServerSideRenderedBlockContent\n","import type React from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  assembleLocString,\n  getContainingDisplay,\n  getContainingTrack,\n  getSession,\n  getViewParams,\n  makeAbortableReaction,\n} from '@jbrowse/core/util'\nimport { stopStopToken } from '@jbrowse/core/util/stopToken'\nimport {\n  getRpcSessionId,\n  getTrackAssemblyNames,\n} from '@jbrowse/core/util/tracks'\nimport { isRetryException } from '@jbrowse/core/util/types'\nimport { cast, getParent, isAlive, types } from 'mobx-state-tree'\n\nimport ServerSideRenderedBlockContent from '../components/ServerSideRenderedBlockContent'\n\nimport type { Feature } from '@jbrowse/core/util'\nimport type { AbstractDisplayModel, Region } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\nexport interface RenderedProps {\n  reactElement: React.ReactElement\n  features: Map<string, Feature>\n  layout: any\n  maxHeightReached: boolean\n  renderProps: any\n}\n// the MST state of a single server-side-rendered block in a display\nconst blockState = types\n  .model('BlockState', {\n    /**\n     * #property\n     */\n    key: types.string,\n    /**\n     * #property\n     */\n    region: types.frozen<Region>(),\n    /**\n     * #property\n     */\n    reloadFlag: 0,\n    /**\n     * #property\n     */\n    isLeftEndOfDisplayedRegion: false,\n    /**\n     * #property\n     */\n    isRightEndOfDisplayedRegion: false,\n  })\n  .volatile(() => ({\n    /**\n     * #volatile\n     */\n    stopToken: undefined as string | undefined,\n    /**\n     * #volatile\n     */\n    filled: false,\n    /**\n     * #volatile\n     */\n    reactElement: undefined as React.ReactElement | undefined,\n    /**\n     * #volatile\n     */\n    features: undefined as Map<string, Feature> | undefined,\n    /**\n     * #volatile\n     */\n    layout: undefined as any,\n    /**\n     * #volatile\n     */\n    status: '',\n    /**\n     * #volatile\n     */\n    error: undefined as unknown,\n    /**\n     * #volatile\n     */\n    message: undefined as string | undefined,\n    /**\n     * #volatile\n     */\n    maxHeightReached: false,\n    /**\n     * #volatile\n     */\n    ReactComponent: ServerSideRenderedBlockContent,\n    /**\n     * #volatile\n     */\n    renderProps: undefined as any,\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    doReload() {\n      self.reloadFlag = self.reloadFlag + 1\n    },\n    afterAttach() {\n      const display = getContainingDisplay(self)\n      setTimeout(() => {\n        if (isAlive(self)) {\n          makeAbortableReaction(\n            self as any,\n            renderBlockData,\n            renderBlockEffect,\n            {\n              name: `${display.id}/${assembleLocString(self.region)} rendering`,\n              delay: display.renderDelay,\n              fireImmediately: true,\n            },\n            this.setLoading,\n            this.setRendered,\n            this.setError,\n          )\n        }\n      }, display.renderDelay)\n    },\n    /**\n     * #action\n     */\n    setStatus(message: string) {\n      self.status = message\n    },\n    /**\n     * #action\n     */\n    setLoading(newStopToken: string) {\n      if (self.stopToken !== undefined) {\n        stopStopToken(self.stopToken)\n      }\n      self.filled = false\n      self.message = undefined\n      self.reactElement = undefined\n      self.features = undefined\n      self.layout = undefined\n      self.error = undefined\n      self.maxHeightReached = false\n      self.renderProps = undefined\n      self.stopToken = newStopToken\n    },\n    /**\n     * #action\n     */\n    setMessage(messageText: string) {\n      if (self.stopToken !== undefined) {\n        stopStopToken(self.stopToken)\n      }\n      self.filled = false\n      self.message = messageText\n      self.reactElement = undefined\n      self.features = undefined\n      self.layout = undefined\n      self.error = undefined\n      self.maxHeightReached = false\n      self.renderProps = undefined\n      self.stopToken = undefined\n    },\n    /**\n     * #action\n     */\n    setRendered(props: RenderedProps | undefined) {\n      if (!props) {\n        return\n      }\n      const { reactElement, features, layout, maxHeightReached, renderProps } =\n        props\n      self.filled = true\n      self.message = undefined\n      self.reactElement = reactElement\n      self.features = features\n      self.layout = layout\n      self.error = undefined\n      self.maxHeightReached = maxHeightReached\n      self.renderProps = renderProps\n      self.stopToken = undefined\n    },\n    /**\n     * #action\n     */\n    setError(error: unknown) {\n      console.error(error)\n      if (self.stopToken !== undefined) {\n        stopStopToken(self.stopToken)\n      }\n      // the rendering failed for some reason\n      self.filled = false\n      self.message = undefined\n      self.reactElement = undefined\n      self.features = undefined\n      self.layout = undefined\n      self.maxHeightReached = false\n      self.error = error\n      self.renderProps = undefined\n      self.stopToken = undefined\n      if (isRetryException(error as Error)) {\n        this.reload()\n      }\n    },\n    /**\n     * #action\n     */\n    reload() {\n      self.stopToken = undefined\n      self.filled = false\n      self.reactElement = undefined\n      self.features = undefined\n      self.layout = undefined\n      self.error = undefined\n      self.message = undefined\n      self.maxHeightReached = false\n      self.ReactComponent = ServerSideRenderedBlockContent\n      self.renderProps = undefined\n      getParent<any>(self, 2).reload()\n    },\n    beforeDestroy() {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      ;(async () => {\n        try {\n          if (self.stopToken !== undefined) {\n            stopStopToken(self.stopToken)\n          }\n          const display = getContainingDisplay(self)\n          const { rpcManager } = getSession(self)\n          const { rendererType } = display\n          const { renderArgs } = renderBlockData(cast(self))\n          // renderArgs can be undefined if an error occurred in this block\n          if (renderArgs) {\n            await rendererType.freeResourcesInClient(\n              rpcManager,\n              // error if use structuredClone: can't clone Function, presumably a statusCallback\n              JSON.parse(JSON.stringify(renderArgs)),\n            )\n          }\n        } catch (e) {\n          console.error('Error while destroying block', e)\n        }\n      })()\n    },\n  }))\n\nexport default blockState\nexport type BlockStateModel = typeof blockState\nexport type BlockModel = Instance<BlockStateModel>\n\n// calls the render worker to render the block content not using a flow for\n// this, because the flow doesn't work with autorun\nexport function renderBlockData(\n  self: BlockModel,\n  optDisplay?: AbstractDisplayModel,\n) {\n  try {\n    const display = optDisplay || (getContainingDisplay(self) as any)\n    const { assemblyManager, rpcManager } = getSession(display)\n    const { adapterConfig, rendererType, error, parentTrack } = display\n    const assemblyNames = getTrackAssemblyNames(parentTrack)\n    const regionAsm = self.region.assemblyName\n    if (\n      !assemblyNames.includes(regionAsm) &&\n      !assemblyNames.some(name => assemblyManager.get(name)?.hasName(regionAsm))\n    ) {\n      throw new Error(\n        `region assembly (${regionAsm}) does not match track assemblies (${assemblyNames})`,\n      )\n    }\n\n    const renderProps = display.renderProps()\n    const { config } = renderProps\n\n    // This line is to trigger the mobx reaction when the config changes It\n    // won't trigger the reaction if it doesn't think we're accessing it\n    readConfObject(config)\n\n    const sessionId = getRpcSessionId(display)\n    const layoutId = getContainingTrack(display).id\n    const cannotBeRenderedReason = display.regionCannotBeRendered(self.region)\n\n    return {\n      rendererType,\n      rpcManager,\n      renderProps,\n      cannotBeRenderedReason,\n      displayError: error,\n      renderArgs: {\n        statusCallback: (message: string) => {\n          if (isAlive(self)) {\n            self.setStatus(message)\n          }\n        },\n        assemblyName: self.region.assemblyName,\n        regions: [self.region],\n        adapterConfig,\n        rendererType: rendererType.name,\n        sessionId,\n        layoutId,\n        blockKey: self.key,\n        reloadFlag: self.reloadFlag,\n        timeout: 1_000_000,\n      },\n    }\n  } catch (e) {\n    return { displayError: e }\n  }\n}\n\nasync function renderBlockEffect(\n  props: ReturnType<typeof renderBlockData> | undefined,\n  stopToken: string | undefined,\n  self: BlockModel,\n) {\n  if (!props) {\n    return\n  }\n  const {\n    rendererType,\n    renderProps,\n    rpcManager,\n    renderArgs,\n    cannotBeRenderedReason,\n    displayError,\n  } = props\n  if (!isAlive(self)) {\n    return undefined\n  } else if (displayError) {\n    self.setError(displayError)\n    return undefined\n  } else if (cannotBeRenderedReason) {\n    self.setMessage(cannotBeRenderedReason)\n    return undefined\n  } else if (renderProps.notReady) {\n    return undefined\n  } else {\n    const { reactElement, features, layout, maxHeightReached } =\n      await rendererType.renderInClient(rpcManager, {\n        ...renderArgs,\n        ...renderProps,\n        viewParams: getViewParams(self),\n        stopToken,\n      })\n    return {\n      reactElement,\n      features,\n      layout,\n      maxHeightReached,\n      renderProps,\n    }\n  }\n}\n","import jexl from 'jexl'\n\nimport type { Feature } from './simpleFeature'\n\ntype JexlWithAddFunction = typeof jexl & {\n  addFunction(name: string, func: (...args: unknown[]) => unknown): void\n}\ntype JexlNonBuildable = Omit<typeof jexl, 'Jexl'>\n\nexport default function JexlF(/* config?: any*/): JexlNonBuildable {\n  const j = new jexl.Jexl() as JexlWithAddFunction\n  // someday will make sure all of configs callbacks are added in, including\n  // ones passed in\n\n  // below are core functions\n  j.addFunction('get', (feature: Feature, data: string) => feature.get(data))\n  j.addFunction('parent', (feature: Feature) => feature.parent())\n\n  j.addFunction('id', (feature: Feature) => feature.id())\n\n  // let user cast a jexl type into a javascript type\n  j.addFunction('cast', (arg: unknown) => arg)\n\n  // logging\n  j.addFunction('log', (thing: unknown) => {\n    console.log(thing) // eslint-disable-line no-console\n    return thing\n  })\n\n  // math\n  // addfunction added in jexl 2.3 but types/jexl still on 2.2\n  j.addFunction('max', Math.max)\n  j.addFunction('min', Math.min)\n  j.addFunction('sqrt', Math.sqrt)\n  j.addFunction('ceil', Math.ceil)\n  j.addFunction('floor', Math.floor)\n  j.addFunction('round', Math.round)\n  j.addFunction('abs', Math.abs)\n  j.addFunction('log10', Math.log10)\n  j.addFunction('parseInt', Number.parseInt)\n  j.addFunction('parseFloat', Number.parseFloat)\n\n  // string\n  j.addFunction('split', (s: string, char: string) => s.split(char))\n  j.addFunction('charAt', (s: string, index: number) => s.charAt(index))\n  j.addFunction('charCodeAt', (s: string, index: number) => s.charCodeAt(index))\n  j.addFunction('codePointAt', (s: string, pos: number) => s.codePointAt(pos))\n  j.addFunction('startsWith', (s: string, search: string, len?: number) =>\n    s.startsWith(search, len),\n  )\n  j.addFunction('endsWith', (s: string, search: string, len?: number) =>\n    s.endsWith(search, len),\n  )\n  j.addFunction('padEnd', (s: string, len: number, pad?: string) =>\n    s.padEnd(len, pad),\n  )\n  j.addFunction('padStart', (s: string, len: number, fill?: string) =>\n    s.padStart(len, fill),\n  )\n  j.addFunction('repeat', (s: string, count: number) => s.repeat(count))\n  j.addFunction('replace', (s: string, match: string, sub: string) =>\n    s.replace(match, sub),\n  )\n  j.addFunction('replaceAll', (s: string, match: string, sub: string) =>\n    s.replaceAll(match, sub),\n  )\n  j.addFunction('slice', (s: string, start: number, end?: number) =>\n    s.slice(start, end),\n  )\n  j.addFunction('startsWith', (s: string, search: string, pos?: number) =>\n    s.startsWith(search, pos),\n  )\n  j.addFunction('substring', (s: string, start: number, end?: number) =>\n    // eslint-disable-next-line unicorn/prefer-string-slice\n    s.substring(start, end),\n  )\n  j.addFunction('toLowerCase', (s: string) => s.toLowerCase())\n  j.addFunction('toUpperCase', (s: string) => s.toUpperCase())\n  j.addFunction('jsonParse', (s: string) => JSON.parse(s))\n  j.addFunction('trim', (s: string) => s.trim())\n  j.addFunction('trimEnd', (s: string) => s.trimEnd())\n  j.addFunction('trimStart', (s: string) => s.trimStart())\n\n  j.addFunction('getTag', (feature: Feature, s: string) => {\n    const tags = feature.get('tags')\n    return tags ? tags[s] : feature.get(s)\n  })\n\n  j.addBinaryOp('&', 15, (a: number, b: number) => a & b)\n\n  return j\n}\n","import { parseBreakend } from '@gmod/vcf'\n\nimport type VCF from '@gmod/vcf'\n\nconst altTypeToSO: Record<string, string> = {\n  DEL: 'deletion',\n  INS: 'insertion',\n  DUP: 'duplication',\n  INV: 'inversion',\n  INVDUP: 'inverted_duplication',\n  CNV: 'copy_number_variation',\n  TRA: 'translocation',\n  'DUP:TANDEM': 'tandem_duplication',\n  NON_REF: 'sequence_variant',\n  '*': 'sequence_variant',\n}\n\n/**\n * Get a sequence ontology (SO) term that describes the variant type\n */\nexport function getSOTermAndDescription(\n  ref: string,\n  alt: string[] | undefined,\n  parser: VCF,\n): string[] {\n  // it's just a remark if there are no alternate alleles\n  if (!alt || alt.length === 0) {\n    return ['remark', 'no alternative alleles']\n  }\n\n  const soTerms = new Set<string>()\n  let descriptions = new Set<string>()\n  alt.forEach(a => {\n    let [soTerm, description] = getSOAndDescFromAltDefs(a, parser)\n    if (!soTerm) {\n      ;[soTerm, description] = getSOAndDescByExamination(ref, a)\n    }\n    if (soTerm && description) {\n      soTerms.add(soTerm)\n      descriptions.add(description)\n    }\n  })\n\n  // Combine descriptions like [\"SNV G -> A\", \"SNV G -> T\"] to [\"SNV G -> A,T\"]\n  if (descriptions.size > 1) {\n    const descs = [...descriptions]\n    const prefixes = new Set(\n      descs\n        .map(desc => {\n          const prefix = desc.split('->')\n          return prefix[1] ? prefix[0] : desc\n        })\n        .filter((f): f is string => !!f),\n    )\n\n    descriptions = new Set(\n      [...prefixes]\n        .map(r => r.trim())\n        .map(prefix => {\n          const suffixes = descs\n            .map(desc => desc.split('->').map(r => r.trim()))\n            .map(pref => (pref[1] && pref[0] === prefix ? pref[1] : ''))\n            .filter(f => !!f)\n\n          return suffixes.length ? `${prefix} -> ${suffixes.join(',')}` : prefix\n        }),\n    )\n  }\n  return soTerms.size\n    ? [[...soTerms].join(','), [...descriptions].join(',')]\n    : []\n}\n\nexport function getSOAndDescFromAltDefs(alt: string, parser: VCF): string[] {\n  if (typeof alt === 'string' && !alt.startsWith('<')) {\n    return []\n  }\n\n  // look for a definition with an SO type for this\n  let soTerm = altTypeToSO[alt]\n  // if no SO term but ALT is in metadata, assume sequence_variant\n  if (!soTerm && parser.getMetadata('ALT', alt)) {\n    soTerm = 'sequence_variant'\n  }\n  if (soTerm) {\n    return [soTerm, alt]\n  }\n\n  // try to look for a definition for a parent term if we can\n  const modAlt = alt.split(':')\n  if (modAlt.length > 1) {\n    return getSOAndDescFromAltDefs(`<${modAlt.slice(0, -1).join(':')}>`, parser)\n  }\n\n  // no parent\n  return []\n}\n\n// note: term SNV is used instead of SNP because SO definition of SNP says\n// abundance must be at least 1% in population, and can't be sure we meet\n// that\nexport function getSOAndDescByExamination(ref: string, alt: string) {\n  const bnd = parseBreakend(alt)\n  if (bnd) {\n    return ['breakend', alt]\n  }\n  if (ref.length === 1 && alt.length === 1) {\n    return ['SNV', makeDescriptionString('SNV', ref, alt)]\n  }\n  if (alt === '<INS>') {\n    return ['insertion', alt]\n  }\n  if (alt === '<DEL>') {\n    return ['deletion', alt]\n  }\n  if (alt === '<DUP>') {\n    return ['duplication', alt]\n  }\n  if (alt === '<CNV>') {\n    return ['cnv', alt]\n  }\n  if (alt === '<INV>') {\n    return ['inversion', alt]\n  }\n  if (alt === '<TRA>') {\n    return ['translocation', alt]\n  }\n  if (alt.includes('<')) {\n    return ['sv', alt]\n  }\n  if (ref.length === alt.length) {\n    return ref.split('').reverse().join('') === alt\n      ? ['inversion', makeDescriptionString('inversion', ref, alt)]\n      : ['substitution', makeDescriptionString('substitution', ref, alt)]\n  }\n  if (ref.length <= alt.length) {\n    const len = alt.length - ref.length\n    const lena = len.toLocaleString('en-US')\n    return [\n      'insertion',\n      len > 5 ? `${lena}bp INS` : makeDescriptionString('insertion', ref, alt),\n    ]\n  }\n  if (ref.length > alt.length) {\n    const len = ref.length - alt.length\n    const lena = len.toLocaleString('en-US')\n    return [\n      'deletion',\n      len > 5 ? `${lena}bp DEL` : makeDescriptionString('deletion', ref, alt),\n    ]\n  }\n\n  return ['indel', makeDescriptionString('indel', ref, alt)]\n}\n\nfunction makeDescriptionString(soTerm: string, ref: string, alt: string) {\n  return `${soTerm} ${ref} -> ${alt}`\n}\n","import { getSOTermAndDescription } from './util'\n\nimport type VCFParser from '@gmod/vcf'\nimport type { Variant } from '@gmod/vcf'\nimport type { Feature } from '@jbrowse/core/util'\n\ntype FeatureData = ReturnType<typeof dataFromVariant>\n\nfunction dataFromVariant(variant: Variant, parser: VCFParser) {\n  const { REF = '', ALT, POS, CHROM, ID } = variant\n  const start = POS - 1\n  const [type, description] = getSOTermAndDescription(REF, ALT, parser)\n\n  return {\n    refName: CHROM,\n    start,\n    end: getEnd(variant),\n    description,\n    type,\n    name: ID?.join(','),\n    aliases: ID && ID.length > 1 ? ID.slice(1) : undefined,\n  }\n}\nfunction getEnd(variant: Variant) {\n  const { POS, REF = '', ALT } = variant\n  const isTRA = ALT?.includes('<TRA>')\n  const start = POS - 1\n  const isSymbolic = ALT?.some(f => f.includes('<'))\n  if (isSymbolic) {\n    const info = variant.INFO\n    if (info.END && !isTRA) {\n      return +(info.END as string[])[0]!\n    }\n  }\n  return start + REF.length\n}\n\nexport default class VCFFeature implements Feature {\n  private variant: Variant\n\n  private parser: VCFParser\n\n  private data: FeatureData\n\n  private _id: string\n\n  constructor(args: { variant: Variant; parser: VCFParser; id: string }) {\n    this.variant = args.variant\n    this.parser = args.parser\n    this.data = dataFromVariant(this.variant, this.parser)\n    this._id = args.id\n  }\n\n  get(field: string): any {\n    return field === 'samples'\n      ? this.variant.SAMPLES()\n      : field === 'genotypes'\n        ? this.variant.GENOTYPES()\n        : (this.data[field as keyof typeof this.data] ??\n          this.variant[field as keyof typeof this.variant])\n  }\n  parent() {\n    return undefined\n  }\n\n  children() {\n    return undefined\n  }\n\n  id() {\n    return this._id\n  }\n\n  toJSON(): any {\n    const { SAMPLES, GENOTYPES, ...rest } = this.variant\n    return {\n      uniqueId: this._id,\n      ...rest,\n      ...this.data,\n      samples: this.variant.SAMPLES(),\n    }\n  }\n}\n","import { reaction } from 'mobx'\nimport { addDisposer, isAlive } from 'mobx-state-tree'\n\nimport { isAbortException } from './aborting'\nimport { createStopToken, stopStopToken } from './stopToken'\n\nimport type { IReactionOptions, IReactionPublic } from 'mobx'\n\n/**\n * makes a mobx reaction with the given functions, that calls actions on the\n * model for each stage of execution, and to abort the reaction function when\n * the model is destroyed.\n *\n * Will call startedFunction(stopToken), successFunction(result), and\n * errorFunction(error) when the async reaction function starts, completes, and\n * errors respectively.\n *\n * @param self -\n * @param dataFunction -\n * @param asyncReactionFunction -\n * @param reactionOptions -\n * @param startedFunction -\n * @param successFunction -\n * @param errorFunction -\n */\nexport function makeAbortableReaction<T, U, V>(\n  self: T,\n  dataFunction: (arg: T) => U,\n  asyncReactionFunction: (\n    arg: U | undefined,\n    stopToken: string,\n    model: T,\n    handle: IReactionPublic,\n  ) => Promise<V>,\n  // @ts-expect-error\n  reactionOptions: IReactionOptions,\n  startedFunction: (stopToken: string) => void,\n  successFunction: (arg: V) => void,\n  errorFunction: (err: unknown) => void,\n) {\n  let inProgress: string | undefined\n\n  function handleError(error: unknown) {\n    if (!isAbortException(error)) {\n      console.error(error)\n      if (isAlive(self)) {\n        errorFunction(error)\n      }\n    }\n  }\n\n  addDisposer(\n    self,\n    reaction(\n      () => {\n        try {\n          return dataFunction(self)\n        } catch (e) {\n          handleError(e)\n          return undefined\n        }\n      },\n      async (data, mobxReactionHandle) => {\n        if (inProgress) {\n          stopStopToken(inProgress)\n        }\n\n        if (!isAlive(self)) {\n          return\n        }\n        inProgress = createStopToken()\n\n        startedFunction(inProgress)\n        try {\n          const result = await asyncReactionFunction(\n            data,\n            inProgress,\n            self,\n            // @ts-expect-error\n            mobxReactionHandle,\n          )\n          if (isAlive(self)) {\n            successFunction(result)\n          }\n        } catch (e) {\n          handleError(e)\n        }\n      },\n      reactionOptions,\n    ),\n  )\n  addDisposer(self, () => {\n    if (inProgress) {\n      stopStopToken(inProgress)\n    }\n  })\n}\n","import { useState } from 'react'\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@mui/material'\n\nimport ErrorMessage from './ErrorMessage'\nimport FactoryResetDialog from './FactoryResetDialog'\n\nconst ResetComponent = ({\n  onFactoryReset,\n  resetButtonText,\n}: {\n  onFactoryReset: () => void\n  resetButtonText: string\n}) => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  return (\n    <>\n      <Button\n        data-testid=\"fatal-error\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => {\n          setDialogOpen(true)\n        }}\n      >\n        {resetButtonText}\n      </Button>\n      <FactoryResetDialog\n        onClose={() => {\n          setDialogOpen(false)\n        }}\n        open={dialogOpen}\n        onFactoryReset={onFactoryReset}\n      />\n    </>\n  )\n}\n\nexport default function FatalErrorDialog({\n  componentStack,\n  error = 'No error message provided',\n  onFactoryReset,\n  resetButtonText = 'Factory Reset',\n}: {\n  componentStack?: string\n  error?: unknown\n  onFactoryReset: () => void\n  resetButtonText?: string\n}) {\n  return (\n    <Dialog maxWidth=\"xl\" open>\n      <DialogTitle>Fatal error</DialogTitle>\n      <DialogContent>\n        <ErrorMessage error={error} />\n        <pre>{componentStack}</pre>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => {\n            window.location.reload()\n          }}\n        >\n          Refresh\n        </Button>\n        <ResetComponent\n          onFactoryReset={onFactoryReset}\n          resetButtonText={resetButtonText}\n        />\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { AnyReactComponentType } from '../util'\nimport type { IAnyModelType } from 'mobx-state-tree'\n\nexport default class DisplayType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  ReactComponent: AnyReactComponentType\n\n  /**\n   * The track type the display is associated with\n   */\n  trackType: string\n\n  /*\n   * Indicates that this display type can be a \"sub-display\" of another type of\n   * display, e.g. in AlignmentsDisplay, has Pileup and SNPCoverage subDisplays\n   */\n  subDisplay?: {\n    type: string\n    [key: string]: unknown\n  }\n\n  /**\n   * The view type the display is associated with\n   */\n  viewType: string\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    trackType: string\n    viewType: string\n    displayName?: string\n    subDisplay?: { type: string; [key: string]: unknown }\n    configSchema: AnyConfigurationSchemaType\n    ReactComponent: AnyReactComponentType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.subDisplay = stuff.subDisplay\n    this.configSchema = stuff.configSchema\n    this.ReactComponent = stuff.ReactComponent\n    this.trackType = stuff.trackType\n    this.viewType = stuff.viewType\n  }\n}\n","import { firstValueFrom } from 'rxjs'\nimport { filter, toArray } from 'rxjs/operators'\n\nimport ServerSideRenderer from './ServerSideRendererType'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport { dedupe, getSerializedSvg } from '../../util'\n\nimport type {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n} from './ServerSideRendererType'\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { BaseFeatureDataAdapter } from '../../data_adapters/BaseAdapter'\nimport type RpcManager from '../../rpc/RpcManager'\nimport type { Feature } from '../../util/simpleFeature'\nimport type { Region } from '../../util/types'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  blockKey: string\n}\n\nexport type ResultsSerialized = ServerSideResultsSerialized\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  blockKey: string\n}\n\nexport interface ResultsSerializedSvgExport extends ResultsSerialized {\n  canvasRecordedData: unknown\n  width: number\n  height: number\n  reactElement: unknown\n}\n\nfunction isSvgExport(e: ResultsSerialized): e is ResultsSerializedSvgExport {\n  return 'canvasRecordedData' in e\n}\n\nexport default class ComparativeServerSideRenderer extends ServerSideRenderer {\n  /**\n   * directly modifies the render arguments to prepare them to be serialized\n   * and sent to the worker.\n   *\n   * @param args - the arguments passed to render\n   * @returns the same object\n   */\n\n  async renameRegionsIfNeeded(args: RenderArgs) {\n    return args\n  }\n\n  serializeArgsInClient(args: RenderArgs) {\n    const deserializedArgs = {\n      ...args,\n      displayModel: undefined,\n    }\n\n    return super.serializeArgsInClient(deserializedArgs)\n  }\n\n  // deserialize some of the results that came back from the worker\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserialized = super.deserializeResultsInClient(result, args)\n    return {\n      ...deserialized,\n      blockKey: args.blockKey,\n    }\n  }\n\n  /**\n   * Render method called on the client. Serializes args, then\n   * calls `render` with the RPC manager.\n   */\n  async renderInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const results = (await rpcManager.call(\n      args.sessionId,\n      'ComparativeRender',\n      args,\n    )) as ResultsSerialized\n\n    if (isSvgExport(results)) {\n      results.html = await getSerializedSvg(results)\n      results.reactElement = undefined\n    }\n    return results\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    return renderArgs.filters\n      ? renderArgs.filters.passes(feature, renderArgs)\n      : true\n  }\n\n  async getFeatures(renderArgs: {\n    regions: Region[]\n    sessionId: string\n    adapterConfig: AnyConfigurationModel\n  }) {\n    const pm = this.pluginManager\n    const { regions, sessionId, adapterConfig } = renderArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    const requestRegions = regions.map(r => {\n      // make sure the requested region's start and end are integers, if\n      // there is a region specification.\n      const requestRegion = { ...r }\n      if (requestRegion.start) {\n        requestRegion.start = Math.floor(requestRegion.start)\n      }\n      if (requestRegion.end) {\n        requestRegion.end = Math.floor(requestRegion.end)\n      }\n      return requestRegion\n    })\n\n    // note that getFeaturesInMultipleRegions does not do glyph expansion\n    const res = await firstValueFrom(\n      (dataAdapter as BaseFeatureDataAdapter)\n        .getFeaturesInMultipleRegions(requestRegions, renderArgs)\n        .pipe(\n          // @ts-expect-error\n          filter(f => this.featurePassesFilters(renderArgs, f)),\n          toArray(),\n        ),\n    )\n\n    // dedupe needed xref https://github.com/GMOD/jbrowse-components/pull/3404/\n    return dedupe(res, f => f.id())\n  }\n}\n\nexport { type RenderResults } from './ServerSideRendererType'\n","import { forwardRef } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport Tooltip from '../../Tooltip'\nimport { toP } from '../../util'\n\nimport type { TooltipContentsComponent } from '../../Tooltip'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst en = (n: number) => n.toLocaleString('en-US')\n\ninterface Props {\n  feature: Feature\n}\n\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2({ feature }, ref) {\n    const start = feature.get('start') + 1\n    const end = feature.get('end')\n    const refName = feature.get('refName')\n    const name = feature.get('name')\n    const loc = [\n      refName,\n      name,\n      start === end ? en(start) : `${en(start)}..${en(end)}`,\n    ]\n      .filter(f => !!f)\n      .join(':')\n\n    return feature.get('summary') !== undefined ? (\n      <div ref={ref}>\n        {loc}\n        <br />\n        Max: {toP(feature.get('maxScore'))}\n        <br />\n        Avg: {toP(feature.get('score'))}\n        <br />\n        Min: {toP(feature.get('minScore'))}\n      </div>\n    ) : (\n      <div ref={ref}>\n        {loc}\n        <br />\n        {`${toP(feature.get('score'))}`}\n      </div>\n    )\n  },\n)\n\ntype Coord = [number, number]\n\nconst WiggleTooltip = observer(function (props: {\n  model: {\n    featureUnderMouse?: Feature\n  }\n  height: number\n  offsetMouseCoord: Coord\n  clientMouseCoord: Coord\n  clientRect?: DOMRect\n  TooltipContents?: TooltipContentsComponent\n}) {\n  return <Tooltip TooltipContents={TooltipContents} {...props} />\n})\nexport default WiggleTooltip\n\nexport { default as Tooltip } from '../../Tooltip'\n","import type { ErrorInfo } from 'react'\nimport { Component } from 'react'\n\ninterface Props {\n  children: React.ReactNode\n  FallbackComponent: React.FC<{ error: unknown }>\n}\n\ninterface State {\n  error: unknown\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = { error: undefined }\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo)\n    this.setState({ error })\n  }\n\n  render() {\n    return this.state.error ? (\n      <this.props.FallbackComponent error={this.state.error} />\n    ) : (\n      this.props.children\n    )\n  }\n}\n\nexport { ErrorBoundary }\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type DisplayType from './DisplayType'\nimport type { IAnyModelType } from 'mobx-state-tree'\n\nexport default class TrackType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  displayTypes: DisplayType[] = []\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    displayName?: string\n    configSchema: AnyConfigurationSchemaType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import { observer } from 'mobx-react'\nimport { getType, isStateTreeNode } from 'mobx-state-tree'\n\nconst HeadingComponent = observer(function ({\n  model,\n}: {\n  model?: {\n    target: {\n      type: string\n    }\n  }\n}) {\n  if (model?.target) {\n    if (model.target.type) {\n      return `${model.target.type} settings`\n    }\n    if (isStateTreeNode(model.target)) {\n      const type = getType(model.target)\n      if (type.name) {\n        return `${type.name.replace('ConfigurationSchema', '')} settings`\n      }\n    }\n  }\n  return <>Settings</>\n})\n\nexport default HeadingComponent\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function stateModelFactory(pluginManager: PluginManager) {\n  return types\n    .model('ConfigurationEditorWidget', {\n      id: ElementId,\n      type: types.literal('ConfigurationEditorWidget'),\n      // If you add different types of targets, don't forget to account for that\n      // in the key of ./components/ConfigurationEditor.js\n      target: types.safeReference(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .actions(self => ({\n      setTarget(newTarget: any) {\n        self.target = newTarget\n      },\n    }))\n}\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport HeadingComponent from './components/HeadingComponent'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('ConfigurationEditorWidget', {})\n\nconst LazyConfigurationEditorComponent = lazy(\n  () => import('./components/ConfigurationEditor'),\n)\n\nexport default function registerConfigurationEditorWidget(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'ConfigurationEditorWidget',\n      HeadingComponent,\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: LazyConfigurationEditorComponent,\n    })\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config FromConfigAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'FromConfigAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport default configSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FromConfigRegionsAdapter\n * used for specifying refNames+sizes of an assembly\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst regionsConfigSchema = ConfigurationSchema(\n  'FromConfigRegionsAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  {\n    explicitlyTyped: true,\n    implicitIdentifier: 'adapterId',\n  },\n)\nexport default regionsConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FromConfigSequenceAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst sequenceConfigSchema = ConfigurationSchema(\n  'FromConfigSequenceAdapter',\n  {\n    /**\n     * #slot\n     */\n    features: {\n      type: 'frozen',\n      defaultValue: [],\n    },\n  },\n  { explicitlyTyped: true, implicitIdentifier: 'adapterId' },\n)\n\nexport default sequenceConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config NcbiSequenceReportAliasAdapter\n * can read \"sequence_report.tsv\" type files from NCBI\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst NcbiSequenceReportAliasAdapterConfigSchema = ConfigurationSchema(\n  'NcbiSequenceReportAliasAdapter',\n  {\n    /**\n     * #slot\n     */\n    location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my/sequence_report.tsv',\n        locationType: 'UriLocation',\n      },\n    },\n\n    useNameOverride: {\n      type: 'boolean',\n      defaultValue: true,\n      description:\n        'forces usage of the UCSC names over the NCBI style names from a FASTA',\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default NcbiSequenceReportAliasAdapterConfigSchema\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config RefNameAliasAdapter\n * can read \"chromAliases\" type files from UCSC or any tab separated file of\n * refName aliases\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst RefNameAliasAdapter = ConfigurationSchema(\n  'RefNameAliasAdapter',\n  {\n    /**\n     * #slot\n     */\n    location: {\n      type: 'fileLocation',\n      defaultValue: {\n        uri: '/path/to/my/aliases.txt',\n        locationType: 'UriLocation',\n      },\n    },\n    /**\n     * #slot\n     * by default, the \"ref names that match the fasta\" are assumed to be in the\n     * first column (0), change this variable if needed\n     */\n    refNameColumn: {\n      type: 'number',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default RefNameAliasAdapter\n","import { lazy } from 'react'\n\nimport Plugin from '@jbrowse/core/Plugin'\n\nimport ConfigurationEditorWidgetF from './ConfigurationEditorWidget'\nimport FromConfigAdapterF from './FromConfigAdapter'\nimport FromConfigRegionsAdapterF from './FromConfigRegionsAdapter'\nimport FromConfigSequenceAdapterF from './FromConfigSequenceAdapter'\nimport NcbiSequenceReportAliasAdapterF from './NcbiSequenceReportAliasAdapter'\nimport RefNameAliasAdapterF from './RefNameAliasAdapter'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst LazyConfigurationEditorComponent = lazy(\n  () => import('./ConfigurationEditorWidget/components/ConfigurationEditor'),\n)\n\nexport default class ConfigurationPlugin extends Plugin {\n  name = 'ConfigurationPlugin'\n\n  install(pluginManager: PluginManager) {\n    FromConfigAdapterF(pluginManager)\n    FromConfigRegionsAdapterF(pluginManager)\n    FromConfigSequenceAdapterF(pluginManager)\n    RefNameAliasAdapterF(pluginManager)\n    ConfigurationEditorWidgetF(pluginManager)\n    NcbiSequenceReportAliasAdapterF(pluginManager)\n  }\n}\n\nexport { LazyConfigurationEditorComponent as ConfigurationEditor }\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function FromConfigAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function FromConfigRegionsAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigRegionsAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigRegionsAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function FromConfigSequenceAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'FromConfigSequenceAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./FromConfigSequenceAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function RefNameAliasAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'RefNameAliasAdapter',\n        configSchema,\n        getAdapterClass: () =>\n          import('./RefNameAliasAdapter').then(r => r.default),\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n      }),\n  )\n}\n","import { AdapterType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function NcbiSequenceReportAliasAdapterF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addAdapterType(() => {\n    return new AdapterType({\n      name: 'NcbiSequenceReportAliasAdapter',\n      configSchema,\n      getAdapterClass: () =>\n        import('./NcbiSequenceReportAliasAdapter').then(r => r.default),\n      adapterMetadata: {\n        hiddenFromGUI: true,\n      },\n    })\n  })\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport {\n  UNSUPPORTED,\n  getFileName,\n  guessAdapter,\n  guessTrackType,\n} from '@jbrowse/core/util/tracks'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport deepmerge from 'deepmerge'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { FileLocation } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\nfunction isAbsoluteUrl(url = '') {\n  try {\n    new URL(url)\n    return true\n  } catch (error) {\n    return url.startsWith('/')\n  }\n}\n\ninterface IndexingAttr {\n  attributes: string[]\n  exclude: string[]\n}\n\n/**\n * #stateModel AddTrackModel\n */\nexport default function f(pluginManager: PluginManager) {\n  return types\n    .model('AddTrackModel', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('AddTrackWidget'),\n      /**\n       * #property\n       */\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n    })\n    .volatile(() => ({\n      trackSource: 'fromFile',\n      trackData: undefined as FileLocation | undefined,\n      indexTrackData: undefined as FileLocation | undefined,\n\n      // alts\n      altAssemblyName: '',\n      altTrackName: '',\n      altTrackType: '',\n\n      adapterHint: '',\n      textIndexTrack: true,\n      textIndexingConf: undefined as IndexingAttr | undefined,\n      mixinData: {},\n    }))\n    .actions(self => ({\n      setMixinData(arg: Record<string, unknown>) {\n        self.mixinData = arg\n      },\n      /**\n       * #action\n       */\n      setAdapterHint(obj: string) {\n        self.adapterHint = obj\n      },\n      /**\n       * #action\n       */\n      setTrackSource(str: string) {\n        self.trackSource = str\n      },\n      /**\n       * #action\n       */\n      setTextIndexingConf(conf: IndexingAttr) {\n        self.textIndexingConf = conf\n      },\n      /**\n       * #action\n       */\n      setTextIndexTrack(flag: boolean) {\n        self.textIndexTrack = flag\n      },\n      /**\n       * #action\n       */\n      setTrackData(obj: FileLocation) {\n        self.trackData = obj\n      },\n      /**\n       * #action\n       */\n      setIndexTrackData(obj: FileLocation) {\n        self.indexTrackData = obj\n      },\n      /**\n       * #action\n       */\n      setAssembly(str: string) {\n        self.altAssemblyName = str\n      },\n      /**\n       * #action\n       */\n      setTrackName(str: string) {\n        self.altTrackName = str\n      },\n      /**\n       * #action\n       */\n      setTrackType(str: string) {\n        self.altTrackType = str\n      },\n      /**\n       * #action\n       */\n      clearData() {\n        self.trackSource = ''\n        self.altTrackName = ''\n        self.altTrackType = ''\n        self.altAssemblyName = ''\n        self.adapterHint = ''\n        self.indexTrackData = undefined\n        self.trackData = undefined\n        self.textIndexingConf = undefined\n        self.textIndexTrack = true\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get trackAdapter() {\n        const { trackData, indexTrackData, adapterHint } = self\n\n        return trackData\n          ? guessAdapter(trackData, indexTrackData, adapterHint, self)\n          : undefined\n      },\n\n      /**\n       * #getter\n       */\n      get trackName() {\n        return (\n          self.altTrackName ||\n          (self.trackData ? getFileName(self.trackData) : '')\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get isFtp() {\n        const { trackData: track, indexTrackData: index } = self\n        return !!(\n          // @ts-expect-error\n          (index?.uri?.startsWith('ftp://') || track?.uri?.startsWith('ftp://'))\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get isRelativeTrackUrl() {\n        // @ts-expect-error\n        const uri = self.trackData?.uri\n        return uri ? !isAbsoluteUrl(uri) : false\n      },\n      /**\n       * #getter\n       */\n      get isRelativeIndexUrl() {\n        // @ts-expect-error\n        const uri = self.indexTrackData?.uri\n        return uri ? !isAbsoluteUrl(uri) : false\n      },\n      /**\n       * #getter\n       */\n      get isRelativeUrl() {\n        return this.isRelativeIndexUrl || this.isRelativeTrackUrl\n      },\n\n      /**\n       * #getter\n       */\n      get trackHttp() {\n        // @ts-expect-error\n        return self.trackData?.uri?.startsWith('http://')\n      },\n      /**\n       * #getter\n       */\n      get indexHttp() {\n        // @ts-expect-error\n        return self.indexTrackData?.uri?.startsWith('http://')\n      },\n\n      /**\n       * #getter\n       */\n      get wrongProtocol() {\n        return (\n          window.location.protocol === 'https:' &&\n          (this.trackHttp || this.indexHttp)\n        )\n      },\n\n      /**\n       * #getter\n       */\n      get unsupported() {\n        return this.trackAdapter?.type === UNSUPPORTED\n      },\n\n      /**\n       * #getter\n       */\n      get assembly() {\n        return self.altAssemblyName || self.view.assemblyNames?.[0]\n      },\n\n      /**\n       * #getter\n       */\n      get trackAdapterType() {\n        return this.trackAdapter?.type\n      },\n      /**\n       * #getter\n       */\n      get trackType() {\n        return (\n          self.altTrackType ||\n          (this.trackAdapterType\n            ? guessTrackType(this.trackAdapterType, self)\n            : '')\n        )\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      getTrackConfig(timestamp: number) {\n        const session = getSession(self)\n        const assemblyInstance = session.assemblyManager.get(self.assembly)\n\n        return assemblyInstance &&\n          self.trackAdapter &&\n          self.trackAdapter.type !== 'UNKNOWN'\n          ? deepmerge(\n              {\n                trackId: [\n                  `${self.trackName.toLowerCase().replaceAll(' ', '_')}-${timestamp}`,\n                  session.adminMode ? '' : '-sessionTrack',\n                ].join(''),\n                type: self.trackType,\n                name: self.trackName,\n                assemblyNames: [self.assembly],\n                adapter: {\n                  ...self.trackAdapter,\n                  sequenceAdapter: getConf(assemblyInstance, [\n                    'sequence',\n                    'adapter',\n                  ]),\n                },\n              },\n              self.mixinData,\n            )\n          : undefined\n      },\n      /**\n       * #getter\n       */\n      get warningMessage() {\n        if (self.isFtp) {\n          return 'Warning: JBrowse cannot access files using the ftp protocol'\n        } else if (self.isRelativeUrl) {\n          return `Warning: one or more of your files do not provide the protocol e.g.\n          https://, please provide an absolute URL unless you are sure a\n          relative URL is intended.`\n        } else if (self.wrongProtocol) {\n          return `Warning: You entered a http:// resources but we cannot access HTTP\n          resources from JBrowse when it is running on https. Please use an\n          https URL for your track, or access the JBrowse app from the http\n          protocol`\n        } else {\n          return ''\n        }\n      },\n    }))\n}\n\nexport type AddTrackStateModel = ReturnType<typeof f>\nexport type AddTrackModel = Instance<AddTrackStateModel>\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('AddTrackWidget', {})\n\nexport default function AddTrackWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'AddTrackWidget',\n      heading: 'Add a track',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(() => import('./components/AddTrackWidget')),\n    })\n  })\n}\n","import type React from 'react'\n\nimport PluggableElementBase from './PluggableElementBase'\n\nimport type DisplayType from './DisplayType'\nimport type { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\n\ntype BasicView = React.ComponentType<{\n  // TODO: can we use AbstractViewModel here?\n\n  model: any\n  session?: IAnyStateTreeNode\n}>\n\ntype ViewComponentType = React.LazyExoticComponent<BasicView> | BasicView\n\ninterface ViewMetadata {\n  hiddenFromGUI?: boolean\n}\n\nexport default class ViewType extends PluggableElementBase {\n  ReactComponent: ViewComponentType\n\n  stateModel: IAnyModelType\n\n  displayTypes: DisplayType[] = []\n\n  viewMetadata: ViewMetadata = {}\n\n  // extendedName can be used for when you extend a given view type, and want\n  // to register all of that view types displays to yourself\n  //\n  // e.g. you create a linear-genome-view subtype, and want all the tracks that\n  // are compatible display types for the linear-genome-view to be compatible\n  // with your type also (without this, display types are only registered to a\n  // single view type)\n  extendedName?: string\n\n  constructor(stuff: {\n    name: string\n    displayName?: string\n    stateModel: IAnyModelType\n    extendedName?: string\n    viewMetadata?: ViewMetadata\n    ReactComponent: ViewComponentType\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.viewMetadata = stuff.viewMetadata || {}\n    this.stateModel = stuff.stateModel\n    this.extendedName = stuff.extendedName\n  }\n\n  addDisplayType(display: DisplayType) {\n    this.displayTypes.push(display)\n  }\n}\n","import { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport {\n  ContentBlock as ContentBlockComponent,\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\nimport { makeTicks } from '../util'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  verticalGuidesZoomContainer: {\n    position: 'absolute',\n    top: 0,\n    height: '100%',\n    width: '100%',\n    pointerEvents: 'none',\n  },\n  verticalGuidesContainer: {\n    position: 'absolute',\n    height: '100%',\n    pointerEvents: 'none',\n    display: 'flex',\n  },\n  tick: {\n    position: 'absolute',\n    height: '100%',\n    width: 1,\n  },\n  majorTick: {\n    background: theme.palette.action.disabled,\n  },\n  minorTick: {\n    background: theme.palette.divider,\n  },\n}))\n\nfunction RenderedBlockLines({\n  block,\n  bpPerPx,\n}: {\n  block: ContentBlock\n  bpPerPx: number\n}) {\n  const { classes, cx } = useStyles()\n  const ticks = makeTicks(block.start, block.end, bpPerPx)\n  return (\n    <ContentBlockComponent block={block}>\n      {ticks.map(({ type, base }) => {\n        const x =\n          (block.reversed ? block.end - base : base - block.start) / bpPerPx\n        return (\n          <div\n            key={base}\n            className={cx(\n              classes.tick,\n              type === 'major' || type === 'labeledMajor'\n                ? classes.majorTick\n                : classes.minorTick,\n            )}\n            style={{ left: x }}\n          />\n        )\n      })}\n    </ContentBlockComponent>\n  )\n}\nconst RenderedVerticalGuides = observer(({ model }: { model: LGV }) => {\n  const { staticBlocks, bpPerPx } = model\n  return (\n    <>\n      {staticBlocks.map((block, index) => {\n        const k = `${block.key}-${index}`\n        if (block.type === 'ContentBlock') {\n          return <RenderedBlockLines key={k} block={block} bpPerPx={bpPerPx} />\n        } else if (block.type === 'ElidedBlock') {\n          return <ElidedBlockComponent key={k} width={block.widthPx} />\n        } else if (block.type === 'InterRegionPaddingBlock') {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={k}\n              width={block.widthPx}\n              boundary={block.variant === 'boundary'}\n            />\n          )\n        }\n        return null\n      })}\n    </>\n  )\n})\nconst Gridlines = observer(function ({\n  model,\n  offset = 0,\n}: {\n  model: LGV\n  offset?: number\n}) {\n  const { classes } = useStyles()\n  // find the block that needs pinning to the left side for context\n  const offsetLeft = model.staticBlocks.offsetPx - model.offsetPx\n  return (\n    <div\n      className={classes.verticalGuidesZoomContainer}\n      style={{\n        transform:\n          model.scaleFactor !== 1 ? `scaleX(${model.scaleFactor})` : undefined,\n      }}\n    >\n      <div\n        className={classes.verticalGuidesContainer}\n        style={{\n          left: offsetLeft - offset,\n          width: model.staticBlocks.totalWidthPx,\n        }}\n      >\n        <RenderedVerticalGuides model={model} />\n      </div>\n    </div>\n  )\n})\n\nexport default Gridlines\n","import DragIcon from '@mui/icons-material/DragIndicator'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()({\n  dragHandle: {\n    cursor: 'grab',\n  },\n  dragHandleIcon: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    pointerEvents: 'none',\n  },\n})\n\nfunction TrackLabelDragHandle({\n  trackId,\n  view,\n  track,\n}: {\n  trackId: string\n  track: BaseTrackModel\n  view: LinearGenomeViewModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <span\n      draggable\n      className={classes.dragHandle}\n      onDragStart={event => {\n        const target = event.currentTarget\n        if (target.parentNode) {\n          const parent = target.parentNode as HTMLElement\n          event.dataTransfer.setDragImage(parent, 20, 20)\n          view.setDraggingTrackId(track.id)\n        }\n      }}\n      onDragEnd={() => {\n        view.setDraggingTrackId(undefined)\n      }}\n      data-testid={`dragHandle-${view.id}-${trackId}`}\n    >\n      <DragIcon className={classes.dragHandleIcon} fontSize=\"small\" />\n    </span>\n  )\n}\n\nexport default TrackLabelDragHandle\n","import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown'\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport PushPinIcon from '@mui/icons-material/PushPin'\nimport { observer } from 'mobx-react'\n\nimport type { LinearGenomeViewModel } from '../model'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst TrackLabelMenu = observer(function ({\n  track,\n}: {\n  track: BaseTrackModel\n}) {\n  const view = getContainingView(track) as LinearGenomeViewModel\n  const session = getSession(track)\n  const trackConf = track.configuration\n  const minimized = track.minimized\n  const pinned = track.pinned\n  let lgvHasParentView: boolean\n  try {\n    getContainingView(view)\n    lgvHasParentView = true\n  } catch (error) {\n    lgvHasParentView = false\n  }\n\n  const items = [\n    ...(lgvHasParentView\n      ? []\n      : [\n          {\n            label: pinned ? 'Unpin track' : 'Pin track',\n            icon: PushPinIcon,\n            onClick: () => {\n              track.setPinned(!pinned)\n            },\n          },\n        ]),\n    {\n      label: 'Track order',\n      type: 'subMenu',\n      priority: 2000,\n      subMenu: [\n        {\n          label: minimized ? 'Restore track' : 'Minimize track',\n          icon: minimized ? AddIcon : MinimizeIcon,\n          onClick: () => {\n            track.setMinimized(!minimized)\n          },\n        },\n        ...(view.tracks.length > 2\n          ? [\n              {\n                label: 'Move track to top',\n                icon: KeyboardDoubleArrowUpIcon,\n                onClick: () => {\n                  view.moveTrackToTop(track.id)\n                },\n              },\n            ]\n          : []),\n\n        {\n          label: 'Move track up',\n          icon: KeyboardArrowUpIcon,\n          onClick: () => {\n            view.moveTrackUp(track.id)\n          },\n        },\n        {\n          label: 'Move track down',\n          icon: KeyboardArrowDownIcon,\n          onClick: () => {\n            view.moveTrackDown(track.id)\n          },\n        },\n        ...(view.tracks.length > 2\n          ? [\n              {\n                label: 'Move track to bottom',\n                icon: KeyboardDoubleArrowDownIcon,\n                onClick: () => {\n                  view.moveTrackToBottom(track.id)\n                },\n              },\n            ]\n          : []),\n      ],\n    },\n    ...(session.getTrackActionMenuItems?.(trackConf) || []),\n    ...track.trackMenuItems(),\n  ].sort((a, b) => (b?.priority || 0) - (a?.priority || 0))\n  return (\n    <CascadingMenuButton menuItems={items} data-testid=\"track_menu_icon\">\n      <MoreVertIcon fontSize=\"small\" />\n    </CascadingMenuButton>\n  )\n})\n\nexport default TrackLabelMenu\n","import { forwardRef } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { SanitizedHTML } from '@jbrowse/core/ui'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { IconButton, Paper, Typography, alpha } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport TrackLabelDragHandle from './TrackLabelDragHandle'\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    background: alpha(theme.palette.background.paper, 0.8),\n    '&:hover': {\n      background: theme.palette.background.paper,\n    },\n  },\n  trackName: {\n    fontSize: '0.8rem',\n  },\n  iconButton: {\n    padding: theme.spacing(1),\n  },\n}))\n\ntype LGV = LinearGenomeViewModel\n\ninterface Props {\n  track: BaseTrackModel\n  className?: string\n}\n\nconst TrackLabel = observer(\n  forwardRef<HTMLDivElement, Props>(function TrackLabel2(\n    { track, className },\n    ref,\n  ) {\n    const { classes, cx } = useStyles()\n    const view = getContainingView(track) as LGV\n    const session = getSession(track)\n    const trackConf = track.configuration\n    const { minimized } = track\n    const trackId = getConf(track, 'trackId')\n    const trackName = getTrackName(trackConf, session)\n\n    return (\n      <Paper\n        ref={ref}\n        className={cx(className, classes.root)}\n        onClick={event => {\n          // avoid clicks on track label from turning into double-click zoom\n          event.stopPropagation()\n        }}\n      >\n        <TrackLabelDragHandle track={track} trackId={trackId} view={view} />\n        <IconButton\n          onClick={() => view.hideTrack(trackId)}\n          className={classes.iconButton}\n          title=\"close this track\"\n        >\n          <CloseIcon fontSize=\"small\" />\n        </IconButton>\n\n        <Typography\n          variant=\"body1\"\n          component=\"span\"\n          className={classes.trackName}\n          onMouseDown={event => {\n            // avoid becoming a click-and-drag action on the lgv\n            event.stopPropagation()\n          }}\n        >\n          <SanitizedHTML\n            html={[trackName, minimized ? '(minimized)' : '']\n              .filter(f => !!f)\n              .join(' ')}\n          />\n        </Typography>\n        <TrackLabelMenu track={track} />\n      </Paper>\n    )\n  }),\n)\n\nexport default TrackLabel\n","import { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport TrackLabel from './TrackLabel'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()({\n  trackLabel: {\n    zIndex: 2,\n  },\n\n  trackLabelOffset: {\n    position: 'relative',\n    display: 'inline-block',\n  },\n  trackLabelOverlap: {\n    position: 'absolute',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst TrackLabelContainer = observer(function ({\n  track,\n  view,\n}: {\n  track: BaseTrackModel\n  view: LGV\n}) {\n  const { classes, cx } = useStyles()\n  const display = track.displays[0]\n  const { trackLabel, trackLabelOverlap, trackLabelOffset } = classes\n  const labelStyle =\n    view.trackLabelsSetting !== 'overlapping' || display.prefersOffset\n      ? trackLabelOffset\n      : trackLabelOverlap\n\n  return view.trackLabelsSetting !== 'hidden' ? (\n    <TrackLabel track={track} className={cx(trackLabel, labelStyle)} />\n  ) : null\n})\n\nexport default TrackLabelContainer\n","import { Suspense, useEffect, useRef } from 'react'\n\nimport { getConf } from '@jbrowse/core/configuration'\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()({\n  // aligns with block boundaries. check for example the breakpoint split view\n  // demo to see if features align if wanting to change things\n  renderingComponentContainer: {\n    position: 'absolute',\n    // -1 offset because of the 1px border of the Paper\n    left: -1,\n    height: '100%',\n    width: '100%',\n  },\n\n  trackRenderingContainer: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    whiteSpace: 'nowrap',\n    position: 'relative',\n    background: 'none',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst TrackRenderingContainer = observer(function ({\n  model,\n  track,\n  onDragEnter,\n}: {\n  model: LGV\n  track: BaseTrackModel\n  onDragEnter: () => void\n}) {\n  const { classes } = useStyles()\n  const display = track.displays[0]\n  const { height, RenderingComponent, DisplayBlurb } = display\n  const { trackRefs, id, scaleFactor } = model\n  const trackId = getConf(track, 'trackId')\n  const ref = useRef<HTMLDivElement>(null)\n  const minimized = track.minimized\n\n  useEffect(() => {\n    if (ref.current) {\n      trackRefs[trackId] = ref.current\n    }\n    return () => {\n      delete trackRefs[trackId]\n    }\n  }, [trackRefs, trackId])\n\n  return (\n    <div\n      className={classes.trackRenderingContainer}\n      style={{\n        height: minimized ? 20 : height,\n      }}\n      onScroll={evt => display.setScrollTop(evt.currentTarget.scrollTop)}\n      onDragEnter={onDragEnter}\n      data-testid={`trackRenderingContainer-${id}-${trackId}`}\n    >\n      {!minimized ? (\n        <>\n          <div\n            ref={ref}\n            className={classes.renderingComponentContainer}\n            style={{\n              transform:\n                scaleFactor !== 1 ? `scaleX(${scaleFactor})` : undefined,\n            }}\n          >\n            <Suspense fallback={<LoadingEllipses />}>\n              <RenderingComponent\n                model={display}\n                onHorizontalScroll={model.horizontalScroll}\n              />\n            </Suspense>\n          </div>\n\n          {DisplayBlurb ? (\n            <div\n              style={{\n                position: 'absolute',\n                left: 0,\n                top: display.height - 20,\n              }}\n            >\n              <DisplayBlurb model={display} />\n            </div>\n          ) : null}\n        </>\n      ) : null}\n    </div>\n  )\n})\n\nexport default TrackRenderingContainer\n","import { useRef } from 'react'\n\nimport { ErrorMessage, ResizeHandle } from '@jbrowse/core/ui'\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { isAlive } from 'mobx-state-tree'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Gridlines from './Gridlines'\nimport TrackLabelContainer from './TrackLabelContainer'\nimport TrackRenderingContainer from './TrackRenderingContainer'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { BaseTrackModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()({\n  root: {\n    marginTop: 2,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  unpinnedTrack: {\n    background: 'none',\n  },\n  resizeHandle: {\n    height: 3,\n    boxSizing: 'border-box',\n    position: 'relative',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst TrackContainer = observer(function ({\n  model,\n  track,\n}: {\n  model: LGV\n  track: BaseTrackModel\n}) {\n  const { classes, cx } = useStyles()\n  const display = track.displays[0]\n  const { draggingTrackId, showTrackOutlines } = model\n  const ref = useRef<HTMLDivElement>(null)\n\n  return (\n    <Paper\n      ref={ref}\n      className={cx(classes.root, track.pinned ? null : classes.unpinnedTrack)}\n      variant={showTrackOutlines ? 'outlined' : undefined}\n      elevation={showTrackOutlines ? undefined : 0}\n      onClick={event => {\n        if (event.detail === 2 && !track.displays[0].featureIdUnderMouse) {\n          const left = ref.current?.getBoundingClientRect().left || 0\n          model.zoomTo(model.bpPerPx / 2, event.clientX - left, true)\n        }\n      }}\n    >\n      {/* offset 1px since for left track border */}\n      {track.pinned ? <Gridlines model={model} offset={1} /> : null}\n      <TrackLabelContainer track={track} view={model} />\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <TrackRenderingContainer\n          model={model}\n          track={track}\n          onDragEnter={() => {\n            if (\n              isAlive(display) &&\n              draggingTrackId !== undefined &&\n              draggingTrackId !== display.id\n            ) {\n              model.moveTrack(draggingTrackId, track.id)\n            }\n          }}\n        />\n      </ErrorBoundary>\n      <ResizeHandle\n        onDrag={display.resizeHeight}\n        className={classes.resizeHandle}\n      />\n    </Paper>\n  )\n})\n\nexport default TrackContainer\n","import { VIEW_HEADER_HEIGHT } from '@jbrowse/core/ui'\nimport { getSession, stringify } from '@jbrowse/core/util'\nimport { isSessionWithMultipleViews } from '@jbrowse/product-core'\nimport { Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { HEADER_BAR_HEIGHT, HEADER_OVERVIEW_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    background: 'red',\n    zIndex: 4,\n  },\n  tooltipTarget: {\n    position: 'sticky',\n    width: 1,\n  },\n})\n\nconst VerticalGuide = observer(function VerticalGuide({\n  model,\n  coordX,\n}: {\n  model: LGV\n  coordX: number\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n\n  let stickyViewHeaders = false\n  if (isSessionWithMultipleViews(session)) {\n    ;({ stickyViewHeaders } = session)\n  }\n\n  let tooltipTop = 0\n  if (stickyViewHeaders) {\n    tooltipTop = VIEW_HEADER_HEIGHT\n    if (!model.hideHeader) {\n      tooltipTop += HEADER_BAR_HEIGHT\n      if (!model.hideHeaderOverview) {\n        tooltipTop += HEADER_OVERVIEW_HEIGHT\n      }\n    }\n  }\n  return (\n    <>\n      <Tooltip\n        open\n        placement=\"top\"\n        title={stringify(model.pxToBp(coordX))}\n        arrow\n      >\n        <div\n          className={classes.tooltipTarget}\n          style={{\n            left: coordX + 6,\n            top: tooltipTop,\n            position: stickyViewHeaders ? 'sticky' : undefined,\n          }}\n        />\n      </Tooltip>\n      <div className={classes.guide} style={{ left: coordX }} />\n    </>\n  )\n})\n\nexport default VerticalGuide\n","import type React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport { getRelativeX } from './util'\n\nimport type { LinearGenomeViewModel } from '..'\n\ninterface AnchorPosition {\n  offsetX: number\n  clientX: number\n  clientY: number\n}\n\nexport function useRangeSelect(\n  ref: React.RefObject<HTMLDivElement | null>,\n  model: LinearGenomeViewModel,\n  shiftOnly?: boolean,\n) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<AnchorPosition>()\n  const [guideX, setGuideX] = useState<number>()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number) {\n      if (startX === undefined) {\n        return\n      }\n      const leftPx = Math.min(startX, offsetX)\n      const rightPx = Math.max(startX, offsetX)\n      return {\n        leftOffset: model.pxToBp(leftPx),\n        rightOffset: model.pxToBp(rightPx),\n      }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (ref.current && mouseDragging) {\n        const relativeX = getRelativeX(event, ref.current)\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && ref.current) {\n        const { clientX, clientY } = event\n        const offsetX = getRelativeX(event, ref.current)\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        const args = computeOffsets(offsetX)\n        if (args) {\n          model.setOffsets(args.leftOffset, args.rightOffset)\n        }\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, model, ref])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    if (shiftOnly && !event.shiftKey) {\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX = getRelativeX(event, ref.current)\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    if (shiftOnly) {\n      if (event.shiftKey) {\n        setGuideX(getRelativeX(event, ref.current))\n      } else {\n        setGuideX(undefined)\n      }\n    } else {\n      setGuideX(getRelativeX(event, ref.current))\n    }\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.setOffsets(undefined, undefined)\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  function handleMenuItemClick(_: unknown, callback: () => void) {\n    callback()\n    handleClose()\n  }\n\n  const open = Boolean(anchorPosition)\n  if (startX === undefined) {\n    return {\n      open,\n      guideX,\n      mouseDown,\n      mouseMove,\n      mouseOut,\n      handleMenuItemClick,\n    }\n  }\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = Math.min(right, startX)\n  const width = Math.abs(right - startX)\n  const leftBpOffset = model.pxToBp(left)\n  const rightBpOffset = model.pxToBp(left + width)\n  const numOfBpSelected = Math.ceil(width * model.bpPerPx)\n\n  return {\n    open,\n    rubberbandOn: true,\n    mouseDown,\n    mouseMove,\n    mouseOut,\n    handleClose,\n    handleMenuItemClick,\n    leftBpOffset,\n    rightBpOffset,\n    anchorPosition,\n    numOfBpSelected,\n    width,\n    left,\n  }\n}\n","import { useRef } from 'react'\n\nimport { Menu, VIEW_HEADER_HEIGHT } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { isSessionWithMultipleViews } from '@jbrowse/product-core'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport RubberbandSpan from './RubberbandSpan'\nimport VerticalGuide from './VerticalGuide'\n// hooks\nimport { useRangeSelect } from './useRangeSelect'\nimport { HEADER_BAR_HEIGHT, HEADER_OVERVIEW_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  rubberbandControl: {\n    cursor: 'crosshair',\n    width: '100%',\n    minHeight: 8,\n    zIndex: 825,\n  },\n})\n\nconst Rubberband = observer(function ({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LGV\n  ControlComponent?: React.ReactElement\n}) {\n  const ref = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const session = getSession(model)\n\n  const {\n    guideX,\n    rubberbandOn,\n    leftBpOffset,\n    rightBpOffset,\n    numOfBpSelected,\n    width,\n    left,\n    anchorPosition,\n    open,\n    handleMenuItemClick,\n    handleClose,\n    mouseMove,\n    mouseDown,\n    mouseOut,\n  } = useRangeSelect(ref, model)\n\n  let stickyViewHeaders = false\n  if (isSessionWithMultipleViews(session)) {\n    ;({ stickyViewHeaders } = session)\n  }\n\n  let rubberbandControlTop = 0\n  if (stickyViewHeaders) {\n    rubberbandControlTop = VIEW_HEADER_HEIGHT\n    if (!model.hideHeader) {\n      rubberbandControlTop += HEADER_BAR_HEIGHT\n      if (!model.hideHeaderOverview) {\n        rubberbandControlTop += HEADER_OVERVIEW_HEIGHT\n      }\n    }\n  }\n\n  return (\n    <>\n      {guideX !== undefined ? (\n        <VerticalGuide model={model} coordX={guideX} />\n      ) : rubberbandOn ? (\n        <RubberbandSpan\n          leftBpOffset={leftBpOffset}\n          rightBpOffset={rightBpOffset}\n          numOfBpSelected={numOfBpSelected}\n          width={width}\n          left={left}\n          top={rubberbandControlTop}\n          sticky={stickyViewHeaders}\n        />\n      ) : null}\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n      <div\n        data-testid=\"rubberband_controls\"\n        className={classes.rubberbandControl}\n        style={{\n          top: rubberbandControlTop,\n          position: stickyViewHeaders ? 'sticky' : undefined,\n        }}\n        ref={ref}\n        onMouseDown={mouseDown}\n        onMouseMove={mouseMove}\n        onMouseOut={mouseOut}\n      >\n        {ControlComponent}\n      </div>\n    </>\n  )\n})\n\nexport default Rubberband\n","import { getTickDisplayStr } from '@jbrowse/core/util'\nimport { Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { ContentBlock as ContentBlockComponent } from '../../BaseLinearDisplay/components/Block'\nimport { makeTicks } from '../util'\n\nimport type { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\nconst useStyles = makeStyles()(theme => ({\n  majorTickLabel: {\n    fontSize: 11,\n    zIndex: 1,\n    background: theme.palette.background.paper,\n    lineHeight: 'normal',\n    pointerEvents: 'none',\n  },\n  tick: {\n    position: 'absolute',\n    width: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    pointerEvents: 'none',\n  },\n}))\n\nconst ScalebarCoordinateTicks = function ({\n  block,\n  bpPerPx,\n}: {\n  block: ContentBlock\n  bpPerPx: number\n}) {\n  const { classes } = useStyles()\n  const { reversed, start, end } = block\n  const ticks = makeTicks(start, end, bpPerPx, true, false)\n\n  return (\n    <ContentBlockComponent block={block}>\n      {ticks.map(({ type, base }) => {\n        if (type === 'major') {\n          const x = (reversed ? end - base : base - start) / bpPerPx\n          const baseNumber = base + 1\n          return (\n            <div key={base} className={classes.tick} style={{ left: x }}>\n              {baseNumber ? (\n                <Typography className={classes.majorTickLabel}>\n                  {getTickDisplayStr(baseNumber, bpPerPx)}\n                </Typography>\n              ) : null}\n            </div>\n          )\n        }\n        return null\n      })}\n    </ContentBlockComponent>\n  )\n}\n\nexport default ScalebarCoordinateTicks\n","import { observer } from 'mobx-react'\n\nimport ScalebarCoordinateTicks from './ScalebarCoordinateTicks'\nimport {\n  ElidedBlock as ElidedBlockComponent,\n  InterRegionPaddingBlock as InterRegionPaddingBlockComponent,\n} from '../../BaseLinearDisplay/components/Block'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst ScalebarCoordinateLabels = observer(function ({ model }: { model: LGV }) {\n  const { staticBlocks, bpPerPx } = model\n  return (\n    <>\n      {staticBlocks.map((b, idx) => {\n        const { key, widthPx } = b\n        const k = `${key}-${idx}`\n        if (b.type === 'ContentBlock') {\n          return <ScalebarCoordinateTicks key={k} block={b} bpPerPx={bpPerPx} />\n        } else if (b.type === 'ElidedBlock') {\n          return <ElidedBlockComponent key={k} width={widthPx} />\n        } else if (b.type === 'InterRegionPaddingBlock') {\n          return (\n            <InterRegionPaddingBlockComponent\n              key={k}\n              width={widthPx}\n              style={{ background: 'none' }}\n              boundary={b.variant === 'boundary'}\n            />\n          )\n        } else {\n          return null\n        }\n      })}\n    </>\n  )\n})\n\nexport default ScalebarCoordinateLabels\n","import { Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => ({\n  refLabel: {\n    fontSize: 11,\n    position: 'absolute',\n    left: 2,\n    top: -1,\n    fontWeight: 'bold',\n    lineHeight: 'normal',\n    zIndex: 1,\n    background: theme.palette.background.paper,\n  },\n  b0: {\n    left: 0,\n    zIndex: 100,\n  },\n}))\n\nconst ScalebarRefNameLabels = observer(function ({ model }: { model: LGV }) {\n  const { classes, cx } = useStyles()\n  const { staticBlocks, offsetPx, scaleBarDisplayPrefix } = model\n\n  // find the block that needs pinning to the left side for context\n  let lastLeftBlock = 0\n  staticBlocks.forEach((block, i) => {\n    if (block.offsetPx - offsetPx < 0) {\n      lastLeftBlock = i\n    }\n  })\n  const val = scaleBarDisplayPrefix()\n  const b0 = staticBlocks.blocks[0]\n  return (\n    <>\n      {b0?.type !== 'ContentBlock' && val ? (\n        <Typography className={cx(classes.b0, classes.refLabel)}>\n          {val}\n        </Typography>\n      ) : null}\n      {staticBlocks.map((block, index) => {\n        const {\n          offsetPx: blockOffsetPx,\n          isLeftEndOfDisplayedRegion,\n          key,\n          type,\n          refName,\n        } = block\n        const last = index === lastLeftBlock\n        return type === 'ContentBlock' &&\n          (isLeftEndOfDisplayedRegion || last) ? (\n          <Typography\n            key={`refLabel-${key}-${index}`}\n            style={{\n              left: last\n                ? Math.max(0, -offsetPx)\n                : blockOffsetPx - offsetPx - 1,\n              paddingLeft: last ? 0 : 1,\n            }}\n            className={classes.refLabel}\n            data-testid={`refLabel-${refName}`}\n          >\n            {last && val ? `${val}:` : ''}\n            {refName}\n          </Typography>\n        ) : null\n      })}\n    </>\n  )\n})\n\nexport default ScalebarRefNameLabels\n","import type React from 'react'\nimport { forwardRef } from 'react'\n\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Gridlines from './Gridlines'\nimport ScalebarCoordinateLabels from './ScalebarCoordinateLabels'\nimport ScalebarRefNameLabels from './ScalebarRefNameLabels'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()({\n  container: {\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  zoomContainer: {\n    position: 'relative',\n  },\n  scalebar: {\n    position: 'absolute',\n    display: 'flex',\n    pointerEvents: 'none',\n  },\n})\n\ninterface ScalebarProps {\n  model: LGV\n  style?: React.CSSProperties\n  className?: string\n}\n\nconst Scalebar = observer(\n  forwardRef<HTMLDivElement, ScalebarProps>(function Scalebar2(\n    { model, style, className, ...other },\n    ref,\n  ) {\n    const { classes, cx } = useStyles()\n    const { staticBlocks, offsetPx, scaleFactor } = model\n    const offsetLeft = staticBlocks.offsetPx - offsetPx\n    return (\n      <Paper\n        data-resizer=\"true\" // used to avoid click-and-drag scrolls on trackscontainer\n        className={cx(classes.container, className)}\n        variant=\"outlined\"\n        ref={ref}\n        style={style}\n        {...other}\n      >\n        {/* offset 1px since for left track border */}\n        <Gridlines model={model} offset={1} />\n        <div\n          className={classes.zoomContainer}\n          style={{\n            transform: scaleFactor !== 1 ? `scaleX(${scaleFactor})` : undefined,\n          }}\n        >\n          <div\n            className={classes.scalebar}\n            style={{\n              left: offsetLeft - 1,\n              width: staticBlocks.totalWidthPx,\n              ...style,\n            }}\n          >\n            <ScalebarCoordinateLabels model={model} />\n          </div>\n        </div>\n        <ScalebarRefNameLabels model={model} />\n      </Paper>\n    )\n  }),\n)\n\nexport default Scalebar\n","import { Suspense, lazy, useRef } from 'react'\n\nimport { Menu } from '@jbrowse/core/ui'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Gridlines from './Gridlines'\nimport Rubberband from './Rubberband'\nimport Scalebar from './Scalebar'\nimport VerticalGuide from './VerticalGuide'\nimport { SCALE_BAR_HEIGHT } from '../consts'\nimport { useRangeSelect } from './useRangeSelect'\nimport { useSideScroll } from './useSideScroll'\nimport { useWheelScroll } from './useWheelScroll'\n\nimport type { LinearGenomeViewModel } from '..'\n\nconst CenterLine = lazy(() => import('./CenterLine'))\nconst Highlight = lazy(() => import('./Highlight'))\nconst RubberbandSpan = lazy(() => import('./RubberbandSpan'))\n\nconst useStyles = makeStyles()({\n  tracksContainer: {\n    position: 'relative',\n  },\n})\n\ntype LGV = LinearGenomeViewModel\n\nconst TracksContainer = observer(function TracksContainer({\n  children,\n  model,\n}: {\n  children: React.ReactNode\n  model: LGV\n}) {\n  const { classes } = useStyles()\n  const { pluginManager } = getEnv(model)\n  const { mouseDown: mouseDown1, mouseUp } = useSideScroll(model)\n  const { stickyViewHeaders, pinnedTracksTop, showGridlines, showCenterLine } =\n    model\n  const ref = useRef<HTMLDivElement>(null)\n  const {\n    guideX,\n    rubberbandOn,\n    leftBpOffset,\n    rightBpOffset,\n    numOfBpSelected,\n    width,\n    left,\n    anchorPosition,\n    open,\n    handleMenuItemClick,\n    handleClose,\n    mouseMove,\n    mouseDown: mouseDown2,\n  } = useRangeSelect(ref, model, true)\n  useWheelScroll(ref, model)\n\n  const additional = pluginManager.evaluateExtensionPoint(\n    'LinearGenomeView-TracksContainerComponent',\n    undefined,\n    { model },\n  ) as React.ReactNode\n\n  return (\n    <div\n      ref={ref}\n      data-testid=\"tracksContainer\"\n      className={classes.tracksContainer}\n      onMouseDown={event => {\n        mouseDown1(event)\n        mouseDown2(event)\n      }}\n      onMouseMove={mouseMove}\n      onMouseUp={mouseUp}\n    >\n      {showGridlines ? <Gridlines model={model} /> : null}\n      <Suspense fallback={null}>\n        {showCenterLine ? <CenterLine model={model} /> : null}\n      </Suspense>\n      {guideX !== undefined ? (\n        <VerticalGuide model={model} coordX={guideX} />\n      ) : rubberbandOn ? (\n        <Suspense fallback={null}>\n          <RubberbandSpan\n            leftBpOffset={leftBpOffset}\n            rightBpOffset={rightBpOffset}\n            numOfBpSelected={numOfBpSelected}\n            width={width}\n            left={left}\n            top={pinnedTracksTop}\n            sticky={stickyViewHeaders}\n          />\n        </Suspense>\n      ) : null}\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n\n      <Rubberband\n        model={model}\n        ControlComponent={\n          <Scalebar\n            model={model}\n            style={{\n              height: SCALE_BAR_HEIGHT,\n              boxSizing: 'border-box',\n            }}\n          />\n        }\n      />\n      <HighlightGroup model={model} />\n      {additional}\n      {children}\n    </div>\n  )\n})\n\nconst HighlightGroup = observer(function HighlightGroup({\n  model,\n}: {\n  model: LGV\n}) {\n  return model.highlight.length ? (\n    <Suspense fallback={null}>\n      {model.highlight.map((highlight, idx) => (\n        <Highlight\n          key={`${JSON.stringify(highlight)}-${idx}`}\n          model={model}\n          highlight={highlight}\n        />\n      ))}\n    </Suspense>\n  ) : null\n})\n\nexport default TracksContainer\n","import type React from 'react'\nimport { useEffect, useRef, useState } from 'react'\n\nimport type { LinearGenomeViewModel } from '..'\n\nexport function useSideScroll(model: LinearGenomeViewModel) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  // refs are to store these variables to avoid repeated rerenders associated\n  // with useState/setState\n  const scheduled = useRef(false)\n\n  const prevX = useRef<number>(0)\n\n  useEffect(() => {\n    let cleanup = () => {}\n\n    function globalMouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const currX = event.clientX\n      const distance = currX - prevX.current\n      if (distance) {\n        // use rAF to make it so multiple event handlers aren't fired per-frame\n        // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(-distance)\n            scheduled.current = false\n            prevX.current = event.clientX\n          })\n        }\n      }\n    }\n\n    function globalMouseUp() {\n      prevX.current = 0\n      if (mouseDragging) {\n        setMouseDragging(false)\n      }\n    }\n\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove, true)\n      window.addEventListener('mouseup', globalMouseUp, true)\n      cleanup = () => {\n        window.removeEventListener('mousemove', globalMouseMove, true)\n        window.removeEventListener('mouseup', globalMouseUp, true)\n      }\n    }\n    return cleanup\n  }, [model, mouseDragging])\n\n  function mouseDown(event: React.MouseEvent) {\n    if (event.shiftKey) {\n      return\n    }\n    // check if clicking a draggable element or a resize handle\n    const target = event.target as HTMLElement\n    if (target.draggable || target.dataset.resizer) {\n      return\n    }\n\n    // otherwise do click and drag scroll\n    if (event.button === 0) {\n      prevX.current = event.clientX\n      setMouseDragging(true)\n    }\n  }\n\n  // this local mouseup is used in addition to the global because sometimes\n  // the global add/remove are not called in time, resulting in issue #533\n  function mouseUp(event: React.MouseEvent) {\n    event.preventDefault()\n    setMouseDragging(false)\n  }\n  return { mouseDown, mouseUp }\n}\n","import type React from 'react'\nimport { useEffect, useRef } from 'react'\n\ntype Timer = ReturnType<typeof setTimeout>\n\nexport function useWheelScroll(\n  ref: React.RefObject<HTMLDivElement | null>,\n  model: {\n    bpPerPx: number\n    zoomTo: (arg: number, arg2?: number) => void\n    setScaleFactor: (arg: number) => void\n    horizontalScroll: (arg: number) => void\n  },\n) {\n  const delta = useRef(0)\n  const timeout = useRef<Timer>(null)\n  const scheduled = useRef(false)\n  useEffect(() => {\n    const curr = ref.current\n\n    // if ctrl is held down, zoom in with y-scroll, else scroll horizontally\n    // with x-scroll\n    function onWheel(event: WheelEvent) {\n      if (event.ctrlKey) {\n        event.preventDefault()\n        delta.current += event.deltaY / 500\n        model.setScaleFactor(\n          delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n        )\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          model.setScaleFactor(1)\n          model.zoomTo(\n            delta.current > 0\n              ? model.bpPerPx * (1 + delta.current)\n              : model.bpPerPx / (1 - delta.current),\n            event.clientX - (curr?.getBoundingClientRect().left || 0),\n          )\n          delta.current = 0\n        }, 300)\n      } else {\n        // this is needed to stop the event from triggering \"back button\n        // action\" on MacOSX etc.  but is a heuristic to avoid preventing the\n        // inner-track scroll behavior\n        if (Math.abs(event.deltaX) > Math.abs(2 * event.deltaY)) {\n          event.preventDefault()\n        }\n        delta.current += event.deltaX\n        if (!scheduled.current) {\n          // use rAF to make it so multiple event handlers aren't fired per-frame\n          // see https://calendar.perfplanet.com/2013/the-runtime-performance-checklist/\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            model.horizontalScroll(delta.current)\n            delta.current = 0\n            scheduled.current = false\n          })\n        }\n      }\n    }\n    if (curr) {\n      curr.addEventListener('wheel', onWheel)\n      return () => {\n        curr.removeEventListener('wheel', onWheel)\n      }\n    }\n    return () => {}\n  }, [model, ref])\n}\n","import { Suspense, lazy, useEffect, useRef } from 'react'\n\nimport { VIEW_HEADER_HEIGHT } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport Paper from '@mui/material/Paper'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport TrackContainer from './TrackContainer'\nimport TracksContainer from './TracksContainer'\n\nimport type { LinearGenomeViewModel } from '..'\n\n// lazies\nconst NoTracksActiveButton = lazy(() => import('./NoTracksActiveButton'))\n\nconst useStyles = makeStyles()(theme => ({\n  header: {\n    background: theme.palette.background.paper,\n    top: VIEW_HEADER_HEIGHT,\n    zIndex: 850,\n  },\n  pinnedTracks: {\n    position: 'sticky',\n    zIndex: 3,\n  },\n  rel: {\n    position: 'relative',\n  },\n}))\n\nconst LinearGenomeViewContainer = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const {\n    pinnedTracks,\n    stickyViewHeaders,\n    pinnedTracksTop,\n    tracks,\n    unpinnedTracks,\n  } = model\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const ref = useRef<HTMLDivElement>(null)\n  const MiniControlsComponent = model.MiniControlsComponent()\n  const HeaderComponent = model.HeaderComponent()\n  useEffect(() => {\n    // sets the focused view id based on a click within the LGV;\n    // necessary for subviews to be focused properly\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element && ref.current?.contains(e.target)) {\n        session.setFocusedViewId?.(model.id)\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [session, model])\n\n  return (\n    <div\n      className={classes.rel}\n      ref={ref}\n      onMouseLeave={() => {\n        session.setHovered(undefined)\n      }}\n      onMouseMove={event => {\n        const c = ref.current\n        if (!c) {\n          return\n        }\n        const { tracks } = model\n        const leftPx = event.clientX - c.getBoundingClientRect().left\n        const hoverPosition = model.pxToBp(leftPx)\n        const hoverFeature = tracks.find(t => t.displays[0].featureUnderMouse)\n        session.setHovered({ hoverPosition, hoverFeature })\n      }}\n    >\n      <div\n        className={classes.header}\n        style={{ position: stickyViewHeaders ? 'sticky' : undefined }}\n      >\n        <HeaderComponent model={model} />\n        <MiniControlsComponent model={model} />\n      </div>\n      <TracksContainer model={model}>\n        {!tracks.length ? (\n          <Suspense fallback={null}>\n            <NoTracksActiveButton model={model} />\n          </Suspense>\n        ) : (\n          <>\n            {pinnedTracks.length ? (\n              <Paper\n                elevation={6}\n                className={classes.pinnedTracks}\n                style={{ top: pinnedTracksTop }}\n              >\n                {pinnedTracks.map(track => (\n                  <TrackContainer key={track.id} model={model} track={track} />\n                ))}\n              </Paper>\n            ) : null}\n            {unpinnedTracks.map(track => (\n              <TrackContainer key={track.id} model={model} track={track} />\n            ))}\n          </>\n        )}\n      </TracksContainer>\n    </div>\n  )\n})\n\nexport default LinearGenomeViewContainer\n","import { lazy } from 'react'\n\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\n\nimport LinearGenomeViewContainer from './LinearGenomeViewContainer'\n\nimport type { LinearGenomeViewModel } from '..'\n\n// lazies\nconst ImportForm = lazy(() => import('./ImportForm'))\n\nconst LinearGenomeView = observer(function ({\n  model,\n}: {\n  model: LinearGenomeViewModel\n}) {\n  const { error, initialized, hasDisplayedRegions } = model\n\n  if (!initialized && !error) {\n    return <LoadingEllipses variant=\"h6\" />\n  } else if (!hasDisplayedRegions || error) {\n    return <ImportForm model={model} />\n  } else {\n    return <LinearGenomeViewContainer model={model} />\n  }\n})\n\nexport default LinearGenomeView\n","import { Observable } from 'rxjs'\n\nimport type { Observer } from 'rxjs'\n\n/**\n * Wrapper for rxjs Observable.create with improved error handling and\n * aborting support\n * @param func - observer function, could be async\n * TODO:ABORTING?\n */\nexport function ObservableCreate<T>(\n  func: (arg: Observer<T>) => void | Promise<void>,\n  _stopToken?: string,\n): Observable<T> {\n  return new Observable((observer: Observer<T>) => {\n    try {\n      const ret = func(observer)\n      if (ret?.catch) {\n        ret.catch((error: unknown) => {\n          observer.error(error)\n        })\n      }\n    } catch (error) {\n      observer.error(error)\n    }\n  })\n}\n","import type { ComponentType, LazyExoticComponent } from 'react'\nimport type React from 'react'\n\nimport PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { IAnyModelType, IAnyStateTreeNode } from 'mobx-state-tree'\n\ntype WidgetComponentType = LazyExoticComponent<React.FC<any>> | React.FC<any>\n\ntype HeadingComponentType = ComponentType<{ model: IAnyStateTreeNode }>\n\nexport default class WidgetType extends PluggableElementBase {\n  heading?: string\n\n  configSchema: AnyConfigurationSchemaType\n\n  HeadingComponent?: HeadingComponentType\n\n  ReactComponent: WidgetComponentType\n\n  stateModel: IAnyModelType\n\n  constructor(stuff: {\n    name: string\n    heading?: string\n    HeadingComponent?: HeadingComponentType\n    configSchema: AnyConfigurationSchemaType\n    stateModel: IAnyModelType\n    ReactComponent: WidgetComponentType\n  }) {\n    super(stuff)\n    this.heading = stuff.heading\n    this.HeadingComponent = stuff.HeadingComponent\n    this.configSchema = stuff.configSchema\n    this.stateModel = stuff.stateModel\n    this.ReactComponent = stuff.ReactComponent\n  }\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nconst configSchema = ConfigurationSchema('HierarchicalTrackSelectorWidget', {})\nexport default configSchema\n","export function findNonSparseKeys(\n  keys: readonly string[],\n  rows: Record<string, unknown>[],\n  cb: (row: Record<string, unknown>, f: string) => unknown,\n) {\n  return keys.filter(f => rows.map(r => cb(r, f)).filter(f => !!f).length > 5)\n}\n\nexport function getRootKeys(obj: Record<string, unknown>) {\n  return Object.entries(obj)\n    .map(([key, val]) => (typeof val === 'string' ? key : ''))\n    .filter(f => !!f)\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nexport function hasAnyOverlap<T>(a1: T[] = [], a2: T[] = []) {\n  // shortcut case is that arrays are single entries, and are equal\n  // long case is that we use a set\n  if (a1[0] === a2[0]) {\n    return true\n  } else {\n    const s1 = new Set(a1)\n    return a2.some(a => s1.has(a))\n  }\n}\n\nexport function hasAllOverlap<T>(a1: T[] = [], a2: T[] = []) {\n  const s1 = new Set(a1)\n  return a2.every(a => s1.has(a))\n}\n\nexport function matches(\n  query: string,\n  conf: AnyConfigurationModel,\n  session: AbstractSessionModel,\n) {\n  const categories = (readConfObject(conf, 'category') || []) as string[]\n  const queryLower = query.toLowerCase()\n  return (\n    getTrackName(conf, session).toLowerCase().includes(queryLower) ||\n    !!categories.filter(c => c.toLowerCase().includes(queryLower)).length\n  )\n}\n\ninterface Node {\n  children: Node[]\n  id: string\n}\n\nexport function findSubCategories(obj: Node[], paths: string[], depth = 0) {\n  let hasSubs = false\n  for (const elt of obj) {\n    if (elt.children.length) {\n      const hasSubCategories = findSubCategories(elt.children, paths, depth + 1)\n      // avoid pushing the root \"Tracks\" node by checking depth>0\n      if (hasSubCategories && depth > 0) {\n        paths.push(elt.id)\n      }\n    } else {\n      hasSubs = true\n    }\n  }\n  return hasSubs\n}\n\nexport function findTopLevelCategories(obj: Node[], paths: string[]) {\n  for (const elt of obj) {\n    if (elt.children.length) {\n      paths.push(elt.id)\n    }\n  }\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport {\n  getSession,\n  localStorageGetBoolean,\n  localStorageGetNumber,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { autorun, observable } from 'mobx'\nimport { addDisposer, getParent, types } from 'mobx-state-tree'\n\nimport { getRowStr } from './components/faceted/util'\nimport { findNonSparseKeys, getRootKeys } from './facetedUtil'\nimport { matches } from './util'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Instance } from 'mobx-state-tree'\n\nconst nonMetadataKeys = ['category', 'adapter', 'description'] as const\n\n/**\n * #stateModel FacetedModel\n */\nexport function facetedStateTreeF() {\n  return types\n    .model('FacetedModel', {\n      /**\n       * #property\n       */\n      filterText: types.optional(types.string, ''),\n      /**\n       * #property\n       */\n      showSparse: types.optional(types.boolean, () =>\n        localStorageGetBoolean('facet-showSparse', false),\n      ),\n      /**\n       * #property\n       */\n      showFilters: types.optional(types.boolean, () =>\n        localStorageGetBoolean('facet-showFilters', true),\n      ),\n\n      /**\n       * #property\n       */\n      showOptions: types.optional(types.boolean, () =>\n        localStorageGetBoolean('facet-showTableOptions', false),\n      ),\n\n      /**\n       * #property\n       */\n      panelWidth: types.optional(types.number, () =>\n        localStorageGetNumber('facet-panelWidth', 400),\n      ),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      visible: {} as Record<string, boolean>,\n      /**\n       * #volatile\n       */\n      useShoppingCart: false,\n      /**\n       * #volatile\n       */\n      filters: observable.map<string, string[]>(),\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFilter(key: string, value: string[]) {\n        self.filters.set(key, value)\n      },\n      /**\n       * #action\n       */\n      setPanelWidth(width: number) {\n        self.panelWidth = width\n        return self.panelWidth\n      },\n      /**\n       * #action\n       */\n      setUseShoppingCart(f: boolean) {\n        self.useShoppingCart = f\n      },\n      /**\n       * #action\n       */\n      setFilterText(str: string) {\n        self.filterText = str\n      },\n      /**\n       * #action\n       */\n      setShowSparse(f: boolean) {\n        self.showSparse = f\n      },\n      /**\n       * #action\n       */\n      setShowOptions(f: boolean) {\n        self.showOptions = f\n      },\n      /**\n       * #action\n       */\n      setShowFilters(f: boolean) {\n        self.showFilters = f\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get allTrackConfigurations() {\n        return getParent<{ allTrackConfigurations: AnyConfigurationModel[] }>(\n          self,\n        ).allTrackConfigurations\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get rows() {\n        const session = getSession(self)\n        const { allTrackConfigurations, filterText } = self\n        return allTrackConfigurations\n          .filter(conf => matches(filterText, conf, session))\n          .map(\n            track =>\n              ({\n                id: track.trackId as string,\n                conf: track,\n                name: getTrackName(track, session),\n                category: readConfObject(track, 'category')?.join(\n                  ', ',\n                ) as string,\n                adapter: readConfObject(track, 'adapter')?.type as string,\n                description: readConfObject(track, 'description') as string,\n                metadata: readConfObject(track, 'metadata') as Record<\n                  string,\n                  unknown\n                >,\n              }) as const,\n          )\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get filteredNonMetadataKeys() {\n        return self.showSparse\n          ? nonMetadataKeys\n          : findNonSparseKeys(nonMetadataKeys, self.rows, (r, f) => r[f])\n      },\n      /**\n       * #getter\n       */\n      get metadataKeys() {\n        return [...new Set(self.rows.flatMap(row => getRootKeys(row.metadata)))]\n      },\n      /**\n       * #getter\n       */\n      get filteredMetadataKeys() {\n        return self.showSparse\n          ? this.metadataKeys\n          : findNonSparseKeys(\n              this.metadataKeys,\n              self.rows,\n              // @ts-expect-error\n              (r, f) => r.metadata[f],\n            )\n      },\n      /**\n       * #getter\n       */\n      get fields() {\n        return [\n          'name',\n          ...this.filteredNonMetadataKeys,\n          ...this.filteredMetadataKeys.map(m => `metadata.${m}`),\n        ]\n      },\n      /**\n       * #getter\n       */\n      get filteredRows() {\n        const arrFilters = [...self.filters.entries()]\n          .filter(f => f[1].length > 0)\n          .map(([key, val]) => [key, new Set(val)] as const)\n        return self.rows.filter(row =>\n          arrFilters.every(([key, val]) => val.has(getRowStr(key, row))),\n        )\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setVisible(args: Record<string, boolean>) {\n        self.visible = args\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            this.setVisible(Object.fromEntries(self.fields.map(c => [c, true])))\n          }),\n        )\n      },\n    }))\n}\nexport type FacetedStateModel = ReturnType<typeof facetedStateTreeF>\nexport type FacetedModel = Instance<FacetedStateModel>\nexport type FacetedRow = FacetedModel['filteredRows'][0]\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getEnv, getSession, notEmpty } from '@jbrowse/core/util'\n\nimport { hasAllOverlap, hasAnyOverlap } from './util'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nexport function filterTracks(\n  tracks: AnyConfigurationModel[],\n  self: {\n    view?: {\n      type: string\n      trackSelectorAnyOverlap?: boolean\n    }\n    assemblyNames: string[]\n  },\n) {\n  const { assemblyManager } = getSession(self)\n  const { pluginManager } = getEnv(self)\n  const { view } = self\n\n  if (!view) {\n    return []\n  }\n  const trackListAssemblies = self.assemblyNames\n    .map(a => assemblyManager.get(a))\n    .filter(notEmpty)\n  return tracks\n    .filter(c => {\n      const trackAssemblyNames = readConfObject(c, 'assemblyNames') as\n        | string[]\n        | undefined\n      const trackAssemblies = trackAssemblyNames\n        ?.map(name => assemblyManager.get(name))\n        .filter(notEmpty)\n      return view.trackSelectorAnyOverlap\n        ? hasAnyOverlap(trackAssemblies, trackListAssemblies)\n        : hasAllOverlap(trackAssemblies, trackListAssemblies)\n    })\n    .filter(c => {\n      const { displayTypes } = pluginManager.getViewType(view.type)!\n      const compatDisplays = displayTypes.map(d => d.name)\n      const trackDisplays = c.displays.map((d: { type: string }) => d.type)\n      return hasAnyOverlap(compatDisplays, trackDisplays)\n    })\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\n\nimport { matches } from './util'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\n\nfunction sortConfs(\n  confs: AnyConfigurationModel[],\n  sortNames: boolean,\n  sortCategories: boolean,\n) {\n  // uses readConfObject instead of getTrackName so that the undefined\n  // reference sequence track is sorted to the top\n  const ret = confs.map(c => [\n    c,\n    readConfObject(c, 'name'),\n    readConfObject(c, 'category')?.[0] || '',\n    readConfObject(c, 'category')?.[1] || '',\n    readConfObject(c, 'category')?.[2] || '',\n  ])\n  if (sortNames) {\n    ret.sort((a, b) => a[1].localeCompare(b[1]))\n  }\n  if (sortCategories) {\n    // sort up to three sub-category levels, harder to code it to go deeper\n    // than this and likely rarely used\n    ret.sort((a, b) => {\n      if (a[2] !== b[2]) {\n        return a[2].localeCompare(b[2])\n      } else if (a[3] !== b[3]) {\n        return a[3].localeCompare(b[3])\n      } else if (a[4] !== b[4]) {\n        return a[4].localeCompare(b[4])\n      }\n      return 0\n    })\n  }\n  return ret.map(a => a[0])\n}\n\nexport interface TreeTrackNode {\n  name: string\n  id: string\n  trackId: string\n  conf: AnyConfigurationModel\n  checked: boolean\n  children: TreeNode[] // empty\n  type: 'track'\n}\n\nexport interface TreeCategoryNode {\n  name: string\n  id: string\n  isOpenByDefault: boolean\n  children: TreeNode[]\n  type: 'category'\n}\n\nexport type TreeNode = TreeTrackNode | TreeCategoryNode\n\nexport function generateHierarchy({\n  model,\n  trackConfs,\n  extra,\n  noCategories,\n  menuItems,\n}: {\n  model: {\n    filterText: string\n    activeSortTrackNames: boolean\n    activeSortCategories: boolean\n    collapsed: Map<string | number, boolean>\n    view?: {\n      tracks: { configuration: AnyConfigurationModel }[]\n    }\n  }\n  noCategories?: boolean\n  menuItems?: MenuItem[]\n  trackConfs: AnyConfigurationModel[]\n  extra?: string\n}): TreeNode[] {\n  const hierarchy = { children: [] as TreeNode[] } as TreeNode\n  const {\n    collapsed,\n    filterText,\n    activeSortTrackNames,\n    activeSortCategories,\n    view,\n  } = model\n  if (!view) {\n    return []\n  }\n  const session = getSession(model)\n  const viewTracks = view.tracks\n  const confs = trackConfs.filter(conf => matches(filterText, conf, session))\n\n  // uses getConf\n  for (const conf of sortConfs(\n    confs,\n    activeSortTrackNames,\n    activeSortCategories,\n  )) {\n    // copy the categories since this array can be mutated downstream\n    const categories = [...(readConfObject(conf, 'category') || [])]\n\n    // hack where if trackId ends with sessionTrack, then push it to a\n    // category that starts with a space to force sort to the top\n    if (conf.trackId.endsWith('sessionTrack')) {\n      categories.unshift(' Session tracks')\n    }\n\n    let currLevel = hierarchy\n\n    if (!noCategories) {\n      // find existing category to put track into or create it\n      for (let i = 0; i < categories.length; i++) {\n        const category = categories[i]\n        const ret = currLevel.children.find(c => c.name === category)\n        const id = [extra, categories.slice(0, i + 1).join(',')]\n          .filter(f => !!f)\n          .join('-')\n        if (!ret) {\n          const n = {\n            children: [],\n            name: category,\n            id,\n            isOpenByDefault: !collapsed.get(id),\n            menuItems,\n            type: 'category' as const,\n          }\n          currLevel.children.push(n)\n          currLevel = n\n        } else {\n          currLevel = ret\n        }\n      }\n    }\n\n    // uses splice to try to put all leaf nodes above \"category nodes\" if you\n    // change the splice to a simple push and open\n    // test_data/test_order/config.json you will see the weirdness\n    const r = currLevel.children.findIndex(elt => elt.children.length)\n    const idx = r === -1 ? currLevel.children.length : r\n    currLevel.children.splice(idx, 0, {\n      id: [extra, conf.trackId].filter(f => !!f).join(','),\n      trackId: conf.trackId,\n      name: getTrackName(conf, session),\n      conf,\n      checked: viewTracks.some(f => f.configuration === conf),\n      children: [],\n      type: 'track' as const,\n    })\n  }\n\n  return hierarchy.children\n}\n","import { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport {\n  dedupe,\n  getSession,\n  localStorageGetItem,\n  localStorageSetItem,\n  notEmpty,\n} from '@jbrowse/core/util'\nimport { ElementId } from '@jbrowse/core/util/types/mst'\nimport { autorun, observable } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport { facetedStateTreeF } from './facetedModel'\nimport { filterTracks } from './filterTracks'\nimport { generateHierarchy } from './generateHierarchy'\nimport { findSubCategories, findTopLevelCategories } from './util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { Instance } from 'mobx-state-tree'\n\ntype MaybeAnyConfigurationModel = AnyConfigurationModel | undefined\n\ntype MaybeBoolean = boolean | undefined\n\ntype MaybeCollapsedKeys = [string, boolean][] | undefined\n\n// for settings that are config dependent\nfunction keyConfigPostFix() {\n  return typeof window !== 'undefined'\n    ? [\n        window.location.pathname,\n        new URLSearchParams(window.location.search).get('config'),\n      ]\n        .filter(f => !!f)\n        .join('-')\n    : 'empty'\n}\n\nfunction recentlyUsedK(assemblyNames: string[]) {\n  return ['recentlyUsedTracks', keyConfigPostFix(), assemblyNames.join(',')]\n    .filter(f => !!f)\n    .join('-')\n}\n\n// this has a extra } at the end because that's how it was initially\n// released\nfunction favoritesK() {\n  return `favoriteTracks-${keyConfigPostFix()}}`\n}\n\nfunction collapsedK(assemblyNames: string[], viewType: string) {\n  return [\n    'collapsedCategories',\n    keyConfigPostFix(),\n    assemblyNames.join(','),\n    viewType,\n  ].join('-')\n}\n\nfunction sortTrackNamesK() {\n  return 'sortTrackNames'\n}\n\nfunction sortCategoriesK() {\n  return 'sortCategories'\n}\n\nfunction localStorageGetJSON<T>(key: string, defaultValue: T) {\n  const val = localStorageGetItem(key)\n  return val !== undefined && val !== null && val\n    ? (JSON.parse(val) as T)\n    : defaultValue\n}\n\nfunction localStorageSetJSON(key: string, val: unknown) {\n  if (val !== undefined && val !== null) {\n    localStorageSetItem(key, JSON.stringify(val))\n  }\n}\n\nconst MAX_RECENTLY_USED = 10\n\n/**\n * #stateModel HierarchicalTrackSelectorWidget\n */\nexport default function stateTreeFactory(pluginManager: PluginManager) {\n  return types\n    .model('HierarchicalTrackSelectorWidget', {\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      type: types.literal('HierarchicalTrackSelectorWidget'),\n\n      /**\n       * #property\n       */\n      view: types.safeReference(\n        pluginManager.pluggableMstType('view', 'stateModel'),\n      ),\n      /**\n       * #property\n       */\n      faceted: types.optional(facetedStateTreeF(), {}),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      favorites: localStorageGetJSON<string[]>(favoritesK(), []),\n      /**\n       * #volatile\n       */\n      recentlyUsed: [] as string[],\n      /**\n       * #volatile\n       */\n      selection: [] as AnyConfigurationModel[],\n      /**\n       * #volatile\n       */\n      sortTrackNames: localStorageGetJSON<MaybeBoolean>(\n        sortTrackNamesK(),\n        undefined,\n      ),\n      /**\n       * #volatile\n       */\n      sortCategories: localStorageGetJSON<MaybeBoolean>(\n        sortCategoriesK(),\n        undefined,\n      ),\n      /**\n       * #volatile\n       */\n      collapsed: observable.map<string, boolean>(),\n      /**\n       * #volatile\n       */\n      filterText: '',\n      /**\n       * #volatile\n       */\n      recentlyUsedCounter: 0,\n      /**\n       * #volatile\n       */\n      favoritesCounter: 0,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get shownTrackIds() {\n        return new Set<string>(\n          self.view?.tracks?.map(\n            (t: { configuration: { trackId: string } }) =>\n              t.configuration.trackId,\n          ),\n        )\n      },\n      /**\n       * #getter\n       */\n      get selectionSet() {\n        return new Set(self.selection)\n      },\n      /**\n       * #getter\n       */\n      get favoritesSet() {\n        return new Set(self.favorites)\n      },\n      /**\n       * #getter\n       */\n      get recentlyUsedSet() {\n        return new Set(self.recentlyUsed)\n      },\n      /**\n       * #getter\n       */\n      get assemblyNames(): string[] {\n        return self.view?.assemblyNames || []\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSortTrackNames(val: boolean) {\n        self.sortTrackNames = val\n      },\n      /**\n       * #action\n       */\n      setSortCategories(val: boolean) {\n        self.sortCategories = val\n      },\n      /**\n       * #action\n       */\n      setSelection(elt: AnyConfigurationModel[]) {\n        self.selection = elt\n      },\n      /**\n       * #action\n       */\n      addToSelection(elt: AnyConfigurationModel[]) {\n        self.selection = dedupe([...self.selection, ...elt], e => e.trackId)\n      },\n      /**\n       * #action\n       */\n      removeFromSelection(elt: AnyConfigurationModel[]) {\n        const s = new Set(elt)\n        self.selection = self.selection.filter(f => !s.has(f))\n      },\n      /**\n       * #action\n       */\n      clearSelection() {\n        self.selection = []\n      },\n\n      /**\n       * #action\n       */\n      addToFavorites(trackId: string) {\n        self.favoritesCounter += 1\n        self.favorites = [...self.favorites, trackId]\n      },\n      /**\n       * #action\n       */\n      removeFromFavorites(trackId: string) {\n        self.favorites = self.favorites.filter(f => f !== trackId)\n      },\n      /**\n       * #action\n       */\n      clearFavorites() {\n        self.favorites = []\n      },\n\n      /**\n       * #action\n       */\n      setRecentlyUsedCounter(val: number) {\n        self.recentlyUsedCounter = val\n      },\n      /**\n       * #action\n       */\n      setRecentlyUsed(str: string[]) {\n        self.recentlyUsed = str\n      },\n      /**\n       * #action\n       */\n      setFavorites(str: string[]) {\n        self.favorites = str\n      },\n      /**\n       * #action\n       */\n      setFavoritesCounter(val: number) {\n        self.favoritesCounter = val\n      },\n      /**\n       * #action\n       */\n      addToRecentlyUsed(id: string) {\n        if (!self.recentlyUsed.includes(id)) {\n          self.recentlyUsedCounter = Math.min(\n            self.recentlyUsedCounter + 1,\n            MAX_RECENTLY_USED,\n          )\n          self.recentlyUsed =\n            self.recentlyUsed.length >= MAX_RECENTLY_USED\n              ? [...self.recentlyUsed.slice(1), id]\n              : [...self.recentlyUsed, id]\n        }\n      },\n      /**\n       * #action\n       */\n      clearRecentlyUsed() {\n        self.recentlyUsed = []\n      },\n      /**\n       * #action\n       */\n      setView(view: unknown) {\n        self.view = view\n      },\n      /**\n       * #action\n       */\n      toggleCategory(pathName: string) {\n        self.collapsed.set(pathName, !self.collapsed.get(pathName))\n      },\n      /**\n       * #action\n       */\n      setCategoryCollapsed(pathName: string, status: boolean) {\n        self.collapsed.set(pathName, status)\n      },\n      /**\n       * #action\n       */\n      expandAllCategories() {\n        self.collapsed.clear()\n      },\n      /**\n       * #action\n       */\n      setCollapsedCategories(str: [string, boolean][]) {\n        self.collapsed.replace(str)\n      },\n      /**\n       * #action\n       */\n      clearFilterText() {\n        self.filterText = ''\n      },\n      /**\n       * #action\n       */\n      setFilterText(newText: string) {\n        self.filterText = newText\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      isSelected(track: AnyConfigurationModel) {\n        return self.selectionSet.has(track)\n      },\n      /**\n       * #method\n       */\n      isFavorite(trackId: string) {\n        return self.favoritesSet.has(trackId)\n      },\n      /**\n       * #method\n       */\n      isRecentlyUsed(trackId: string) {\n        return self.recentlyUsedSet.has(trackId)\n      },\n      /**\n       * #method\n       */\n      getRefSeqTrackConf(assemblyName: string): MaybeAnyConfigurationModel {\n        const { assemblyManager } = getSession(self)\n        const assembly = assemblyManager.get(assemblyName)\n        const trackConf = assembly?.configuration.sequence\n        const viewType = pluginManager.getViewType(self.view.type)!\n        if (trackConf) {\n          for (const display of trackConf.displays) {\n            if (viewType.displayTypes.some(d => d.name === display.type)) {\n              return trackConf\n            }\n          }\n        }\n        return undefined\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get activeSortTrackNames() {\n        return (\n          self.sortTrackNames ??\n          getConf(getSession(self), ['hierarchical', 'sort', 'trackNames'])\n        )\n      },\n      /**\n       * #getter\n       */\n      get activeSortCategories() {\n        return (\n          self.sortCategories ??\n          getConf(getSession(self), ['hierarchical', 'sort', 'categories'])\n        )\n      },\n\n      /**\n       * #getter\n       * filter out tracks that don't match the current assembly/display types\n       */\n      get configAndSessionTrackConfigurations() {\n        return [\n          ...self.assemblyNames.map(a => self.getRefSeqTrackConf(a)),\n          ...filterTracks(getSession(self).tracks, self),\n        ].filter(notEmpty)\n      },\n      /**\n       * #getter\n       */\n      get allTrackConfigurations() {\n        const { connectionInstances = [] } = getSession(self)\n        return [\n          ...this.configAndSessionTrackConfigurations,\n          ...connectionInstances.flatMap(c => c.tracks),\n        ]\n      },\n\n      /**\n       * #getter\n       */\n      get allTrackConfigurationTrackIdSet() {\n        return new Map(this.allTrackConfigurations.map(t => [t.trackId, t]))\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * filters out tracks that are not in the favorites group\n       */\n      get favoriteTracks() {\n        return self.favorites\n          .filter(t => self.allTrackConfigurationTrackIdSet.has(t))\n          .map(t => self.allTrackConfigurationTrackIdSet.get(t)!)\n      },\n\n      /**\n       * #getter\n       * filters out tracks that are not in the recently used group\n       */\n      get recentlyUsedTracks() {\n        return self.recentlyUsed\n          .filter(t => self.allTrackConfigurationTrackIdSet.has(t))\n          .map(t => self.allTrackConfigurationTrackIdSet.get(t)!)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get allTracks() {\n        const { connectionInstances = [] } = getSession(self)\n        return [\n          {\n            group: 'Tracks',\n            tracks: self.configAndSessionTrackConfigurations,\n            noCategories: false,\n            menuItems: [],\n          },\n          ...connectionInstances.flatMap(c => ({\n            group: getConf(c, 'name'),\n            tracks: c.tracks,\n            noCategories: false,\n            menuItems: [],\n          })),\n        ]\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get hierarchy() {\n        return {\n          name: 'Root',\n          id: 'Root',\n          isOpenByDefault: true,\n          type: 'category' as const,\n          children: self.allTracks.map(s => ({\n            name: s.group,\n            id: s.group,\n            type: 'category' as const,\n            isOpenByDefault: !self.collapsed.get(s.group),\n            menuItems: s.menuItems,\n            children: generateHierarchy({\n              model: self,\n              trackConfs: s.tracks,\n              extra: s.group,\n              noCategories: s.noCategories,\n            }),\n          })),\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      collapseSubCategories() {\n        const paths = [] as string[]\n        findSubCategories(self.hierarchy.children, paths)\n        for (const path of paths) {\n          self.setCategoryCollapsed(path, true)\n        }\n      },\n      /**\n       * #action\n       */\n      collapseTopLevelCategories() {\n        const paths = [] as string[]\n        for (const trackGroups of self.hierarchy.children) {\n          if (trackGroups.children.length) {\n            findTopLevelCategories(trackGroups.children, paths)\n          }\n        }\n        for (const path of paths) {\n          self.setCategoryCollapsed(path, true)\n        }\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get hasAnySubcategories() {\n        return self.allTracks.some(group =>\n          group.tracks.some(t => readConfObject(t, 'category')?.length > 1),\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        // this should be the first autorun to properly initialize\n        addDisposer(\n          self,\n          autorun(() => {\n            const { assemblyNames, view } = self\n            self.setRecentlyUsed(\n              localStorageGetJSON<string[]>(recentlyUsedK(assemblyNames), []),\n            )\n            if (view) {\n              const lc = localStorageGetJSON<MaybeCollapsedKeys>(\n                collapsedK(assemblyNames, view.type),\n                undefined,\n              )\n              const r = ['hierarchical', 'defaultCollapsed']\n              const session = getSession(self)\n              if (!lc) {\n                self.expandAllCategories()\n                if (getConf(session, [...r, 'topLevelCategories'])) {\n                  self.collapseTopLevelCategories()\n                }\n                if (getConf(session, [...r, 'subCategories'])) {\n                  self.collapseSubCategories()\n                }\n                for (const elt of getConf(session, [...r, 'categoryNames'])) {\n                  self.setCategoryCollapsed(`Tracks-${elt}`, true)\n                }\n              } else {\n                self.setCollapsedCategories(lc)\n              }\n            }\n          }),\n        )\n        // this should be the second autorun\n        addDisposer(\n          self,\n          autorun(() => {\n            const {\n              sortTrackNames,\n              sortCategories,\n              favorites,\n              recentlyUsed,\n              assemblyNames,\n              collapsed,\n              view,\n            } = self\n            localStorageSetJSON(recentlyUsedK(assemblyNames), recentlyUsed)\n            localStorageSetJSON(favoritesK(), favorites)\n            localStorageSetJSON(sortTrackNamesK(), sortTrackNames)\n            localStorageSetJSON(sortCategoriesK(), sortCategories)\n            if (view) {\n              localStorageSetJSON(\n                collapsedK(assemblyNames, view.type),\n                collapsed,\n              )\n            }\n          }),\n        )\n      },\n    }))\n}\n\nexport type HierarchicalTrackSelectorStateModel = ReturnType<\n  typeof stateTreeFactory\n>\nexport type HierarchicalTrackSelectorModel =\n  Instance<HierarchicalTrackSelectorStateModel>\n","import { lazy } from 'react'\n\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport configSchema from './configSchema'\nimport stateModelFactory from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nexport default function HierarchicalTrackSelectorWidgetF(\n  pluginManager: PluginManager,\n) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'HierarchicalTrackSelectorWidget',\n      heading: 'Available tracks',\n      configSchema,\n      stateModel: stateModelFactory(pluginManager),\n      ReactComponent: lazy(\n        () => import('./components/HierarchicalTrackSelector'),\n      ),\n    })\n  })\n}\n\nexport {\n  type HierarchicalTrackSelectorModel,\n  default as stateModelFactory,\n} from './model'\nexport { default as configSchema } from './configSchema'\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { types } from 'mobx-state-tree'\n\nexport default types.model('AddConnectionModel', {\n  id: ElementId,\n  type: types.literal('AddConnectionWidget'),\n})\n","import { lazy } from 'react'\n\nimport { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport { WidgetType } from '@jbrowse/core/pluggableElementTypes'\n\nimport stateModel from './model'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst configSchema = ConfigurationSchema('AddConnectionWidget', {})\n\nexport default function AddConnectionWidgetF(pluginManager: PluginManager) {\n  pluginManager.addWidgetType(() => {\n    return new WidgetType({\n      name: 'AddConnectionWidget',\n      heading: 'Add a connection',\n      configSchema,\n      stateModel,\n      ReactComponent: lazy(() => import('./components/AddConnectionWidget')),\n    })\n  })\n}\n","import { ConfigurationSchema } from '../../configuration'\n\n/**\n * #config CytobandAdapter\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst configSchema = ConfigurationSchema(\n  'CytobandAdapter',\n  {\n    /**\n     * #slot\n     */\n    cytobandLocation: {\n      type: 'fileLocation',\n      defaultValue: { uri: '/path/to/cytoband.txt.gz' },\n    },\n  },\n  { explicitlyTyped: true },\n)\n\nexport default configSchema\n","import { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nexport default class CoreGetRefNames extends RpcMethodType {\n  name = 'CoreGetRefNames'\n\n  async execute(\n    args: {\n      sessionId: string\n      stopToken?: string\n      adapterConfig: Record<string, unknown>\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    if (isFeatureAdapter(dataAdapter)) {\n      return dataAdapter.getRefNames(deserializedArgs)\n    }\n    return []\n  }\n}\n","import RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '../../util'\n\nimport type { RenderArgs, RenderArgsSerialized } from './util'\nimport type { BoxRendererType } from '../../pluggableElementTypes'\n\n/**\n * fetches features from an adapter and call a renderer with them\n */\nexport default class CoreGetFeatureDetails extends RpcMethodType {\n  name = 'CoreGetFeatureDetails'\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n    const superArgs = (await super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    )) as RenderArgs\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return superArgs\n    }\n    const { rendererType } = args\n    const RendererType = this.pluginManager.getRendererType(rendererType)!\n    // @ts-expect-error\n    return RendererType.serializeArgsInClient(superArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { stopToken?: string },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { rendererType, featureId } = deserializedArgs\n    const RendererType = this.pluginManager.getRendererType(\n      rendererType,\n    )! as BoxRendererType\n\n    return {\n      // @ts-expect-error\n      feature: RendererType.getLayoutSession(args)\n        // @ts-expect-error\n        ?.cachedLayout.layout.getDataByID(featureId)\n        // @ts-expect-error\n        ?.toJSON(),\n    }\n  }\n}\n","import { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nexport default class CoreGetMetadata extends RpcMethodType {\n  name = 'CoreGetMetadata'\n\n  async execute(\n    args: {\n      sessionId: string\n      stopToken?: string\n      adapterConfig: Record<string, unknown>\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getMetadata(deserializedArgs)\n      : null\n  }\n}\n","import { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\nexport default class CoreGetFileInfo extends RpcMethodType {\n  name = 'CoreGetInfo'\n\n  async execute(\n    args: {\n      sessionId: string\n      stopToken?: string\n      adapterConfig: Record<string, unknown>\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { sessionId, adapterConfig } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    return isFeatureAdapter(dataAdapter)\n      ? dataAdapter.getHeader(deserializedArgs)\n      : null\n  }\n}\n","import { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '../../util'\nimport SimpleFeature from '../../util/simpleFeature'\n\nimport type { RenderArgs } from './util'\nimport type { Region } from '../../util'\nimport type { SimpleFeatureSerialized } from '../../util/simpleFeature'\n\nexport default class CoreGetFeatures extends RpcMethodType {\n  name = 'CoreGetFeatures'\n\n  async deserializeReturn(\n    feats: SimpleFeatureSerialized[],\n    args: unknown,\n    rpcDriver: string,\n  ) {\n    const superDeserialized = (await super.deserializeReturn(\n      feats,\n      args,\n      rpcDriver,\n    )) as SimpleFeatureSerialized[]\n    return superDeserialized.map(feat => new SimpleFeature(feat))\n  }\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n    return super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    ) as Promise<RenderArgs>\n  }\n\n  async execute(\n    args: {\n      sessionId: string\n      regions: Region[]\n      adapterConfig: Record<string, unknown>\n      stopToken?: string\n      opts?: any\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { stopToken, sessionId, adapterConfig, regions, opts } =\n      deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n    const ret = dataAdapter.getFeaturesInMultipleRegions(regions, {\n      ...opts,\n      stopToken,\n    })\n    const r = await firstValueFrom(ret.pipe(toArray()))\n    return r.map(f => f.toJSON())\n  }\n}\n","import type { ServerSideRendererType } from '../../pluggableElementTypes'\nimport type {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n} from '../../pluggableElementTypes/renderers/ServerSideRendererType'\nimport type { Region } from '../../util'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  adapterConfig: Record<string, unknown>\n  rendererType: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  assemblyName: string\n  regions: Region[]\n  adapterConfig: Record<string, unknown>\n  rendererType: string\n}\n\nexport function validateRendererType<T>(\n  rendererType: string,\n  RendererType: T,\n): ServerSideRendererType {\n  // @ts-expect-error\n  if (!RendererType.ReactComponent) {\n    throw new Error(\n      `renderer ${rendererType} has no ReactComponent, it may not be completely implemented yet`,\n    )\n  }\n  return RendererType as unknown as ServerSideRendererType\n}\n\nexport {\n  type RenderResults,\n  type ResultsSerialized,\n} from '../../pluggableElementTypes/renderers/ServerSideRendererType'\n","import { validateRendererType } from './util'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '../../util'\n\nimport type {\n  RenderArgs,\n  RenderArgsSerialized,\n  RenderResults,\n  ResultsSerialized,\n} from './util'\n\nexport default class CoreRender extends RpcMethodType {\n  name = 'CoreRender'\n\n  async serializeArguments(args: RenderArgs, rpcDriver: string) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, args)\n\n    const superArgs = (await super.serializeArguments(\n      renamedArgs,\n      rpcDriver,\n    )) as RenderArgs\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return superArgs\n    }\n\n    return validateRendererType(\n      args.rendererType,\n      this.pluginManager.getRendererType(args.rendererType),\n    ).serializeArgsInClient(superArgs)\n  }\n\n  async execute(\n    args: RenderArgsSerialized & { stopToken?: string },\n    rpcDriver: string,\n  ) {\n    let deserializedArgs = args\n    if (rpcDriver !== 'MainThreadRpcDriver') {\n      deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    }\n    const { sessionId, rendererType } = deserializedArgs\n    if (!sessionId) {\n      throw new Error('must pass a unique session id')\n    }\n\n    const RendererType = validateRendererType(\n      rendererType,\n      this.pluginManager.getRendererType(rendererType),\n    )\n\n    return rpcDriver === 'MainThreadRpcDriver'\n      ? await RendererType.render(deserializedArgs)\n      : await RendererType.renderInWorker(deserializedArgs)\n  }\n\n  async deserializeReturn(\n    serializedReturn: RenderResults | ResultsSerialized,\n    args: RenderArgs,\n    rpcDriver: string,\n  ): Promise<unknown> {\n    const des = await super.deserializeReturn(serializedReturn, args, rpcDriver)\n    if (rpcDriver === 'MainThreadRpcDriver') {\n      return des\n    }\n    return validateRendererType(\n      args.rendererType,\n      this.pluginManager.getRendererType(args.rendererType),\n    ).deserializeResultsInClient(des as ResultsSerialized, args)\n  }\n}\n","import { freeAdapterResources } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\n\n/**\n * free up any resources (e.g. cached adapter objects)\n * that are only associated with the given track ID.\n *\n * returns number of objects deleted\n */\nexport default class CoreFreeResources extends RpcMethodType {\n  name = 'CoreFreeResources'\n\n  async execute(args: Record<string, unknown>) {\n    freeAdapterResources(args)\n    this.pluginManager.getRendererTypes().forEach(renderer => {\n      renderer.freeResources(args)\n    })\n  }\n\n  async serializeArguments(args: Record<string, unknown>, _rpcDriver: string) {\n    return args\n  }\n}\n","import { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport RpcMethodType from '../../pluggableElementTypes/RpcMethodType'\nimport { renameRegionsIfNeeded } from '../../util'\n\nimport type { RenderArgs } from './util'\nimport type { Region } from '../../util'\n\nexport default class CoreGetFeatureDensityStats extends RpcMethodType {\n  name = 'CoreGetFeatureDensityStats'\n\n  async serializeArguments(\n    args: RenderArgs & {\n      stopToken?: string\n      statusCallback?: (arg: string) => void\n    },\n    rpcDriver: string,\n  ) {\n    const { rootModel } = this.pluginManager\n    const assemblyManager = rootModel!.session!.assemblyManager\n    const renamedArgs = await renameRegionsIfNeeded(assemblyManager, {\n      ...args,\n      filters: args.filters?.toJSON().filters,\n    })\n\n    return super.serializeArguments(renamedArgs, rpcDriver)\n  }\n\n  async execute(\n    args: {\n      adapterConfig: Record<string, unknown>\n      regions: Region[]\n      stopToken?: string\n      headers?: Record<string, string>\n      sessionId: string\n    },\n    rpcDriver: string,\n  ) {\n    const pm = this.pluginManager\n    const deserializedArgs = await this.deserializeArguments(args, rpcDriver)\n    const { adapterConfig, sessionId, regions } = deserializedArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n    return dataAdapter.getMultiRegionFeatureDensityStats(\n      regions,\n      deserializedArgs,\n    )\n  }\n}\n","import { lazy } from 'react'\n\nimport { configSchema, stateModelFactory } from './BaseFeatureWidget'\nimport Plugin from './Plugin'\nimport CytobandAdapterF from './data_adapters/CytobandAdapter'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport * as coreRpcMethods from './rpc/coreRpcMethods'\n\nimport type PluginManager from './PluginManager'\n\n// the core plugin, which registers types that ALL JBrowse applications are\n// expected to need.\nexport default class CorePlugin extends Plugin {\n  name = 'CorePlugin'\n\n  install(pluginManager: PluginManager) {\n    // register all our core rpc methods\n    Object.values(coreRpcMethods).forEach(RpcMethod => {\n      pluginManager.addRpcMethod(() => new RpcMethod(pluginManager))\n    })\n\n    CytobandAdapterF(pluginManager)\n\n    pluginManager.addWidgetType(() => {\n      return new WidgetType({\n        name: 'BaseFeatureWidget',\n        heading: 'Feature details',\n        configSchema,\n        stateModel: stateModelFactory(pluginManager),\n        ReactComponent: lazy(\n          () => import('./BaseFeatureWidget/BaseFeatureDetail'),\n        ),\n      })\n    })\n  }\n}\n","import configSchema from './configSchema'\nimport { AdapterType } from '../../pluggableElementTypes'\n\nimport type PluginManager from '../../PluginManager'\n\nexport default function CytobandAdapterF(pluginManager: PluginManager) {\n  pluginManager.addAdapterType(\n    () =>\n      new AdapterType({\n        name: 'CytobandAdapter',\n        configSchema,\n        adapterMetadata: {\n          hiddenFromGUI: true,\n        },\n        getAdapterClass: () => import('./CytobandAdapter').then(f => f.default),\n      }),\n  )\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-function-type */\nimport { isModelType, isType, types } from 'mobx-state-tree'\n\n// Pluggable elements\nimport CorePlugin from './CorePlugin'\nimport ReExports from './ReExports'\nimport {\n  ConfigurationSchema,\n  isBareConfigurationSchemaType,\n} from './configuration'\nimport AdapterType from './pluggableElementTypes/AdapterType'\nimport AddTrackWorkflowType from './pluggableElementTypes/AddTrackWorkflowType'\nimport ConnectionType from './pluggableElementTypes/ConnectionType'\nimport DisplayType from './pluggableElementTypes/DisplayType'\nimport InternetAccountType from './pluggableElementTypes/InternetAccountType'\nimport RpcMethodType from './pluggableElementTypes/RpcMethodType'\nimport TextSearchAdapterType from './pluggableElementTypes/TextSearchAdapterType'\nimport TrackType from './pluggableElementTypes/TrackType'\nimport ViewType from './pluggableElementTypes/ViewType'\nimport WidgetType from './pluggableElementTypes/WidgetType'\nimport RendererType from './pluggableElementTypes/renderers/RendererType'\nimport createJexlInstance from './util/jexl'\n\nimport type Plugin from './Plugin'\nimport type { PluginDefinition } from './PluginLoader'\nimport type {\n  PluggableElementMember,\n  PluggableElementType,\n} from './pluggableElementTypes'\nimport type PluggableElementBase from './pluggableElementTypes/PluggableElementBase'\nimport type { AbstractRootModel } from './util'\nimport type { IAnyModelType, IAnyType } from 'mobx-state-tree'\n\n// helper class that keeps groups of callbacks that are then run in a specified\n// order by group\nclass PhasedScheduler<PhaseName extends string> {\n  phaseCallbacks = new Map<PhaseName, Function[]>()\n\n  phaseOrder: PhaseName[] = []\n\n  constructor(...phaseOrder: PhaseName[]) {\n    this.phaseOrder = phaseOrder\n  }\n\n  add(phase: PhaseName, callback: Function) {\n    if (!this.phaseOrder.includes(phase)) {\n      throw new Error(`unknown phase ${phase}`)\n    }\n    let phaseCallbacks = this.phaseCallbacks.get(phase)\n    if (!phaseCallbacks) {\n      phaseCallbacks = []\n      this.phaseCallbacks.set(phase, phaseCallbacks)\n    }\n    phaseCallbacks.push(callback)\n  }\n\n  run() {\n    this.phaseOrder.forEach(phaseName => {\n      this.phaseCallbacks.get(phaseName)?.forEach(callback => callback())\n    })\n  }\n}\n\ntype PluggableElementTypeGroup =\n  | 'renderer'\n  | 'adapter'\n  | 'display'\n  | 'track'\n  | 'connection'\n  | 'view'\n  | 'widget'\n  | 'rpc method'\n  | 'internet account'\n  | 'text search adapter'\n  | 'add track workflow'\n\n/** internal class that holds the info for a certain element type */\nclass TypeRecord<ElementClass extends PluggableElementBase> {\n  registeredTypes: Record<string, ElementClass> = {}\n\n  constructor(\n    public typeName: string,\n    public baseClass:\n      | (new (...args: unknown[]) => ElementClass)\n      // covers abstract class case\n      | (Function & {\n          prototype: ElementClass\n        }),\n  ) {}\n\n  add(name: string, t: ElementClass) {\n    this.registeredTypes[name] = t\n  }\n\n  has(name: string) {\n    return name in this.registeredTypes\n  }\n\n  get(name: string) {\n    if (!this.has(name)) {\n      throw new Error(\n        `${this.typeName} '${name}' not found, perhaps its plugin is not loaded or its plugin has not added it.`,\n      )\n    }\n    return this.registeredTypes[name]\n  }\n\n  all() {\n    return Object.values(this.registeredTypes)\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\n/**\n * free-form string-to-unknown mapping of metadata related to the instance of\n * this plugin. `isCore` is typically set to `Boolean(true)` if the plugin was\n * loaded as part of the \"core\" set of plugins for this application. Can also\n * use this metadata to stash other things about why the plugin is loaded, such\n * as where it came from, what plugin depends on it, etc.\n */\nexport type PluginMetadata = Record<string, unknown>\n\nexport interface PluginLoadRecord {\n  metadata?: PluginMetadata\n  plugin: Plugin\n}\nexport interface RuntimePluginLoadRecord extends PluginLoadRecord {\n  definition: PluginDefinition\n}\n\nexport default class PluginManager {\n  plugins: Plugin[] = []\n\n  jexl = createJexlInstance()\n\n  pluginMetadata: Record<string, PluginMetadata> = {}\n\n  runtimePluginDefinitions: PluginDefinition[] = []\n\n  elementCreationSchedule = new PhasedScheduler<PluggableElementTypeGroup>(\n    'renderer',\n    'adapter',\n    'text search adapter',\n    'display',\n    'track',\n    'connection',\n    'view',\n    'widget',\n    'rpc method',\n    'internet account',\n    'add track workflow',\n  ) as PhasedScheduler<PluggableElementTypeGroup> | undefined\n\n  rendererTypes = new TypeRecord('RendererType', RendererType)\n\n  adapterTypes = new TypeRecord('AdapterType', AdapterType)\n\n  textSearchAdapterTypes = new TypeRecord(\n    'TextSearchAdapterType',\n    TextSearchAdapterType,\n  )\n\n  trackTypes = new TypeRecord('TrackType', TrackType)\n\n  displayTypes = new TypeRecord('DisplayType', DisplayType)\n\n  connectionTypes = new TypeRecord('ConnectionType', ConnectionType)\n\n  viewTypes = new TypeRecord('ViewType', ViewType)\n\n  widgetTypes = new TypeRecord('WidgetType', WidgetType)\n\n  rpcMethods = new TypeRecord('RpcMethodType', RpcMethodType)\n\n  addTrackWidgets = new TypeRecord('AddTrackWorkflow', AddTrackWorkflowType)\n\n  internetAccountTypes = new TypeRecord(\n    'InternetAccountType',\n    InternetAccountType,\n  )\n\n  configured = false\n\n  rootModel?: AbstractRootModel\n\n  extensionPoints = new Map<string, Function[]>()\n\n  constructor(initialPlugins: (Plugin | PluginLoadRecord)[] = []) {\n    // add the core plugin\n    this.addPlugin({\n      plugin: new CorePlugin(),\n      metadata: {\n        isCore: true,\n      },\n    })\n\n    // add all the initial plugins\n    initialPlugins.forEach(plugin => {\n      this.addPlugin(plugin)\n    })\n  }\n\n  pluginConfigurationSchemas() {\n    const configurationSchemas: Record<string, unknown> = {}\n    this.plugins.forEach(plugin => {\n      if (plugin.configurationSchema) {\n        configurationSchemas[plugin.name] = plugin.configurationSchema\n      }\n    })\n    return configurationSchemas\n  }\n\n  addPlugin(load: Plugin | PluginLoadRecord | RuntimePluginLoadRecord) {\n    if (this.configured) {\n      throw new Error('JBrowse already configured, cannot add plugins')\n    }\n\n    // check for availability of 'install' and 'configure' as a proxy for being\n    // an 'instanceof Plugin'\n    const [plugin, metadata = {}] =\n      'install' in load && 'configure' in load\n        ? [load, {}]\n        : [load.plugin, load.metadata]\n\n    if (this.plugins.includes(plugin)) {\n      throw new Error('plugin already installed')\n    }\n\n    this.pluginMetadata[plugin.name] = metadata\n    if ('definition' in load) {\n      this.runtimePluginDefinitions.push(load.definition)\n    }\n    plugin.install(this)\n    this.plugins.push(plugin)\n    return this\n  }\n\n  getPlugin(name: string) {\n    return this.plugins.find(p => p.name === name)\n  }\n\n  hasPlugin(name: string) {\n    return this.getPlugin(name) !== undefined\n  }\n\n  createPluggableElements() {\n    // run the creation callbacks for each element type in order.\n    // see elementCreationSchedule above for the creation order\n    if (this.elementCreationSchedule) {\n      this.elementCreationSchedule.run()\n      this.elementCreationSchedule = undefined\n    }\n    return this\n  }\n\n  setRootModel(rootModel: AbstractRootModel) {\n    this.rootModel = rootModel\n    return this\n  }\n\n  configure() {\n    if (this.configured) {\n      throw new Error('already configured')\n    }\n\n    this.plugins.forEach(plugin => {\n      plugin.configure(this)\n    })\n\n    this.configured = true\n\n    return this\n  }\n\n  getElementTypeRecord(\n    groupName: PluggableElementTypeGroup,\n  ): TypeRecord<PluggableElementBase> {\n    switch (groupName) {\n      case 'adapter':\n        return this.adapterTypes\n      case 'text search adapter':\n        return this.textSearchAdapterTypes\n      case 'connection':\n        return this.connectionTypes\n      case 'widget':\n        return this.widgetTypes\n      case 'renderer':\n        return this.rendererTypes\n      case 'display':\n        return this.displayTypes\n      case 'track':\n        return this.trackTypes\n      case 'view':\n        return this.viewTypes\n      case 'rpc method':\n        return this.rpcMethods\n      case 'internet account':\n        return this.internetAccountTypes\n      case 'add track workflow':\n        return this.addTrackWidgets\n      default:\n        throw new Error(`invalid element type '${groupName}'`)\n    }\n  }\n\n  addElementType(\n    groupName: PluggableElementTypeGroup,\n    creationCallback: (pluginManager: PluginManager) => PluggableElementType,\n  ) {\n    if (typeof creationCallback !== 'function') {\n      throw new Error(\n        'must provide a callback function that returns the new type object',\n      )\n    }\n    const typeRecord = this.getElementTypeRecord(groupName)\n\n    this.elementCreationSchedule?.add(groupName, () => {\n      const newElement = creationCallback(this)\n      if (!newElement.name) {\n        throw new Error(`cannot add a ${groupName} with no name`)\n      }\n\n      if (typeRecord.has(newElement.name)) {\n        console.warn(\n          `${groupName} ${newElement.name} already registered, cannot register it again`,\n        )\n      } else {\n        typeRecord.add(\n          newElement.name,\n          this.evaluateExtensionPoint(\n            'Core-extendPluggableElement',\n            newElement,\n          ) as PluggableElementType,\n        )\n      }\n    })\n\n    return this\n  }\n\n  getElementType(groupName: PluggableElementTypeGroup, typeName: string) {\n    return this.getElementTypeRecord(groupName).get(typeName)\n  }\n\n  getElementTypesInGroup(groupName: PluggableElementTypeGroup) {\n    return this.getElementTypeRecord(groupName).all()\n  }\n\n  getViewElements() {\n    return this.getElementTypesInGroup('view') as ViewType[]\n  }\n\n  getTrackElements() {\n    return this.getElementTypesInGroup('track') as TrackType[]\n  }\n\n  getConnectionElements() {\n    return this.getElementTypesInGroup('connection') as ConnectionType[]\n  }\n\n  getAddTrackWorkflowElements() {\n    return this.getElementTypesInGroup(\n      'add track workflow',\n    ) as AddTrackWorkflowType[]\n  }\n\n  getRpcElements() {\n    return this.getElementTypesInGroup('rpc method') as RpcMethodType[]\n  }\n\n  getDisplayElements() {\n    return this.getElementTypesInGroup('display') as DisplayType[]\n  }\n\n  getAdapterElements() {\n    return this.getElementTypesInGroup('adapter') as AdapterType[]\n  }\n\n  /** get a MST type for the union of all specified pluggable MST types */\n  pluggableMstType(\n    groupName: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember,\n    fallback: IAnyType = types.maybe(types.null),\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(groupName)\n      .all()\n      // @ts-expect-error\n      .map(t => t[fieldName])\n      .filter(t => isType(t) && isModelType(t)) as IAnyType[]\n\n    // try to smooth over the case when no types are registered, mostly\n    // encountered in tests\n    if (pluggableTypes.length === 0 && typeof jest === 'undefined') {\n      console.warn(\n        `No pluggable types found matching ('${groupName}','${fieldName}')`,\n      )\n      return fallback\n    }\n    return types.union(...pluggableTypes)\n  }\n\n  /** get a MST type for the union of all specified pluggable config schemas */\n  pluggableConfigSchemaType(\n    typeGroup: PluggableElementTypeGroup,\n    fieldName: PluggableElementMember = 'configSchema',\n  ) {\n    const pluggableTypes = this.getElementTypeRecord(typeGroup)\n      .all()\n      // @ts-expect-error\n      .map(t => t[fieldName])\n      .filter(t => isBareConfigurationSchemaType(t)) as IAnyType[]\n\n    if (pluggableTypes.length === 0) {\n      pluggableTypes.push(ConfigurationSchema('Null', {}))\n    }\n    return types.union(...pluggableTypes) as IAnyModelType\n  }\n\n  jbrequireCache = new Map()\n\n  lib = ReExports\n\n  load = <FTYPE extends AnyFunction>(lib: FTYPE): ReturnType<FTYPE> => {\n    if (!this.jbrequireCache.has(lib)) {\n      this.jbrequireCache.set(lib, lib(this))\n    }\n    return this.jbrequireCache.get(lib)\n  }\n\n  /**\n   * Get the re-exported version of the given package name.\n   * Throws an error if the package is not re-exported by the plugin manager.\n   *\n   * @returns the library's default export\n   */\n  jbrequire = (\n    lib: keyof typeof ReExports | AnyFunction | { default: AnyFunction },\n  ): any => {\n    if (typeof lib === 'string') {\n      const pack = this.lib[lib]\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!pack) {\n        throw new TypeError(\n          `No jbrequire re-export defined for package '${lib}'. If this package must be shared between plugins, add it to ReExports.js. If it does not need to be shared, just import it normally.`,\n        )\n      }\n      return pack\n    }\n\n    if (typeof lib === 'function') {\n      return this.load(lib)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (lib.default) {\n      return this.jbrequire(lib.default)\n    }\n\n    throw new TypeError(\n      'lib passed to jbrequire must be either a string or a function',\n    )\n  }\n\n  getRendererType(typeName: string) {\n    return this.rendererTypes.get(typeName)\n  }\n\n  getRendererTypes(): RendererType[] {\n    return this.rendererTypes.all()\n  }\n\n  getAdapterType(typeName: string) {\n    return this.adapterTypes.get(typeName)\n  }\n\n  getTextSearchAdapterType(typeName: string) {\n    return this.textSearchAdapterTypes.get(typeName)\n  }\n\n  getTrackType(typeName: string) {\n    return this.trackTypes.get(typeName)\n  }\n\n  getDisplayType(typeName: string) {\n    return this.displayTypes.get(typeName)\n  }\n\n  getViewType(typeName: string) {\n    return this.viewTypes.get(typeName)\n  }\n\n  getAddTrackWorkflow(typeName: string) {\n    return this.addTrackWidgets.get(typeName)\n  }\n\n  getWidgetType(typeName: string) {\n    return this.widgetTypes.get(typeName)\n  }\n\n  getConnectionType(typeName: string) {\n    return this.connectionTypes.get(typeName)\n  }\n\n  getRpcMethodType(methodName: string) {\n    return this.rpcMethods.get(methodName)\n  }\n\n  getInternetAccountType(name: string) {\n    return this.internetAccountTypes.get(name)\n  }\n\n  addRendererType(cb: (pm: PluginManager) => RendererType) {\n    return this.addElementType('renderer', cb)\n  }\n\n  addAdapterType(cb: (pm: PluginManager) => AdapterType) {\n    return this.addElementType('adapter', cb)\n  }\n\n  addTextSearchAdapterType(cb: (pm: PluginManager) => TextSearchAdapterType) {\n    return this.addElementType('text search adapter', cb)\n  }\n\n  addTrackType(cb: (pm: PluginManager) => TrackType) {\n    // Goes through the already-created displays and registers the ones that\n    // specify this track type\n    const callback = () => {\n      const track = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // track may have already added the displayType in its cb\n        if (\n          display.trackType === track.name &&\n          !track.displayTypes.includes(display)\n        ) {\n          track.addDisplayType(display)\n        }\n      })\n      return track\n    }\n    return this.addElementType('track', callback)\n  }\n\n  addDisplayType(cb: (pluginManager: PluginManager) => DisplayType) {\n    return this.addElementType('display', cb)\n  }\n\n  addViewType(cb: (pluginManager: PluginManager) => ViewType) {\n    const callback = () => {\n      const newView = cb(this)\n      const displays = this.getElementTypesInGroup('display') as DisplayType[]\n      displays.forEach(display => {\n        // view may have already added the displayType in its callback\n        // see ViewType for description of extendedName\n        if (\n          (display.viewType === newView.name ||\n            display.viewType === newView.extendedName) &&\n          !newView.displayTypes.includes(display)\n        ) {\n          newView.addDisplayType(display)\n        }\n      })\n      return newView\n    }\n    return this.addElementType('view', callback)\n  }\n\n  addWidgetType(cb: (pm: PluginManager) => WidgetType) {\n    return this.addElementType('widget', cb)\n  }\n\n  addConnectionType(cb: (pm: PluginManager) => ConnectionType) {\n    return this.addElementType('connection', cb)\n  }\n\n  addRpcMethod(cb: (pm: PluginManager) => RpcMethodType) {\n    return this.addElementType('rpc method', cb)\n  }\n\n  addInternetAccountType(cb: (pm: PluginManager) => InternetAccountType) {\n    return this.addElementType('internet account', cb)\n  }\n\n  addAddTrackWorkflowType(cb: (pm: PluginManager) => AddTrackWorkflowType) {\n    return this.addElementType('add track workflow', cb)\n  }\n\n  addToExtensionPoint<T>(\n    extensionPointName: string,\n    callback: (extendee: T, props: Record<string, unknown>) => T,\n  ) {\n    let callbacks = this.extensionPoints.get(extensionPointName)\n    if (!callbacks) {\n      callbacks = []\n      this.extensionPoints.set(extensionPointName, callbacks)\n    }\n    callbacks.push(callback)\n  }\n\n  evaluateExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n    props?: Record<string, unknown>,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = callback(accumulator, props)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n\n  async evaluateAsyncExtensionPoint(\n    extensionPointName: string,\n    extendee: unknown,\n    props?: Record<string, unknown>,\n  ) {\n    const callbacks = this.extensionPoints.get(extensionPointName)\n    let accumulator = extendee\n    if (callbacks) {\n      for (const callback of callbacks) {\n        try {\n          accumulator = await callback(accumulator, props)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n    }\n    return accumulator\n  }\n}\n","import { useState } from 'react'\n\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { MultiLinearVariantMatrixDisplayModel } from '../model'\nimport type { Feature } from '@jbrowse/core/util'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\nconst useStyles = makeStyles()({\n  resizeHandle: {\n    height: 4,\n    background: '#ccc',\n    boxSizing: 'border-box',\n    borderTop: '1px solid #fafafa',\n  },\n})\n\nconst Wrapper = observer(function ({\n  children,\n  model,\n  exportSVG,\n}: {\n  model: MultiLinearVariantMatrixDisplayModel\n  children: React.ReactNode\n  exportSVG?: boolean\n}) {\n  const { height } = model\n  const { width, offsetPx } = getContainingView(model) as LinearGenomeViewModel\n  const left = Math.max(0, -offsetPx)\n  return exportSVG ? (\n    <g transform={`translate(${left})`}>{children}</g>\n  ) : (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left,\n        height,\n        width,\n      }}\n    >\n      {children}\n    </svg>\n  )\n})\n\nconst LinesConnectingMatrixToGenomicPosition = observer(function ({\n  model,\n  exportSVG,\n}: {\n  model: MultiLinearVariantMatrixDisplayModel\n  exportSVG?: boolean\n}) {\n  const { classes } = useStyles()\n  const { assemblyManager } = getSession(model)\n  const view = getContainingView(model) as LinearGenomeViewModel\n  const [mouseOverLine, setMouseOverLine] = useState<{\n    f: Feature\n    idx: number\n    c: number\n  }>()\n  const { lineZoneHeight, featuresVolatile } = model\n  const { assemblyNames, dynamicBlocks } = view\n  const assembly = assemblyManager.get(assemblyNames[0]!)\n  const b0 = dynamicBlocks.contentBlocks[0]?.widthPx || 0\n  const w = b0 / (featuresVolatile?.length || 1)\n  return assembly && featuresVolatile ? (\n    <>\n      <Wrapper exportSVG={exportSVG} model={model}>\n        <AllLines model={model} setMouseOverLine={setMouseOverLine} />\n        {mouseOverLine ? (\n          <line\n            stroke=\"#f00c\"\n            strokeWidth={2}\n            style={{\n              pointerEvents: 'none',\n            }}\n            x1={mouseOverLine.idx * w + w / 2}\n            x2={mouseOverLine.c}\n            y1={lineZoneHeight}\n            y2={0}\n            onMouseLeave={() => {\n              setMouseOverLine(undefined)\n            }}\n          />\n        ) : null}\n      </Wrapper>\n      {!exportSVG ? (\n        <ResizeHandle\n          style={{\n            position: 'absolute',\n            top: lineZoneHeight - 4,\n          }}\n          onDrag={n => model.setLineZoneHeight(lineZoneHeight + n)}\n          className={classes.resizeHandle}\n        />\n      ) : null}\n    </>\n  ) : null\n})\n\nconst AllLines = observer(function ({\n  model,\n  setMouseOverLine,\n}: {\n  model: MultiLinearVariantMatrixDisplayModel\n  setMouseOverLine: (arg: any) => void\n}) {\n  const { assemblyManager } = getSession(model)\n  const view = getContainingView(model) as LinearGenomeViewModel\n  const { lineZoneHeight, featuresVolatile } = model\n  const { offsetPx, assemblyNames, dynamicBlocks } = view\n  const assembly = assemblyManager.get(assemblyNames[0]!)\n  const b0 = dynamicBlocks.contentBlocks[0]?.widthPx || 0\n  const w = b0 / (featuresVolatile?.length || 1)\n  const l = Math.max(offsetPx, 0)\n  return assembly && featuresVolatile ? (\n    <>\n      {featuresVolatile.map((f, i) => {\n        const ref = f.get('refName')\n        const c =\n          (view.bpToPx({\n            refName: assembly.getCanonicalRefName(ref) || ref,\n            coord: f.get('start'),\n          })?.offsetPx || 0) - l\n        return (\n          <line\n            stroke=\"#0004\"\n            strokeWidth={1}\n            key={f.id()}\n            x1={i * w + w / 2}\n            x2={c}\n            y1={lineZoneHeight}\n            y2={0}\n            onMouseEnter={() => {\n              setMouseOverLine({ f, idx: i, c })\n            }}\n            onMouseLeave={() => {\n              setMouseOverLine(undefined)\n            }}\n          />\n        )\n      })}\n    </>\n  ) : null\n})\n\nexport default LinesConnectingMatrixToGenomicPosition\n","import {\n  scaleLinear,\n  scaleLog,\n  scaleQuantize,\n} from '@mui/x-charts-vendor/d3-scale'\n\nexport const YSCALEBAR_LABEL_OFFSET = 5\n\nexport interface ScaleOpts {\n  domain: number[]\n  range: number[]\n  scaleType: string\n  pivotValue?: number\n  inverted?: boolean\n}\n\nexport interface Source {\n  baseUri?: string\n  name: string\n  color?: string\n  group?: string\n}\n\n/**\n * produces a d3-scale from arguments. applies a \"nice domain\" adjustment\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - range [min,max]\n *   - bounds [min,max]\n *   - scaleType (linear or log)\n *   - pivotValue (number)\n *   - inverted (boolean)\n */\nexport function getScale({\n  domain = [],\n  range = [],\n  scaleType,\n  pivotValue,\n  inverted,\n}: ScaleOpts) {\n  let scale:\n    | ReturnType<typeof scaleLinear<number>>\n    | ReturnType<typeof scaleLog<number>>\n    | ReturnType<typeof scaleQuantize<number>>\n  const [min, max] = domain\n  if (min === undefined || max === undefined) {\n    throw new Error('invalid domain')\n  }\n  if (scaleType === 'linear') {\n    scale = scaleLinear()\n  } else if (scaleType === 'log') {\n    scale = scaleLog().base(2)\n  } else if (scaleType === 'quantize') {\n    scale = scaleQuantize()\n  } else {\n    throw new Error('undefined scaleType')\n  }\n  scale.domain(pivotValue !== undefined ? [min, pivotValue, max] : [min, max])\n  scale.nice()\n\n  const [rangeMin, rangeMax] = range\n  if (rangeMin === undefined || rangeMax === undefined) {\n    throw new Error('invalid range')\n  }\n  scale.range(inverted ? range.slice().reverse() : range)\n  return scale\n}\n/**\n * gets the origin for drawing the graph. for linear this is 0, for log this is\n * arbitrarily set to log(1)==0\n *\n * @param scaleType -\n */\nexport function getOrigin(scaleType: string /* , pivot, stats */) {\n  // if (pivot) {\n  //   if (pivot === 'mean') {\n  //     return stats.scoreMean || 0\n  //   }\n  //   if (pivot === 'zero') {\n  //     return 0\n  //   }\n  //   return parseFloat()\n  // }\n  // if (scaleType === 'z_score') {\n  //   return stats.scoreMean || 0\n  // }\n  if (scaleType === 'log') {\n    return 1\n  }\n  return 0\n}\n\n/**\n * produces a \"nice\" domain that actually rounds down to 0 for the min or 0 to\n * the max depending on if all values are positive or negative\n *\n * @param object - containing attributes\n *   - domain [min,max]\n *   - bounds [min,max]\n *   - mean\n *   - stddev\n *   - scaleType (linear or log)\n */\nexport function getNiceDomain({\n  scaleType,\n  domain,\n  bounds,\n}: {\n  scaleType: string\n  domain: readonly [number, number]\n  bounds: readonly [number | undefined, number | undefined]\n}) {\n  const [minScore, maxScore] = bounds\n  let [min, max] = domain\n\n  if (scaleType === 'linear') {\n    if (max < 0) {\n      max = 0\n    }\n    if (min > 0) {\n      min = 0\n    }\n  }\n  if (scaleType === 'log') {\n    // for min>0 and max>1, set log min to 1, which works for most coverage\n    // type tracks. if max is not >1, might be like raw p-values so then it'll\n    // display negative values\n    if (min >= 0 && max > 1) {\n      min = 1\n    }\n  }\n\n  if (minScore !== undefined && minScore !== Number.MIN_VALUE) {\n    min = minScore\n  }\n  if (maxScore !== undefined && maxScore !== Number.MAX_VALUE) {\n    max = maxScore\n  }\n  const getScaleType = (type: string) => {\n    if (type === 'linear') {\n      return scaleLinear()\n    }\n    if (type === 'log') {\n      const scale = scaleLog()\n      scale.base(2)\n      return scale\n    }\n    if (type === 'quantize') {\n      return scaleQuantize()\n    }\n    throw new Error(`undefined scaleType ${type}`)\n  }\n  const scale = getScaleType(scaleType)\n\n  scale.domain([min, max])\n  scale.nice()\n  return scale.domain() as [number, number]\n}\n\nexport function toP(s = 0) {\n  return +(+s).toPrecision(6)\n}\n\nexport function round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n\n// avoid drawing negative width features for SVG exports\nexport function fillRectCtx(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  ctx: CanvasRenderingContext2D,\n  color?: string,\n) {\n  if (width < 0) {\n    x += width\n    width = -width\n  }\n  if (height < 0) {\n    y += height\n    height = -height\n  }\n\n  if (color) {\n    ctx.fillStyle = color\n  }\n  ctx.fillRect(x, y, width, height)\n}\n","import RBush from 'rbush'\n\nimport type {\n  BaseLayout,\n  RectTuple,\n  Rectangle,\n  SerializedLayout,\n} from './BaseLayout'\n\nexport interface Layout {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n  name: string\n}\n\nexport default class PrecomputedLayout<T> implements BaseLayout<T> {\n  private rectangles: Map<string, RectTuple>\n\n  private totalHeight: number\n\n  public maxHeightReached: boolean\n\n  private rbush: RBush<Layout>\n\n  constructor({ rectangles, totalHeight, maxHeightReached }: SerializedLayout) {\n    this.rectangles = new Map(Object.entries(rectangles))\n    // rectangles is of the form \"featureId\": [leftPx, topPx, rightPx, bottomPx]\n    this.totalHeight = totalHeight\n    this.maxHeightReached = maxHeightReached\n    this.rbush = new RBush()\n    for (const [key, layout] of Object.entries(rectangles)) {\n      this.rbush.insert({\n        minX: layout[0],\n        minY: layout[1],\n        maxX: layout[2],\n        maxY: layout[3],\n        name: key,\n      })\n    }\n  }\n\n  addRect(id: string) {\n    const rect = this.rectangles.get(id)\n    if (!rect) {\n      throw new Error(`id ${id} not found in precomputed feature layout`)\n    }\n    // left, top, right, bottom\n    return rect[1]\n  }\n\n  /**\n   * returns a Map of `feature id -> rectangle`\n   */\n  getRectangles(): Map<string, RectTuple> {\n    return this.rectangles\n  }\n\n  getTotalHeight(): number {\n    return this.totalHeight\n  }\n\n  collides(_rect: Rectangle<T>, _top: number): boolean {\n    throw new Error('Method not implemented.')\n  }\n\n  getByCoord(x: number, y: number) {\n    const rect = { minX: x, minY: y, maxX: x + 1, maxY: y + 1 }\n    return this.rbush.collides(rect)\n      ? this.rbush.search(rect)[0]!.name\n      : undefined\n  }\n\n  getByID(id: string) {\n    return this.rectangles.get(id)\n  }\n\n  addRectToBitmap(_rect: Rectangle<T>, _data: Record<string, T>): void {\n    throw new Error('Method not implemented.')\n  }\n\n  discardRange(_left: number, _right: number): void {\n    throw new Error('Method not implemented.')\n  }\n\n  serializeRegion(_region: { start: number; end: number }): SerializedLayout {\n    throw new Error('Method not implemented.')\n  }\n\n  toJSON(): SerializedLayout {\n    return {\n      rectangles: Object.fromEntries(this.rectangles),\n      totalHeight: this.totalHeight,\n      maxHeightReached: false,\n      containsNoTransferables: true,\n    }\n  }\n}\n","export const HEADER_BAR_HEIGHT = 48\nexport const HEADER_OVERVIEW_HEIGHT = 20\nexport const SCALE_BAR_HEIGHT = 17\nexport const RESIZE_HANDLE_HEIGHT = 3\nexport const INTER_REGION_PADDING_WIDTH = 2\nexport const SPACING = 7\nexport const WIDGET_HEIGHT = 32\n","import { sum } from '.'\n\ntype Func<T> = (value: BaseBlock, index: number, array: BaseBlock[]) => T\n\nexport class BlockSet {\n  constructor(public blocks: BaseBlock[] = []) {}\n\n  push(block: BaseBlock) {\n    if (block.type === 'ElidedBlock' && this.blocks.length > 0) {\n      const lastBlock = this.blocks.at(-1)\n      if (lastBlock?.type === 'ElidedBlock') {\n        ;(lastBlock as ElidedBlock).push(block as ElidedBlock)\n        return\n      }\n    }\n\n    this.blocks.push(block)\n  }\n\n  getBlocks() {\n    return this.blocks\n  }\n\n  getRegions() {\n    return this.blocks.map(block => block.toRegion())\n  }\n\n  map<T, U = this>(func: Func<T>, thisarg?: U) {\n    // eslint-disable-next-line unicorn/no-array-method-this-argument\n    return this.blocks.map(func, thisarg)\n  }\n\n  forEach<T, U = this>(func: Func<T>, thisarg?: U) {\n    // eslint-disable-next-line unicorn/no-array-method-this-argument\n    this.blocks.forEach(func, thisarg)\n  }\n\n  get length() {\n    return this.blocks.length\n  }\n\n  get totalWidthPx() {\n    return this.blocks.length > 0\n      ? sum(this.blocks.map(blocks => blocks.widthPx))\n      : 0\n  }\n\n  get totalWidthPxWithoutBorders() {\n    return this.blocks.length > 0\n      ? sum(\n          this.blocks\n            .filter(block => block.variant !== 'boundary')\n            .map(blocks => blocks.widthPx),\n        )\n      : 0\n  }\n\n  get offsetPx() {\n    return this.blocks.length > 0 ? this.blocks[0]!.offsetPx : 0\n  }\n\n  get contentBlocks() {\n    return this.blocks.filter(block => block.type === 'ContentBlock')\n  }\n\n  get totalBp() {\n    return sum(this.contentBlocks.map(block => block.end - block.start))\n  }\n}\n\nexport class BaseBlock {\n  type = 'BaseBlock'\n\n  public regionNumber?: number\n\n  public reversed?: boolean\n\n  public refName: string\n\n  public start: number\n\n  public end: number\n\n  public assemblyName: string\n\n  public key: string\n\n  public offsetPx: number\n\n  public widthPx = 0\n\n  public variant?: string\n\n  public isLeftEndOfDisplayedRegion?: boolean\n\n  /**\n   * a block that should be shown as filled with data\n   */\n\n  constructor(data: Record<string, any>) {\n    Object.assign(this, data)\n    this.assemblyName = data.assemblyName\n    this.refName = data.refName\n    this.start = data.start\n    this.end = data.end\n    this.key = data.key\n    this.offsetPx = data.offsetPx\n  }\n\n  toRegion() {\n    return {\n      refName: this.refName,\n      start: this.start,\n      end: this.end,\n      assemblyName: this.assemblyName,\n      reversed: this.reversed,\n    }\n  }\n}\n\nexport class ContentBlock extends BaseBlock {\n  type = 'ContentBlock'\n}\n\n/**\n * marker block representing one or more blocks that are\n * too small to be shown at the current zoom level\n */\nexport class ElidedBlock extends BaseBlock {\n  type = 'ElidedBlock'\n\n  public widthPx: number\n\n  public elidedBlockCount = 0\n\n  constructor(data: Record<string, any>) {\n    super(data)\n    this.widthPx = data.widthPx\n  }\n\n  push(otherBlock: ElidedBlock) {\n    this.elidedBlockCount += 1\n    this.refName = ''\n    this.start = 0\n    this.end = 0\n    this.widthPx += otherBlock.widthPx\n  }\n}\n\n/**\n * marker block that sits between two different displayed regions\n * and provides a thick border between them\n */\nexport class InterRegionPaddingBlock extends BaseBlock {\n  type = 'InterRegionPaddingBlock'\n}\n","// from https://www.w3.org/TR/css-color-4/#named-colors\n\nconst colors: Record<string, string> = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#00FFFF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#0000FF',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#00FFFF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgreen: '#006400',\n  darkgrey: '#A9A9A9',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#FF00FF',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  grey: '#808080',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightgrey: '#D3D3D3',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#00FF00',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#FF00FF',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#FF0000',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFFFFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FFFF00',\n  yellowgreen: '#9ACD32',\n}\n\nexport function namedColorToHex(name: string): string | undefined {\n  return colors[name]\n}\n\nexport function isNamedColor(name: string): boolean {\n  return !!colors[name]\n}\n","import {\n  darken,\n  emphasize as muiEmphasize,\n  getContrastRatio,\n  getLuminance as muiGetLuminance,\n  lighten,\n} from '@mui/material/styles'\n\nimport { namedColorToHex } from './cssColorsLevel4'\n\n/**\n * Algorithmically pick a contrasting text color that will\n * be visible on top of the given background color. Either\n * black or white.\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns 'black' or 'white'\n */\nexport function contrastingTextColor(color: string): string {\n  const luminance = getLuminance(color)\n  return luminance > 0.5 ? 'black' : 'white'\n}\n\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n * Uses MUI's `getLuminance`, but adds support for named colors\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n *  hsl(), hsla(), or named color\n * @returns The relative brightness of the color in the range 0 - 1\n */\nfunction getLuminance(color: string): number {\n  const convertedColor = namedColorToHex(color)\n  return muiGetLuminance(convertedColor || color)\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * Uses MUI's `emphasize`, but adds support for named colors\n *\n * @param color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(),\n * hsl(), hsla(), or named color\n * @param coefficient - multiplier in the range 0 - 1, defaults to 0.15\n * @returns A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color: string, coefficient = 0.15): string {\n  const convertedColor = namedColorToHex(color)\n  return muiEmphasize(convertedColor || color, coefficient)\n}\n\nexport function makeContrasting(\n  foreground: string,\n  background = 'white',\n  minContrastRatio = 3,\n) {\n  let convertedForeground = namedColorToHex(foreground) || foreground\n  const convertedBackground = namedColorToHex(background) || background\n  const backgroundLuminance = getLuminance(convertedBackground)\n  let contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  const originalColor = convertedForeground\n  let coefficient = 0.05\n  while (contrastRatio < minContrastRatio) {\n    convertedForeground =\n      backgroundLuminance > 0.5\n        ? darken(originalColor, coefficient)\n        : lighten(originalColor, coefficient)\n    coefficient += 0.05\n    contrastRatio = getContrastRatio(convertedForeground, convertedBackground)\n  }\n  return convertedForeground\n}\n\nexport { isNamedColor, namedColorToHex } from './cssColorsLevel4'\n","import { getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\n\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BlockSet } from '@jbrowse/core/util/blockTypes'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\nexport async function getUniqueTags({\n  self,\n  tag,\n  blocks,\n  opts,\n}: {\n  self: IAnyStateTreeNode & { adapterConfig: AnyConfigurationModel }\n  tag: string\n  blocks: BlockSet\n  opts?: {\n    headers?: Record<string, string>\n    stopToken?: string\n    filters: string[]\n  }\n}) {\n  const { rpcManager } = getSession(self)\n  const { adapterConfig } = self\n  const sessionId = getRpcSessionId(self)\n  const values = await rpcManager.call(\n    getRpcSessionId(self),\n    'PileupGetGlobalValueForTag',\n    {\n      adapterConfig,\n      tag,\n      sessionId,\n      regions: blocks.contentBlocks,\n      ...opts,\n    },\n  )\n  return values as string[]\n}\n","import idMaker from '../util/idMaker'\n\nexport function adapterConfigCacheKey(conf: Record<string, unknown> = {}) {\n  return `${idMaker(conf)}`\n}\n","import { readConfObject } from '../configuration'\nimport QuickLRU from '../util/QuickLRU'\n\nimport type BaseResult from './BaseResults'\nimport type PluginManager from '../PluginManager'\nimport type { AnyConfigurationModel } from '../configuration'\nimport type {\n  BaseTextSearchAdapter,\n  BaseTextSearchArgs,\n} from '../data_adapters/BaseAdapter'\n\nexport interface SearchScope {\n  includeAggregateIndexes: boolean\n  assemblyName: string\n  tracks?: string[]\n}\n\nexport default class TextSearchManager {\n  adapterCache = new QuickLRU<string, BaseTextSearchAdapter>({\n    maxSize: 15,\n  })\n\n  constructor(public pluginManager: PluginManager) {}\n\n  loadTextSearchAdapters(searchScope: SearchScope) {\n    return Promise.all(\n      this.relevantAdapters(searchScope).map(async conf => {\n        const adapterId = readConfObject(conf, 'textSearchAdapterId')\n        const r = this.adapterCache.get(adapterId)\n        if (r) {\n          return r\n        } else {\n          const adapterType = this.pluginManager.getTextSearchAdapterType(\n            conf.type,\n          )!\n          const AdapterClass = await adapterType.getAdapterClass()\n          const adapterInstance = new AdapterClass(\n            conf,\n            undefined,\n            this.pluginManager,\n          ) as BaseTextSearchAdapter\n          this.adapterCache.set(adapterId, adapterInstance)\n          return adapterInstance\n        }\n      }),\n    )\n  }\n\n  relevantAdapters(searchScope: SearchScope) {\n    const rootModel = this.pluginManager.rootModel\n    const { aggregateTextSearchAdapters } = rootModel?.jbrowse as {\n      aggregateTextSearchAdapters: AnyConfigurationModel[]\n    }\n    const { tracks } = rootModel?.session as {\n      tracks: AnyConfigurationModel[]\n    }\n\n    const { assemblyName } = searchScope\n\n    return [\n      ...this.getAdaptersWithAssembly(\n        assemblyName,\n        aggregateTextSearchAdapters,\n      ),\n      ...this.getTrackAdaptersWithAssembly(assemblyName, tracks),\n    ]\n  }\n\n  getAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ): AnyConfigurationModel[] {\n    return confs.filter(c =>\n      readConfObject(c, 'assemblyNames')?.includes(assemblyName),\n    )\n  }\n\n  getTrackAdaptersWithAssembly(\n    assemblyName: string,\n    confs: AnyConfigurationModel[],\n  ) {\n    return confs\n      .filter(conf =>\n        readConfObject(conf, [\n          'textSearching',\n          'textSearchAdapter',\n          'assemblyNames',\n        ])?.includes(assemblyName),\n      )\n      .map(\n        conf => conf.textSearching.textSearchAdapter as AnyConfigurationModel,\n      )\n  }\n\n  /**\n   * Returns list of relevant results given a search query and options\n   *\n   * @param args - search options/arguments include: search query limit of\n   * results to return, searchType...prefix | full | exact\", etc.\n   */\n  async search(\n    args: BaseTextSearchArgs,\n    searchScope: SearchScope,\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    const adapters = await this.loadTextSearchAdapters(searchScope)\n    const results = await Promise.all(adapters.map(a => a.searchIndex(args)))\n    return this.sortResults(results.flat(), rankFn)\n  }\n\n  /**\n   * Returns array of revelevant and sorted results\n   * @param results - array of results from all text search adapters\n   * @param rankFn - function that updates results scores\n   * based on more relevance\n   */\n  sortResults(\n    results: BaseResult[],\n    rankFn: (results: BaseResult[]) => BaseResult[],\n  ) {\n    return rankFn(\n      results.sort((a, b) => -b.getLabel().localeCompare(a.getLabel())),\n    ).sort((r1, r2) => r1.getScore() - r2.getScore())\n  }\n}\n","import { getFillProps } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\n// core\nimport { getCytobands } from './util'\nimport { HEADER_OVERVIEW_HEIGHT } from '../consts'\n\nimport type { Assembly } from '@jbrowse/core/assemblyManager/assembly'\nimport type { Base1DViewModel } from '@jbrowse/core/util/Base1DViewModel'\nimport type { ContentBlock } from '@jbrowse/core/util/blockTypes'\n\n// rounded rect from https://stackoverflow.com/a/45889603/2129219\nfunction rightRoundedRect(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) {\n  return `M${x},${y}h${width - radius}a${radius},${radius} 0 0 1 ${radius},${radius}v${height - 2 * radius}a${radius},${radius} 0 0 1 ${-radius},${radius}h${radius - width}z`\n}\n\nfunction leftRoundedRect(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) {\n  return `M${x + radius},${y}h${width - radius}v${height}h${radius - width}a${radius},${radius} 0 0 1 ${-radius},${-radius}v${2 * radius - height}a${radius},${radius} 0 0 1 ${radius},${-radius}z`\n}\n\nfunction leftTriangle(x: number, y: number, width: number, height: number) {\n  return [\n    [x, 0],\n    [x + width, height / 2],\n    [x, height],\n  ].toString()\n}\n\nfunction rightTriangle(x: number, y: number, width: number, height: number) {\n  return [\n    [x, height / 2],\n    [x + width, 0],\n    [x + width, height],\n  ].toString()\n}\n\nconst colorMap: Record<string, string> = {\n  gneg: 'rgb(227,227,227)',\n  gpos25: 'rgb(142,142,142)',\n  gpos50: 'rgb(85,85,85)',\n  gpos100: 'rgb(0,0,0)',\n  gpos75: 'rgb(57,57,57)',\n  gvar: 'rgb(0,0,0)',\n  stalk: 'rgb(127,127,127)',\n  acen: '#800',\n}\n\nconst Cytobands = observer(function ({\n  overview,\n  block,\n  assembly,\n}: {\n  overview: Base1DViewModel\n  assembly?: Assembly\n  block: ContentBlock\n}) {\n  const { offsetPx, reversed } = block\n  const cytobands = getCytobands(assembly, block.refName)\n  const lcap = reversed ? cytobands.length - 1 : 0\n  const rcap = reversed ? 0 : cytobands.length - 1\n\n  const h = HEADER_OVERVIEW_HEIGHT\n  let centromereSeen = false\n  return (\n    <g transform={`translate(-${offsetPx})`}>\n      {cytobands.map((args, index) => {\n        const k = JSON.stringify(args)\n        const { refName, type, start, end } = args\n        const s = overview.bpToPx({ refName, coord: start }) || 0\n        const e = overview.bpToPx({ refName, coord: end }) || 0\n        const l = Math.min(s, e)\n        const w = Math.abs(e - s)\n        const c = colorMap[type] || 'black'\n        if (type === 'acen' && !centromereSeen) {\n          centromereSeen = true // the next acen entry is drawn with different right triangle\n          return (\n            <polygon\n              key={k}\n              points={\n                reversed\n                  ? rightTriangle(s - w, 0, w, h)\n                  : leftTriangle(s, 0, w, h)\n              }\n              {...getFillProps(c)}\n            />\n          )\n        }\n        if (type === 'acen' && centromereSeen) {\n          return (\n            <polygon\n              key={k}\n              points={\n                reversed\n                  ? leftTriangle(s - w, 0, w, h)\n                  : rightTriangle(s, 0, w, h)\n              }\n              {...getFillProps(c)}\n            />\n          )\n        }\n        if (lcap === index) {\n          return (\n            <path\n              key={k}\n              d={leftRoundedRect(l, 0, w, h, 8)}\n              {...getFillProps(c)}\n            />\n          )\n        }\n        if (rcap === index) {\n          return (\n            <path\n              key={k}\n              d={rightRoundedRect(l, 0, w, h, 8)}\n              {...getFillProps(c)}\n            />\n          )\n        }\n        return (\n          <rect key={k} x={l} y={0} width={w} height={h} {...getFillProps(c)} />\n        )\n      })}\n    </g>\n  )\n})\n\nexport default Cytobands\n","import type {\n  BaseLayout,\n  RectTuple,\n  Rectangle,\n  SerializedLayout,\n} from './BaseLayout'\n\n/**\n * Rectangle-layout manager that lays out rectangles using bitmaps at\n * resolution that, for efficiency, may be somewhat lower than that of\n * the coordinate system for the rectangles being laid out.  `pitchX`\n * and `pitchY` are the ratios of input scale resolution to internal\n * bitmap resolution.\n */\n\n// minimum excess size of the array at which we garbage collect\nconst minSizeToBotherWith = 10000\nconst maxFeaturePitchWidth = 20000\n\nfunction segmentsIntersect(\n  x1: number,\n  x2: number,\n  y1: number,\n  y2: number,\n): boolean {\n  return x2 >= y1 && y2 >= x1\n}\n\ntype Bit<T> = Record<string, T> | string | undefined\n\ninterface RowState<T> {\n  min: number\n  max: number\n  offset: number\n  bits: Bit<T>[]\n}\n// a single row in the layout\nclass LayoutRow<T> {\n  private padding = 1\n\n  private allFilled?: Record<string, T> | string\n\n  private widthLimit = 1_000_000\n\n  private rowState?: RowState<T>\n\n  // this.rowState.bits is the array of items in the layout row, indexed by (x - this.offset)\n  // this.rowState.min is the leftmost edge of all the rectangles we have in the layout\n  // this.rowState.max is the rightmost edge of all the rectangles we have in the layout\n  // this.rowState.offset is the offset of the bits array relative to the genomic coordinates\n  //      (modified by pitchX, but we don't know that in this class)\n\n  setAllFilled(data: Record<string, T> | string): void {\n    this.allFilled = data\n  }\n\n  getItemAt(x: number): Record<string, T> | string | undefined {\n    if (this.allFilled) {\n      return this.allFilled\n    }\n    if (\n      this.rowState?.min === undefined ||\n      x < this.rowState.min ||\n      x >= this.rowState.max\n    ) {\n      return undefined\n    }\n    return this.rowState.bits[x - this.rowState.offset]\n  }\n\n  isRangeClear(left: number, right: number) {\n    if (this.allFilled) {\n      return false\n    }\n\n    if (\n      this.rowState === undefined ||\n      right <= this.rowState.min ||\n      left >= this.rowState.max\n    ) {\n      return true\n    }\n    const { min, max, offset, bits } = this.rowState\n\n    const maxX = Math.min(max, right) - offset\n    let flag = true\n    for (let x = Math.max(min, left) - offset; x < maxX && flag; x++) {\n      flag = bits[x] === undefined\n    }\n\n    return flag\n  }\n\n  // NOTE: this.rowState.min, this.rowState.max, and this.rowState.offset are\n  // interbase coordinates\n  initialize(left: number, right: number): RowState<T> {\n    const rectWidth = right - left\n    return {\n      offset: left - rectWidth,\n      min: left,\n      max: right,\n      bits: Array.from({ length: 3 * rectWidth }),\n    }\n  }\n\n  addRect(rect: Rectangle<T>, data: Record<string, T> | string): void {\n    const left = rect.l\n    const right = rect.r + this.padding // only padding on the right\n    if (!this.rowState) {\n      this.rowState = this.initialize(left, right)\n    }\n\n    // or check if we need to expand to the left and/or to the right\n    let oLeft = left - this.rowState.offset\n    let oRight = right - this.rowState.offset\n    const currLength = this.rowState.bits.length\n\n    // expand rightward if necessary\n    if (oRight >= this.rowState.bits.length) {\n      const additionalLength = oRight + 1\n      if (this.rowState.bits.length + additionalLength > this.widthLimit) {\n        console.warn(\n          'Layout width limit exceeded, discarding old layout. Please be more careful about discarding unused blocks.',\n        )\n        this.rowState = this.initialize(left, right)\n      } else if (additionalLength > 0) {\n        this.rowState.bits = [\n          ...this.rowState.bits,\n          ...Array.from<Bit<T>>({ length: additionalLength }),\n        ]\n      }\n    }\n\n    // expand leftward if necessary\n    if (left < this.rowState.offset) {\n      // use math.min to avoid negative lengths\n      const additionalLength = Math.min(\n        currLength - oLeft,\n        this.rowState.offset,\n      )\n      if (this.rowState.bits.length + additionalLength > this.widthLimit) {\n        console.warn(\n          'Layout width limit exceeded, discarding old layout. Please be more careful about discarding unused blocks.',\n        )\n\n        this.rowState = this.initialize(left, right)\n      } else {\n        this.rowState.bits = [\n          ...Array.from<Bit<T>>({ length: additionalLength }),\n          ...this.rowState.bits,\n        ]\n        this.rowState.offset -= additionalLength\n      }\n    }\n    oRight = right - this.rowState.offset\n    oLeft = left - this.rowState.offset\n    const w = oRight - oLeft\n\n    if (w > maxFeaturePitchWidth) {\n      console.warn(\n        `Layout X pitch set too low, feature spans ${w} bits in a single row.`,\n        rect,\n        data,\n      )\n    }\n\n    for (let x = oLeft; x < oRight; x += 1) {\n      this.rowState.bits[x] = data\n    }\n\n    if (left < this.rowState.min) {\n      this.rowState.min = left\n    }\n    if (right > this.rowState.max) {\n      this.rowState.max = right\n    }\n  }\n\n  /**\n   *  Given a range of interbase coordinates, deletes all data dealing with that range\n   */\n  discardRange(left: number, right: number): void {\n    if (this.allFilled) {\n      return\n    } // allFilled is irrevocable currently\n\n    // if we have no data, do nothing\n    if (!this.rowState) {\n      return\n    }\n\n    // if doesn't overlap at all, do nothing\n    if (right <= this.rowState.min || left >= this.rowState.max) {\n      return\n    }\n\n    // if completely encloses range, discard everything\n    if (left <= this.rowState.min && right >= this.rowState.max) {\n      this.rowState = undefined\n      return\n    }\n\n    // if overlaps left edge, adjust the min\n    if (right > this.rowState.min && left <= this.rowState.min) {\n      this.rowState.min = right\n    }\n\n    // if overlaps right edge, adjust the max\n    if (left < this.rowState.max && right >= this.rowState.max) {\n      this.rowState.max = left\n    }\n\n    // now trim the left, right, or both sides of the array\n    if (\n      this.rowState.offset < this.rowState.min - minSizeToBotherWith &&\n      this.rowState.bits.length >\n        this.rowState.max + minSizeToBotherWith - this.rowState.offset\n    ) {\n      // trim both sides\n      const leftTrimAmount = this.rowState.min - this.rowState.offset\n      const rightTrimAmount =\n        this.rowState.bits.length -\n        1 -\n        (this.rowState.max - this.rowState.offset)\n      // if (rightTrimAmount <= 0) debugger\n      // if (leftTrimAmount <= 0) debugger\n      // this.log(`trim both sides, ${leftTrimAmount} from left, ${rightTrimAmount} from right`)\n      this.rowState.bits = this.rowState.bits.slice(\n        leftTrimAmount,\n        this.rowState.bits.length - rightTrimAmount,\n      )\n      this.rowState.offset += leftTrimAmount\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    } else if (this.rowState.offset < this.rowState.min - minSizeToBotherWith) {\n      // trim left side\n      const desiredOffset =\n        this.rowState.min - Math.floor(minSizeToBotherWith / 2)\n      const trimAmount = desiredOffset - this.rowState.offset\n      // this.log(`trim left side by ${trimAmount}`)\n      this.rowState.bits.splice(0, trimAmount)\n      this.rowState.offset += trimAmount\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    } else if (\n      this.rowState.bits.length >\n      this.rowState.max - this.rowState.offset + minSizeToBotherWith\n    ) {\n      // trim right side\n      const desiredLength =\n        this.rowState.max -\n        this.rowState.offset +\n        1 +\n        Math.floor(minSizeToBotherWith / 2)\n      // this.log(`trim right side by ${this.rowState.bits.length-desiredLength}`)\n      // if (desiredLength > this.rowState.bits.length) debugger\n      this.rowState.bits.length = desiredLength\n      // if (this.rowState.offset > this.rowState.min) debugger\n      // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n    }\n\n    // if (this.rowState.offset > this.rowState.min) debugger\n    // if (this.rowState.bits.length <= this.rowState.max - this.rowState.offset) debugger\n\n    // if range now enclosed in the new bounds, loop through and clear the bits\n    const oLeft = Math.max(this.rowState.min, left) - this.rowState.offset\n    // if (oLeft < 0) debugger\n    // if (oLeft >= this.rowState.bits.length) debugger\n    // if (oRight < 0) debugger\n    // if (oRight >= this.rowState.bits.length) debugger\n\n    const oRight = Math.min(right, this.rowState.max) - this.rowState.offset\n    for (let x = oLeft; x >= 0 && x < oRight; x += 1) {\n      this.rowState.bits[x] = undefined\n    }\n  }\n}\n\nexport default class GranularRectLayout<T> implements BaseLayout<T> {\n  private pitchX: number\n\n  private pitchY: number\n\n  private hardRowLimit: number\n\n  private bitmap: LayoutRow<T>[]\n\n  private rectangles: Map<string, Rectangle<T>>\n\n  public maxHeightReached: boolean\n\n  private maxHeight: number\n\n  private displayMode: string\n\n  private pTotalHeight: number\n\n  /**\n   * pitchX - layout grid pitch in the X direction\n   * pitchY - layout grid pitch in the Y direction\n   * maxHeight - maximum layout height, default Infinity (no max)\n   */\n  constructor({\n    pitchX = 10,\n    pitchY = 10,\n    maxHeight = 10000,\n    hardRowLimit = 10000,\n    displayMode = 'normal',\n  }: {\n    pitchX?: number\n    pitchY?: number\n    maxHeight?: number\n    displayMode?: string\n    hardRowLimit?: number\n  } = {}) {\n    this.pitchX = pitchX\n    this.pitchY = pitchY\n    this.hardRowLimit = hardRowLimit\n    this.maxHeightReached = false\n    this.displayMode = displayMode\n\n    // reduce the pitchY to try and pack the features tighter\n    if (this.displayMode === 'compact') {\n      this.pitchY = Math.round(this.pitchY / 4) || 1\n      this.pitchX = Math.round(this.pitchX / 4) || 1\n    }\n\n    this.bitmap = []\n    this.rectangles = new Map()\n    this.maxHeight = Math.ceil(maxHeight / this.pitchY)\n    this.pTotalHeight = 0 // total height, in units of bitmap squares (px/pitchY)\n  }\n\n  /**\n   * @returns top position for the rect, or Null if laying\n   *  out the rect would exceed maxHeight\n   */\n  addRect(\n    id: string,\n    left: number,\n    right: number,\n    height: number,\n    data?: T,\n  ): number | null {\n    // if we have already laid it out, return its layout\n    const storedRec = this.rectangles.get(id)\n    if (storedRec) {\n      if (storedRec.top === null) {\n        return null\n      }\n\n      // add it to the bitmap again, since that bitmap range may have been\n      // discarded\n      this.addRectToBitmap(storedRec)\n      return storedRec.top * this.pitchY\n    }\n\n    const pLeft = Math.floor(left / this.pitchX)\n    const pRight = Math.floor(right / this.pitchX)\n    const pHeight = Math.ceil(height / this.pitchY)\n\n    const rectangle: Rectangle<T> = {\n      id,\n      l: pLeft,\n      r: pRight,\n      top: null,\n      h: pHeight,\n      originalHeight: height,\n      data,\n    }\n\n    const maxTop = this.maxHeight - pHeight\n    let top = 0\n    if (this.displayMode !== 'collapse') {\n      for (; top <= maxTop; top += 1) {\n        if (!this.collides(rectangle, top)) {\n          break\n        }\n      }\n\n      if (top > maxTop) {\n        rectangle.top = null\n        this.rectangles.set(id, rectangle)\n        this.maxHeightReached = true\n        return null\n      }\n    }\n    rectangle.top = top\n    this.addRectToBitmap(rectangle)\n    this.rectangles.set(id, rectangle)\n    this.pTotalHeight = Math.max(this.pTotalHeight || 0, top + pHeight)\n    return top * this.pitchY\n  }\n\n  collides(rect: Rectangle<T>, top: number) {\n    const { bitmap } = this\n\n    const maxY = top + rect.h\n    for (let y = top; y < maxY; y += 1) {\n      const row = bitmap[y]\n      if (row !== undefined && !row.isRangeClear(rect.l, rect.r)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * make a subarray if it does not exist\n   */\n  private autovivifyRow(bitmap: LayoutRow<T>[], y: number) {\n    let row = bitmap[y]\n    if (!row) {\n      if (y > this.hardRowLimit) {\n        throw new Error(\n          `layout hard limit (${\n            this.hardRowLimit * this.pitchY\n          }px) exceeded, aborting layout`,\n        )\n      }\n      row = new LayoutRow()\n      bitmap[y] = row\n    }\n    return row\n  }\n\n  addRectToBitmap(rect: Rectangle<T>) {\n    if (rect.top === null) {\n      return\n    }\n\n    const data = rect.id\n    const yEnd = rect.top + rect.h\n    if (rect.r - rect.l > maxFeaturePitchWidth) {\n      // the rect is very big in relation to the view size, just pretend, for\n      // the purposes of layout, that it extends infinitely.  this will cause\n      // weird layout if a user scrolls manually for a very, very long time\n      // along the genome at the same zoom level.  but most users will not do\n      // that.  hopefully.\n      for (let y = rect.top; y < yEnd; y += 1) {\n        this.autovivifyRow(this.bitmap, y).setAllFilled(data)\n      }\n    } else {\n      for (let y = rect.top; y < yEnd; y += 1) {\n        this.autovivifyRow(this.bitmap, y).addRect(rect, data)\n      }\n    }\n  }\n\n  /**\n   *  Given a range of X coordinates, deletes all data dealing with\n   *  the features.\n   */\n  discardRange(left: number, right: number) {\n    const pLeft = Math.floor(left / this.pitchX)\n    const pRight = Math.floor(right / this.pitchX)\n    const { bitmap } = this\n    for (const row of bitmap) {\n      row.discardRange(pLeft, pRight)\n    }\n  }\n\n  hasSeen(id: string) {\n    return this.rectangles.has(id)\n  }\n\n  getByCoord(x: number, y: number) {\n    const pY = Math.floor(y / this.pitchY)\n    const row = this.bitmap[pY]\n    if (!row) {\n      return undefined\n    }\n    const pX = Math.floor(x / this.pitchX)\n    return row.getItemAt(pX)\n  }\n\n  getByID(id: string) {\n    const r = this.rectangles.get(id)\n    if (r) {\n      const t = r.top! * this.pitchY\n      return [\n        r.l * this.pitchX,\n        t,\n        r.r * this.pitchX,\n        t + r.originalHeight,\n      ] as RectTuple\n    }\n\n    return undefined\n  }\n\n  getDataByID(id: string) {\n    return this.rectangles.get(id)?.data\n  }\n\n  cleanup() {}\n\n  getTotalHeight() {\n    return this.pTotalHeight * this.pitchY\n  }\n\n  get totalHeight() {\n    return this.getTotalHeight()\n  }\n\n  getRectangles(): Map<string, RectTuple> {\n    return new Map(\n      [...this.rectangles.entries()].map(([id, rect]) => {\n        const { l, r, originalHeight, top } = rect\n        const t = (top || 0) * this.pitchY\n        const b = t + originalHeight\n        return [id, [l * this.pitchX, t, r * this.pitchX, b]] // left, top, right, bottom\n      }),\n    )\n  }\n\n  serializeRegion(region: { start: number; end: number }): SerializedLayout {\n    const regionRectangles: Record<string, RectTuple> = {}\n    let maxHeightReached = false\n    for (const [id, rect] of this.rectangles.entries()) {\n      const { l, r, originalHeight, top } = rect\n      if (rect.top === null) {\n        maxHeightReached = true\n      } else {\n        const t = (top || 0) * this.pitchY\n        const b = t + originalHeight\n        const y1 = l * this.pitchX\n        const y2 = r * this.pitchX\n        const x1 = region.start\n        const x2 = region.end\n        // add +/- pitchX to avoid resolution causing errors\n        if (segmentsIntersect(x1, x2, y1 - this.pitchX, y2 + this.pitchX)) {\n          regionRectangles[id] = [y1, t, y2, b]\n        }\n      }\n    }\n    return {\n      rectangles: regionRectangles,\n      containsNoTransferables: true,\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached,\n    }\n  }\n\n  toJSON(): SerializedLayout {\n    const rectangles = Object.fromEntries(this.getRectangles())\n    return {\n      rectangles,\n      containsNoTransferables: true,\n      totalHeight: this.getTotalHeight(),\n      maxHeightReached: this.maxHeightReached,\n    }\n  }\n}\n","import { sum } from '@jbrowse/core/util'\n\nimport type { Feature } from '@jbrowse/core/util'\n\nexport function findSecondLargestNumber(arr: Iterable<number>) {\n  let firstMax = 0\n  let secondMax = 0\n\n  for (const num of arr) {\n    if (num > firstMax) {\n      secondMax = firstMax\n      firstMax = num\n    } else if (num > secondMax && num !== firstMax) {\n      secondMax = num\n    }\n  }\n\n  return secondMax\n}\n\nexport function calculateAlleleCounts(feat: Feature) {\n  const samp = feat.get('genotypes') as Record<string, string>\n  const alleleCounts = new Map()\n  for (const val of Object.values(samp)) {\n    const alleles = val.split(/[/|]/)\n    for (const allele of alleles) {\n      alleleCounts.set(allele, (alleleCounts.get(allele) || 0) + 1)\n    }\n  }\n\n  return alleleCounts\n}\n\nexport function calculateMinorAlleleFrequency(\n  alleleCounts: Map<string, number>,\n) {\n  return (\n    findSecondLargestNumber(alleleCounts.values()) /\n    (sum(alleleCounts.values()) || 1)\n  )\n}\n\nfunction getMostFrequentAlt(alleleCounts: Map<string, number>) {\n  let mostFrequentAlt\n  let max = 0\n  for (const [alt, altCount] of alleleCounts.entries()) {\n    if (alt !== '.' && alt !== '0') {\n      if (altCount > max) {\n        mostFrequentAlt = alt\n        max = altCount\n      }\n    }\n  }\n  return mostFrequentAlt\n}\n\nexport function getFeaturesThatPassMinorAlleleFrequencyFilter(\n  feats: Iterable<Feature>,\n  minorAlleleFrequencyFilter: number,\n  lengthCutoffFilter = 10,\n) {\n  const results = [] as {\n    feature: Feature\n    mostFrequentAlt: string\n    alleleCounts: Map<string, number>\n  }[]\n  for (const feature of feats) {\n    if (feature.get('end') - feature.get('start') <= lengthCutoffFilter) {\n      const alleleCounts = calculateAlleleCounts(feature)\n      if (\n        calculateMinorAlleleFrequency(alleleCounts) >=\n        minorAlleleFrequencyFilter\n      ) {\n        const mostFrequentAlt = getMostFrequentAlt(alleleCounts)!\n        results.push({\n          feature,\n          mostFrequentAlt,\n          alleleCounts,\n        })\n      }\n    }\n  }\n  return results\n}\n","import { autorun } from 'mobx'\nimport { addDisposer, isAlive } from 'mobx-state-tree'\nimport { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport type { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter'\nimport type { AugmentedRegion, Feature } from '@jbrowse/core/util'\nimport type { IAutorunOptions } from 'mobx'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// use fallback alt tag, used in situations where upper case/lower case tags\n// exist e.g. Mm/MM for base modifications\nexport function getTagAlt(feature: Feature, tag: string, alt: string) {\n  const tags = feature.get('tags')\n  return tags[tag] ?? tags[alt]\n}\n\n// orientation definitions from igv.js, see also\n// https://software.broadinstitute.org/software/igv/interpreting_pair_orientations\nexport const orientationTypes = {\n  fr: {\n    F1R2: 'LR',\n    F2R1: 'LR',\n\n    F1F2: 'LL',\n    F2F1: 'LL',\n\n    R1R2: 'RR',\n    R2R1: 'RR',\n\n    R1F2: 'RL',\n    R2F1: 'RL',\n  } as Record<string, string>,\n\n  rf: {\n    R1F2: 'LR',\n    R2F1: 'LR',\n\n    R1R2: 'LL',\n    R2R1: 'LL',\n\n    F1F2: 'RR',\n    F2F1: 'RR',\n\n    F1R2: 'RL',\n    F2R1: 'RL',\n  } as Record<string, string>,\n\n  ff: {\n    F2F1: 'LR',\n    R1R2: 'LR',\n\n    F2R1: 'LL',\n    R1F2: 'LL',\n\n    R2F1: 'RR',\n    F1R2: 'RR',\n\n    R2R1: 'RL',\n    F1F2: 'RL',\n  } as Record<string, string>,\n}\n\nexport const pairMap = {\n  LR: 'color_pair_lr',\n  LL: 'color_pair_ll',\n  RR: 'color_pair_rr',\n  RL: 'color_pair_rl',\n} as const\n\nexport function getColorWGBS(strand: number, base: string) {\n  if (strand === 1) {\n    if (base === 'C') {\n      return '#f00'\n    }\n    if (base === 'T') {\n      return '#00f'\n    }\n  } else if (strand === -1) {\n    if (base === 'G') {\n      return '#f00'\n    }\n    if (base === 'A') {\n      return '#00f'\n    }\n  }\n  return '#888'\n}\n\nexport async function fetchSequence(\n  region: AugmentedRegion,\n  adapter: BaseFeatureDataAdapter,\n) {\n  const { start, end, originalRefName, refName } = region\n\n  const feats = await firstValueFrom(\n    adapter\n      .getFeatures({\n        ...region,\n        refName: originalRefName || refName,\n        end,\n        start,\n      })\n      .pipe(toArray()),\n  )\n  return feats[0]?.get('seq')\n}\n\ninterface ModificationData {\n  color: string\n  name: string\n}\n\n// adapted from IGV\n// https://github.com/igvteam/igv/blob/af07c3b1be8806cfd77343ee04982aeff17d2beb/src/main/resources/org/broad/igv/prefs/preferences.tab#L230-L242\nexport const modificationData = {\n  m: { color: 'rgb(255,0,0)', name: '5mC' },\n  h: { color: 'rgb(255,0,255)', name: '5hmC' },\n  o: { color: 'rgb(111, 78, 129)', name: '8oxoG' },\n  f: { color: 'rgb(246, 200, 95)', name: '5fC' },\n  c: { color: 'rgb(157, 216, 102)', name: '5cac' },\n  g: { color: 'rgb(255, 160, 86)', name: '5hmu' },\n  e: { color: 'rgb(141, 221, 208)', name: '5fU' },\n  b: { color: 'rgb(0,100,47)', name: '5caU' },\n  a: { color: 'rgb(51,0,111)', name: '6mA' },\n  17082: { color: 'rgb(51,153,255)', name: 'pseU' },\n  17596: { color: 'rgb(102,153,0)', name: 'inosine' },\n  21839: { color: 'rgb(153,0,153)', name: '4mC' },\n} as Record<string, ModificationData>\n\ntype DisplayModel = IAnyStateTreeNode & { setError: (arg: unknown) => void }\n\nexport function createAutorun(\n  self: DisplayModel,\n  cb: () => Promise<void>,\n  opts?: IAutorunOptions,\n) {\n  addDisposer(\n    self,\n    autorun(async () => {\n      try {\n        await cb()\n      } catch (e) {\n        if (isAlive(self)) {\n          self.setError(e)\n        }\n      }\n    }, opts),\n  )\n}\n\nexport function randomColor(str: string) {\n  let sum = 0\n\n  for (let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i)\n  }\n  return `hsl(${sum * 10}, 20%, 50%)`\n}\n\nexport function getColorForModification(str: string) {\n  return modificationData[str]?.color || randomColor(str)\n}\n","import { extend } from 'colord'\nimport mix from 'colord/plugins/mix'\nimport names from 'colord/plugins/names'\nextend([mix, names])\n\nexport { Colord, colord } from 'colord'\n","import MultiLayout from './MultiLayout'\nimport PrecomputedLayout from './PrecomputedLayout'\n\nclass ThrowingLayout {\n  constructor() {\n    throw new Error('invalid layout name')\n  }\n}\n\nexport default class PrecomputedMultiLayout extends MultiLayout {\n  constructor(json) {\n    // use ThrowingLayout because there is not supposed to be any creation\n    // of new layouts in a precomputed layout\n    super(ThrowingLayout)\n    Object.entries(json).forEach(([layoutName, sublayoutJson]) => {\n      this.subLayouts.set(layoutName, new PrecomputedLayout(sublayoutJson))\n    })\n  }\n}\n","interface AbsoluteCache {\n  dirty: boolean\n  left?: number\n  right?: number\n  top?: number\n  bottom?: number\n  width?: number\n  height?: number\n}\n\nexport default class SceneGraph {\n  private children: Map<string, SceneGraph>\n\n  private absoluteCache: AbsoluteCache\n\n  public parent?: SceneGraph\n\n  /**\n   * note: all coordinates are inter-base or inter-pixel coordinates\n   */\n  constructor(\n    public name: string,\n    public left: number,\n    public top: number,\n    public width: number,\n    public height: number,\n\n    public data?: Record<string, any>,\n  ) {\n    this.children = new Map()\n    this.absoluteCache = { dirty: true }\n  }\n\n  addChild(\n    nameOrSceneGraph: string | SceneGraph,\n    left: number,\n    top: number,\n    width: number,\n    height: number,\n\n    data?: Record<string, any>,\n  ) {\n    const child =\n      nameOrSceneGraph instanceof SceneGraph\n        ? nameOrSceneGraph\n        : new SceneGraph(nameOrSceneGraph, left, top, width, height, data)\n\n    if (!(child instanceof SceneGraph)) {\n      throw new TypeError(\n        'argument to addChild must be an array or a SceneGraph',\n      )\n    }\n\n    if (this.children.has(child.name)) {\n      throw new Error(`child named \"${child.name}\" already exists`)\n    }\n\n    // update the bounds to match the child\n    child.parent = this\n    const {\n      left: childLeft,\n      right: childRight,\n      top: childTop,\n      bottom: childBottom,\n    } = child.absolute\n    if (\n      childLeft !== undefined &&\n      childRight !== undefined &&\n      childTop !== undefined &&\n      childBottom !== undefined\n    ) {\n      this.expand(childLeft, childRight, childTop, childBottom)\n      this.children.set(child.name, child)\n    }\n    return child\n  }\n\n  getSubRecord(name: string) {\n    return this.children.get(name)\n  }\n\n  /**\n   * if the record does not already cover the given absolute extents, extend it\n   * to cover them\n   *\n   * @param left -\n   * @param right -\n   * @param top -\n   * @param bottom -\n   */\n  expand(newLeft: number, newRight: number, newTop: number, newBottom: number) {\n    const { left, right, top, bottom } = this.absolute\n\n    if (left !== undefined && newLeft < left) {\n      const diff = left - newLeft\n      this.width += diff\n      this.left -= diff\n    }\n    if (right !== undefined && newRight > right) {\n      this.width += newRight - right\n    }\n    if (top !== undefined && newTop < top) {\n      const diff = top - newTop\n      this.height += diff\n      this.top -= diff\n    }\n    if (bottom !== undefined && newBottom > bottom) {\n      this.height += newBottom - bottom\n    }\n    if (this.parent) {\n      this.parent.expand(newLeft, newRight, newTop, newBottom)\n    }\n    this.absoluteCache.dirty = true\n  }\n\n  get bottom() {\n    return this.top + this.height\n  }\n\n  get right() {\n    return this.left + this.width\n  }\n\n  walkParents(callback: (arg: SceneGraph) => void) {\n    if (this.parent) {\n      callback(this.parent)\n      this.parent.walkParents(callback)\n    }\n  }\n\n  walkChildren(callback: (c: SceneGraph) => void) {\n    for (const sub of this.children.values()) {\n      callback(sub)\n      sub.walkChildren(callback)\n    }\n  }\n\n  get absolute() {\n    if (this.absoluteCache.dirty) {\n      let xOffset = 0\n      let yOffset = 0\n      this.walkParents((node: SceneGraph) => {\n        xOffset += node.left\n        yOffset += node.top\n      })\n      this.absoluteCache = {\n        dirty: false,\n        left: this.left + xOffset,\n        right: this.right + xOffset,\n        top: this.top + yOffset,\n        bottom: this.bottom + yOffset,\n        width: this.width,\n        height: this.height,\n      }\n    }\n    return this.absoluteCache\n  }\n\n  move(x: number, y: number) {\n    this.left += x\n    this.top += y\n\n    this.absoluteCache.dirty = true\n    this.walkChildren(c => {\n      c.absoluteCache.dirty = true\n    })\n    const { left, right, top, bottom } = this.absolute\n    if (\n      left !== undefined &&\n      right !== undefined &&\n      top !== undefined &&\n      bottom !== undefined\n    ) {\n      this.expand(left, right, top, bottom)\n    }\n  }\n}\n","import { Suspense } from 'react'\n\nimport BaseTooltip from '@jbrowse/core/ui/BaseTooltip'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { YSCALEBAR_LABEL_OFFSET } from './util'\n\nimport type { Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()({\n  hoverVertical: {\n    background: '#333',\n    border: 'none',\n    width: 1,\n    height: '100%',\n    top: YSCALEBAR_LABEL_OFFSET,\n    cursor: 'default',\n    position: 'absolute',\n    pointerEvents: 'none',\n  },\n})\n\ntype Coord = [number, number]\n\n// forwardRef component for the tooltip, the ref is used for measuring\n// the size of the tooltip\nexport type TooltipContentsComponent = React.ForwardRefExoticComponent<\n  { feature: Feature; model: any } & React.RefAttributes<HTMLDivElement>\n>\n\nconst Tooltip = observer(function Tooltip({\n  model,\n  height,\n  clientMouseCoord,\n  offsetMouseCoord,\n  clientRect,\n  TooltipContents,\n  useClientY,\n}: {\n  model: { featureUnderMouse?: Feature }\n  useClientY?: boolean\n  height: number\n  clientMouseCoord: Coord\n  offsetMouseCoord: Coord\n  clientRect?: DOMRect\n  TooltipContents: TooltipContentsComponent\n}) {\n  const { featureUnderMouse } = model\n  const { classes } = useStyles()\n\n  const x = clientMouseCoord[0] + 5\n  const y = useClientY ? clientMouseCoord[1] : clientRect?.top || 0\n  return featureUnderMouse ? (\n    <>\n      <Suspense fallback={null}>\n        <BaseTooltip clientPoint={{ x, y }}>\n          <TooltipContents model={model} feature={featureUnderMouse} />\n        </BaseTooltip>\n      </Suspense>\n\n      <div\n        className={classes.hoverVertical}\n        style={{\n          left: offsetMouseCoord[0],\n          height: height - YSCALEBAR_LABEL_OFFSET * 2,\n        }}\n      />\n    </>\n  ) : null\n})\n\nexport default Tooltip\n","import { getSnapshot, isStateTreeNode } from 'mobx-state-tree'\n\nimport { assembleLocStringFast } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\n\nimport type { Region } from './types'\nimport type { Region as RegionModel } from './types/mst'\nimport type { Instance } from 'mobx-state-tree'\n\nexport interface Base1DViewModel {\n  offsetPx: number\n  width: number\n  displayedRegions: (Region | Instance<typeof RegionModel>)[]\n  bpPerPx: number\n  minimumBlockWidth: number\n  interRegionPaddingWidth: number\n}\n\nexport default function calculateStaticBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n  extra = 0,\n  width = 800,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n    width: modelWidth,\n  } = model\n\n  const windowLeftBp = offsetPx * bpPerPx\n  const windowRightBp = (offsetPx + modelWidth) * bpPerPx\n  const blockSizePx = width\n  const blockSizeBp = Math.ceil(blockSizePx * bpPerPx)\n  // for each displayed region\n  let regionBpOffset = 0\n  const blocks = new BlockSet()\n  for (\n    let regionNumber = 0;\n    regionNumber < displayedRegions.length;\n    regionNumber++\n  ) {\n    const region = displayedRegions[regionNumber]!\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region\n\n    const regionBlockCount = Math.ceil((regionEnd - regionStart) / blockSizeBp)\n    const parentRegion = isStateTreeNode(region) ? getSnapshot(region) : region\n\n    let windowRightBlockNum =\n      Math.floor((windowRightBp - regionBpOffset) / blockSizeBp) + extra\n    if (windowRightBlockNum >= regionBlockCount) {\n      windowRightBlockNum = regionBlockCount - 1\n    }\n\n    let windowLeftBlockNum =\n      Math.floor((windowLeftBp - regionBpOffset) / blockSizeBp) - extra\n    if (windowLeftBlockNum < 0) {\n      windowLeftBlockNum = 0\n    }\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n\n    for (\n      let blockNum = windowLeftBlockNum;\n      blockNum <= windowRightBlockNum;\n      blockNum += 1\n    ) {\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      if (reversed) {\n        start = Math.max(regionStart, regionEnd - (blockNum + 1) * blockSizeBp)\n        end = regionEnd - blockNum * blockSizeBp\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n      } else {\n        start = regionStart + blockNum * blockSizeBp\n        end = Math.min(regionEnd, regionStart + (blockNum + 1) * blockSizeBp)\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: (regionBpOffset + blockNum * blockSizeBp) / bpPerPx,\n        parentRegion,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocStringFast(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && regionNumber === 0 && blockNum === 0) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: width,\n            offsetPx: blockData.offsetPx - width,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n        }\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          regionBpOffset += interRegionPaddingWidth * bpPerPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    regionBpOffset += regionEnd - regionStart\n  }\n  return blocks\n}\n","import { getFillProps } from '@jbrowse/core/util'\n\nconst RectBg = ({\n  x,\n  y,\n  width,\n  height,\n  color = 'rgba(255,255,255,0.5)',\n}: {\n  x: number\n  y: number\n  width: number\n  height: number\n  color?: string\n}) => {\n  return (\n    <rect\n      pointerEvents=\"auto\"\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      {...getFillProps(color)}\n    />\n  )\n}\n\nexport default RectBg\n","import { Fragment } from 'react'\n\nimport { clamp } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport RectBg from './RectBg'\n\nimport type { Source } from '../types'\n\nconst ColorLegend = observer(function ({\n  model,\n  labelWidth,\n}: {\n  model: {\n    canDisplayLabels: boolean\n    rowHeight: number\n    sources?: Source[]\n  }\n  labelWidth: number\n}) {\n  const { canDisplayLabels, rowHeight, sources } = model\n  const svgFontSize = clamp(rowHeight, 8, 12)\n  const colorBoxWidth = 15\n  const hasColors = sources?.some(s => s.color)\n  const legendWidth = labelWidth + (hasColors ? colorBoxWidth + 5 : 0)\n\n  return sources ? (\n    <>\n      {canDisplayLabels ? (\n        <RectBg\n          y={0}\n          x={0}\n          width={legendWidth}\n          height={(sources.length + 0.25) * rowHeight}\n        />\n      ) : null}\n      {sources.map((source, idx) => {\n        const { color, name, label } = source\n        return (\n          <Fragment key={`${label}-${idx}`}>\n            {color ? (\n              <RectBg\n                y={idx * rowHeight}\n                x={0}\n                width={colorBoxWidth + 0.5}\n                height={rowHeight + 0.5}\n                color={color}\n              />\n            ) : null}\n            {canDisplayLabels ? (\n              <text\n                y={idx * rowHeight + svgFontSize}\n                x={color ? colorBoxWidth + 2 : 0}\n                fontSize={svgFontSize}\n              >\n                {label || name}\n              </text>\n            ) : null}\n          </Fragment>\n        )\n      })}\n    </>\n  ) : null\n})\n\nexport default ColorLegend\n","import { clamp, getContainingView, max, measureText } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport ColorLegend from './ColorLegend'\n\nimport type { Source } from '../types'\n\ninterface ReducedModel {\n  scrollTop: number\n  totalHeight: number\n  rowHeight: number\n  lineZoneHeight?: number\n  sources?: Source[]\n  canDisplayLabels: boolean\n  height: number\n  samplePloidy?: Record<string, number>\n  id: string\n}\n\nconst Wrapper = observer(function ({\n  children,\n  model,\n  exportSVG,\n}: {\n  model: ReducedModel\n  children: React.ReactNode\n  exportSVG?: boolean\n}) {\n  const { id, scrollTop, height } = model\n  const clipid = `legend-${id}`\n  return exportSVG ? (\n    <>\n      <defs>\n        <clipPath id={clipid}>\n          <rect x={0} y={0} width={1000} height={height} />\n        </clipPath>\n      </defs>\n      <g clipPath={`url(#${clipid})`}>\n        <g transform={`translate(0,${-scrollTop})`}>{children}</g>\n      </g>\n    </>\n  ) : (\n    <svg\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 100,\n        pointerEvents: 'none',\n        height: model.totalHeight,\n        width: getContainingView(model).width,\n      }}\n    >\n      {children}\n    </svg>\n  )\n})\n\nexport const LegendBar = observer(function (props: {\n  model: ReducedModel\n  orientation?: string\n  exportSVG?: boolean\n}) {\n  const { model } = props\n  const { canDisplayLabels, rowHeight, sources } = model\n  const svgFontSize = clamp(rowHeight, 8, 12)\n  return sources ? (\n    <Wrapper {...props}>\n      <ColorLegend\n        model={model}\n        labelWidth={max(\n          sources\n            .map(s => measureText(s.label, svgFontSize) + 10)\n            .map(width => (canDisplayLabels ? width : 20)),\n          0,\n        )}\n      />\n    </Wrapper>\n  ) : null\n})\n\nexport default LegendBar\n","import type { Dotplot1DViewModel } from '../model'\nimport type { BaseBlock } from '@jbrowse/core/util/blockTypes'\n\nexport function locstr(\n  px: number,\n  view: Dotplot1DViewModel,\n  includeAsm = true,\n) {\n  const { assemblyName, refName, start, offset, oob } = view.pxToBp(px)\n  const coord = Math.floor(start + offset)\n  return oob\n    ? 'out of bounds'\n    : `${\n        includeAsm ? `{${assemblyName}}` : ''\n      }${refName}:${coord.toLocaleString('en-US')}`\n}\n\nexport function getBlockLabelKeysToHide(\n  blocks: BaseBlock[],\n  length: number,\n  viewOffsetPx: number,\n) {\n  const blockLabelKeysToHide = new Set<string>()\n  const sortedBlocks = [...blocks].sort((a, b) => {\n    const alen = a.end - a.start\n    const blen = b.end - b.start\n    return blen - alen\n  })\n  const positions = Array.from({ length: Math.round(length) })\n  for (const { key, offsetPx } of sortedBlocks) {\n    const y = Math.round(length - offsetPx + viewOffsetPx)\n    const labelBounds = [Math.max(y - 12, 0), y]\n    if (y === 0 || positions.slice(...labelBounds).some(Boolean)) {\n      blockLabelKeysToHide.add(key)\n    } else {\n      positions.fill(true, ...labelBounds)\n    }\n  }\n  return blockLabelKeysToHide\n}\n/**\n * Given a scale ( bp/px ) and minimum distances (px) between major and minor\n * gridlines, return an object like `{ majorPitch: bp, minorPitch: bp }` giving\n * the gridline pitches to use.\n */\nexport function chooseGridPitch(\n  scale: number,\n  minMajorPitchPx: number,\n  minMinorPitchPx: number,\n) {\n  scale = Math.abs(scale)\n  const minMajorPitchBp = minMajorPitchPx * scale\n  const majorMagnitude = +Number(minMajorPitchBp)\n    .toExponential()\n    .split(/e/i)[1]!\n\n  let majorPitch = 10 ** majorMagnitude\n  while (majorPitch < minMajorPitchBp) {\n    majorPitch *= 2\n    if (majorPitch >= minMajorPitchBp) {\n      break\n    }\n    majorPitch *= 2.5\n  }\n\n  majorPitch = Math.max(majorPitch, 5)\n\n  const majorPitchPx = majorPitch / scale\n\n  let minorPitch = 0\n  if (!(majorPitch % 10) && majorPitchPx / 10 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 10\n  } else if (!(majorPitch % 5) && majorPitchPx / 5 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 5\n  } else if (!(majorPitch % 2) && majorPitchPx / 2 >= minMinorPitchPx) {\n    minorPitch = majorPitch / 2\n  }\n\n  return { majorPitch, minorPitch }\n}\n\nexport function makeTicks(\n  regions: BaseBlock[],\n  bpPerPx: number,\n  emitMajor = true,\n  emitMinor = true,\n) {\n  const ticks = []\n  const gridPitch = chooseGridPitch(bpPerPx, 60, 15)\n  const iterPitch = gridPitch.minorPitch || gridPitch.majorPitch\n  for (const { start, end, refName } of regions) {\n    let index = 0\n\n    const minBase = start\n    const maxBase = end\n\n    for (\n      let base = Math.floor(minBase / iterPitch) * iterPitch;\n      base < Math.ceil(maxBase / iterPitch) * iterPitch + 1;\n      base += iterPitch\n    ) {\n      if (emitMinor && base % gridPitch.majorPitch) {\n        ticks.push({ type: 'minor', base: base - 1, index, refName })\n        index += 1\n      } else if (emitMajor && Math.abs(base - start) > gridPitch.minorPitch) {\n        ticks.push({ type: 'major', base: base - 1, index, refName })\n        index += 1\n      }\n    }\n  }\n  return ticks\n}\n","import { useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { Axis, LEFT, RIGHT } from 'react-d3-axis-mod'\n\nimport type { axisPropsFromTickScale } from 'react-d3-axis-mod'\n\ntype Ticks = ReturnType<typeof axisPropsFromTickScale>\n\nconst YScaleBar = observer(function ({\n  model,\n  orientation,\n}: {\n  model: { ticks?: Ticks }\n  orientation?: string\n}) {\n  const { ticks } = model\n  const theme = useTheme()\n  return ticks ? (\n    <Axis\n      {...ticks}\n      shadow={2}\n      format={(n: number) => n}\n      style={{ orient: orientation === 'left' ? LEFT : RIGHT }}\n      bg={theme.palette.background.default}\n      fg={theme.palette.text.primary}\n    />\n  ) : null\n})\n\nexport default YScaleBar\n","import { useState } from 'react'\n\nimport { stringify, toLocale } from '@jbrowse/core/util'\nimport { Popover, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const { tertiary } = theme.palette\n  const background = alpha(tertiary.light, 0.7)\n  return {\n    rubberband: {\n      height: '100%',\n      background,\n      position: 'absolute',\n      zIndex: 830,\n      textAlign: 'center',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: tertiary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  }\n})\n\ninterface Offset {\n  coord: number\n  refName?: string\n  oob?: boolean\n}\n\nfunction Tooltip({\n  anchorEl,\n  side,\n  text,\n}: {\n  anchorEl: HTMLSpanElement\n  side: string\n  text: string\n}) {\n  const { classes } = useStyles()\n  return (\n    <Popover\n      className={classes.popover}\n      classes={{ paper: classes.paper }}\n      open\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: side === 'left' ? 'right' : 'left',\n      }}\n      transformOrigin={{\n        vertical: 'bottom',\n        horizontal: side === 'left' ? 'left' : 'right',\n      }}\n      keepMounted\n      disableRestoreFocus\n    >\n      <Typography>{text}</Typography>\n    </Popover>\n  )\n}\n\nexport default function RubberbandSpan({\n  leftBpOffset,\n  rightBpOffset,\n  numOfBpSelected,\n  left,\n  width,\n  top = 0,\n  sticky = false,\n}: {\n  leftBpOffset: Offset\n  rightBpOffset: Offset\n  numOfBpSelected?: number\n  left: number\n  width: number\n  top?: number\n  sticky?: boolean\n}) {\n  const { classes } = useStyles()\n  const [anchorEl, setAnchorEl] = useState<HTMLSpanElement | null>(null)\n  return (\n    <>\n      {anchorEl ? (\n        <>\n          <Tooltip\n            side=\"left\"\n            anchorEl={anchorEl}\n            text={stringify(leftBpOffset)}\n          />\n          <Tooltip\n            side=\"right\"\n            anchorEl={anchorEl}\n            text={stringify(rightBpOffset)}\n          />\n        </>\n      ) : null}\n      <div className={classes.rubberband} style={{ left, width }}>\n        {numOfBpSelected ? (\n          <Typography\n            ref={el => {\n              setAnchorEl(el)\n            }}\n            variant=\"h6\"\n            className={classes.rubberbandText}\n            style={{\n              top,\n              position: sticky ? 'sticky' : undefined,\n            }}\n          >\n            {toLocale(numOfBpSelected)} bp\n          </Typography>\n        ) : null}\n      </div>\n    </>\n  )\n}\n","import { colord } from '@jbrowse/core/util/colord'\n\nimport type { ChainData } from './fetchChains'\n\nexport function hasPairedReads(features: ChainData) {\n  for (const f of features.chains.values()) {\n    if (f[0]!.flags & 1) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function alphaColor(baseColor: string, p: number) {\n  return p !== 1\n    ? colord(baseColor)\n        .alpha(Math.min(1, p * p + 0.1))\n        .toHslString()\n    : baseColor\n}\n\nexport const defaultFilterFlags = {\n  flagInclude: 0,\n  flagExclude: 1540,\n}\nexport const negFlags = {\n  flagInclude: 16,\n  flagExclude: 1540,\n}\nexport const posFlags = {\n  flagInclude: 0,\n  flagExclude: 1556,\n}\n\nexport function cacheGetter<T>(ctor: { prototype: T }, prop: keyof T): void {\n  const desc = Object.getOwnPropertyDescriptor(ctor.prototype, prop)!\n  const getter = desc.get!\n  Object.defineProperty(ctor.prototype, prop, {\n    get() {\n      const ret = getter.call(this)\n      Object.defineProperty(this, prop, { value: ret })\n      return ret\n    },\n  })\n}\n\nexport function filterReadFlag(\n  flags: number,\n  flagInclude: number,\n  flagExclude: number,\n) {\n  if ((flags & flagInclude) !== flagInclude) {\n    return true\n  } else if (flags & flagExclude) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport function filterTagValue(readVal: unknown, filterVal?: string) {\n  return filterVal === '*'\n    ? readVal === undefined\n    : `${readVal}` !== `${filterVal}`\n}\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration'\nimport type { AnyReactComponentType } from '../util'\nimport type { IAnyModelType } from 'mobx-state-tree'\n\nexport default class ConnectionType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  description: string\n\n  url: string\n\n  configEditorComponent?: AnyReactComponentType\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n    displayName: string\n    description: string\n    configEditorComponent?: AnyReactComponentType\n    url: string\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n    this.description = stuff.description\n    this.url = stuff.url\n    this.configEditorComponent = stuff.configEditorComponent\n  }\n}\n","import PluggableElementBase from './PluggableElementBase'\n\nimport type { AnyConfigurationSchemaType } from '../configuration/types'\nimport type { IAnyModelType } from 'mobx-state-tree'\n\nexport default class InternetAccountType extends PluggableElementBase {\n  stateModel: IAnyModelType\n\n  configSchema: AnyConfigurationSchemaType\n\n  constructor(stuff: {\n    name: string\n    stateModel: IAnyModelType\n    configSchema: AnyConfigurationSchemaType\n  }) {\n    super(stuff)\n    this.stateModel = stuff.stateModel\n    this.configSchema = stuff.configSchema\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-function-type */\nimport type React from 'react'\n\nimport { isStateTreeNode } from 'mobx-state-tree'\n\nimport type {\n  BlobLocation as MUBlobLocation,\n  LocalPathLocation as MULocalPathLocation,\n  NoAssemblyRegion as MUNoAssemblyRegion,\n  Region as MUIRegion,\n  UriLocation as MUUriLocation,\n} from './mst'\nimport type TextSearchManager from '../../TextSearch/TextSearchManager'\nimport type assemblyManager from '../../assemblyManager'\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\nimport type RpcManager from '../../rpc/RpcManager'\nimport type { MenuItem } from '../../ui'\nimport type { Feature } from '../simpleFeature'\nimport type { ThemeOptions } from '@mui/material'\nimport type {\n  IAnyStateTreeNode,\n  IStateTreeNode,\n  IType,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\n\nexport * from './util'\n\n/** abstract type for a model that contains multiple views */\nexport interface AbstractViewContainer\n  extends IStateTreeNode<IType<any, any, any>> {\n  views: AbstractViewModel[]\n  removeView(view: AbstractViewModel): void\n  addView(\n    typeName: string,\n    initialState?: Record<string, unknown>,\n  ): AbstractViewModel\n}\nexport function isViewContainer(\n  thing: unknown,\n): thing is AbstractViewContainer {\n  return (\n    isStateTreeNode(thing) &&\n    'removeView' in thing &&\n    'addView' in thing &&\n    'views' in thing\n  )\n}\n\nexport type NotificationLevel = 'error' | 'info' | 'warning' | 'success'\nexport interface SnackAction {\n  name: React.ReactElement | string\n  onClick: () => void\n}\n\nexport type AssemblyManager = Instance<ReturnType<typeof assemblyManager>>\n\nexport interface BasePlugin {\n  version?: string\n  name: string\n  url?: string\n}\n\nexport interface JBrowsePlugin {\n  name: string\n  authors: string[]\n  description: string\n  location: string\n  url?: string\n  umdUrl?: string\n  esmUrl?: string\n  cjsUrl?: string\n  license: string\n  image?: string\n}\n\nexport type DialogComponentType =\n  | React.LazyExoticComponent<React.FC<any>>\n  | React.FC<any>\n\n/** minimum interface that all session state models must implement */\nexport interface AbstractSessionModel extends AbstractViewContainer {\n  jbrowse: IAnyStateTreeNode\n  drawerPosition?: string\n  configuration: AnyConfigurationModel\n  rpcManager: RpcManager\n  assemblyNames: string[]\n  assemblies: AnyConfigurationModel[]\n  selection?: unknown\n  focusedViewId?: string\n  themeName?: string\n  hovered: unknown\n  setHovered: (arg: unknown) => void\n  setFocusedViewId?: (id: string) => void\n  allThemes?: () => Record<string, ThemeOptions>\n  setSelection: (feature: Feature) => void\n  setSession?: (arg: { name: string; [key: string]: unknown }) => void\n  clearSelection: () => void\n  duplicateCurrentSession?: () => void\n  notify: (\n    message: string,\n    level?: NotificationLevel,\n    action?: SnackAction,\n  ) => void\n  notifyError: (message: string, error?: unknown, extra?: unknown) => void\n  assemblyManager: AssemblyManager\n  version: string\n  getTrackActionMenuItems?: Function\n  addAssembly?: Function\n  removeAssembly?: Function\n  textSearchManager?: TextSearchManager\n  connections: AnyConfigurationModel[]\n  deleteConnection?: Function\n  temporaryAssemblies?: unknown[]\n  addTemporaryAssembly?: (arg: Record<string, unknown>) => void\n  removeTemporaryAssembly?: (arg: string) => void\n  sessionConnections?: AnyConfigurationModel[]\n  sessionTracks?: AnyConfigurationModel[]\n  connectionInstances?: {\n    name: string\n    tracks: AnyConfigurationModel[]\n    configuration: AnyConfigurationModel\n  }[]\n  makeConnection?: Function\n  breakConnection?: Function\n\n  prepareToBreakConnection?: (arg: AnyConfigurationModel) => any\n  adminMode?: boolean\n  showWidget?: Function\n  addWidget?: Function\n\n  DialogComponent?: DialogComponentType\n\n  DialogProps: any\n  queueDialog<T extends DialogComponentType>(\n    callback: (doneCallback: () => void) => [T, React.ComponentProps<T>],\n  ): void\n  name: string\n  id?: string\n  tracks: AnyConfigurationModel[]\n}\nexport function isSessionModel(thing: unknown): thing is AbstractSessionModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'rpcManager' in thing &&\n    'configuration' in thing\n  )\n}\n\n/** abstract interface for a session allows editing configurations */\nexport interface SessionWithConfigEditing extends AbstractSessionModel {\n  editConfiguration(configuration: AnyConfigurationModel): void\n}\nexport function isSessionModelWithConfigEditing(\n  t: unknown,\n): t is SessionWithConfigEditing {\n  return isSessionModel(t) && 'editConfiguration' in t\n}\n\n/** abstract interface for a session allows adding tracks */\nexport interface SessionWithAddTracks extends AbstractSessionModel {\n  addTrackConf(\n    configuration: AnyConfigurationModel | SnapshotIn<AnyConfigurationModel>,\n  ): void\n}\nexport function isSessionWithAddTracks(t: unknown): t is SessionWithAddTracks {\n  return (\n    // @ts-expect-error\n    isSessionModel(t) && 'addTrackConf' in t && !t.disableAddTracks\n  )\n}\n\n/** abstract interface for a session allows adding tracks */\nexport interface SessionWithShareURL extends AbstractSessionModel {\n  shareURL: string\n}\nexport function isSessionWithShareURL(\n  thing: unknown,\n): thing is SessionWithShareURL {\n  return isSessionModel(thing) && 'shareURL' in thing && !!thing.shareURL\n}\n\nexport interface Widget {\n  type: string\n  id: string\n}\n\n/** abstract interface for a session that manages widgets */\nexport interface SessionWithWidgets extends AbstractSessionModel {\n  minimized: boolean\n  visibleWidget?: Widget\n  widgets: Map<string | number, Widget>\n  activeWidgets: Map<string | number, Widget>\n  hideAllWidgets: () => void\n  addWidget(\n    typeName: string,\n    id: string,\n    initialState?: Record<string, unknown>,\n    configuration?: { type: string },\n  ): Widget\n  showWidget(widget: unknown): void\n  hideWidget(widget: unknown): void\n}\n\n/* only some sessions with widgets use a drawer widget */\nexport interface SessionWithDrawerWidgets extends SessionWithWidgets {\n  drawerWidth: number\n  resizeDrawer(arg: number): number\n  minimizeWidgetDrawer(): void\n  showWidgetDrawer: () => void\n  drawerPosition: string\n  setDrawerPosition(arg: string): void\n}\n\nexport function isSessionModelWithWidgets(\n  thing: unknown,\n): thing is SessionWithWidgets {\n  return isSessionModel(thing) && 'widgets' in thing\n}\ninterface SessionWithConnections {\n  makeConnection: (arg: AnyConfigurationModel) => void\n}\nexport function isSessionModelWithConnections(\n  thing: unknown,\n): thing is SessionWithConnections {\n  return isSessionModel(thing) && 'makeConnection' in thing\n}\n\ninterface SessionWithConnectionEditing {\n  addConnectionConf: (arg: AnyConfigurationModel) => void\n}\n\nexport function isSessionModelWithConnectionEditing(\n  thing: unknown,\n): thing is SessionWithConnectionEditing {\n  return isSessionModel(thing) && 'addConnectionConf' in thing\n}\n\nexport interface SessionWithSessionPlugins extends AbstractSessionModel {\n  sessionPlugins: JBrowsePlugin[]\n  addSessionPlugin: Function\n  removeSessionPlugin: Function\n}\nexport function isSessionWithSessionPlugins(\n  thing: unknown,\n): thing is SessionWithSessionPlugins {\n  return isSessionModel(thing) && 'sessionPlugins' in thing\n}\n\n/** abstract interface for a session that manages a global selection */\nexport interface SelectionContainer extends AbstractSessionModel {\n  selection?: unknown\n  setSelection(thing: unknown): void\n}\nexport function isSelectionContainer(\n  thing: unknown,\n): thing is SelectionContainer {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'selection' in thing &&\n    'setSelection' in thing\n  )\n}\n\n/** abstract interface for a session allows applying focus to views and widgets */\nexport interface SessionWithFocusedViewAndDrawerWidgets\n  extends SessionWithDrawerWidgets {\n  focusedViewId: string | undefined\n  setFocusedViewId(id: string): void\n}\n\n/** minimum interface that all view state models must implement */\nexport interface AbstractViewModel {\n  id: string\n  type: string\n  width: number\n  minimized: boolean\n  setWidth(width: number): void\n  setMinimized(flag: boolean): void\n  displayName: string | undefined\n  setDisplayName: (arg: string) => void\n  menuItems: () => MenuItem[]\n}\nexport function isViewModel(thing: unknown): thing is AbstractViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'width' in thing &&\n    'setWidth' in thing\n  )\n}\n\nexport interface AbstractTrackModel {\n  id: string\n  displays: AbstractDisplayModel[]\n  configuration: AnyConfigurationModel\n}\n\nexport function isTrackModel(thing: unknown): thing is AbstractTrackModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-expect-error\n    thing.configuration.trackId\n  )\n}\n\nexport interface AbstractDisplayModel {\n  id: string\n  parentTrack: AbstractTrackModel\n  renderDelay: number\n  rendererType: any\n  cannotBeRenderedReason?: string\n}\nexport function isDisplayModel(thing: unknown): thing is AbstractDisplayModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'configuration' in thing &&\n    // @ts-expect-error\n    thing.configuration.displayId\n  )\n}\n\nexport interface TrackViewModel extends AbstractViewModel {\n  showTrack(trackId: string): void\n  hideTrack(trackId: string): void\n}\nexport function isTrackViewModel(thing: unknown): thing is TrackViewModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'showTrack' in thing &&\n    'hideTrack' in thing\n  )\n}\n\n/** minimum interface for the root MST model of a JBrowse app */\nexport interface AbstractRootModel {\n  jbrowse: IAnyStateTreeNode\n  session?: AbstractSessionModel\n  setDefaultSession?(): void\n  adminMode?: boolean\n  error?: unknown\n}\n\n/** root model with more included for the heavier JBrowse web and desktop app */\nexport interface AppRootModel extends AbstractRootModel {\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isAppRootModel(thing: unknown): thing is AppRootModel {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\nexport interface RootModelWithInternetAccounts extends AbstractRootModel {\n  internetAccounts: BaseInternetAccountModel[]\n  findAppropriateInternetAccount(\n    location: UriLocation,\n  ): BaseInternetAccountModel | undefined\n}\n\nexport function isRootModelWithInternetAccounts(\n  thing: unknown,\n): thing is RootModelWithInternetAccounts {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'internetAccounts' in thing &&\n    'findAppropriateInternetAccount' in thing\n  )\n}\n\n/** a root model that manages global menus */\nexport interface AbstractMenuManager {\n  appendMenu(menuName: string): void\n  insertMenu(menuName: string, position: number): number\n  insertInMenu(menuName: string, menuItem: MenuItem, position: number): number\n  appendToMenu(menuName: string, menuItem: MenuItem): number\n  appendToSubMenu(menuPath: string[], menuItem: MenuItem): number\n  insertInSubMenu(\n    menuPath: string[],\n    menuItem: MenuItem,\n    position: number,\n  ): number\n}\nexport function isAbstractMenuManager(\n  thing: unknown,\n): thing is AbstractMenuManager {\n  return (\n    typeof thing === 'object' &&\n    thing !== null &&\n    'appendMenu' in thing &&\n    'appendToSubMenu' in thing\n  )\n}\n\n// Empty interfaces required by mobx-state-tree\n// See https://mobx-state-tree.js.org/tips/typescript#using-a-mst-type-at-design-time\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface NoAssemblyRegion\n  extends SnapshotIn<typeof MUNoAssemblyRegion> {}\n\n/**\n * a description of a specific genomic region. assemblyName, refName, start,\n * end, and reversed\n */\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface Region extends SnapshotIn<typeof MUIRegion> {}\n\nexport interface AugmentedRegion extends Region {\n  originalRefName?: string\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface LocalPathLocation\n  extends SnapshotIn<typeof MULocalPathLocation> {}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface UriLocation extends SnapshotIn<typeof MUUriLocation> {}\n\nexport function isUriLocation(location: unknown): location is UriLocation {\n  return (\n    typeof location === 'object' &&\n    location !== null &&\n    'uri' in location &&\n    !!location.uri\n  )\n}\nexport function isLocalPathLocation(\n  location: unknown,\n): location is LocalPathLocation {\n  return (\n    typeof location === 'object' &&\n    location !== null &&\n    'localPath' in location &&\n    !!location.localPath\n  )\n}\n\nexport function isBlobLocation(location: unknown): location is BlobLocation {\n  return (\n    typeof location === 'object' &&\n    location !== null &&\n    'blobId' in location &&\n    !!location.blobId\n  )\n}\nexport class AuthNeededError extends Error {\n  constructor(\n    public message: string,\n    public url: string,\n  ) {\n    super(message)\n    this.name = 'AuthNeededError'\n\n    Object.setPrototypeOf(this, AuthNeededError.prototype)\n  }\n}\n\nexport class RetryError extends Error {\n  constructor(\n    public message: string,\n    public internetAccountId: string,\n  ) {\n    super(message)\n    this.name = 'RetryError'\n  }\n}\n\nexport function isAuthNeededException(\n  exception: unknown,\n): exception is AuthNeededError {\n  return (\n    exception instanceof Error &&\n    // DOMException\n    (exception.name === 'AuthNeededError' ||\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      (exception as AuthNeededError).url !== undefined)\n  )\n}\n\nexport function isRetryException(exception: Error): boolean {\n  return (\n    // DOMException\n    exception.name === 'RetryError' ||\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    (exception as RetryError).internetAccountId !== undefined\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface BlobLocation extends SnapshotIn<typeof MUBlobLocation> {}\n\nexport type FileLocation = LocalPathLocation | UriLocation | BlobLocation\n\n// These types are slightly different than the MST models representing a\n// location because a blob cannot be stored in a MST, so this is the\n// pre-processed file location\nexport interface PreUriLocation {\n  uri: string\n}\nexport interface PreLocalPathLocation {\n  localPath: string\n}\nexport interface PreBlobLocation {\n  blob: File\n}\nexport type PreFileLocation =\n  | PreUriLocation\n  | PreLocalPathLocation\n  | PreBlobLocation\n\nexport { default as TextSearchManager } from '../../TextSearch/TextSearchManager'\n","import { firstValueFrom } from 'rxjs'\nimport { toArray } from 'rxjs/operators'\n\nimport ServerSideRendererType from './ServerSideRendererType'\nimport { isFeatureAdapter } from '../../data_adapters/BaseAdapter'\nimport { getAdapter } from '../../data_adapters/dataAdapterCache'\nimport { iterMap } from '../../util'\nimport SimpleFeature from '../../util/simpleFeature'\nimport { checkStopToken } from '../../util/stopToken'\n\nimport type {\n  RenderArgs as ServerSideRenderArgs,\n  RenderArgsDeserialized as ServerSideRenderArgsDeserialized,\n  RenderArgsSerialized as ServerSideRenderArgsSerialized,\n  RenderResults as ServerSideRenderResults,\n  ResultsDeserialized as ServerSideResultsDeserialized,\n  ResultsSerialized as ServerSideResultsSerialized,\n} from './ServerSideRendererType'\nimport type { AnyConfigurationModel } from '../../configuration'\nimport type { Feature, SimpleFeatureSerialized } from '../../util/simpleFeature'\nimport type { AugmentedRegion as Region } from '../../util/types'\n\nexport interface RenderArgs extends ServerSideRenderArgs {\n  displayModel?: {\n    id: string\n    selectedFeatureId?: string\n  }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsSerialized extends ServerSideRenderArgsSerialized {\n  displayModel?: {\n    id: string\n    selectedFeatureId?: string\n  }\n  regions: Region[]\n  blockKey: string\n}\n\nexport interface RenderArgsDeserialized\n  extends ServerSideRenderArgsDeserialized {\n  displayModel: { id: string; selectedFeatureId?: string }\n  regions: Region[]\n  blockKey: string\n  adapterConfig: AnyConfigurationModel\n}\n\nexport interface RenderResults extends ServerSideRenderResults {\n  features: Map<string, Feature>\n}\n\nexport interface ResultsSerialized extends ServerSideResultsSerialized {\n  features: SimpleFeatureSerialized[]\n}\n\nexport interface ResultsDeserialized extends ServerSideResultsDeserialized {\n  features: Map<string, Feature>\n  blockKey: string\n}\n\nexport default class FeatureRendererType extends ServerSideRendererType {\n  /**\n   * replaces the `displayModel` param (which on the client is a MST model)\n   * with a stub that only contains the `selectedFeature`, since this is the\n   * only part of the track model that most renderers read. also serializes the\n   * config and regions to JSON from MST objects.\n   *\n   * @param args - the arguments passed to render\n   */\n  serializeArgsInClient(args: RenderArgs) {\n    return super.serializeArgsInClient({\n      ...args,\n      displayModel: undefined,\n      regions: structuredClone(args.regions),\n    })\n  }\n\n  /**\n   * Adds feature deserialization to base server-side result deserialization\n   *\n   * @param results - the results of the render\n   * @param args - the arguments passed to render\n   */\n  deserializeResultsInClient(\n    result: ResultsSerialized,\n    args: RenderArgs,\n  ): ResultsDeserialized {\n    const deserializedFeatures = new Map<string, SimpleFeature>(\n      result.features.map(f => SimpleFeature.fromJSON(f)).map(f => [f.id(), f]),\n    )\n\n    const deserialized = super.deserializeResultsInClient(\n      {\n        ...result,\n        features: deserializedFeatures,\n      } as ServerSideResultsSerialized,\n      args,\n    )\n    return {\n      ...deserialized,\n      blockKey: args.blockKey,\n      features: deserializedFeatures,\n    }\n  }\n\n  /**\n   * Adds feature serialization to base server-side result serialization\n   *\n   * @param result - object containing the results of calling the `render`\n   * method\n   * @param args - deserialized render args\n   */\n  serializeResultsInWorker(\n    result: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const serialized = super.serializeResultsInWorker(result, args)\n    const { features } = result\n    return {\n      ...serialized,\n      features: iterMap(features.values(), f => f.toJSON(), features.size),\n    }\n  }\n\n  /**\n   * will expand if soft clipping or feature glyphs are shown\n   *\n   * @param region - rendering region\n   * @param _renderArgs - render args, unused, may be used in deriving classes\n   */\n  getExpandedRegion(region: Region, _renderArgs: RenderArgsDeserialized) {\n    return region\n  }\n\n  /**\n   * use the dataAdapter to fetch the features to be rendered\n   *\n   * @param renderArgs -\n   * @returns Map of features as `{ id => feature, ... }`\n   */\n  async getFeatures(\n    renderArgs: RenderArgsDeserialized,\n  ): Promise<Map<string, Feature>> {\n    const pm = this.pluginManager\n    const { stopToken, regions, sessionId, adapterConfig } = renderArgs\n    const { dataAdapter } = await getAdapter(pm, sessionId, adapterConfig)\n    if (!isFeatureAdapter(dataAdapter)) {\n      throw new Error('Adapter does not support retrieving features')\n    }\n\n    // make sure the requested region's start and end are integers, if there is\n    // a region specification.\n    const requestRegions = regions.map(r => ({\n      ...r,\n      start: Math.floor(r.start),\n      end: Math.ceil(r.end),\n    }))\n\n    const region = requestRegions[0]!\n\n    const featureObservable =\n      requestRegions.length === 1\n        ? dataAdapter.getFeatures(\n            this.getExpandedRegion(region, renderArgs),\n            renderArgs,\n          )\n        : dataAdapter.getFeaturesInMultipleRegions(requestRegions, renderArgs)\n\n    const feats = await firstValueFrom(featureObservable.pipe(toArray()))\n    checkStopToken(stopToken)\n    return new Map<string, Feature>(\n      feats\n        .filter(feat => this.featurePassesFilters(renderArgs, feat))\n        .map(feat => [feat.id(), feat] as const),\n    )\n  }\n\n  /**\n   * @param renderArgs -\n   * @param feature -\n   * @returns true if this feature passes all configured filters\n   */\n  featurePassesFilters(renderArgs: RenderArgsDeserialized, feature: Feature) {\n    return renderArgs.filters\n      ? renderArgs.filters.passes(feature, renderArgs)\n      : true\n  }\n\n  /**\n   * gets features and renders\n   *\n   * @param props - render args\n   */\n  async render(\n    props: RenderArgsDeserialized & { features?: Map<string, Feature> },\n  ): Promise<RenderResults> {\n    const features = props.features || (await this.getFeatures(props))\n    const result = await super.render({ ...props, features })\n    return { ...result, features }\n  }\n}\n","import { revcom } from '@jbrowse/core/util'\n\nimport { getNextRefPos } from '../MismatchParser'\nimport { getTagAlt } from '../util'\n\nimport type { Feature } from '@jbrowse/core/util'\n\nconst modificationRegex = new RegExp(/([A-Z])([-+])([^,.?]+)([.?])?/)\n// ML stores probabilities as array of numerics and MP is scaled phred scores\n// https://github.com/samtools/hts-specs/pull/418/files#diff-e765c6479316309f56b636f88189cdde8c40b854c7bdcce9ee7fe87a4e76febcR596\n//\n// if we have ML or Ml, it is an 8bit probability, divide by 255\n//\n// if we have MP or Mp it is phred scaled ASCII, which can go up to 90 but has\n// very high likelihood basecalls at that point, we really only care about low\n// qual calls <20 approx\nexport function getModProbabilities(feature: Feature) {\n  const m = (getTagAlt(feature, 'ML', 'Ml') as number[] | string) || []\n  return m\n    ? (typeof m === 'string' ? m.split(',').map(e => +e) : m).map(e => e / 255)\n    : (getTagAlt(feature, 'MP', 'Mp') as string | undefined)\n        ?.split('')\n        .map(s => s.charCodeAt(0) - 33)\n        .map(elt => Math.min(1, elt / 50))\n}\n\nexport function getModPositions(mm: string, fseq: string, fstrand: number) {\n  const seq = fstrand === -1 ? revcom(fseq) : fseq\n  const mods = mm.split(';').filter(mod => !!mod)\n  const result = []\n  for (const mod of mods) {\n    const [basemod, ...skips] = mod.split(',')\n\n    // regexes based on parse_mm.pl from hts-specs\n    // https://github.com/samtools/hts-specs/blob/master/test/SAMtags/parse_mm.pl\n    const matches = modificationRegex.exec(basemod!)\n    if (!matches) {\n      throw new Error('bad format for MM tag')\n    }\n    const [, base, strand, typestr] = matches\n\n    // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so split,\n    // and they can also be chemical codes (ChEBI) e.g. C+16061\n    const types = typestr!.split(/(\\d+|.)/).filter(f => !!f)\n\n    if (strand === '-') {\n      console.warn('unsupported negative strand modifications')\n      result.push({\n        type: 'unsupported',\n        positions: [] as number[],\n        base: base!,\n        strand: strand,\n      })\n    }\n\n    // this logic based on parse_mm.pl from hts-specs\n    for (const type of types) {\n      let i = 0\n      const positions = []\n      for (const d of skips) {\n        let delta = +d\n        do {\n          if (base === 'N' || base === seq[i]) {\n            delta--\n          }\n          i++\n        } while (delta >= 0 && i < seq.length)\n        if (fstrand === -1) {\n          const pos = seq.length - i\n          if (pos >= 0) {\n            // avoid negative-number-positions in array, seen in #4629 cause\n            // unknown, could warrant some further investigation\n            positions.unshift(pos)\n          }\n        } else {\n          positions.push(i - 1)\n        }\n      }\n\n      result.push({\n        type,\n        base: base!,\n        strand: strand!,\n        positions,\n      })\n    }\n  }\n  return result\n}\n\nexport function getModTypes(mm: string) {\n  return mm\n    .split(';')\n    .filter(mod => !!mod)\n    .flatMap(mod => {\n      const basemod = mod.split(',')[0]!\n\n      const matches = modificationRegex.exec(basemod)\n      if (!matches) {\n        throw new Error('bad format for MM tag')\n      }\n      const [, base, strand, typestr] = matches\n      // can be a multi e.g. C+mh for both meth (m) and hydroxymeth (h) so\n      // split, and they can also be chemical codes (ChEBI) e.g. C+16061\n      return typestr!\n        .split(/(\\d+|.)/)\n        .filter(f => !!f)\n        .map(type => ({\n          type,\n          base: base!,\n          strand: strand!,\n        }))\n    })\n}\n\nexport function getMethBins(feature: Feature, cigarOps: string[]) {\n  const fstart = feature.get('start')\n  const fend = feature.get('end')\n  const fstrand = feature.get('strand') as -1 | 0 | 1\n  const flen = fend - fstart\n  const mm = (getTagAlt(feature, 'MM', 'Mm') as string | undefined) || ''\n  const methBins = []\n  const hydroxyMethBins = []\n  const methProbs = []\n  const hydroxyMethProbs = []\n  const seq = feature.get('seq') as string | undefined\n  if (seq) {\n    const probabilities = getModProbabilities(feature)\n    const modifications = getModPositions(mm, seq, fstrand)\n    let probIndex = 0\n    for (const { type, positions } of modifications) {\n      for (const { ref, idx } of getNextRefPos(cigarOps, positions)) {\n        const idx2 =\n          probIndex + (fstrand === -1 ? positions.length - 1 - idx : idx)\n        const prob = probabilities?.[idx2] || 0\n        if (type === 'm') {\n          if (ref >= 0 && ref < flen) {\n            methBins[ref] = 1\n            methProbs[ref] = prob\n          }\n        } else if (type === 'h') {\n          if (ref >= 0 && ref < flen) {\n            hydroxyMethBins[ref] = 1\n            hydroxyMethProbs[ref] = prob\n          }\n        }\n      }\n      probIndex += positions.length\n    }\n  }\n  return { methBins, hydroxyMethBins, methProbs, hydroxyMethProbs }\n}\n","import { stringToJexlExpression } from '../../../util/jexlStrings'\n\ntype FilterExpression = (...args: Record<string, any>[] | any[]) => boolean\n\ninterface Filter {\n  string: string\n  expr: FilterExpression\n}\n\nexport type SerializedFilterChain = string[]\n\nexport default class SerializableFilterChain {\n  filterChain: Filter[]\n\n  constructor({ filters = [] }: { filters: SerializedFilterChain }) {\n    this.filterChain = filters\n      .map(f => f.trim())\n      .filter(f => !!f)\n      .map(inputFilter => {\n        if (typeof inputFilter === 'string') {\n          const expr = stringToJexlExpression(inputFilter) as FilterExpression\n          return { expr, string: inputFilter }\n        }\n        throw new Error(`invalid inputFilter string \"${inputFilter}\"`)\n      })\n  }\n\n  passes(...args: any[]) {\n    for (const entry of this.filterChain) {\n      if (\n        // @ts-expect-error\n        !entry.expr.evalSync({ feature: args[0] })\n      ) {\n        return false\n      }\n    }\n    return true\n  }\n\n  toJSON() {\n    return { filters: this.filterChain.map(f => f.string) }\n  }\n\n  static fromJSON(json: { filters: SerializedFilterChain }) {\n    return new SerializableFilterChain(json)\n  }\n}\n","import { getSnapshot, isStateTreeNode } from 'mobx-state-tree'\n\nimport { assembleLocStringFast } from '.'\nimport {\n  BlockSet,\n  ContentBlock,\n  ElidedBlock,\n  InterRegionPaddingBlock,\n} from './blockTypes'\nimport { intersection2 } from './range'\n\nimport type { Base1DViewModel } from './calculateStaticBlocks'\n\n/**\n * returns a BlockSet of which the `blocks` attribute is an array of 'dynamic\n * blocks', which are blocks representing only the regions that are visible in\n * the view right now. these are mostly used by tracks for which static blocks\n * are not feasible.\n *\n * each block is a plain JS object like:\n *   `{ refName, start, end, offsetPx, reversed? }`\n *\n * start and end are in bp, and start is always less than end, but if reversed\n * is true, startBp will be on the right side of the visible region.\n *\n * offsetPx is the number of pixels from the left edge of the view to the left\n * edge of the region\n *\n * NOTE: start, end, and offsetPx may all be fractional!\n *\n * @returns BlockSet of `{ refName, startBp, end, offset, reversed? }`\n */\nexport default function calculateDynamicBlocks(\n  model: Base1DViewModel,\n  padding = true,\n  elision = true,\n) {\n  const {\n    offsetPx,\n    displayedRegions,\n    bpPerPx,\n    width,\n    minimumBlockWidth,\n    interRegionPaddingWidth,\n  } = model\n\n  if (!width) {\n    throw new Error('view has no width, cannot calculate displayed blocks')\n  }\n  const blocks = new BlockSet()\n  let displayedRegionLeftPx = 0\n  const windowLeftPx = offsetPx\n  const windowRightPx = windowLeftPx + width\n  for (\n    let regionNumber = 0;\n    regionNumber < displayedRegions.length;\n    regionNumber++\n  ) {\n    const region = displayedRegions[regionNumber]\n    const {\n      assemblyName,\n      refName,\n      start: regionStart,\n      end: regionEnd,\n      reversed,\n    } = region!\n    const displayedRegionRightPx =\n      displayedRegionLeftPx + (regionEnd - regionStart) / bpPerPx\n\n    const regionWidthPx = (regionEnd - regionStart) / bpPerPx\n    const parentRegion = isStateTreeNode(region) ? getSnapshot(region) : region\n\n    const [leftPx, rightPx] = intersection2(\n      windowLeftPx,\n      windowRightPx,\n      displayedRegionLeftPx,\n      displayedRegionRightPx,\n    )\n    if (leftPx !== undefined && rightPx !== undefined) {\n      // this displayed region overlaps the view, so make a record for it\n      let start: number\n      let end: number\n      let isLeftEndOfDisplayedRegion: boolean\n      let isRightEndOfDisplayedRegion: boolean\n      let blockOffsetPx: number\n      if (reversed) {\n        start = Math.max(\n          regionStart,\n          regionEnd - (rightPx - displayedRegionLeftPx) * bpPerPx,\n        )\n        end = regionEnd - (leftPx - displayedRegionLeftPx) * bpPerPx\n        isLeftEndOfDisplayedRegion = end === regionEnd\n        isRightEndOfDisplayedRegion = start === regionStart\n        blockOffsetPx = displayedRegionLeftPx + (regionEnd - end) / bpPerPx\n      } else {\n        start = (leftPx - displayedRegionLeftPx) * bpPerPx + regionStart\n        end = Math.min(\n          regionEnd,\n          (rightPx - displayedRegionLeftPx) * bpPerPx + regionStart,\n        )\n        isLeftEndOfDisplayedRegion = start === regionStart\n        isRightEndOfDisplayedRegion = end === regionEnd\n        blockOffsetPx = displayedRegionLeftPx + (start - regionStart) / bpPerPx\n      }\n      const widthPx = (end - start) / bpPerPx\n      const blockData = {\n        assemblyName,\n        refName,\n        start,\n        end,\n        reversed,\n        offsetPx: blockOffsetPx,\n        parentRegion,\n        regionNumber,\n        widthPx,\n        isLeftEndOfDisplayedRegion,\n        isRightEndOfDisplayedRegion,\n        key: '',\n      }\n      blockData.key = `${assembleLocStringFast(blockData)}-${regionNumber}${\n        reversed ? '-reversed' : ''\n      }`\n\n      if (padding && blocks.length === 0 && isLeftEndOfDisplayedRegion) {\n        blocks.push(\n          new InterRegionPaddingBlock({\n            key: `${blockData.key}-beforeFirstRegion`,\n            widthPx: -offsetPx,\n            offsetPx: blockData.offsetPx + offsetPx,\n            variant: 'boundary',\n          }),\n        )\n      }\n\n      if (elision && regionWidthPx < minimumBlockWidth) {\n        blocks.push(new ElidedBlock(blockData))\n      } else {\n        blocks.push(new ContentBlock(blockData))\n      }\n\n      if (padding) {\n        // insert a inter-region padding block if we are crossing a displayed region\n        if (\n          regionWidthPx >= minimumBlockWidth &&\n          blockData.isRightEndOfDisplayedRegion &&\n          regionNumber < displayedRegions.length - 1\n        ) {\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-rightpad`,\n              widthPx: interRegionPaddingWidth,\n              offsetPx: blockData.offsetPx + blockData.widthPx,\n            }),\n          )\n          displayedRegionLeftPx += interRegionPaddingWidth\n        }\n\n        if (\n          regionNumber === displayedRegions.length - 1 &&\n          blockData.isRightEndOfDisplayedRegion\n        ) {\n          blockOffsetPx = blockData.offsetPx + blockData.widthPx\n          blocks.push(\n            new InterRegionPaddingBlock({\n              key: `${blockData.key}-afterLastRegion`,\n              widthPx: width - blockOffsetPx + offsetPx,\n              offsetPx: blockOffsetPx,\n              variant: 'boundary',\n            }),\n          )\n        }\n      }\n    }\n    displayedRegionLeftPx += (regionEnd - regionStart) / bpPerPx\n  }\n  return blocks\n}\n","import { useEffect, useRef } from 'react'\n\nimport { ThemeProvider } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { type Root, hydrateRoot } from 'react-dom/client'\n\n// locals\nimport { createJBrowseTheme } from '../../ui'\nimport { rIC } from '../../util'\n\nimport type { AnyReactComponentType, Feature } from '../../util'\nimport type { ThemeOptions } from '@mui/material'\n\ninterface Props {\n  html: string\n  features: Map<string, Feature>\n  theme: ThemeOptions\n\n  displayModel?: any\n  RenderingComponent: AnyReactComponentType\n}\n\nconst RpcRenderedSvgGroup = observer(function RpcRenderedSvgGroup(\n  props: Props,\n) {\n  const { html, theme, RenderingComponent, ...rest } = props\n  const ref = useRef<SVGGElement>(null)\n  const rootRef = useRef<Root>(null)\n\n  useEffect(() => {\n    const renderTimeout = rIC(() => {\n      if (!ref.current) {\n        return\n      }\n      const jbrowseTheme = createJBrowseTheme(theme)\n      rootRef.current =\n        rootRef.current ??\n        hydrateRoot(\n          ref.current,\n          <ThemeProvider theme={jbrowseTheme}>\n            <RenderingComponent {...rest} />\n          </ThemeProvider>,\n        )\n    })\n    return () => {\n      if (renderTimeout !== undefined) {\n        clearTimeout(renderTimeout)\n      }\n      const root = rootRef.current\n      rootRef.current = null\n\n      setTimeout(() => {\n        root?.unmount()\n      })\n    }\n    // biome-ignore lint/correctness/useExhaustiveDependencies:\n  }, [RenderingComponent, theme, rest])\n\n  return <g ref={ref} dangerouslySetInnerHTML={{ __html: html }} />\n})\n\nexport default RpcRenderedSvgGroup\n","import FeatureRenderer from './FeatureRendererType'\nimport RpcRenderedSvgGroup from './RpcRenderedSvgGroup'\nimport { SimpleFeature } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { ThemeOptions } from '@mui/material'\n\nexport default class CircularChordRendererType extends FeatureRenderer {\n  supportsSVG = true\n\n  deserializeResultsInClient(\n    res: { features: SimpleFeatureSerialized[]; html: string },\n    args: {\n      displayModel?: any\n      theme: ThemeOptions\n      exportSVG?: { rasterizeLayers?: boolean }\n    },\n  ) {\n    const deserializedFeatures = new Map(\n      res.features.map(f => SimpleFeature.fromJSON(f)).map(f => [f.id(), f]),\n    )\n    // if we are rendering svg, we skip hydration\n    if (args.exportSVG) {\n      // only return the res if the renderer explicitly has\n      // this.supportsSVG support to avoid garbage being rendered in SVG\n      // document\n      return {\n        ...res,\n        features: deserializedFeatures,\n        blockKey: 'circularChord',\n        html: this.supportsSVG\n          ? res.html\n          : '<text y=\"12\" fill=\"black\">SVG export not supported for this track</text>',\n      }\n    }\n\n    // hydrate res using ServerSideRenderedContent\n    return {\n      ...res,\n      features: deserializedFeatures,\n      blockKey: 'circularChord',\n      reactElement: (\n        <RpcRenderedSvgGroup\n          {...args}\n          {...res}\n          features={deserializedFeatures}\n          RenderingComponent={this.ReactComponent}\n        />\n      ),\n    }\n  }\n}\n","import type { Region, ViewSnap } from './index'\n\nexport interface BpOffset {\n  refName?: string\n  index: number\n  offset: number\n  start?: number\n  end?: number\n}\n\nfunction lengthBetween(self: ViewSnap, start: BpOffset, end: BpOffset) {\n  let bpSoFar = 0\n  const { displayedRegions } = self\n  if (start.index === end.index) {\n    bpSoFar += end.offset - start.offset\n  } else {\n    const s = displayedRegions[start.index]!\n    bpSoFar += s.end - s.start - start.offset\n    if (end.index - start.index >= 2) {\n      for (let i = start.index + 1; i < end.index; i++) {\n        const region = displayedRegions[i]!\n        const len = region.end - region.start\n        bpSoFar += len\n      }\n    }\n    bpSoFar += end.offset\n  }\n  return bpSoFar\n}\n\nexport function moveTo(\n  self: ViewSnap & {\n    zoomTo: (arg: number) => number\n    scrollTo: (arg: number) => void\n  },\n  start?: BpOffset,\n  end?: BpOffset,\n) {\n  if (!start || !end) {\n    return\n  }\n  const {\n    width,\n    interRegionPaddingWidth,\n    displayedRegions,\n    bpPerPx,\n    minimumBlockWidth,\n  } = self\n\n  const len = lengthBetween(self, start, end)\n  let numBlocksWideEnough = 0\n  for (let i = start.index; i < end.index; i++) {\n    const r = displayedRegions[i]!\n    if ((r.end - r.start) / bpPerPx > minimumBlockWidth) {\n      numBlocksWideEnough++\n    }\n  }\n\n  const targetBpPerPx =\n    len / (width - interRegionPaddingWidth * numBlocksWideEnough)\n  const newBpPerPx = self.zoomTo(targetBpPerPx)\n\n  // If our target bpPerPx was smaller than the allowed minBpPerPx, adjust\n  // the scroll so the requested range is in the middle of the screen\n  let extraBp = 0\n  if (targetBpPerPx < newBpPerPx) {\n    extraBp = ((newBpPerPx - targetBpPerPx) * self.width) / 2\n  }\n\n  let bpToStart = -extraBp\n\n  for (let i = 0; i < self.displayedRegions.length; i += 1) {\n    const region = self.displayedRegions[i]!\n    if (start.index === i) {\n      bpToStart += start.offset\n      break\n    } else {\n      bpToStart += region.end - region.start\n    }\n  }\n\n  self.scrollTo(Math.round(bpToStart / self.bpPerPx))\n}\n\nfunction coord(r: Region, bp: number) {\n  return Math.floor(r.reversed ? r.end - bp : r.start + bp) + 1\n}\n\n// manual return type since getSnapshot hard to infer here\nexport function pxToBp(\n  self: ViewSnap,\n  px: number,\n): {\n  coord: number\n  index: number\n  refName: string\n  oob: boolean\n  assemblyName: string\n  offset: number\n  start: number\n  end: number\n  reversed?: boolean\n} {\n  let bpSoFar = 0\n  const {\n    bpPerPx,\n    offsetPx,\n    displayedRegions,\n    interRegionPaddingWidth,\n    staticBlocks,\n  } = self\n  const blocks = staticBlocks.contentBlocks\n  const bp = (offsetPx + px) * bpPerPx\n  if (bp < 0) {\n    const r = displayedRegions[0]!\n    const snap = r\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(snap as Omit<typeof snap, symbol>),\n      oob: true,\n      coord: coord(r, bp),\n      offset: bp,\n      index: 0,\n    }\n  }\n\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  let currBlock = 0\n  for (let i = 0; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]!\n    const len = r.end - r.start\n    const offset = bp - bpSoFar\n    if (len + bpSoFar > bp && bpSoFar <= bp) {\n      const snap = r\n      return {\n        // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n        ...(snap as Omit<typeof snap, symbol>),\n        oob: false,\n        offset,\n        coord: coord(r, offset),\n        index: i,\n      }\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n\n  if (bp >= bpSoFar && displayedRegions.length > 0) {\n    const r = displayedRegions.at(-1)!\n    const len = r.end - r.start\n    const offset = bp - bpSoFar + len\n\n    const snap = r\n    return {\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      ...(snap as Omit<typeof snap, symbol>),\n      oob: true,\n      offset,\n      coord: coord(r, offset),\n      index: displayedRegions.length - 1,\n    }\n  }\n  return {\n    coord: 0,\n    index: 0,\n    refName: '',\n    oob: true,\n    assemblyName: '',\n    offset: 0,\n    start: 0,\n    end: 0,\n    reversed: false,\n  }\n}\n\nexport function bpToPx({\n  refName,\n  coord,\n  regionNumber,\n  self,\n}: {\n  refName: string\n  coord: number\n  regionNumber?: number\n  self: ViewSnap\n}) {\n  let bpSoFar = 0\n\n  const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } =\n    self\n  const blocks = staticBlocks.contentBlocks\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  let currBlock = 0\n\n  let i = 0\n  for (; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]!\n    const len = r.end - r.start\n    if (\n      refName === r.refName &&\n      coord >= r.start &&\n      coord <= r.end &&\n      (regionNumber ? regionNumber === i : true)\n    ) {\n      bpSoFar += r.reversed ? r.end - coord : coord - r.start\n      break\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n  const found = displayedRegions[i]\n  if (found) {\n    return {\n      index: i,\n      offsetPx: Math.round(bpSoFar / bpPerPx),\n    }\n  }\n\n  return undefined\n}\n\nexport function bpToPxMap({\n  refName,\n  coord,\n  regionNumber,\n  self,\n}: {\n  refName: string\n  coord: number\n  regionNumber?: number\n  self: ViewSnap\n}) {\n  let bpSoFar = 0\n\n  const { interRegionPaddingWidth, bpPerPx, displayedRegions, staticBlocks } =\n    self\n  const blocks = staticBlocks.contentBlocks\n  const interRegionPaddingBp = interRegionPaddingWidth * bpPerPx\n  const map = {}\n  let currBlock = 0\n\n  let i = 0\n  for (; i < displayedRegions.length; i++) {\n    const r = displayedRegions[i]!\n    const len = r.end - r.start\n    if (\n      refName === r.refName &&\n      coord >= r.start &&\n      coord <= r.end &&\n      (regionNumber === undefined ? true : regionNumber === i)\n    ) {\n      bpSoFar += r.reversed ? r.end - coord : coord - r.start\n      break\n    }\n\n    // add the interRegionPaddingWidth if the boundary is in the screen e.g. in\n    // a static block\n    if (blocks[currBlock]?.regionNumber === i) {\n      bpSoFar += len + interRegionPaddingBp\n      currBlock++\n    } else {\n      bpSoFar += len\n    }\n  }\n  const found = displayedRegions[i]\n  if (found) {\n    return {\n      index: i,\n      offsetPx: Math.round(bpSoFar / bpPerPx),\n    }\n  }\n\n  return map\n}\n","import type React from 'react'\n\nimport PluggableElementBase from '../PluggableElementBase'\n\nimport type PluginManager from '../../PluginManager'\nimport type { AnyConfigurationSchemaType } from '../../configuration'\nimport type { AnyReactComponentType } from '../../util'\n\nexport type RenderProps = Record<string, unknown>\n\nexport interface RenderResults {\n  reactElement?: React.ReactElement\n  html?: string\n}\n\nexport default class RendererType extends PluggableElementBase {\n  ReactComponent: AnyReactComponentType\n\n  supportsSVG = true\n\n  configSchema: AnyConfigurationSchemaType\n\n  pluginManager: PluginManager\n\n  constructor(stuff: {\n    name: string\n    ReactComponent: AnyReactComponentType\n    displayName?: string\n    configSchema: AnyConfigurationSchemaType\n    pluginManager: PluginManager\n  }) {\n    super(stuff)\n    this.ReactComponent = stuff.ReactComponent\n    this.configSchema = stuff.configSchema\n    this.pluginManager = stuff.pluginManager\n  }\n\n  async render(props: RenderProps): Promise<RenderResults> {\n    return {\n      reactElement: <this.ReactComponent {...props} />,\n    }\n  }\n\n  freeResources(_args: any) {}\n}\n","import type { Mismatch } from '../shared/types'\n\nexport function cigarToMismatches(\n  ops: string[],\n  seq?: string,\n  ref?: string,\n  qual?: Uint8Array,\n) {\n  let roffset = 0 // reference offset\n  let soffset = 0 // seq offset\n  const mismatches: Mismatch[] = []\n  const hasRefAndSeq = ref && seq\n  for (let i = 0; i < ops.length; i += 2) {\n    const len = +ops[i]!\n    const op = ops[i + 1]!\n\n    if (op === 'M' || op === '=' || op === 'E') {\n      if (hasRefAndSeq) {\n        for (let j = 0; j < len; j++) {\n          if (\n            // @ts-ignore in the full yarn build of the repo, this says that\n            // object is possibly undefined for some reason, ignored\n            seq[soffset + j].toUpperCase() !== ref[roffset + j].toUpperCase()\n          ) {\n            mismatches.push({\n              start: roffset + j,\n              type: 'mismatch',\n              base: seq[soffset + j]!,\n              altbase: ref[roffset + j]!,\n              length: 1,\n            })\n          }\n        }\n      }\n      soffset += len\n    }\n    if (op === 'I') {\n      mismatches.push({\n        start: roffset,\n        type: 'insertion',\n        base: `${len}`,\n        length: 0,\n      })\n      soffset += len\n    } else if (op === 'D') {\n      mismatches.push({\n        start: roffset,\n        type: 'deletion',\n        base: '*',\n        length: len,\n      })\n    } else if (op === 'N') {\n      mismatches.push({\n        start: roffset,\n        type: 'skip',\n        base: 'N',\n        length: len,\n      })\n    } else if (op === 'X') {\n      const r = seq?.slice(soffset, soffset + len) || []\n      const q = qual?.subarray(soffset, soffset + len) || []\n\n      for (let j = 0; j < len; j++) {\n        mismatches.push({\n          start: roffset + j,\n          type: 'mismatch',\n          base: r[j] || 'X',\n          qual: q[j],\n          length: 1,\n        })\n      }\n      soffset += len\n    } else if (op === 'H') {\n      mismatches.push({\n        start: roffset,\n        type: 'hardclip',\n        base: `H${len}`,\n        cliplen: len,\n        length: 1,\n      })\n    } else if (op === 'S') {\n      mismatches.push({\n        start: roffset,\n        type: 'softclip',\n        base: `S${len}`,\n        cliplen: len,\n        length: 1,\n      })\n      soffset += len\n    }\n\n    if (op !== 'I' && op !== 'S' && op !== 'H') {\n      roffset += len\n    }\n  }\n  return mismatches\n}\n","import type { Mismatch } from '../shared/types'\n\nconst mdRegex = new RegExp(/(\\d+|\\^[a-z]+|[a-z])/gi)\n\nexport function mdToMismatches(\n  mdstring: string,\n  ops: string[],\n  cigarMismatches: Mismatch[],\n  seq: string,\n  qual?: Uint8Array,\n) {\n  let curr: Mismatch = { start: 0, base: '', length: 0, type: 'mismatch' }\n  let lastCigar = 0\n  let lastTemplateOffset = 0\n  let lastRefOffset = 0\n  let lastSkipPos = 0\n  const mismatchRecords: Mismatch[] = []\n  const skips = cigarMismatches.filter(cigar => cigar.type === 'skip')\n\n  // convert a position on the reference sequence to a position on the template\n  // sequence, taking into account hard and soft clipping of reads\n  function nextRecord(): void {\n    mismatchRecords.push(curr)\n\n    // get a new mismatch record ready\n    curr = {\n      start: curr.start + curr.length,\n      length: 0,\n      base: '',\n      type: 'mismatch',\n    }\n  }\n\n  function getTemplateCoordLocal(refCoord: number): number {\n    let templateOffset = lastTemplateOffset\n    let refOffset = lastRefOffset\n    for (\n      let i = lastCigar;\n      i < ops.length && refOffset <= refCoord;\n      i += 2, lastCigar = i\n    ) {\n      const len = +ops[i]!\n      const op = ops[i + 1]!\n\n      if (op === 'S' || op === 'I') {\n        templateOffset += len\n      } else if (op === 'D' || op === 'P' || op === 'N') {\n        refOffset += len\n      } else if (op !== 'H') {\n        templateOffset += len\n        refOffset += len\n      }\n    }\n    lastTemplateOffset = templateOffset\n    lastRefOffset = refOffset\n\n    return templateOffset - (refOffset - refCoord)\n  }\n\n  // now actually parse the MD string\n  const md = mdstring.match(mdRegex) || []\n  for (const token of md) {\n    const num = +token\n    if (!Number.isNaN(num)) {\n      curr.start += num\n    } else if (token.startsWith('^')) {\n      curr.start += token.length - 1\n    } else {\n      // mismatch\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let j = 0; j < token.length; j += 1) {\n        curr.length = 1\n\n        while (lastSkipPos < skips.length) {\n          const mismatch = skips[lastSkipPos]!\n          if (curr.start >= mismatch.start) {\n            curr.start += mismatch.length\n            lastSkipPos++\n          } else {\n            break\n          }\n        }\n        const s = getTemplateCoordLocal(curr.start)\n        curr.base = seq[s] || 'X'\n        curr.qual = qual?.[s]\n        curr.altbase = token\n        nextRecord()\n      }\n    }\n  }\n  return mismatchRecords\n}\n","import { cigarToMismatches } from './cigarToMismatches'\nimport { mdToMismatches } from './mdToMismatches'\n\nimport type { Mismatch } from '../shared/types'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst cigarRegex = new RegExp(/([MIDNSHPX=])/)\nconst startClip = new RegExp(/(\\d+)[SH]$/)\nconst endClip = new RegExp(/^(\\d+)([SH])/)\n\nexport function parseCigar(cigar = '') {\n  return cigar.split(cigarRegex).slice(0, -1)\n}\n\nexport function getMismatches(\n  cigar?: string,\n  md?: string,\n  seq?: string,\n  ref?: string,\n  qual?: Uint8Array,\n) {\n  let mismatches: Mismatch[] = []\n  const ops = parseCigar(cigar)\n  // parse the CIGAR tag if it has one\n  if (cigar) {\n    mismatches = mismatches.concat(cigarToMismatches(ops, seq, ref, qual))\n  }\n\n  // now let's look for CRAM or MD mismatches\n  if (md && seq) {\n    mismatches = mismatches.concat(\n      mdToMismatches(md, ops, mismatches, seq, qual),\n    )\n  }\n\n  return mismatches\n}\n\nexport function getOrientedCigar(flip: boolean, cigar: string[]) {\n  if (flip) {\n    const ret = []\n    for (let i = 0; i < cigar.length; i += 2) {\n      const len = cigar[i]!\n      let op = cigar[i + 1]!\n      if (op === 'D') {\n        op = 'I'\n      } else if (op === 'I') {\n        op = 'D'\n      }\n      ret.push(len, op)\n    }\n    return ret\n  }\n  return cigar\n}\n\nexport function getOrientedMismatches(flip: boolean, cigar: string) {\n  const p = parseCigar(cigar)\n  return cigarToMismatches(flip ? getOrientedCigar(flip, p) : p)\n}\n\nexport function getLengthOnRef(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let lengthOnRef = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]!\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'I') {\n      lengthOnRef += len\n    }\n  }\n  return lengthOnRef\n}\n\nexport function getLength(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]!\n    const op = cigarOps[i + 1]\n    if (op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nexport function getLengthSansClipping(cigar: string) {\n  const cigarOps = parseCigar(cigar)\n  let length = 0\n  for (let i = 0; i < cigarOps.length; i += 2) {\n    const len = +cigarOps[i]!\n    const op = cigarOps[i + 1]\n    if (op !== 'H' && op !== 'S' && op !== 'D' && op !== 'N') {\n      length += len\n    }\n  }\n  return length\n}\n\nexport function getClip(cigar: string, strand: number) {\n  return strand === -1\n    ? +(startClip.exec(cigar) || [])[1]! || 0\n    : +(endClip.exec(cigar) || [])[1]! || 0\n}\n\nexport function getTag(feature: Feature, tag: string) {\n  return feature.get('tags')[tag]\n}\n\n// produces a list of \"feature-like\" object from parsing supplementary\n// alignments in the SA tag\n//\n// @param normalize - used specifically in the linear-read-vs-ref context, it\n// flips features around relative to the original feature. other contexts of\n// usage can keep this false\nexport function featurizeSA(\n  SA: string | undefined,\n  id: string,\n  strand: number,\n  readName: string,\n  normalize?: boolean,\n) {\n  return (\n    SA?.split(';')\n      .filter(aln => !!aln)\n      .map((aln, index) => {\n        const ret = aln.split(',')\n        const saRef = ret[0]!\n        const saStart = ret[1]!\n        const saStrand = ret[2]!\n        const saCigar = ret[3]!\n        const saLengthOnRef = getLengthOnRef(saCigar)\n        const saLength = getLength(saCigar)\n        const saLengthSansClipping = getLengthSansClipping(saCigar)\n        const saStrandNormalized = saStrand === '-' ? -1 : 1\n        const saClipPos = getClip(\n          saCigar,\n          (normalize ? strand : 1) * saStrandNormalized,\n        )\n        const saRealStart = +saStart - 1\n        return {\n          refName: saRef,\n          start: saRealStart,\n          end: saRealStart + saLengthOnRef,\n          seqLength: saLength,\n          clipPos: saClipPos,\n          CIGAR: saCigar,\n          strand: (normalize ? strand : 1) * saStrandNormalized,\n          uniqueId: `${id}_SA${index}`,\n          mate: {\n            start: saClipPos,\n            end: saClipPos + saLengthSansClipping,\n            refName: readName,\n          },\n        }\n      }) || []\n  )\n}\n\nexport { getNextRefPos } from './getNextRefPos'\n","import { TextField } from '@mui/material'\n\nimport type {\n  AutocompleteRenderInputParams,\n  TextFieldProps as TFP,\n} from '@mui/material'\n\nexport default function AutocompleteTextField({\n  TextFieldProps,\n  inputBoxVal,\n  params,\n  setInputValue,\n  setCurrentSearch,\n}: {\n  TextFieldProps: TFP\n  inputBoxVal: string\n  params: AutocompleteRenderInputParams\n  setInputValue: (arg: string) => void\n  setCurrentSearch: (arg: string) => void\n}) {\n  const { helperText, slotProps = {} } = TextFieldProps\n  return (\n    <TextField\n      onBlur={() => {\n        // this is used to restore a refName or the non-user-typed input to the\n        // box on blurring\n        setInputValue(inputBoxVal)\n      }}\n      {...params}\n      {...TextFieldProps}\n      size=\"small\"\n      helperText={helperText}\n      slotProps={{\n        input: {\n          ...params.InputProps,\n          // eslint-disable-next-line @typescript-eslint/no-misused-spread\n          ...slotProps.input,\n        },\n      }}\n      placeholder=\"Search for location\"\n      onChange={e => {\n        setCurrentSearch(e.target.value)\n      }}\n    />\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport BaseResult, {\n  RefSequenceResult,\n} from '@jbrowse/core/TextSearch/BaseResults'\nimport { getSession, measureText, useDebounce } from '@jbrowse/core/util'\nimport { Autocomplete } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport AutocompleteTextField from './AutocompleteTextField'\nimport { getDeduplicatedResult, getFiltered } from './util'\n\nimport type { Option } from './util'\nimport type { LinearGenomeViewModel } from '../../model'\nimport type { TextFieldProps as TFP } from '@mui/material'\n\nconst RefNameAutocomplete = observer(function ({\n  model,\n  onSelect,\n  assemblyName,\n  style,\n  fetchResults,\n  onChange,\n  value,\n  minWidth = 200,\n  maxWidth = 550,\n  TextFieldProps = {},\n}: {\n  model: LinearGenomeViewModel\n  onSelect?: (region: BaseResult) => void\n  onChange?: (val: string) => void\n  assemblyName?: string\n  value?: string\n  fetchResults: (query: string) => Promise<BaseResult[]>\n  style?: React.CSSProperties\n  minWidth?: number\n  maxWidth?: number\n  TextFieldProps?: TFP\n}) {\n  const session = getSession(model)\n  const { assemblyManager } = session\n  const [open, setOpen] = useState(false)\n  const [loaded, setLoaded] = useState(true)\n  const [currentSearch, setCurrentSearch] = useState('')\n  const [inputValue, setInputValue] = useState('')\n  const [searchOptions, setSearchOptions] = useState<Option[]>()\n  const debouncedSearch = useDebounce(currentSearch, 300)\n  const assembly = assemblyName ? assemblyManager.get(assemblyName) : undefined\n  const { coarseVisibleLocStrings, hasDisplayedRegions } = model\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        if (debouncedSearch === '' || !assemblyName) {\n          return\n        }\n\n        setLoaded(false)\n        const results = await fetchResults(debouncedSearch)\n        setLoaded(true)\n        setSearchOptions(getDeduplicatedResult(results))\n      } catch (e) {\n        console.error(e)\n        session.notifyError(`${e}`, e)\n      }\n    })()\n  }, [assemblyName, fetchResults, debouncedSearch, session])\n\n  const inputBoxVal = coarseVisibleLocStrings || value || ''\n\n  // heuristic, text width + 60 accommodates help icon and search icon\n  const width = Math.min(\n    Math.max(measureText(inputBoxVal, 14) + 100, minWidth),\n    maxWidth,\n  )\n\n  const refNames = assembly?.refNames\n  const regionOptions =\n    refNames?.map(refName => ({\n      result: new RefSequenceResult({\n        refName,\n        label: refName,\n        matchedAttribute: 'refName',\n      }),\n    })) || []\n\n  // notes on implementation:\n  // The selectOnFocus setting helps highlight the field when clicked\n  return (\n    <Autocomplete\n      data-testid=\"autocomplete\"\n      disableListWrap\n      disableClearable\n      disabled={!assemblyName}\n      freeSolo\n      includeInputInList\n      selectOnFocus\n      style={{ ...style, width }}\n      value={inputBoxVal}\n      loading={!loaded}\n      inputValue={inputValue}\n      onInputChange={(_event, newInputValue) => {\n        setInputValue(newInputValue)\n        onChange?.(newInputValue)\n      }}\n      loadingText=\"loading results\"\n      open={open}\n      onOpen={() => {\n        setOpen(true)\n      }}\n      onClose={() => {\n        setOpen(false)\n        setLoaded(true)\n        if (hasDisplayedRegions) {\n          setCurrentSearch('')\n          setSearchOptions(undefined)\n        }\n      }}\n      onChange={(_event, selectedOption) => {\n        if (!selectedOption || !assemblyName) {\n          return\n        }\n\n        if (typeof selectedOption === 'string') {\n          // handles string inputs on keyPress enter\n          onSelect?.(new BaseResult({ label: selectedOption }))\n        } else {\n          onSelect?.(selectedOption.result)\n        }\n        setInputValue(inputBoxVal)\n      }}\n      options={searchOptions?.length ? searchOptions : regionOptions}\n      getOptionDisabled={option => option.group === 'limitOption'}\n      filterOptions={(opts, { inputValue }) => getFiltered(opts, inputValue)}\n      renderInput={params => (\n        <AutocompleteTextField\n          params={params}\n          inputBoxVal={inputBoxVal}\n          TextFieldProps={TextFieldProps}\n          setCurrentSearch={setCurrentSearch}\n          setInputValue={setInputValue}\n        />\n      )}\n      getOptionLabel={opt =>\n        typeof opt === 'string' ? opt : opt.result.getDisplayString()\n      }\n    />\n  )\n})\n\nexport default RefNameAutocomplete\n","import BaseResult from '@jbrowse/core/TextSearch/BaseResults'\n\nexport interface Option {\n  group?: string\n  result: BaseResult\n}\n\n// filter so don't need re-filtering\nfunction filterOptions(options: Option[], searchQuery: string) {\n  return options.filter(\n    ({ result }) =>\n      result.getLabel().toLowerCase().includes(searchQuery) ||\n      result.matchedObject,\n  )\n}\n\n// the logic of this method is to only apply a filter to RefSequenceResults\n// because they do not have a matchedObject. the trix search results already\nexport function getFiltered(opts: Option[], inputValue: string) {\n  const filtered = filterOptions(opts, inputValue.toLocaleLowerCase())\n  return [\n    ...filtered.slice(0, 100),\n    ...(filtered.length > 100\n      ? [\n          {\n            group: 'limitOption',\n            result: new BaseResult({\n              label: 'keep typing for more results',\n            }),\n          },\n        ]\n      : []),\n  ]\n}\n\nexport function aggregateResults(results: BaseResult[]) {\n  const m: Record<string, BaseResult[]> = {}\n\n  for (const result of results) {\n    const displayString = result.getDisplayString()\n    if (!m[displayString]) {\n      m[displayString] = []\n    }\n    m[displayString].push(result)\n  }\n  return m\n}\n\nexport function getDeduplicatedResult(results: BaseResult[]) {\n  return Object.entries(aggregateResults(results)).map(\n    ([displayString, results]) =>\n      results.length === 1\n        ? {\n            result: results[0]!,\n          }\n        : {\n            // deduplicate a \"multi-result\"\n            result: new BaseResult({\n              displayString,\n              results,\n              label: displayString,\n            }),\n          },\n  )\n}\n","import { SanitizedHTML } from '@jbrowse/core/ui'\nimport BaseTooltip from '@jbrowse/core/ui/BaseTooltip'\n\nexport default function MultiVariantTooltip({\n  source,\n}: {\n  source: { color?: string; [key: string]: unknown }\n}) {\n  return (\n    <BaseTooltip>\n      {source.color ? (\n        <div\n          style={{\n            width: 10,\n            height: 10,\n            backgroundColor: source.color,\n          }}\n        />\n      ) : null}\n      <SanitizedHTML\n        html={Object.entries(source)\n          .filter(\n            ([key, val]) =>\n              key !== 'color' &&\n              key !== 'name' &&\n              key !== 'HP' &&\n              key !== 'id' &&\n              val !== undefined,\n          )\n          .map(([key, value]) => `${key}:${value}`)\n          .join('<br/>')}\n      />\n    </BaseTooltip>\n  )\n}\n","import { cast, types } from 'mobx-state-tree'\n\nimport { bpToPx, moveTo, pxToBp } from './Base1DUtils'\nimport calculateDynamicBlocks from './calculateDynamicBlocks'\nimport calculateStaticBlocks from './calculateStaticBlocks'\nimport { clamp, sum } from './index'\nimport { ElementId } from './types/mst'\n\nimport type { BpOffset } from './Base1DUtils'\nimport type { Feature } from './simpleFeature'\nimport type { Region as IRegion } from './types'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel Base1DView\n * used in non-lgv view representations of a 1d view e.g. the two axes of the\n * dotplot use this\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst Base1DView = types\n  .model('Base1DView', {\n    /**\n     * #property\n     */\n    id: ElementId,\n    /**\n     * #property\n     */\n    displayedRegions: types.optional(types.frozen<IRegion[]>(), []),\n    /**\n     * #property\n     */\n    bpPerPx: 0,\n    /**\n     * #property\n     */\n    offsetPx: 0,\n    /**\n     * #property\n     */\n    interRegionPaddingWidth: types.optional(types.number, 0),\n    /**\n     * #property\n     */\n    minimumBlockWidth: types.optional(types.number, 0),\n  })\n  .volatile(() => ({\n    features: undefined as undefined | Feature[],\n    volatileWidth: 0,\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setDisplayedRegions(regions: IRegion[]) {\n      self.displayedRegions = cast(regions)\n    },\n    /**\n     * #action\n     */\n    setBpPerPx(val: number) {\n      self.bpPerPx = val\n    },\n    /**\n     * #action\n     */\n    setVolatileWidth(width: number) {\n      self.volatileWidth = width\n    },\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get width() {\n      return self.volatileWidth\n    },\n    /**\n     * #getter\n     */\n    get assemblyNames() {\n      return [...new Set(self.displayedRegions.map(r => r.assemblyName))]\n    },\n    /**\n     * #getter\n     */\n    get displayedRegionsTotalPx() {\n      return this.totalBp / self.bpPerPx\n    },\n\n    /**\n     * #getter\n     */\n    get maxOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const leftPadding = 10\n      return this.displayedRegionsTotalPx - leftPadding\n    },\n\n    /**\n     * #getter\n     */\n    get minOffset() {\n      // objectively determined to keep the linear genome on the main screen\n      const rightPadding = 30\n      return -this.width + rightPadding\n    },\n\n    /**\n     * #getter\n     */\n    get totalBp() {\n      return sum(self.displayedRegions.map(a => a.end - a.start))\n    },\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get dynamicBlocks() {\n      return calculateDynamicBlocks(self)\n    },\n\n    /**\n     * #getter\n     */\n    get staticBlocks() {\n      return calculateStaticBlocks(self)\n    },\n\n    /**\n     * #getter\n     */\n    get currBp() {\n      return sum(this.dynamicBlocks.map(a => a.end - a.start))\n    },\n  }))\n  .views(self => ({\n    /**\n     * #method\n     */\n    pxToBp(px: number) {\n      return pxToBp(self, px)\n    },\n\n    /**\n     * #method\n     */\n    bpToPx({\n      refName,\n      coord,\n      regionNumber,\n    }: {\n      refName: string\n      coord: number\n      regionNumber?: number\n    }) {\n      return bpToPx({ refName, coord, regionNumber, self })?.offsetPx\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setFeatures(features: Feature[]) {\n      self.features = features\n    },\n\n    /**\n     * #action\n     * this makes a zoomed out view that shows all displayedRegions that makes\n     * the overview bar square with the scale bar\n     */\n    showAllRegions() {\n      self.bpPerPx = self.totalBp / self.width\n      self.offsetPx = 0\n    },\n\n    /**\n     * #action\n     */\n    zoomOut() {\n      this.zoomTo(self.bpPerPx * 2)\n    },\n\n    /**\n     * #action\n     */\n    zoomIn() {\n      this.zoomTo(self.bpPerPx / 2)\n    },\n\n    /**\n     * #action\n     */\n    zoomTo(bpPerPx: number, offset = self.width / 2) {\n      const newBpPerPx = clamp(\n        bpPerPx,\n        'minBpPerPx' in self ? (self.minBpPerPx as number) : 0,\n        'maxBpPerPx' in self\n          ? (self.maxBpPerPx as number)\n          : Number.POSITIVE_INFINITY,\n      )\n\n      const oldBpPerPx = self.bpPerPx\n      if (Math.abs(oldBpPerPx - newBpPerPx) < 0.000001) {\n        return oldBpPerPx\n      }\n\n      self.bpPerPx = newBpPerPx\n\n      // tweak the offset so that the center of the view remains at the same\n      // coordinate\n      self.offsetPx = clamp(\n        Math.round(\n          ((self.offsetPx + offset) * oldBpPerPx) / newBpPerPx - offset,\n        ),\n        self.minOffset,\n        self.maxOffset,\n      )\n      return self.bpPerPx\n    },\n\n    /**\n     * #action\n     */\n    scrollTo(offsetPx: number) {\n      const newOffsetPx = clamp(offsetPx, self.minOffset, self.maxOffset)\n      self.offsetPx = newOffsetPx\n      return newOffsetPx\n    },\n    /**\n     * #action\n     */\n    centerAt(coord: number, refName: string | undefined, regionNumber: number) {\n      if (!refName) {\n        return\n      }\n      const centerPx = self.bpToPx({\n        refName,\n        coord,\n        regionNumber,\n      })\n      if (centerPx) {\n        this.scrollTo(Math.round(centerPx - self.width / 2))\n      }\n    },\n\n    /**\n     * #action\n     * note: the scroll is clamped to keep the view on the main screen\n     */\n    scroll(distance: number) {\n      const oldOffsetPx = self.offsetPx\n      const newOffsetPx = clamp(\n        self.offsetPx + distance,\n        self.minOffset,\n        self.maxOffset,\n      )\n      self.offsetPx = newOffsetPx\n      return newOffsetPx - oldOffsetPx\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     * offset is the base-pair-offset in the displayed region, index is the\n     * index of the displayed region in the linear genome view\n     *\n     * @param start - object as `{start, end, offset, index}`\n     * @param end - object as `{start, end, offset, index}`\n     */\n    moveTo(start?: BpOffset, end?: BpOffset) {\n      moveTo(self, start, end)\n    },\n  }))\n\nexport type Base1DViewStateModel = typeof Base1DView\nexport type Base1DViewModel = Instance<Base1DViewStateModel>\n\nexport default Base1DView\n","import FeatureRendererType from './FeatureRendererType'\nimport { LayoutSession } from './LayoutSession'\nimport { readConfObject } from '../../configuration'\nimport { getLayoutId } from '../../util'\nimport PrecomputedLayout from '../../util/layouts/PrecomputedLayout'\n\nimport type {\n  RenderArgs as FeatureRenderArgs,\n  RenderArgsDeserialized as FeatureRenderArgsDeserialized,\n  RenderArgsSerialized as FeatureRenderArgsSerialized,\n  RenderResults as FeatureRenderResults,\n  ResultsDeserialized as FeatureResultsDeserialized,\n  ResultsSerialized as FeatureResultsSerialized,\n} from './FeatureRendererType'\nimport type { LayoutSessionProps } from './LayoutSession'\nimport type RpcManager from '../../rpc/RpcManager'\nimport type { Feature, Region } from '../../util'\nimport type {\n  BaseLayout,\n  SerializedLayout,\n} from '../../util/layouts/BaseLayout'\nimport type GranularRectLayout from '../../util/layouts/GranularRectLayout'\nimport type MultiLayout from '../../util/layouts/MultiLayout'\n\nexport type MyMultiLayout = MultiLayout<GranularRectLayout<unknown>, unknown>\n\nexport interface RenderArgs extends FeatureRenderArgs {\n  bpPerPx: number\n  layoutId: string\n}\n\nexport interface RenderArgsSerialized extends FeatureRenderArgsSerialized {\n  bpPerPx: number\n}\n\nexport interface RenderArgsDeserialized extends FeatureRenderArgsDeserialized {\n  bpPerPx: number\n  layoutId: string\n}\n\nexport interface RenderResults extends FeatureRenderResults {\n  layout: BaseLayout<Feature>\n}\n\nexport interface ResultsSerialized extends FeatureResultsSerialized {\n  maxHeightReached: boolean\n  layout: SerializedLayout\n}\n\nexport interface ResultsDeserialized extends FeatureResultsDeserialized {\n  maxHeightReached: boolean\n  layout: PrecomputedLayout<string>\n}\n\nexport default class BoxRendererType extends FeatureRendererType {\n  layoutSessions: Record<string, LayoutSession> = {}\n\n  createLayoutSession(props: LayoutSessionProps) {\n    return new LayoutSession(props)\n  }\n\n  getLayoutSession(props: { sessionId: string; layoutId: string }) {\n    return this.layoutSessions[getLayoutId(props)]\n  }\n\n  getWorkerSession(\n    props: LayoutSessionProps & { sessionId: string; layoutId: string },\n  ) {\n    const key = getLayoutId(props)\n    if (!this.layoutSessions[key]) {\n      this.layoutSessions[key] = this.createLayoutSession(props)\n    }\n    return this.layoutSessions[key].update(props)\n  }\n\n  getExpandedRegion(region: Region, renderArgs: RenderArgsDeserialized) {\n    const { bpPerPx, config } = renderArgs\n    const maxFeatureGlyphExpansion =\n      readConfObject(config, 'maxFeatureGlyphExpansion') || 0\n    const bpExpansion = Math.round(maxFeatureGlyphExpansion * bpPerPx)\n    return {\n      ...(region as Omit<typeof region, symbol>),\n      start: Math.floor(Math.max(region.start - bpExpansion, 0)),\n      end: Math.ceil(region.end + bpExpansion),\n    }\n  }\n\n  // renaming function to make clear it runs in worker\n  freeResources(args: Record<string, any>) {\n    this.freeResourcesInWorker(args)\n  }\n\n  freeResourcesInWorker(args: Record<string, any>) {\n    const { regions } = args\n\n    // @ts-expect-error\n    const key = getLayoutId(args)\n    const session = this.layoutSessions[key]\n\n    if (session) {\n      const region = regions[0]!\n      session.layout.discardRange(region.refName, region.start, region.end)\n    }\n  }\n\n  async freeResourcesInClient(rpcManager: RpcManager, args: RenderArgs) {\n    const { regions } = args\n    const key = getLayoutId(args)\n    const session = this.layoutSessions[key]\n\n    if (session) {\n      const region = regions[0]!\n      session.layout.discardRange(region.refName, region.start, region.end)\n    }\n    return super.freeResourcesInClient(rpcManager, args)\n  }\n\n  deserializeLayoutInClient(json: SerializedLayout) {\n    return new PrecomputedLayout(json)\n  }\n\n  deserializeResultsInClient(result: ResultsSerialized, args: RenderArgs) {\n    const layout = this.deserializeLayoutInClient(result.layout)\n    return super.deserializeResultsInClient(\n      {\n        ...result,\n        layout,\n      } as FeatureResultsSerialized,\n      args,\n    ) as ResultsDeserialized\n  }\n\n  createLayoutInWorker(args: RenderArgsDeserialized) {\n    const { regions } = args\n    const { layout } = this.getWorkerSession(args)\n    return layout.getSublayout(regions[0]!.refName)\n  }\n\n  serializeResultsInWorker(\n    results: RenderResults,\n    args: RenderArgsDeserialized,\n  ): ResultsSerialized {\n    const { features, ...rest } = super.serializeResultsInWorker(\n      results,\n      args,\n    ) as ResultsSerialized\n\n    const region = args.regions[0]!\n    const layout = results.layout.serializeRegion(\n      this.getExpandedRegion(region, args),\n    )\n    return {\n      ...rest,\n      layout,\n      maxHeightReached: layout.maxHeightReached,\n      features:\n        // floating layout has no rectangles\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        layout.rectangles !== undefined\n          ? features.filter(f => !!layout.rectangles[f.uniqueId])\n          : features,\n    }\n  }\n\n  async render(props: RenderArgsDeserialized): Promise<RenderResults> {\n    const layout =\n      (props.layout as undefined | BaseLayout<unknown>) ||\n      this.createLayoutInWorker(props)\n    const result = await super.render({\n      ...props,\n      layout,\n    })\n    return {\n      ...result,\n      layout,\n    }\n  }\n}\n","/* eslint-disable react-refresh/only-export-components */\n\nimport { isValidElement } from 'react'\n\nimport { CanvasSequence } from 'canvas-sequencer'\n\nimport { blobToDataURL } from './blobToDataURL'\nimport { createCanvas, createImageBitmap } from './offscreenCanvasPonyfill'\n\nexport type RenderReturn = Record<string, unknown> | undefined\n\ntype RendererRet = Promise<RenderReturn> | RenderReturn\n\nexport async function renderToAbstractCanvas(\n  width: number,\n  height: number,\n  opts: {\n    exportSVG?: { rasterizeLayers?: boolean; scale?: number }\n    highResolutionScaling?: number\n  },\n  cb: (ctx: CanvasRenderingContext2D) => RendererRet,\n) {\n  const { exportSVG, highResolutionScaling = 1 } = opts\n\n  if (exportSVG) {\n    if (!exportSVG.rasterizeLayers) {\n      const fakeCtx = new CanvasSequence()\n      const result = await cb(fakeCtx)\n      return {\n        ...result,\n        canvasRecordedData: fakeCtx.toJSON(),\n      }\n    } else {\n      const s = exportSVG.scale || highResolutionScaling\n      const canvas = createCanvas(Math.ceil(width * s), height * s)\n      const ctx = canvas.getContext('2d')\n      if (!ctx) {\n        throw new Error('2d canvas rendering not supported on this platform')\n      }\n      ctx.scale(s, s)\n      const result = await cb(ctx)\n\n      // two methods needed for converting canvas to PNG, one for webworker\n      // offscreen canvas, one for main thread\n      return {\n        ...result,\n        reactElement: (\n          <image\n            width={width}\n            height={height}\n            xlinkHref={\n              'convertToBlob' in canvas\n                ? await blobToDataURL(\n                    await canvas.convertToBlob({\n                      type: 'image/png',\n                    }),\n                  )\n                : canvas.toDataURL('image/png')\n            }\n          />\n        ),\n      }\n    }\n  } else {\n    const s = highResolutionScaling\n    const canvas = createCanvas(Math.ceil(width * s), height * s)\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n      throw new Error('2d canvas rendering not supported on this platform')\n    }\n    ctx.scale(s, s)\n    const result = await cb(ctx)\n    return { ...result, imageData: await createImageBitmap(canvas) }\n  }\n}\n\nexport async function getSerializedSvg(results: {\n  width: number\n  height: number\n  canvasRecordedData: unknown\n}) {\n  const { width, height, canvasRecordedData } = results\n\n  // @ts-ignore needs to be ignore not expect error, produces error in build step\n  const C2S = await import('canvas2svg')\n  const ctx = new C2S.default(width, height)\n  const seq = new CanvasSequence(canvasRecordedData)\n  seq.execute(ctx)\n\n  // innerHTML strips the outer <svg> element from returned data, we add\n  // our own <svg> element in the view's SVG export\n  return ctx.getSvg().innerHTML as string\n}\n\nexport function ReactRendering({\n  rendering,\n}: {\n  rendering: {\n    reactElement?: React.ReactNode\n    html?: string\n  }\n}) {\n  return isValidElement(rendering.reactElement) ? (\n    rendering.reactElement\n  ) : (\n    <g dangerouslySetInnerHTML={{ __html: rendering.html || '' }} />\n  )\n}\n","import { stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={stripAlpha(theme.palette.background.default)}\n    />\n  )\n}\n","import type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\n// SVG component, region separator\nexport default function SVGRegionSeparators({\n  model,\n  height,\n}: {\n  height: number\n  model: LGV\n}) {\n  const { dynamicBlocks, offsetPx, interRegionPaddingWidth } = model\n  return (\n    <>\n      {dynamicBlocks.contentBlocks.slice(1).map(block => (\n        <rect\n          key={block.key}\n          x={block.offsetPx - offsetPx - interRegionPaddingWidth}\n          width={interRegionPaddingWidth}\n          y={0}\n          height={height}\n          fill=\"grey\"\n        />\n      ))}\n    </>\n  )\n}\n","import { getTickDisplayStr, stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\nimport { makeTicks } from '../util'\nimport SVGRegionSeparators from './SVGRegionSeparators'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nfunction Ruler({\n  start,\n  end,\n  bpPerPx,\n  reversed = false,\n  major = true,\n  minor = true,\n  hideText = false,\n}: {\n  start: number\n  end: number\n  bpPerPx: number\n  reversed?: boolean\n  major?: boolean\n  minor?: boolean\n  hideText?: boolean\n}) {\n  const ticks = makeTicks(start, end, bpPerPx, major, minor)\n  const theme = useTheme()\n  const c = stripAlpha(theme.palette.text.secondary)\n  return (\n    <>\n      {ticks.map(tick => {\n        const x = (reversed ? end - tick.base : tick.base - start) / bpPerPx\n        return (\n          <line\n            key={`tick-${tick.base}`}\n            x1={x}\n            x2={x}\n            y1={0}\n            y2={tick.type === 'major' ? 6 : 4}\n            strokeWidth={1}\n            stroke={c}\n          />\n        )\n      })}\n      {!hideText\n        ? ticks\n            .filter(tick => tick.type === 'major')\n            .map(tick => {\n              const x =\n                (reversed ? end - tick.base : tick.base - start) / bpPerPx\n              return (\n                <text\n                  key={`label-${tick.base}`}\n                  x={x - 3}\n                  y={7 + 11}\n                  fontSize={11}\n                  fill={c}\n                >\n                  {getTickDisplayStr(tick.base + 1, bpPerPx)}\n                </text>\n              )\n            })\n        : null}\n    </>\n  )\n}\n\nexport default function SVGRuler({\n  model,\n  fontSize,\n}: {\n  model: LGV\n  fontSize: number\n}) {\n  const {\n    dynamicBlocks: { contentBlocks },\n    offsetPx: viewOffsetPx,\n    bpPerPx,\n  } = model\n  const renderRuler = contentBlocks.length < 5\n  const theme = useTheme()\n  const c = stripAlpha(theme.palette.text.primary)\n  return (\n    <>\n      <SVGRegionSeparators model={model} height={30} />\n      {contentBlocks.map(block => {\n        const { start, end, key, reversed, offsetPx, refName, widthPx } = block\n        const offset = offsetPx - viewOffsetPx\n        const clipid = `clip-${key}`\n        return (\n          <g key={key}>\n            <defs>\n              <clipPath id={clipid}>\n                <rect x={0} y={0} width={widthPx} height={100} />\n              </clipPath>\n            </defs>\n            <g transform={`translate(${offset} 0)`}>\n              <g clipPath={`url(#${clipid})`}>\n                <text x={4} y={fontSize} fontSize={fontSize} fill={c}>\n                  {refName}\n                </text>\n                <g transform=\"translate(0 20)\">\n                  <Ruler\n                    hideText={!renderRuler}\n                    start={start}\n                    end={end}\n                    bpPerPx={bpPerPx}\n                    reversed={reversed}\n                  />\n                </g>\n              </g>\n            </g>\n          </g>\n        )\n      })}\n    </>\n  )\n}\n","import { getBpDisplayStr, stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\nimport type { LinearGenomeViewModel } from '..'\n\ntype LGV = LinearGenomeViewModel\n\nexport default function SVGScalebar({\n  model,\n  fontSize,\n}: {\n  model: LGV\n  fontSize: number\n}) {\n  const {\n    offsetPx,\n    dynamicBlocks: { totalWidthPxWithoutBorders: totalWidthPx, totalBp },\n  } = model\n  const theme = useTheme()\n  const displayBp = getBpDisplayStr(totalBp)\n  const x0 = Math.max(-offsetPx, 0)\n  const x1 = x0 + totalWidthPx\n  const c = stripAlpha(theme.palette.text.secondary)\n  const x = x0 + (x1 - x0) / 2\n  const y = fontSize\n  return (\n    <>\n      <line x1={x0} x2={x1} y1={10} y2={10} stroke={c} />\n      <line x1={x0} x2={x0} y1={5} y2={15} stroke={c} />\n      <line x1={x1} x2={x1} y1={5} y2={15} stroke={c} />\n      <text\n        x={x}\n        y={y}\n        textAnchor=\"middle\"\n        dominantBaseline=\"hanging\"\n        fontSize={fontSize}\n        fill={c}\n      >\n        {displayBp}\n      </text>\n    </>\n  )\n}\n","import { getSession, stripAlpha } from '@jbrowse/core/util'\nimport Base1DView from '@jbrowse/core/util/Base1DViewModel'\nimport { useTheme } from '@mui/material'\n\nimport SVGRuler from './SVGRuler'\nimport SVGScalebar from './SVGScalebar'\nimport Cytobands from '../components/Cytobands'\nimport OverviewScalebarPolygon from '../components/OverviewScalebarPolygon'\nimport { HEADER_OVERVIEW_HEIGHT } from '../consts'\n\nimport type { LinearGenomeViewModel } from '..'\n\nexport default function SVGHeader({\n  model,\n  fontSize,\n  cytobandHeight,\n  rulerHeight,\n}: {\n  model: LinearGenomeViewModel\n  rulerHeight: number\n  fontSize: number\n  cytobandHeight: number\n}) {\n  const { width, assemblyNames, showCytobands, displayedRegions } = model\n  const { assemblyManager } = getSession(model)\n  const assemblyName = assemblyNames.length > 1 ? '' : assemblyNames[0]!\n  const assembly = assemblyManager.get(assemblyName)\n  const theme = useTheme()\n  const c = stripAlpha(theme.palette.text.primary)\n  const overview = Base1DView.create({\n    displayedRegions: JSON.parse(JSON.stringify(displayedRegions)),\n    interRegionPaddingWidth: 0,\n    minimumBlockWidth: model.minimumBlockWidth,\n  })\n  const visibleRegions = model.dynamicBlocks.contentBlocks\n  if (!visibleRegions.length) {\n    return null\n  }\n\n  overview.setVolatileWidth(width)\n  overview.showAllRegions()\n  const block = overview.dynamicBlocks.contentBlocks[0]!\n  const first = visibleRegions.at(0)!\n  const last = visibleRegions.at(-1)!\n  const firstOverviewPx =\n    overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...first,\n      coord: first.reversed ? first.end : first.start,\n    }) || 0\n\n  const lastOverviewPx =\n    overview.bpToPx({\n      // eslint-disable-next-line @typescript-eslint/no-misused-spread\n      ...last,\n      coord: last.reversed ? last.start : last.end,\n    }) || 0\n  const y = +showCytobands * cytobandHeight\n  return (\n    <g id=\"header\">\n      <text x={0} y={0} dominantBaseline=\"hanging\" fontSize={fontSize} fill={c}>\n        {assemblyName}\n      </text>\n\n      {showCytobands ? (\n        <g transform={`translate(0 ${rulerHeight})`}>\n          <Cytobands overview={overview} assembly={assembly} block={block} />\n          <rect\n            stroke=\"red\"\n            fill=\"rgb(255,0,0)\"\n            fillOpacity={0.1}\n            width={Math.max(lastOverviewPx - firstOverviewPx, 0.5)}\n            height={HEADER_OVERVIEW_HEIGHT - 1}\n            x={firstOverviewPx}\n            y={0.5}\n          />\n          <g transform={`translate(0,${HEADER_OVERVIEW_HEIGHT})`}>\n            <OverviewScalebarPolygon\n              overview={overview}\n              model={model}\n              useOffset={false}\n            />\n          </g>\n        </g>\n      ) : null}\n\n      <g transform={`translate(0 ${fontSize + y})`}>\n        <SVGScalebar model={model} fontSize={fontSize} />\n      </g>\n      <g transform={`translate(0 ${rulerHeight + y})`}>\n        <SVGRuler model={model} fontSize={fontSize} />\n      </g>\n    </g>\n  )\n}\n","import { coarseStripHTML, stripAlpha } from '@jbrowse/core/util'\nimport { useTheme } from '@mui/material'\n\nexport default function SVGTrackLabel({\n  trackLabels,\n  trackName,\n  fontSize,\n  trackLabelOffset,\n  x,\n}: {\n  trackName: string\n  trackLabels: string\n  fontSize: number\n  trackLabelOffset: number\n  x: number\n}) {\n  const theme = useTheme()\n  const fill = stripAlpha(theme.palette.text.primary)\n  const xoff = trackLabels === 'overlay' ? 5 : 0\n  const yoff = trackLabels === 'offset' ? 5 : 0\n  const name = coarseStripHTML(trackName)\n  return trackLabels !== 'none' ? (\n    <g>\n      {trackLabels === 'left' ? (\n        <text\n          x={trackLabelOffset - 40}\n          y={20}\n          fill={fill}\n          fontSize={fontSize}\n          dominantBaseline=\"hanging\"\n          textAnchor=\"end\"\n        >\n          {name}\n        </text>\n      ) : (\n        <text\n          x={x + xoff}\n          y={yoff}\n          fill={fill}\n          fontSize={fontSize}\n          dominantBaseline=\"hanging\"\n        >\n          {name}\n        </text>\n      )}\n    </g>\n  ) : null\n}\n","import { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\n\nimport SVGRegionSeparators from './SVGRegionSeparators'\nimport SVGTrackLabel from './SVGTrackLabel'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\ntype LGV = LinearGenomeViewModel\n\ninterface DisplayResult {\n  track: {\n    configuration: AnyConfigurationModel\n    displays: { height: number }[]\n  }\n  result: string\n}\n\n// SVG component, tracks\nexport default function SVGTracks({\n  displayResults,\n  model,\n  textHeight,\n  fontSize,\n  trackLabels = 'offset',\n  trackLabelOffset = 0,\n}: {\n  displayResults: DisplayResult[]\n  model: LGV\n  textHeight: number\n  fontSize: number\n  trackLabels?: string\n  trackLabelOffset?: number\n}) {\n  const session = getSession(model)\n  const textOffset = trackLabels === 'offset' ? textHeight : 0\n  return (\n    <>\n      {\n        displayResults.reduce(\n          ({ prevOffset, reactElements }, { track, result }) => {\n            const conf = track.configuration\n            const trackName = getTrackName(conf, session)\n            const display = track.displays[0]!\n            const x = Math.max(-model.offsetPx, 0)\n            const currOffset = prevOffset + display.height + textOffset\n            return {\n              prevOffset: currOffset,\n              reactElements: [\n                ...reactElements,\n                <g key={conf.trackId} transform={`translate(0 ${prevOffset})`}>\n                  <g transform={`translate(${trackLabelOffset} ${textOffset})`}>\n                    <SVGRegionSeparators\n                      model={model}\n                      height={display.height}\n                    />\n                    {result}\n                  </g>\n                  <SVGTrackLabel\n                    trackName={trackName}\n                    fontSize={fontSize}\n                    trackLabels={trackLabels}\n                    trackLabelOffset={trackLabelOffset}\n                    x={x}\n                  />\n                </g>,\n              ],\n            }\n          },\n          {\n            prevOffset: 0,\n            reactElements: [] as React.ReactElement[],\n          },\n        ).reactElements\n      }\n    </>\n  )\n}\n","/* eslint-disable react-refresh/only-export-components */\n\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport {\n  getSession,\n  max,\n  measureText,\n  renderToStaticMarkup,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ThemeProvider } from '@mui/material'\nimport { when } from 'mobx'\n\nimport SVGBackground from './SVGBackground'\nimport SVGHeader from './SVGHeader'\nimport SVGTracks from './SVGTracks'\nimport { totalHeight } from './util'\n\nimport type { LinearGenomeViewModel } from '..'\nimport type { ExportSvgOptions } from '../types'\n\ntype LGV = LinearGenomeViewModel\n\n// render LGV to SVG\nexport async function renderToSvg(model: LGV, opts: ExportSvgOptions) {\n  await when(() => model.initialized)\n  const {\n    textHeight = 18,\n    headerHeight = 40,\n    rulerHeight = 50,\n    fontSize = 13,\n    cytobandHeight = 100,\n    trackLabels = 'offset',\n    themeName = 'default',\n    Wrapper = ({ children }) => children,\n  } = opts\n  const session = getSession(model)\n  const { allThemes } = session\n\n  const theme = allThemes?.()[themeName]\n  const { width, pinnedTracks, unpinnedTracks, tracks, showCytobands } = model\n  const shift = 50\n  const c = +showCytobands * cytobandHeight\n  const offset = headerHeight + rulerHeight + c + 10\n  const height = totalHeight(tracks, textHeight, trackLabels) + offset + 100\n  const displayResults = await Promise.all(\n    [...pinnedTracks, ...unpinnedTracks].map(async track => {\n      const display = track.displays[0]\n      await when(() => !display.renderProps().notReady)\n      return { track, result: await display.renderSvg({ ...opts, theme }) }\n    }),\n  )\n  const trackLabelMaxLen =\n    max(\n      tracks.map(t =>\n        measureText(getTrackName(t.configuration, session), fontSize),\n      ),\n      0,\n    ) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const w = width + trackLabelOffset\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={createJBrowseTheme(theme)}>\n      <Wrapper>\n        <svg\n          width={w}\n          height={height}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, height].toString()}\n        >\n          <SVGBackground width={w} height={height} shift={shift} />\n          <g transform={`translate(${shift} 0)`}>\n            <g transform={`translate(${trackLabelOffset})`}>\n              <SVGHeader\n                model={model}\n                fontSize={fontSize}\n                rulerHeight={rulerHeight}\n                cytobandHeight={cytobandHeight}\n              />\n            </g>\n            <g transform={`translate(0 ${offset})`}>\n              <SVGTracks\n                textHeight={textHeight}\n                fontSize={fontSize}\n                model={model}\n                displayResults={displayResults}\n                trackLabels={trackLabels}\n                trackLabelOffset={trackLabelOffset}\n              />\n            </g>\n          </g>\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n  )\n}\n\nexport { default as SVGRuler } from './SVGRuler'\nexport { default as SVGTracks } from './SVGTracks'\n","import { getConf } from '@jbrowse/core/configuration'\nimport {\n  getContainingTrack,\n  getContainingView,\n  measureText,\n} from '@jbrowse/core/util'\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\n\nimport YScaleBar from '../../shared/YScaleBar'\n\nimport type { WiggleDisplayModel } from '../model'\nimport type { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\ntype LGV = LinearGenomeViewModel\n\nconst LinearWiggleDisplay = observer(function (props: {\n  model: WiggleDisplayModel\n}) {\n  const { model } = props\n  const { stats, height, graphType } = model\n\n  const { trackLabels } = getContainingView(model) as LGV\n  const track = getContainingTrack(model)\n\n  return (\n    <div>\n      <BaseLinearDisplayComponent {...props} />\n      {stats && graphType ? (\n        <svg\n          style={{\n            position: 'absolute',\n            top: 0,\n            left:\n              trackLabels === 'overlapping'\n                ? measureText(getConf(track, 'name'), 12.8) + 100\n                : 50,\n            pointerEvents: 'none',\n            height,\n            width: 50,\n          }}\n        >\n          <YScaleBar model={model} />\n        </svg>\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearWiggleDisplay\n","import { getSession } from '@jbrowse/core/util'\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks'\nimport { type IAnyStateTreeNode, isAlive } from 'mobx-state-tree'\n\nimport type { ModificationType } from './types'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BlockSet } from '@jbrowse/core/util/blockTypes'\n\nexport interface ModificationOpts {\n  headers?: Record<string, string>\n  stopToken?: string\n  filters: string[]\n}\n\nexport async function getUniqueModifications({\n  model,\n  adapterConfig,\n  blocks,\n  opts,\n}: {\n  model: IAnyStateTreeNode\n  adapterConfig: AnyConfigurationModel\n  blocks: BlockSet\n  opts?: ModificationOpts\n}) {\n  const { rpcManager } = getSession(model)\n  const sessionId = getRpcSessionId(model)\n  const values = await rpcManager.call(\n    sessionId,\n    'PileupGetVisibleModifications',\n    {\n      adapterConfig,\n      sessionId,\n      regions: blocks.contentBlocks,\n      statusCallback: (arg: string) => {\n        if (isAlive(model)) {\n          model.setMessage(arg)\n        }\n      },\n      ...opts,\n    },\n  )\n  return values as ModificationType[]\n}\n","import { HttpRangeFetcher } from '@gmod/http-range-fetcher'\nimport { RemoteFile } from 'generic-filehandle2'\n\ntype BinaryRangeFetch = (\n  url: string,\n  start: number,\n  end: number,\n  options?: { headers?: HeadersInit; stopToken?: string },\n) => Promise<BinaryRangeResponse>\n\nexport interface BinaryRangeResponse {\n  headers: Record<string, string>\n  requestDate: Date\n  responseDate: Date\n  buffer: Uint8Array\n}\n\nconst fetchers: Record<string, BinaryRangeFetch> = {}\n\nfunction binaryRangeFetch(\n  url: string,\n  start: number,\n  end: number,\n  options: { headers?: HeadersInit; stopToken?: string } = {},\n): Promise<BinaryRangeResponse> {\n  const fetcher = fetchers[url]\n  if (!fetcher) {\n    throw new Error(`fetch not registered for ${url}`)\n  }\n  return fetcher(url, start, end, options)\n}\n\nconst globalRangeCache = new HttpRangeFetcher({\n  // @ts-expect-error\n  fetch: binaryRangeFetch,\n  size: 500 * 1024 ** 2, // 500MiB\n  chunkSize: 128 * 1024, // 128KiB\n  maxFetchSize: 100 * 1024 ** 2, // 100MiB\n  minimumTTL: 24 * 60 * 60 * 1000, // 1 day\n})\n\nexport function clearCache() {\n  globalRangeCache.reset()\n}\n\nexport class RemoteFileWithRangeCache extends RemoteFile {\n  public async fetch(\n    url: string | RequestInfo,\n    init?: RequestInit,\n  ): Promise<Response> {\n    const str = String(url)\n    if (!fetchers[str]) {\n      fetchers[str] = this.fetchBinaryRange.bind(this)\n    }\n    // if it is a range request, route it through the range cache\n    const range = new Headers(init?.headers).get('range')\n    if (range) {\n      const rangeParse = /bytes=(\\d+)-(\\d+)/.exec(range)\n      if (rangeParse) {\n        const [, start, end] = rangeParse\n        const s = Number.parseInt(start!, 10)\n        const e = Number.parseInt(end!, 10)\n        const len = e - s\n        const { buffer, headers } = (await globalRangeCache.getRange(\n          `${url}`,\n          s,\n          len + 1,\n        )) as BinaryRangeResponse\n        return new Response(buffer, {\n          status: 206,\n          headers,\n        })\n      }\n    }\n    return super.fetch(url, init)\n  }\n\n  public async fetchBinaryRange(\n    url: string,\n    start: number,\n    end: number,\n    options: { headers?: HeadersInit; stopToken?: string } = {},\n  ): Promise<BinaryRangeResponse> {\n    const requestDate = new Date()\n    const res = await super.fetch(url, {\n      ...options,\n      headers: {\n        // eslint-disable-next-line @typescript-eslint/no-misused-spread\n        ...options.headers,\n        range: `bytes=${start}-${end}`,\n      },\n    })\n    const responseDate = new Date()\n    if (!res.ok) {\n      const errorMessage = `HTTP ${res.status} fetching ${url} bytes ${start}-${end}`\n      const hint = ' (should be 206 for range requests)'\n      throw new Error(`${errorMessage}${res.status === 200 ? hint : ''}`)\n    }\n\n    // translate the Headers object into a regular key -> value object.\n    // will miss duplicate headers of course\n\n    const headers: Record<string, any> = {}\n    for (const [k, v] of res.headers.entries()) {\n      headers[k] = v\n    }\n\n    // return the response headers, and the data buffer\n    const arrayBuffer = await res.arrayBuffer()\n    return {\n      headers,\n      requestDate,\n      responseDate,\n      buffer: new Uint8Array(arrayBuffer),\n    }\n  }\n}\n","import isNode from 'detect-node'\nimport { BlobFile, LocalFile } from 'generic-filehandle2'\n\nimport { RemoteFileWithRangeCache } from './RemoteFileWithRangeCache'\nimport { isElectron } from '../'\nimport { getBlob } from '../tracks'\nimport {\n  AuthNeededError,\n  isRootModelWithInternetAccounts,\n  isUriLocation,\n} from '../types'\n\nimport type PluginManager from '../../PluginManager'\nimport type { BaseInternetAccountModel } from '../../pluggableElementTypes/models'\nimport type {\n  BlobLocation,\n  FileLocation,\n  LocalPathLocation,\n  UriLocation,\n} from '../types'\nimport type { Fetcher, GenericFilehandle } from 'generic-filehandle2'\n\nfunction isLocalPathLocation(\n  location: FileLocation,\n): location is LocalPathLocation {\n  return 'localPath' in location\n}\n\nfunction isBlobLocation(location: FileLocation): location is BlobLocation {\n  return 'blobId' in location\n}\n\n/** if a UriLocation has a baseUri, resolves its uri with respect to that base */\nexport function resolveUriLocation(location: UriLocation) {\n  return location.baseUri\n    ? { ...location, uri: new URL(location.uri, location.baseUri).href }\n    : location\n}\n\nexport function openLocation(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n): GenericFilehandle {\n  if (isLocalPathLocation(location)) {\n    if (!location.localPath) {\n      throw new Error('No local path provided')\n    }\n\n    if (isNode || isElectron) {\n      return new LocalFile(location.localPath)\n    } else {\n      throw new Error(\"can't use local files in the browser\")\n    }\n  }\n  if (isBlobLocation(location)) {\n    // special case where blob is not directly stored on the model, use a getter\n    const blob = getBlob(location.blobId)\n    if (!blob) {\n      throw new Error(\n        `file (\"${location.name}\") was opened locally from a previous session. To restore it, go to track settings and reopen the file`,\n      )\n    }\n    return new BlobFile(blob)\n  }\n  if (isUriLocation(location)) {\n    // Check for empty string\n    if (!location.uri) {\n      throw new Error('No URI provided')\n    }\n\n    // Resolve any relative URLs to absolute URLs\n    const absoluteLocation = resolveUriLocation(location)\n\n    // If there is a plugin manager, we can try internet accounts\n    if (pluginManager) {\n      const internetAccount = getInternetAccount(location, pluginManager)\n      // If an internetAccount was found, use it to open the location\n      if (internetAccount) {\n        return internetAccount.openLocation(absoluteLocation)\n      }\n    }\n    // Otherwise fall back on usual open\n    return new RemoteFileWithRangeCache(absoluteLocation.uri, {\n      fetch: checkAuthNeededFetch,\n    })\n  }\n  throw new Error('invalid fileLocation')\n}\n\nexport function getFetcher(\n  location: FileLocation,\n  pluginManager?: PluginManager,\n): Fetcher {\n  if (!isUriLocation(location)) {\n    throw new Error(`Not a valid UriLocation: ${JSON.stringify(location)}`)\n  }\n  if (pluginManager) {\n    const internetAccount = getInternetAccount(location, pluginManager)\n    if (internetAccount) {\n      return internetAccount.getFetcher(location)\n    }\n  }\n  return checkAuthNeededFetch\n}\n\nfunction getInternetAccount(\n  location: UriLocation,\n  pluginManager: PluginManager,\n): BaseInternetAccountModel | undefined {\n  const { rootModel } = pluginManager\n  // If there is an appRootModel, use it to find the internetAccount\n  if (rootModel && isRootModelWithInternetAccounts(rootModel)) {\n    return rootModel.findAppropriateInternetAccount(location)\n  }\n  // If there is no appRootModel, but there is pre-auth, create a temporary\n  // internetAccount. This is typical in a worker.\n  if (location.internetAccountPreAuthorization) {\n    if (!location.internetAccountPreAuthorization.authInfo.token) {\n      throw new Error(\n        'Failed to obtain token from internet account. Try reloading the page',\n      )\n    }\n    return pluginManager\n      .getInternetAccountType(\n        location.internetAccountPreAuthorization.internetAccountType,\n      )!\n      .stateModel.create({\n        type: location.internetAccountPreAuthorization.internetAccountType,\n        configuration:\n          location.internetAccountPreAuthorization.authInfo.configuration,\n      })\n  }\n  return undefined\n}\n\n// This fetch throws a special error if the response is \"401\" and includes a\n// \"WWW-Authenticate: Basic\" header. This is so downstream code can retry if\n// needed with HTTP Basic authentication included\nasync function checkAuthNeededFetch(url: RequestInfo, opts?: RequestInit) {\n  const response = await fetch(url, opts)\n  if (\n    response.status === 401 &&\n    response.headers.get('WWW-Authenticate')?.includes('Basic')\n  ) {\n    throw new AuthNeededError(\n      'Accessing HTTPBasic resource without authentication',\n      url.toString(),\n    )\n  }\n  return response\n}\n\nexport { RemoteFileWithRangeCache } from './RemoteFileWithRangeCache'\n"],"names":["ServerSideRenderer","RendererType","serializeArgsInClient","args","config","isStateTreeNode","getSnapshot","filters","toJSON","deserializeResultsInClient","res","exportSVG","html","this","supportsSVG","reactElement","_jsx","ServerSideRenderedContent","RenderingComponent","ReactComponent","deserializeArgsInWorker","deserialized","configSchema","create","pluginManager","SerializableFilterChain","undefined","serializeResultsInWorker","results","renderToString","ThemeProvider","theme","createJBrowseTheme","children","renderInClient","rpcManager","call","sessionId","getSerializedSvg","renderInWorker","stopToken","statusCallback","deserializedArgs","updateStatus","render","checkStopToken","freeResourcesInClient","serializedArgs","stitch","subfeats","sequence","map","sub","slice","start","end","join","getItemId","feat","dedupe","list","filter","item","pos","ary","revlist","seqlen","sort","a","b","calculateUTRs","cds","exons","length","firstCds","at","lastCds","firstCdsIdx","findIndex","exon","lastCdsIdx","lastCdsExon","firstCdsExon","elt","type","calculateUTRs2","parentFeat","ellipses","slug","replaceUndefinedWithNull","obj","JSON","parse","stringify","_","v","stateModelFactory","types","model","id","ElementId","literal","filterText","view","safeReference","pluggableMstType","actions","self","clearFilterText","setFilterText","newText","ConfigurationSchema","PluginStoreWidgetF","addWidgetType","WidgetType","name","heading","stateModel","lazy","defaultValue","description","assemblyNames","explicitlyTyped","explicitIdentifier","identifier","tracks","array","pluggableConfigSchemaType","configuration","ConfigurationReference","connect","_arg","afterAttach","addTrackConf","trackConf","push","addTrackConfs","trackConfs","setTrackConfs","cast","clear","BaseDisplay","string","rpcDriverName","maybe","volatile","rendererTypeName","error","message","views","getEnv","getDisplayType","DisplayBlurb","adapterConfig","getConf","parentTrack","track","getParent","isRoot","Error","renderProps","getParentRenderProps","notReady","getContainingView","minimized","displayModel","rendererType","getRendererType","DisplayMessageComponent","trackMenuItems","viewMenuActions","regionCannotBeRendered","setMessage","arg","setError","setRpcDriverName","reload","BaseInternetAccountConfig","authHeader","tokenType","domains","inWebWorker","sessionStorage","InternetAccount","internetAccountId","toggleContents","SelectorComponent","selectorLabel","handlesLocation","location","some","domain","uri","includes","tokenKey","getTokenFromUser","_resolve","_reject","storeToken","token","setItem","removeToken","removeItem","retrieveToken","getItem","async","validateToken","_loc","tokenPromise","getToken","internetAccountPreAuthorization","authInfo","Promise","resolve","reject","addAuthHeaderToInit","init","headers","Headers","getPreAuthorizationInformation","authToken","validatedToken","internetAccountType","getFetcher","loc","input","newInit","fetch","openLocation","RemoteFileWithRangeCache","createBaseTrackModel","pm","trackType","baseTrackConfig","pinned","displays","rpcSessionId","adapter","adapterConfigCacheKey","trackId","textSearchAdapter","adapterType","getAdapterType","flatMap","d","canConfigure","session","getSession","sessionTracks","adminMode","isSessionModelWithConfigEditing","find","t","setPinned","flag","setMinimized","showDisplay","displayId","initialSnapshot","schema","conf","resolveIdentifier","getRoot","displayType","display","hideDisplay","transaction","forEach","remove","replaceDisplay","oldId","newId","idx","splice","menuItems","shownId","compatDisp","viewType","getViewType","compatTypes","Set","displayTypes","has","getCompatibleDisplays","label","priority","subMenu","displayName","checked","onClick","createBaseTrackConfig","category","metadata","textSearching","indexingAttributes","indexingFeatureTypesToExclude","formatDetails","feature","contextVariable","subfeatures","depth","maxDepth","formatAbout","hideUris","preProcessSnapshot","s2","snap","evaluateExtensionPoint","structuredClone","configDisplayTypes","getTrackType","addDisplayConf","MultiLayout","subLayouts","Map","constructor","SubLayoutClass","subLayoutConstructorArgs","getDataByID","layout","values","r","getSublayout","layoutName","subLayout","get","set","addRect","left","right","height","data","discardRange","sublayout","entries","TooltipContents","forwardRef","ref","isValidElement","SanitizedHTML","String","observer","clientMouseCoord","featureUnderMouse","x","y","contents","BaseTooltip","clientPoint","isObject","value","isObjectCustom","RegExp","Date","globalThis","Blob","object","mapper","isSeen","WeakSet","add","mapArray","element","Array","isArray","Object","RpcMethodType","PluggableElementBase","super","serializeArguments","rpcDriverClassName","blobMap","getBlobMap","augmentLocationObjects","serializeNewAuthArguments","rootModel","isAppRootModel","account","findAppropriateInternetAccount","deserializeArguments","_rpcDriverClassName","setBlobMap","serializeReturn","originalReturn","_args","deserializeReturn","serializedReturn","isAuthNeededException","retryAccount","createEphemeralInternetAccount","URL","url","origin","RetryError","thing","uris","mapObject","val","isUriLocation","Entries","Accordion","AccordionActions","AccordionDetails","AccordionSummary","Alert","AlertTitle","Autocomplete","Avatar","AvatarGroup","Backdrop","Badge","Box","Breadcrumbs","Button","ButtonGroup","Card","CardActions","CardActionArea","CardContent","CardHeader","CardMedia","CircularProgress","Collapse","ClickAwayListener","Chip","Checkbox","Container","Dialog","DialogActions","DialogTitle","DialogContent","DialogContentText","Divider","Drawer","Fab","Fade","FilledInput","FormLabel","FormControl","FormControlLabel","FormHelperText","FormGroup","Grid","Grid2","Grow","Icon","IconButton","Input","InputBase","InputLabel","InputAdornment","Link","LinearProgress","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemIcon","ListSubheader","ListItemText","Menu","MenuItem","MenuList","Modal","NativeSelect","OutlinedInput","Pagination","PaginationItem","Paper","Popover","Popper","Portal","Radio","RadioGroup","Rating","ScopedCssBaseline","Select","Skeleton","Slider","Snackbar","SnackbarContent","SpeedDial","SpeedDialAction","SpeedDialIcon","Stack","Step","StepButton","StepConnector","StepLabel","StepIcon","Stepper","SvgIcon","Switch","Tab","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TablePagination","TableRow","TableSortLabel","Tabs","TextField","TextareaAutosize","ToggleButton","ToggleButtonGroup","Toolbar","Tooltip","Typography","LazyMUICore","fromEntries","key","Component","props","Suspense","fallback","MaterialPrefixMUI","MuiPrefixMUI","Attributes","FeatureDetails","BaseCard","BaseAttributes","BaseCoreDetails","DataGridEntries","DataGrid","then","module","default","GridActionsCellItem","GridAddIcon","GridArrowDownwardIcon","GridArrowUpwardIcon","GridCellCheckboxForwardRef","GridCellCheckboxRenderer","GridCheckCircleIcon","GridCheckIcon","GridCloseIcon","GridColumnHeaderSeparator","GridColumnHeaderSortIcon","GridColumnIcon","GridColumnMenu","GridColumnMenuContainer","GridDragIcon","GridExpandMoreIcon","GridFilterAltIcon","GridFilterForm","GridFilterListIcon","GridFilterPanel","GridFooter","GridFooterContainer","GridHeader","GridHeaderCheckbox","GridKeyboardArrowRight","GridLoadIcon","GridLoadingOverlay","GridMenuIcon","GridMoreVertIcon","GridNoRowsOverlay","GridOverlay","GridPagination","GridPanel","GridPanelWrapper","GridRemoveIcon","GridRoot","GridRowCount","GridSaveAltIcon","GridSearchIcon","GridSelectedRowCount","GridSeparatorIcon","GridTableRowsIcon","GridToolbar","GridToolbarColumnsButton","GridToolbarContainer","GridToolbarDensitySelector","GridToolbarExport","GridToolbarExportContainer","GridToolbarFilterButton","GridTripleDotsVerticalIcon","GridViewHeadlineIcon","GridViewStreamIcon","LazyDataGridComponents","LazyAttributes","LazyFeatureDetails","LazyBaseCard","libs","mobx","mst","react","React","ReactJSXRuntime","ReactDom","ReactDomClient","mxreact","useGridApiContext","useGridApiRef","useGridRootProps","MUIUtils","makeStyles","useTheme","alpha","useStyles","classes","createTheme","MUIStyles","Plugin","pluggableElementTypes","ViewType","AdapterType","DisplayType","TrackType","pluggableElementTypeModels","ServerSideRendererType","CircularChordRendererType","BoxRendererType","FeatureRendererType","Configuration","mstTypes","coreUi","coreUtil","coreColor","coreLayouts","trackUtils","Base1DView","coreIo","coreMstReflection","rxjs","BaseAdapterExports","libsList","keys","inLibsOnly","mod","reExportsList","inReExportsOnly","adapterCache","getAdapter","adapterConfigSnapshot","cacheKey","dataAdapterType","getSubAdapter","bind","dataAdapter","getAdapterClass","sessionIds","cacheEntry","freeAdapterResources","specKeys","delete","size","regions","region","refName","freeResources","hasher","clone","lookup","entry","hashed","navToOption","option","assemblyName","getLocation","getTrackId","navToLocString","showTrack","handleSelectedRegion","assembly","allRefs","allRefNamesWithLowerCase","split","every","str","rest","lastIndex","lastIndexOf","splitLast","Number","isNaN","parseInt","checkRef","searchScope","textSearchManager","queryString","searchType","rankSearchResults","console","warn","textSearchResults","search","refNameResults","allRefNames","toLowerCase","startsWith","BaseResult","getId","fetchResults","setSearchResults","isFeature","isSimpleFeatureSerialized","SimpleFeature","parentHandle","parent","uniqueId","aliases","f","i","strand","tags","p","parentId","c","child","fromJSON","json","getRowStr","facet","row","replace","BaseViewModel","width","setDisplayName","setWidth","newWidth","displayedRegions","Region","TextSearchAdapterType","stuff","AdapterClass","locString","renderingComponent","displayString","matchedAttribute","matchedObject","relevance","score","getLabel","getDisplayString","getRenderingComponent","getScore","updateScore","newScore","hasLocation","getComboResults","RefSequenceResult","tooltip","position","pointerEvents","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","lineHeight","Math","round","maxWidth","wordWrap","clientPointCoords","placement","popperTheme","components","MuiPopper","refs","floatingStyles","context","useFloating","strategy","middleware","offset","useClientPoint","getFloatingProps","useInteractions","container","defaultProps","className","setFloating","style","zIndex","visibility","transform","localStorageSetNumber","localStorageSetItem","formatSubfeatures","currentDepth","returnObj","featureData","frozen","formattedFields","unformattedFeatureData","number","sequenceFeatureDetails","optional","showCoordinatesSetting","localStorageGetItem","intronBp","localStorageGetNumber","upDownBp","upperCaseCDS","localStorageGetBoolean","charactersPerRow","mode","setFeature","setUpDownBp","setIntronBp","setUpperCaseCDS","setShowCoordinates","setMode","showCoordinates","showGenomicCoordsOption","hasCDS","hasExon","hasExonOrCDS","addDisposer","autorun","setFeatureData","clearFeatureData","setFormattedData","setExtra","e","afterCreate","combine","arg2","__jbrowsefmt","finalizedFeatureData","postProcessSnapshot","bigWigLocation","locationType","source","resolutionMultiplier","baseUri","ConfirmDialog","WiggleBaseRenderer","features","getFeatures","inverted","bpPerPx","reducedFeatures","renderToAbstractCanvas","ctx","draw","containsNoTransferables","DensityRenderer","drawDensity","posColor","negColor","clipColor","bicolorPivot","enumeration","bicolorPivotValue","baseConfiguration","baseWiggleRendererConfigSchema","onMouseLeave","onMouseMove","onFeatureClick","useRef","getFeatureUnderMouse","eventClientX","current","getBoundingClientRect","offsetX","px","reversed","clientBp","clientX","overflow","PrerenderedCanvas","displayCrossHatches","LinePlotRenderer","readConfObject","drawLine","YSCALEBAR_LABEL_OFFSET","colorCallback","sharedWiggleConfigFactory","autoscale","minimalTicks","minScore","MIN_VALUE","maxScore","MAX_VALUE","numStdDev","scaleType","baseLinearDisplayConfigSchema","SetMinMaxDialog","SharedWiggleMixin","compose","BaseLinearDisplay","selectedRendering","resolution","fill","boolean","minSize","summaryScoreMode","rendererTypeNameState","scale","constraints","max","min","stats","statsFetchInProgress","updateQuantitativeStats","currStatsBpPerPx","scoreMin","scoreMax","EPSILON","abs","setColor","setPosColor","setNegColor","setStatsLoading","stopStopToken","selectFeature","isSelectionContainer","setSelection","setResolution","setFill","toggleLogScale","setScaleType","setSummaryScoreMode","setAutoscale","setMaxScore","setRendererType","setMinScore","toggleCrossHatches","setCrossHatches","cross","adapterTypeName","rendererTypeNameSimple","adapterCapabilities","rendererConfig","configBlob","filled","autoscaleType","oldDomain","ret","getNiceDomain","bounds","summaryScoreModeSetting","scaleOpts","canHaveFill","displayCrossHatchesSetting","hatches","hasResolution","hasGlobalStats","scoreTrackMenuItems","queueDialog","handleClose","superReload","SetColorDialog","rendererTypes","invertedSetting","setInverted","TooltipComponent","quantitativeStatsRelevantToCurrentZoom","graphType","superRenderProps","adapterProps","superProps","ticks","axisPropsFromTickScale","getScale","range","fillSetting","quantitativeStatsReady","initialized","statsReadyAndRegionNotTooLarge","superTrackMenuItems","hasRenderings","icon","EqualizerIcon","PaletteIcon","VisibilityIcon","renderSvg","superRenderSvg","getQuantitativeStatsAutorun","opts","sources","isMultiRow","eventClientY","rect","offsetY","top","floor","mouseoverBp","featuresUnderMouse","event","clientY","MultiDensityPlotRenderer","groups","groupBy","feats","save","translate","concat","restore","MultiLineRenderer","ClusterDialog","_pluginManager","sourcesLoadingStopToken","featureUnderMouseVolatile","sourcesVolatile","setSourcesLoading","setLayout","clearLayout","setSources","deepEqual","setFeatureUnderMouse","needsFullHeightScalebar","needsCustomLegend","renderColorBoxes","prefersOffset","s","iter","colors","replaceAll","random","toString","rowHeight","rowHeightTooSmallForScalebar","useMinimalTicks","legendFontSize","canDisplayLegendLabels","labelWidth","measureText","getMultiWiggleSourcesAutorun","all","isAlive","notifyError","MultiRowLineRenderer","strokeStyle","beginPath","moveTo","lineTo","stroke","MultiXYPlotRenderer","drawXY","subadapters","bigWigs","MultiWiggleGetSources","RpcMethodTypeWithFiltersAndRenameRegions","execute","getSources","WiggleGetMultiRegionQuantitativeStats","getMultiRegionQuantitativeStats","WiggleGetGlobalQuantitativeStats","getGlobalStats","MultiWiggleGetScoreMatrix","bpScale","r0","r0len","w","firstValueFrom","pipe","toArray","rows","scores","fstart","fend","XYPlotRenderer","pivotValue","isCallback","_score","_feature","WigglePlugin","install","addAdapterType","adapterMetadata","hiddenFromGUI","addTrackType","configSchemaF","QuantitativeTrackF","MultiQuantitativeTrackF","addDisplayType","XYPlotRendererConfigSchema","DensityRendererConfigSchema","LinePlotRendererConfigSchema","defaultRendering","renderers","configSchemaFactory","modelFactory","LinearWiggleDisplayF","MultiXYPlotRendererConfigSchema","MultiDensityRendererConfigSchema","MultiRowXYPlotRendererConfigSchema","MultiLineRendererConfigSchema","MultiRowLineRendererConfigSchema","MultiDensityRenderer","MultiRowXYPlotRenderer","MultiLinearWiggleDisplayF","addRendererType","LinePlotRendererF","XYPlotRendererF","DensityRendererF","MultiXYPlotRendererF","MultiRowXYPlotRendererF","MultiDensityRendererF","MultiLineRendererF","MultiRowLineRendererF","addAddTrackWorkflowType","AddTrackWorkflowType","MultiWiggleAddTrackWorkflowF","addToExtensionPoint","items","isSessionWithAddTracks","selection","onClose","arg1","trackIds","now","makeTrack","CreateMultiWiggleExtensionF","cb","file","index","adapterHint","fileName","getFileName","testAdapter","trackTypeGuesser","adapterName","GuessAdapterF","addRpcMethod","exports","LinearWiggleDisplayReactComponent","XYPlotRendererReactComponent","linearWiggleDisplayModelFactory","xyPlotRendererConfigSchema","utils","configure","assemblyManager","renamedArgs","renameRegionsIfNeeded","setLocation","variant","fullWidth","onChange","target","trim","slotProps","htmlInput","createCanvas","createImageBitmap","ImageBitmapType","drawImageOntoCanvasContext","imageData","serializedCommands","CanvasSequence","drawImage","weHave","OffscreenCanvas","isNode","window","ImageBitmap","nodeCreateCanvas","dataUri","canvas","toDataURL","img","nodeImage","onload","onerror","src","getContext","AbortError","checkAbortSignal","signal","AbortSignal","TypeError","aborted","makeAbortError","abortBreakPoint","setTimeout","DOMException","code","observeAbortSignal","fromEvent","Observable","isAbortException","exception","test","bg","margin","maxHeight","background","border","divider","RedErrorMessageBox","getDisplayStr","totalBytes","parseFloat","toPrecision","notJest","jest","getFeatureDensityStatsPre","staticBlocks","contentBlocks","getRpcSessionId","getSubType","isOptionalType","_subtype","isArrayType","isMapType","_subType","subType","getUnionSubTypes","unionType","isUnionType","_types","getPropertyType","propertyName","properties","getDefaultValue","_defaultValue","getEnumerationValues","resolveLateType","maybeLate","isLateType","rootRef","useEffect","renderTimeout","rIC","jbrowseTheme","hydrateRoot","clearTimeout","root","unmount","dangerouslySetInnerHTML","__html","idMaker","len","stack","pop","hashCode","totalHeight","textHeight","trackLabels","sum","baseModel","baseModelFactory","AlignmentFeatureDetailsF","register","linearAlignmentsDisplay","bamLocation","indexType","fetchSizeLimit","sequenceAdapter","BamAdapterF","cramLocation","craiLocation","CramAdapterF","GuessAlignmentsTypesF","adapterGuesser","indexName","makeIndex","makeIndexType","htsgetBase","htsgetTrackId","HtsgetBamAdapterF","resizeHandle","AlignmentsDisplay","PileupDisplay","SNPCoverageDisplay","_jsxs","ResizeHandle","onDrag","delta","setHeight","getLowerPanelDisplays","getDisplayElements","subDisplay","lowerPanel","preCheck","union","snpCovHeight","heightPreConfig","userFeatureScreenDensity","lowerPanelType","LinearAlignmentsDisplayMixin","scrollTop","setScrollTop","setSNPCoverageHeight","n","featureIdUnderMouse","pileupConf","getFeatureByID","blockKey","searchFeatureByID","sortedBy","coverageConf","setSNPCoverageDisplay","setFeatureDensityStatsLimit","setPileupDisplay","setFilterBy","setLowerPanelType","resizeHeight","distance","oldHeight","setConfig","colorBy","setColorScheme","propagateColorBy","filterBy","propagateFilterBy","pileupHeight","when","_Fragment","overrideHeight","extra","LinearAlignmentsDisplayF","pileupDisplay","snpCoverageDisplay","PileupRenderer","maxFeatureScreenDensity","defaultFilterFlags","linearBasicDisplayConfigSchemaFactory","LinearPileupDisplayBlurb","tag","FilterByTagDialog","ColorByTagDialog","SetFeatureHeightDialog","SetMaxHeightDialog","SharedLinearPileupDisplayMixin","featureHeight","noSpacing","fadeLikelihood","trackMaxHeight","colorBySetting","filterBySetting","jexlFilters","hideSmallIndelsSetting","colorTagMap","observable","tagsReady","autorunReady","hideSmallIndels","setTagsReady","setMaxHeight","setFeatureHeight","setNoSpacing","colorScheme","updateColorTagMap","uniqueTag","colorPalette","totalKeys","isSessionModelWithWidgets","featureWidget","addWidget","getContainingTrack","showWidget","copyFeatureToClipboard","copy","notify","setJexlFilters","setHideSmallIndels","featureHeightSetting","renderReady","viewName","contextMenuItems","contextMenuFeature","MenuOpenIcon","clearFeatureSelection","ContentCopyIcon","renderPropsPre","featureId","layoutId","onFeatureContextMenu","setContextMenuFeature","colorSchemeSubMenuItems","FilterListIcon","createAutorun","vals","getUniqueTags","blocks","delay","SortByTagDialog","GroupByDialog","showSoftClipping","mismatchAlpha","sortReady","currSortBpPerPx","visibleModifications","modificationsReady","setCurrSortBpPerPx","updateVisibleModifications","uniqueModifications","getColorForModification","setModificationsReady","setSortReady","clearSelected","toggleSoftClipping","toggleMismatchAlpha","setSortedBy","centerLineInfo","centerBp","visibleModificationTypes","superRenderReady","mismatchAlphaSetting","superRenderPropsPre","superColorSchemeSubMenuItems","showSoftClip","result","SwapVertIcon","disabled","ColorLensIcon","modificationData","modifications","isolatedModification","twoColor","WorkspacesIcon","doAfterAttach","BaseLinearDisplayComponent","TrackHeightMixin","FeatureDensityMixin","lineWidth","jitter","drawInter","drawLongRange","loading","chainData","lastDrawnOffsetPx","lastDrawnBpPerPx","setLastDrawnOffsetPx","setLastDrawnBpPerPx","setLoading","setRef","setChainData","setDrawInter","setDrawLongRange","setLineWidth","setJitter","drawn","lineWidthSetting","jitterVal","drawFeats","stateModelF","drawSingletons","setDrawSingletons","showInterbaseCounts","showInterbaseIndicators","showArcs","modification","superAdapterProps","showArcsSetting","showInterbaseCountsSetting","showInterbaseIndicatorsSetting","setShowInterbaseIndicators","setShowInterbaseCounts","setShowArcs","getUniqueModifications","ready","subadapter","multiTicks","SNPCoverageRenderer","PileupBaseRPC","rpcDriver","PileupGetReducedFeatures","featuresArray","getFeaturesInMultipleRegions","reduced","flags","tlen","pair_orientation","next_ref","next_pos","clipPos","getClip","SA","filtered","reduce","sum2","total","avg","sd","sqrt","upper","lower","getInsertSizeStats","chains","hasPaired","PileupGetVisibleModifications","getModTypes","getTagAlt","PileupGetGlobalValueForTag","PileupRPCMethodsF","PileupLayoutSession","LayoutSession","update","cachedLayoutIsValid","cachedLayout","makeLayout","fetchSequence","getExpandedRegion","renderArgs","maxClippingSize","bpExpansion","ceil","createLayoutInWorker","layoutRecords","featureMap","sortFeature","featureArray","from","featuresInCenterLine","featuresOutsideCenter","innerArray","doesIntersect2","isCram","getTag","localeCompare","baseSortArray","mismatches","m","baseMap","aMismatch","bMismatch","acode","base","toUpperCase","bcode","charCodeAt","heightPx","displayMode","iterMap","expansionBefore","expansionAfter","cliplen","leftPx","rightPx","bpSpanPx","topPx","layoutFeature","notEmpty","getTotalHeight","layoutFeats","regionSequence","makeImageData","canvasWidth","maxHeightReached","createLayoutSession","selectedFeatureId","firstRender","setFirstRender","useState","mouseIsDown","setMouseIsDown","movedDuringLastMouseDown","setMovedDuringLastMouseDown","selectedRect","highlightedFeature","highlightedRect","makeRect","leftBp","rightBp","bottomPx","selected","highlight","callMouseHandler","handlerName","featureHandler","canvasHandler","tagFilter","onMouseDown","onMouseEnter","onMouseOut","onMouseOver","onMouseUp","getFeatureOverlapping","mouseMove","onContextMenu","onFocus","onBlur","boxSizing","orientationType","minSubfeatureWidth","largeInsertionIndicatorScale","SNPCoverageAdapterF","makeImage","indicatorThreshold","WiggleRendering","AlignmentsPlugin","LinearPileupDisplayF","LinearSNPCoverageDisplayF","AlignmentsTrackF","PileupRendererF","SNPCoverageRendererF","LinearReadArcsDisplayF","LinearReadCloudDisplayF","AlignmentsFeatureWidgetF","chooseGridPitch","minMajorPitchPx","minMinorPitchPx","minMajorPitchBp","majorPitch","toExponential","majorPitchPx","minorPitch","makeTicks","emitMajor","emitMinor","gridPitch","minBase","maxBase","iterPitch","generateLocations","asmName","asm","waitForAssembly","canonicalRefName","getCanonicalRefName","parentRegion","parseLocStrings","isValidRefName","inputs","parseLocString","exec","isInteger","calculateVisibleLocStrings","isSingleAssemblyName","block","assembleLocString","GranularRectLayout","pitchX","pitchY","blobToDataURL","blob","FileReader","readAsDataURL","hubTxtLocation","baseConnectionConfig","UCSCTrackHubConnection","BaseConnectionModelFactory","doConnect","UCSCTrackHubConnectionF","addConnectionType","ConnectionType","overview","useOffset","multiplier","interRegionPaddingWidth","offsetPx","dynamicBlocks","cytobandOffset","totalWidthPxWithoutBorders","polygonColor","tertiary","light","first","last","topLeft","bpToPx","coord","topRight","startPx","endPx","points","HEADER_BAR_HEIGHT","getFillProps","getStrokeProps","intersection2","left1","right1","left2","right2","isContainedWithin","nanoid","crypto","getRandomValues","Uint8Array","byte","AddTrackWorkflow","Checkbox2","control","getBreakendCoveringRegions","alt","bnd","parseBreakend","startPos","INFO","mateRefName","CHR2","matePos","END","MatePosition","matePosition","mate","stripIds","arr","makeTitle","navToMultiLevelBreak","stableViewId","mirror","viewTracks","addView","hideHeader","reverse","r1","r2","navToLocations","zoomTo","centerAt","copyTracks","setCopyTracks","setMirror","open","title","autoFocus","focusOnBreakends","setFocusOnBreakends","windowSize","setWindowSize","useLocalStorage","coverage","topRegion","bottomRegion","gatherOverlaps","singleLevelFocusedSnapshotFromBreakendFeature","singleLevelEncompassingSnapshotFromBreakendFeature","endPos","setDisplayedRegions","lgv","l0","navToSingleLevelBreak","ArcRenderer","ArcTooltip","Arc","displayHeight","isMouseOvered","setIsMouseOvered","textStroke","caption","strokeWidth","textYCoord","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","describeArc","startAngle","endAngle","largeArcFlag","SemiCircles","Wrapper","semicircles","thickness","blockType","renderDelay","renderer","displayModeSetting","setDisplayMode","superMenuItems","setFeatures","renderArcSvg","ArcPlugin","ArcRendererF","LinearArcDisplayF","LinearPairedArcDisplayF","jexl","addFunction","attributeName","log","set1","authEndpoint","tokenEndpoint","needsPKCE","clientId","scopes","state","responseType","OAuthConfigSchema","fixup","buf","processError","text","invalidErrorCb","error_description","processTokenResponse","storeRefreshTokenCb","refresh_token","access_token","getResponseError","response","reason","statusText","status","getError","named","codeVerifier","codeVerifierPKCE","uint8array","output","fromCharCode","btoa","encode","refreshTokenKey","storeRefreshToken","refreshToken","localStorage","removeRefreshToken","retrieveRefreshToken","exchangeAuthorizationForAccessToken","redirectUri","params","URLSearchParams","grant_type","client_id","redirect_uri","code_verifier","method","body","ok","exchangeRefreshForAccessToken","listener","exchangedTokenPromise","addMessageChannel","finishOAuthWindow","addEventListener","deleteMessageChannel","removeEventListener","redirectUriWithInfo","fixedQueryString","redirectUrl","queryStringSearch","urlParams","pathname","useEndpointForAuthorization","isElectron","response_type","token_access_type","scope","code_challenge","sha256","generateChallenge","code_challenge_method","eventName","ipcRenderer","require","invoke","eventFromDesktop","MessageEvent","doUserFlow","newToken","err","superGetFetcher","fetcher","DropboxIcon","dropboxErrorMessages","shared_link_not_found","shared_link_access_denied","unsupported_link_type","shared_link_is_directory","getDescriptiveErrorMessage","errorMessage","append","Authorization","validateWithHEAD","ExternalTokenEntryForm","setToken","flexDirection","required","doneCallback","GoogleDriveFile","statsPromise","metadataOnly","stat","GoogleDriveIcon","getUri","driveUrl","searchParams","credentials","HTTPBasicLoginForm","username","setUsername","password","setPassword","onSubmit","preventDefault","autoComplete","AuthenticationPlugin","OAuthInternetAccountModelFactory","ExternalTokenConfigSchema","ExternalTokenInternetAccountModelFactory","HTTPBasicConfigSchema","HTTPBasicInternetAccountModelFactory","DropboxOAuthConfigSchema","DropboxOAuthInternetAccountModelFactory","GoogleDriveOAuthConfigSchema","GoogleDriveOAuthInternetAccountModelFactory","addInternetAccountType","InternetAccountType","bedLocation","columnNames","scoreColumn","autoSql","colRef","colStart","colEnd","bedGraphLocation","bedGraphGzLocation","bedGzLocation","bedpeLocation","bigBedLocation","aggregateField","BedPlugin","BigBedAdapterF","BedAdapterF","BedpeAdapterF","BedTabixAdapterF","BedGraphAdapterF","BedGraphTabixAdapterF","BedpeAdapter","BedGraphAdapter","BedGraphTabixAdapter","ExportSvgDialog","refinement","trackSelectorType","showIntraviewLinks","linkViews","interactiveOverlay","matchedTrackFeatures","exportSvg","renderToSvg","saveAs","filename","matchedTracks","intersect","getMatchedTracks","trackConfigId","getTrack","hasTranslocations","getTrackFeatures","hasPairedFeatures","flat","getMatchedFeaturesInLayout","level","calc","onAction","path","onSubviewAction","actionName","getPath","endsWith","setInteractiveOverlay","setShowIntraviewLinks","setLinkViews","setMatchedTrackFeatures","reverseViewOrder","getBlockFeatures","LinkIcon","PhotoCamera","BreakpointSplitViewPlugin","addViewType","BreakpointSplitViewF","BreakpointAlignmentsWidgetF","targetAssembly","queryAssembly","blastTableLocation","columns","chainLocation","syntenyTypes","pairwiseTypes","mcscanTypes","ComparativeAddTrackComponent","deltaLocation","MCScanAddTrackComponent","mcscanAnchorsLocation","bed1Location","bed2Location","mcscanSimpleAnchorsLocation","outLocation","pafLocation","pifGzLocation","ComparativeAdaptersPlugin","PAFAdapterF","PairwiseIndexedPAFAdapterF","DeltaAdapterF","ChainAdapterF","MCScanAnchorsAdapterF","MCScanSimpleAnchorsAdapterF","MashMapAdapterF","BlastTabularAdapter","comp","trackAdapterType","ComparativeAddTrackComponentF","MCScanAddTrackComponentF","ComparativeRender","rend","getRenderer","DotplotDisplay","vview","hview","ReactComponent2","action","disabledBackground","paddingLeft","backgroundImage","textAlign","blockMessage","blockError","LoadingMessage","shown","setShown","timeout","LoadingEllipses","BlockMessage","messageText","BlockError","ServerSideRenderedDotplotContent","shouldDisplay","renderBlockData","viewWidth","viewHeight","borderSize","borderX","borderY","warnings","ServerSideRenderedBlockContent","bpPerPxY","bpPerPxX","rendering","offX","offY","ReactRendering","makeAbortableReaction","blockData","renderBlockEffect","fireImmediately","setRendered","featurizeSA","getLength","getLengthSansClipping","MismatchParser","Dotplot1DView","extend","scaleFactor","box","calculateDynamicBlocks","maxBpPerPx","totalBp","minBpPerPx","maxOffset","displayedRegionsTotalPx","minOffset","setScaleFactor","center","centerPx","scrollTo","DotplotHView","DotplotVView","ReturnToImportFormDialog","stringLenPx","pxWidthForBlocks","hide","getTickDisplayStr","DotplotRenderer","ComparativeRenderer","process","dimensions","setVolatileWidth","drawDotplot","thresholdsPalette","thresholds","DotplotPlugin","tickSize","vtextRotation","htextRotation","drawCigar","viewTrackConfigs","volatileWidth","volatileError","cursorMode","showPanButtons","wheelMode","importFormSyntenyTrackSelections","importFormRemoveRow","clearImportFormSyntenyTracks","setImportFormSyntenyTrack","assemblyErrors","assembliesInitialized","hticks","vticks","highResolutionScaling","setShowPanButtons","setWheelMode","setCursorMode","setDrawCigar","clearView","setBorderX","setBorderY","newHeight","zoomOut","zoomIn","activateTrackSelector","selector","displayConf","hideTrack","toggleTrack","setAssemblyNames","query","setViews","getCoords","mousedown","mouseup","xmin","xmax","minmax","ymin","ymax","pxToBp","zoomInToMouseCoords","x1","x2","y1","y2","showAllRegions","onDotplotView","d1","minimumBlockWidth","d2","_unused1","rest1","_unused2","rest2","viewSnapshot","beforeDestroy","removeTemporaryAssembly","vblocks","hblocks","hoffset","voffset","vhide","getBlockLabelKeysToHide","hhide","by","bx","squareView","hpx","vpx","setBpPerPx","squareViewProportional","ratio","FolderOpenIcon","PhotoCameraIcon","TrackSelectorIcon","DotplotViewF","DotplotRendererF","idsNotFound","tryTrack","LaunchDotplotViewF","pluggableElement","newStateModel","superContextMenuItems","AddIcon","cigar","readName","readAssembly","trackAssembly","trackName","SA2","totalLength","CIGAR","DotplotReadVsRefMenuItem","isAbstractMenuManager","appendToSubMenu","TimelineIcon","EditGCContentParamsDialog","SharedModelF","windowDelta","setGCContentParams","windowSizeSetting","windowDeltaSetting","GCContentPlugin","GCContentAdapterF","configSchemaFactory1","stateModelF1","configSchemaFactory2","stateModelF2","LinearGCContentDisplayF","gffLocation","gffGzLocation","dontRedispatch","GFF3Plugin","Gff3TabixAdapterF","Gff3AdapterF","GuessGff3F","bookmarkButton","Highlight","bookmarkHighlightsVisible","bookmarkLabelsVisible","bookmarkWidget","widgets","bookmarks","bookmark","Fragment","CascadingMenuButton","setBookmarkHighlightsVisible","removeBookmarkObject","arrow","BookmarkIcon","sx","colord","toRgbString","OverviewHighlight","rev","borderLeft","borderRight","LabeledRegionModel","RegionModel","setLabel","setHighlight","SharedBookmarksModel","sharedBookmarks","localStorageKeyF","host","GridBookmarkPlugin","selectedBookmarks","selectedAssembliesPre","bookmarkAssemblies","validAssemblies","areBookmarksHighlightedOnAllOpenViews","areBookmarksHighlightLabelsOnAllOpenViews","bookmarksWithValidAssemblies","sharedBookmarksModel","allBookmarksModel","setSelectedAssemblies","assemblies","selectedAssemblies","importBookmarks","addBookmark","removeBookmark","updateBookmarkLabel","correspondingObj","updateBookmarkHighlight","updateBulkBookmarkHighlights","setSelectedBookmarks","setBookmarkedRegions","setBookmarkLabelsVisible","clearAllBookmarks","clearSelectedBookmarks","handler","AddHighlightModelF","GridBookmarkWidgetF","activateBookmarkWidget","navigateNewestBookmark","navTo","bookmarkCurrentRegion","focusedViewId","selectedRegions","getSelectedRegions","superRubberBandMenuItems","rubberBandMenuItems","BookmarksIcon","HighlightIcon","LabelIcon","leftOffset","rightOffset","document","activationSequence","ctrlKey","metaKey","shiftKey","appendToMenu","gtfLocation","GtfPlugin","GtfAdapterF","hicLocation","HicRenderer","hyp","yScalar","baseColor","useLogScale","activeNormalization","availableNormalizations","normalization","setUseLogScale","setActiveNormalization","setAvailableNormalizations","norm","norms","HicPlugin","HicAdapterF","HicRendererF","HicTrackF","LinearHicDisplayF","toHsl","toHex","count","Job","statusMessage","progressPct","cancelCallback","setCancelCallback","setStatusMessage","setProgressPct","pct","JobsManagementPlugin","jobs","finished","queued","addJob","job","existing","addedJob","removeJob","jobName","indx","addFinishedJob","finishedJob","addQueuedJob","queuedJob","addAbortedJob","abortedJob","removeQueuedJob","updateJobStatusMessage","updateJobProgressPct","JobsListWidgetF","Indexing","jobStatusWidget","dataDirLocation","fetchJb1","convertTrackConfig","jb2Tracks","jb1Track","dataRoot","breakConnection","namesIndexLocation","rootUrlTemplate","refNames","LegacyJBrowsePlugin","NCListAdapterF","GuessNCListF","addTextSearchAdapterType","JBrowse1TextSearchAdapterF","JBrowse1ConnectionF","LaunchSyntenyViewDialog","renderInProgress","newStopToken","existingFeatures","featIds","newFeatIds","foundNewFeatureNotInExistingMap","foundExistingFeatureNotInNewMap","existingFeat","LinearSyntenyViewHelper","levels","param","removeView","setLevelHeight","l","average","setNewView","headerMenuItems","ReadVsRefDialog","mainCanvas","clickMapCanvas","cigarClickMapCanvas","mouseoverCanvas","featPositions","mouseoverId","clickId","cigarMouseoverId","setFeatPositions","setMainCanvasRef","setClickMapCanvasRef","setCigarClickMapCanvasRef","setMouseoverCanvasRef","setMouseoverId","setCigarMouseoverId","setClickId","numFeats","featMap","Curves","drawCIGAR","drawCurves","setDrawCurves","setDrawCIGAR","showAllRegionsInAssembly","superHeaderMenuItems","CropFreeIcon","linearSyntenyViewHelperModelFactory","supportedDisplays","shownTracks","UnusedComponent","BaseFeatureWidgetStateModelF","LinearComparativeViewPlugin","viewMetadata","LinearSyntenyViewHelperF","LinearComparativeViewF","LinearSyntenyViewF","LinearComparativeDisplayF","middle","baseConfigFactory","LinearSyntenyDisplayF","SyntenyFeatureWidgetF","mouseover","linearPileupDisplayConfigSchemaFactory","r3","LGVSyntenyDisplayF","navToSearchString","tryTrackLGV","trackSet","tryTrackSynteny","LaunchLinearSyntenyViewF","SyntenyTrackF","CalendarIcon","FloatingLayout","rectangles","anchorLocation","getLayout","minY","sorted","maxBottom","layoutEntries","currentItem","bottom","j","previouslyLaidOutItem","prevStart","prevTop","prevWidth","prevHeight","prevEnd","prevBottom","serializeRegion","pairs","PrecomputedFloatingLayout","FloatingLayoutSession","widthPx","layoutIsValid","LollipopRenderer","deserializeLayoutInClient","ScoreText","layoutRecord","anchorX","radiusPx","innerColor","scoreString","fontHeight","contrastingTextColor","textAnchor","dominantBaseline","styleOuter","styleInner","cx","cy","onFeatureMouseDown","onFeatureMouseEnter","onFeatureMouseOut","onFeatureMouseOver","onFeatureMouseUp","onFeatureMouseLeave","onFeatureMouseMove","stopPropagation","layoutFeat","client","setClient","records","Stick","Lollipop","strokeColor","minStickLength","stickColor","stickWidth","LollipopPlugin","LollipopRendererF","LinearLollipopDisplayF","MenusPlugin","AboutWidgetF","HelpWidgetF","ImportSessionWidgetF","SessionManagerF","InfoIcon","widget","HelpIcon","endpoint","queryTemplate","refNamesQueryTemplate","additionalQueryParams","RdfPlugin","SPARQLAdapterF","fastaLocation","faiLocation","metadataLocation","gziLocation","chromSizesLocation","Translation","codonTable","seq","frame","colorByCDS","seqStart","frameShift","frameShiftAdjustedSeqLength","multipleOfThreeLength","seqSliced","translated","codon","normalizedCodon","revcom","aminoAcid","letter","codonWidth","renderLetter","defaultFill","framesCDS","main","frames","codonFill","defaultStarts","startCodon","defaultStops","stopCodon","Sequence","sequenceType","bases","getContrastText","SequenceSVG","configTheme","showReverse","showForward","showTranslation","generateCodonTable","defaultCodonTable","currY","showSequence","forwardFrames","reverseFrames","topFrames","bottomFrames","toReversed","complement","userSelect","sequenceHeight","DivSequenceRenderer","divSequenceRendererConfigSchema","searchForward","searchReverse","caseInsensitive","twoBitLocation","rewriteRefNames","SequencePlugin","DivSequenceRendererF","TwoBitAdapterF","BgzipFastaAdapterF","ChromSizesAdapterF","IndexedFastaAdapterF","UnindexedFastaAdapterF","SequenceSearchAdapterF","createReferenceSeqTrackConfig","ReferenceSequenceTrackF","showForwardActual","showReverseActual","showTranslationActual","toggleShowForward","toggleShowReverse","toggleShowTranslation","LinearReferenceSequenceDisplayF","createExtensionPoints","fileTypes","fileTypeParsers","VCF","parseVcfBuffer","BED","parseBedBuffer","BEDPE","parseBedPEBuffer","STAR-Fusion","parseSTARFusionBuffer","getType","vcfLocation","vcfGzLocation","fileTypesRegexp","locationLinkClick","spreadsheetViewId","newViewId","BreakendMultiLevelOptionDialog","BreakendSingleLevelOptionDialog","FeatureMenu","assembleLocStringFast","ArrowDropDownIcon","LocationCell","href","ImportWizardModel","fileType","hasColumnNameLine","columnNameLineNumber","selectedAssemblyName","cachedFileLocation","fileSource","isReadyToOpen","blobId","localPath","requiresUnzip","tracksForAssembly","selectedAssembly","getAdapterLoc","getTrackName","setSelectedAssemblyName","setFileSource","newSource","firstMatch","setColumnNameLineNumber","newnumber","setFileType","typeName","cancelButton","setCachedFileHandle","import","typeParser","fetchAndMaybeUnzip","filehandle","toLocaleString","displaySpreadsheet","hideVerticalResizeHandle","hideFilterControls","importWizard","spreadsheet","rowSet","visibleColumns","visibleRowFlags","cellData","cells","dataGridColumns","field","measureGridWidth","renderCell","valueGetter","_val","valueFormatter","toLocale","minWidth","visibleRows","_f","setVisibleRows","setVisibleColumns","isDerived","extendedData","vcfFeature","rowMenuItems","setRowMenuItems","newItems","resizeWidth","oldWidth","SpreadsheetViewPlugin","SpreadsheetViewF","exts","ext","LaunchSpreadsheetViewF","ViewComfyIcon","defaultOnChordClick","chordTrack","SvInspectorViewPlugin","SpreadsheetViewType","CircularViewType","SpreadsheetModel","CircularModel","onlyDisplayRelevantRegionsInCircularView","spreadsheetView","circularView","hideTrackSelectorButton","disableImportForm","SpreadsheetViewReactComponent","CircularViewReactComponent","circularViewOptionsBarHeight","showCircularView","featuresAdapterConfigSnapshot","featureRefNames","currentAssembly","canonicalFeatureRefNameSet","featuresCircularTrackConfiguration","onChordClick","setOnlyDisplayRelevantRegionsInCircularView","Boolean","spreadsheetWidth","circularViewWidth","reaction","generatedTrackConf","SvInspectorViewF","LaunchSvInspectorViewF","TableChartIcon","FeatureLabel","viewParams","featureWidth","allowedWidthExpansion","totalWidth","measuredTextWidth","getViewParams","viewLeft","featureLabelsVisible","setFeatureLabelsVisible","rstart","featureWidthBp","offsetPx1","stripAlpha","primary","rootLayout","shouldShowName","shouldShowDescription","featureLayout","getSubRecord","GlyphComponent","absolute","OverlayRect","rectProps","rectTop","screenWidth","rectHeight","leftWithinBlock","diff","widthWithinBlock","handlers","mouseoverFeatureId","renderOverlay","setRenderOverlay","fillOpacity","reverseFlip","color2","secondary","topLevel","featureStart","featureEnd","featureType","featureStrand","featurePhase","isUTR","getFrame","frameColor","Arrow","subfeature","subfeatureId","subfeatureLayout","getSubparts","hasUTRs","isTranscript","subs","subparts","haveLeftUTR","haveRightUTR","codeStart","POSITIVE_INFINITY","codeEnd","NEGATIVE_INFINITY","subpart","unshift","makeUTRs","confKey","makeSubpartsFilter","filterSubpart","ProcessedTranscript","Segments","layOut","extraGlyphs","layOutFeature","layOutSubfeatures","Subfeatures","topOffset","SubfeatureGlyphComponent","chooseGlyphComponent","subfeatureHeight","move","transcriptTypes","containerTypes","hasSubSub","validator","glyph","parentFeature","layoutParent","addChild","RenderedFeatureGlyph","detectRerender","labelAllowed","SceneGraph","expansion","showLabels","showDescriptions","getWidth","glyphWidth","textWidth","aboveLayout","FeatureGlyph","RenderedFeatures","isFeatureDisplayed","featureDisplayHandler","maxConfHeight","initialMousePos","setInitialMousePos","mouseDown","useCallback","mouseUp","dx","dy","featureIdCurrentlyUnderMouse","click","SvgOverlay","color1","color3","outline","labels","nameColor","descriptionColor","maxFeatureGlyphExpansion","subParts","impliedUTRs","SvgFeatureRenderer","SVGPlugin","SvgFeatureRendererReactComponent","svgFeatureRendererConfigSchema","ixFilePath","ixxFilePath","metaFilePath","TrixPlugin","SVG","LinearGenomeView","Alignments","Authentication","Bed","CircularView","Config","DataManagement","DotplotView","Gff3","LegacyJBrowse","LinearComparativeView","Menus","RDF","Variants","Wiggle","GCContent","SvInspectorPlugin","BreakpointSplitView","ComparativeAdapters","confObject","slotPath","slotName","newPath","subConf","slot","expr","evalSync","isConfigurationModel","getTypeNamesFromExplicitlyTypedUnion","maybeUnionType","isType","typeNames","isBareConfigurationSchemaType","isModelType","isConfigurationSchemaType","isConfigurationSlotType","maybeDisplayName","textOverflow","BlockMsg","severity","linearBasicDisplayModelFactory","descriptions","MAFFilterDialog","SetRowHeightDialog","MultiVariantBaseModelF","linearBareDisplayStateModelFactory","minorAlleleFrequencyFilter","showSidebarLabelsSetting","renderingMode","rowHeightSetting","autoHeight","featuresVolatile","hasPhased","sampleInfo","hoveredGenotype","setRowHeight","setHoveredGenotype","setMafFilter","setShowSidebarLabels","setPhasedMode","setAutoHeight","setHasPhased","setSampleInfo","preSources","info","isPhased","ploidy","maxPloidy","HP","HeightIcon","SplitscreenIcon","canDisplayLabels","getMultiVariantSourcesAutorun","getMultiVariantFeaturesAutorun","cursor","Crosshair","mouseX","mouseY","lineZoneHeight","yoff","MultiVariantTooltip","MultiLinearVariantMatrixDisplayComponent","setMouseY","setMouseX","LinesConnectingMatrixToGenomicPosition","LegendBar","nrow","setLineZoneHeight","clamp","LinearVariantMatrixRenderer","mafs","canvasHeight","simplifiedFeatures","dimY","dimX","MultiVariantBaseRenderer","rbush","rbush2","useMemo","RBush","minX","maxX","maxY","genotype","vcfGzLocationMap","indexLocationMap","samplesTsvLocation","bpToRadians","blockStart","elided","blockEnd","flipped","bpPerRadian","startRadians","blocksForRefs","bezierRadius","hovered","setHovered","startBlock","svType","endPosition","endBlock","SVTYPE","chr2","endRadians","startXY","endXY","controlXY","hoverStrokeColor","evt","blockDefinitions","blocksForRefsMemo","Chord","strokeColorSelected","strokeColorHover","MultiVariantGetGenotypeMatrix","genotypeFactor","getFeaturesThatPassMinorAlleleFrequencyFilter","alleleCounts","genotypes","alleles","genotypeStatus","nonRefCount","uncalledCount","MultiVariantGetSimplifiedFeatures","samp","MultiVariantGetSources","VariantsPlugin","VcfAdapterF","VcfTabixAdapterF","SplitVcfTabixAdapterF","VariantFeatureWidgetF","ExtensionPointsF","LinearVariantDisplayF","LinearVariantMatrixDisplayF","MultiVariantRendererConfigSchema","MultiVariantRenderer","MultiLinearVariantDisplayF","MultiVariantRendererF","LinearVariantMatrixRendererF","ChordRendererType","StructuralVariantChordRendererF","baseChordDisplayConfig","BaseChordDisplayModel","bezierRadiusRatio","BaseChordDisplayComponent","ChordVariantDisplayF","createStopToken","createObjectURL","revokeObjectURL","WorkerGlobalScope","xhr","XMLHttpRequest","send","dots","content","animation","keyframes","calcStdFromSums","sumSquares","population","variance","rectifyStats","scoreMean","scoreSum","featureCount","basesCovered","scoreStdDev","scoreSumSquares","featureDensity","scoresToStats","seed","found","acc","summary","blankStats","useMeasure","dims","setDims","RS","ResizeObserver","contentRect","observe","disconnect","category10","dark2","set2","tableau10","ggplot2Colors6","ggplot2Colors5","ggplot2Colors4","ggplot2Colors3","typeModels","stringArray","stringArrayMap","numberMap","integer","fileLocation","FileLocation","fallbackDefaults","literalJSON","valueJSON","objectJSON","typeModelExtensions","removeAtIndex","setAtIndex","addToKey","ar","removeAtKeyIndex","setAtKeyIndex","JexlStringType","isEmptyArray","modelName","inputSchemaDefinition","inputOptions","schemaDefinition","options","jbrowseSchemaDefinition","jbrowseSchemaOptions","preprocessConfigurationSchemaArguments","schemaType","modelDefinition","implicitIdentifier","volatileConstants","isJBrowseConfigurationSchema","jbrowseSchema","definition","slotDefinition","configSlotModelName","charAt","stringToJexlExpression","newVal","reset","convertToCallback","convertToValue","funcResult","defineProperty","ConfigSlot","completeModel","setSubschema","newSchema","identifierDefault","modelDefault","defaultSnap","newSnap","matchesDefault","makeConfigurationSchemaModel","reference","contentBlock","minHeight","whiteSpace","elidedBlock","interRegionPaddingBlock","boundaryPaddingBlock","ContentBlock","ElidedBlock","InterRegionPaddingBlock","boundary","compilationCache","compiled","compile","createJexlInstance","isBlobLocation","marginLeft","spacing","needToReload","getBlob","alignItems","component","hidden","files","webUtils","getPathForFile","storeBlobLocation","isSequenceAdapter","isRegionsAdapter","isFeatureAdapter","isRefNameAliasAdapter","isTextSearchAdapter","EmptyConfig","BaseAdapter","static","BaseFeatureDataAdapter","getHeader","_opts","getMetadata","getFeaturesInRegion","ObservableCreate","hasData","hasDataForRefName","subscribe","complete","merge","getRefNames","getRegionQuantitativeStats","getRegionFeatureDensityStats","lastTime","statsFromInterval","expansionTime","sampleCenter","maybeRecordStats","interval","statsSampleFeatures","refLen","currTime","getMultiRegionFeatureDensityStats","BaseSequenceAdapter","findCircleIntersectionX","resultArray","solution","findCircleIntersectionY","cartesianToPolar","rho","theta","atan","cartesianToTheta","twoPi","Slice","offsetRadians","radianWidth","widthBp","freeze","bpToXY","bp","offsetBp","totalRadians","lockedFitToWindow","scrollX","scrollY","minimumRadiusPx","spacingPx","paddingPx","lockedPaddingPx","minVisibleWidth","visibleSection","viewSides","circleCenter","circleRadius","viewL","viewR","viewT","viewB","vertices","maxRho","reflect","rhoMin","rhoMax","thetaMin","thetaMax","vx","vy","viewportVisibleSection","centerXY","circumferencePx","elidedBp","elidedRegions","pxPerRadian","maximumRadiusPx","minCircumferencePx","maxCircumferencePx","atMaxBpPerPx","atMinBpPerPx","tooSmallToLock","figureDimensions","figureWidth","figureHeight","visible","lastVisible","displayedRegion","staticSlices","slices","currentRadianOffset","calculateStaticSlices","visibleStaticSlices","visibleThetaMin","visibleThetaMax","r1start","r2start","r2length","r1length","sliceIsVisible","setModelViewWhenAdjust","rotateClockwiseButton","rotateClockwise","rotateCounterClockwiseButton","rotateCounterClockwise","zoomInButton","zoomOutButton","secondCondition","previouslyEmpty","toggleFitToWindowLock","DisplayError","patternTransform","patternUnits","quaternary","strokeDasharray","strokeDashoffset","strokeLinecap","Loading","renderReactionData","renderReactionEffect","cannotBeRenderedReason","refNameMap","origSlices","renamed","renderStarted","renderSuccess","renderError","setRefNameMap","getTrackAssemblyNames","getRefNameMapForAdapter","CircularViewPlugin","CircularViewF","LaunchCircularViewF","DataUsageIcon","getNextRefPos","cigarOps","positions","readPos","refPos","currPos","op","TOP","BOTTOM","heightFromSpecificLevel","getYPosOverride","trackRefs","getPxFromCoordinate","yPos","chunk","useNextFrame","variable","setNextFrameState","a1","a2","ids","a12","startClip","endClip","getRelativeX","getCytobands","cytobands","CompositeMap","submaps","submap","Symbol","iterator","k","TooLargeMessage","regionTooLargeReason","featureDensityStats","userBpPerPxLimit","userByteSizeLimit","featureDensityStatsP","currentBytesRequested","bytes","currentFeatureScreenDensity","featureDensityStatsReady","maxAllowableBytes","setCurrStatsBpPerPx","clearFeatureDensityStats","getFeatureDensityStats","setFeatureDensityStats","autorunFeatureDensityStats","catch","setFeatureDensityStatsP","regionTooLarge","req","regionCannotBeRenderedText","_region","minDisplayHeight","blockState","BlockState","featureMaps","getByCoord","getByID","addBlock","toRegion","deleteBlock","navToFeature","clearSelection","setFeatureIdUnderMouse","doReload","CenterFocusStrongIcon","renderBaseLinearDisplaySvg","blocksPresent","linearBlocks","heightOverflowed","borderBottom","textShadow","fontWeight","RenderedBlocks","ContentBlockComponent","ElidedBlockComponent","InterRegionPaddingBlockComponent","LinearBlocks","viewModel","clientRect","setClientRect","offsetMouseCoord","setOffsetMouseCoord","setClientMouseCoord","contextCoord","setContextCoord","mouseCoord","onMenuItemClick","callback","transition","onExit","anchorReference","anchorPosition","AddFiltersDialog","trackShowLabels","trackShowDescriptions","trackDisplayMode","activeFilters","toggleShowLabels","toggleShowDescriptions","panButton","paper","SPACING","buttonSpacer","marginRight","HeaderPanControls","slide","ArrowBackIcon","ArrowForwardIcon","HeaderRegionWidth","coarseTotalBp","getBpDisplayStr","toggleButton","HeaderTrackSelectorButton","RegionWidthEditorDialog","slider","HeaderZoomControls","setValue","log2","zoomInDisabled","zoomOutDisabled","zoom","ZoomOut","onChangeCommitted","ZoomIn","MoreVert","rubberbandControl","guide","rel","HoverTooltip","guideX","cytoband","OverviewRubberband","ControlComponent","startX","setStartX","currentX","setCurrentX","setGuideX","controlsRef","mouseDragging","mouseOut","globalMouseMove","globalMouseUp","globalKeyDown","leftBpOffset","rightBpOffset","RubberbandSpan","scalebarLabel","HEADER_OVERVIEW_HEIGHT","justifyContent","OverviewScalebarTickLabels","refNameColor","getRefNameColor","tickLabels","offsetLabel","tickLabel","labelIdx","scalebar","scalebarBorder","scalebarContig","scalebarContigForward","backgroundRepeat","scalebarContigReverse","scalebarRefName","scalebarVisibleRegion","overviewSvg","OverviewBox","showCytobands","canDisplayCytobands","borderColor","Cytobands","Scalebar","visibleRegions","overviewVisibleRegions","scalebarColor","firstOverviewPx","lastOverviewPx","transparency","additional","OverviewScalebar","modWidth","OverviewScalebarPolygon","HelpDialog","HelpAdornment","isHelpDialogDisplayed","setHelpDialogDisplayed","EndAdornment","showHelp","SearchIcon","headerRefName","SearchBox","RefNameAutocomplete","onSelect","TextFieldProps","WIDGET_HEIGHT","endAdornment","headerBar","headerForm","flexWrap","spacer","flexGrow","Controls","LinearGenomeViewHeader","hideHeaderOverview","focusedBackground","MiniControls","ArrowDown","SequenceSearchDialog","GetSequenceDialog","SearchResultsDialog","hideNoTracksActive","showCenterLine","showCytobandsSetting","showGridlines","showTrackOutlines","draggingTrackId","afterDisplayedRegionsSetCallbacks","coarseDynamicBlocks","pinnedTracks","unpinnedTracks","trackLabelsSetting","sessionSetting","INTER_REGION_PADDING_WIDTH","stickyViewHeaders","isSessionWithMultipleViews","pinnedTracksTop","VIEW_HEADER_HEIGHT","SCALE_BAR_HEIGHT","scaleBarDisplayPrefix","MiniControlsComponent","HeaderComponent","Header","assembliesNotFound","hasDisplayedRegions","scaleBarHeight","RESIZE_HANDLE_HEIGHT","headerHeight","trackHeights","trackHeightsWithResizeHandles","includeAggregateIndexes","openTrackIds","rewriteOnClicks","holdOnClick","apply","trackTypeActions","allActions","setShowTrackOutlines","setColorByCDS","setShowCytobands","setHideHeader","setHideHeaderOverview","setHideNoTracksActive","setShowGridlines","addToHighlights","removeHighlight","newOffsetPx","centerAtOffset","newBpPerPx","oldBpPerPx","setOffsets","searchResults","searchQuery","horizontallyFlip","displayInitialSnapshot","moveTrackDown","moveTrackUp","moveTrackToTop","moveTrackToBottom","moveTrack","movingId","targetId","oldIndex","newIndex","setTrackLabels","setting","setShowCenterLine","simView","afterDisplayedRegionsSet","horizontalScroll","oldOffsetPx","names","setDraggingTrackId","factor","cancelLastAnimation","viewWidths","animate","cancelAnimation","springAnimate","targetBpPerPx","canShowCytobands","anyCytobandsExist","SyncAltIcon","currentlyCalculatedStaticBlocks","stringifiedCurrentlyCalculatedStaticBlocks","calculateStaticBlocks","sret","roundedDynamicBlocks","visibleLocStrings","coarseVisibleLocStrings","setCoarseDynamicBlocks","optAssemblyName","parsedLocStrings","locations","navToMultiple","f1","f2","assembly1","assembly2","ref1","ref2","findLast","s1","e1","e2","index2","ed","ZoomInIcon","regionNumber","LinearGenomeViewPlugin","ZoomControls","configurationSchema","BasicTrackF","LinearBasicDisplayF","LinearGenomeViewF","LinearBareDisplayF","tracklist","nav","h","LaunchLinearGenomeViewF","LineStyleIcon","blockStatus","displayStatus","BlockErrorMessage","BlockLoadingMessage","reloadFlag","isLeftEndOfDisplayedRegion","isRightEndOfDisplayedRegion","getContainingDisplay","setStatus","isRetryException","optDisplay","regionAsm","hasName","displayError","JexlF","log10","char","codePointAt","pad","padEnd","padStart","repeat","match","substring","trimEnd","trimStart","addBinaryOp","altTypeToSO","DEL","INS","DUP","INV","INVDUP","CNV","TRA","NON_REF","getSOTermAndDescription","parser","soTerms","soTerm","getSOAndDescFromAltDefs","makeDescriptionString","lena","getSOAndDescByExamination","descs","prefixes","desc","prefix","suffixes","pref","modAlt","getEnd","POS","REF","ALT","isTRA","isSymbolic","VCFFeature","CHROM","ID","dataFromVariant","_id","SAMPLES","GENOTYPES","samples","dataFunction","asyncReactionFunction","reactionOptions","startedFunction","successFunction","errorFunction","inProgress","handleError","mobxReactionHandle","ResetComponent","onFactoryReset","resetButtonText","dialogOpen","setDialogOpen","FactoryResetDialog","FatalErrorDialog","componentStack","ErrorMessage","ComparativeServerSideRenderer","featurePassesFilters","passes","requestRegions","requestRegion","en","toP","ErrorBoundary","componentDidCatch","errorInfo","setState","FallbackComponent","setTarget","newTarget","LazyConfigurationEditorComponent","useNameOverride","refNameColumn","ConfigurationPlugin","FromConfigAdapterF","FromConfigRegionsAdapterF","FromConfigSequenceAdapterF","RefNameAliasAdapterF","HeadingComponent","ConfigurationEditorWidgetF","NcbiSequenceReportAliasAdapterF","isAbsoluteUrl","trackSource","trackData","indexTrackData","altAssemblyName","altTrackName","altTrackType","textIndexTrack","textIndexingConf","mixinData","setMixinData","setAdapterHint","setTrackSource","setTextIndexingConf","setTextIndexTrack","setTrackData","setIndexTrackData","setAssembly","setTrackName","setTrackType","clearData","trackAdapter","guessAdapter","isFtp","isRelativeTrackUrl","isRelativeIndexUrl","isRelativeUrl","trackHttp","indexHttp","wrongProtocol","protocol","unsupported","UNSUPPORTED","guessTrackType","getTrackConfig","timestamp","assemblyInstance","deepmerge","warningMessage","AddTrackWidgetF","extendedName","verticalGuidesZoomContainer","verticalGuidesContainer","tick","majorTick","minorTick","RenderedBlockLines","RenderedVerticalGuides","offsetLeft","totalWidthPx","dragHandle","dragHandleIcon","verticalAlign","draggable","onDragStart","currentTarget","parentNode","dataTransfer","setDragImage","onDragEnd","DragIcon","lgvHasParentView","PushPinIcon","MinimizeIcon","KeyboardDoubleArrowUpIcon","KeyboardArrowUpIcon","KeyboardArrowDownIcon","KeyboardDoubleArrowDownIcon","getTrackActionMenuItems","MoreVertIcon","iconButton","TrackLabelDragHandle","CloseIcon","TrackLabelMenu","trackLabel","trackLabelOffset","trackLabelOverlap","labelStyle","TrackLabel","renderingComponentContainer","trackRenderingContainer","overflowY","overflowX","onDragEnter","onScroll","onHorizontalScroll","marginTop","unpinnedTrack","elevation","detail","Gridlines","TrackLabelContainer","TrackRenderingContainer","tooltipTarget","coordX","tooltipTop","useRangeSelect","shiftOnly","setAnchorPosition","relativeX","handleMenuItemClick","computeOffsets","rubberbandOn","numOfBpSelected","rubberbandControlTop","VerticalGuide","sticky","majorTickLabel","baseNumber","ScalebarCoordinateTicks","refLabel","b0","lastLeftBlock","blockOffsetPx","zoomContainer","other","ScalebarCoordinateLabels","ScalebarRefNameLabels","CenterLine","tracksContainer","TracksContainer","mouseDown1","setMouseDragging","scheduled","prevX","cleanup","requestAnimationFrame","dataset","resizer","button","useSideScroll","mouseDown2","curr","onWheel","deltaY","deltaX","useWheelScroll","Rubberband","HighlightGroup","NoTracksActiveButton","header","LinearGenomeViewContainer","handleSelectView","Element","contains","setFocusedViewId","hoverPosition","hoverFeature","TrackContainer","ImportForm","func","_stopToken","findNonSparseKeys","hasAnyOverlap","matches","categories","queryLower","findSubCategories","paths","hasSubs","findTopLevelCategories","nonMetadataKeys","filterTracks","trackListAssemblies","trackAssemblyNames","trackAssemblies","trackSelectorAnyOverlap","hasAllOverlap","generateHierarchy","noCategories","hierarchy","collapsed","activeSortTrackNames","activeSortCategories","confs","sortNames","sortCategories","sortConfs","currLevel","isOpenByDefault","keyConfigPostFix","recentlyUsedK","favoritesK","collapsedK","localStorageGetJSON","localStorageSetJSON","MAX_RECENTLY_USED","stateTreeFactory","faceted","showSparse","showFilters","showOptions","panelWidth","useShoppingCart","setFilter","setPanelWidth","setUseShoppingCart","setShowSparse","setShowOptions","setShowFilters","allTrackConfigurations","filteredNonMetadataKeys","metadataKeys","getRootKeys","filteredMetadataKeys","fields","filteredRows","arrFilters","setVisible","favorites","recentlyUsed","sortTrackNames","recentlyUsedCounter","favoritesCounter","shownTrackIds","selectionSet","favoritesSet","recentlyUsedSet","setSortTrackNames","setSortCategories","addToSelection","removeFromSelection","addToFavorites","removeFromFavorites","clearFavorites","setRecentlyUsedCounter","setRecentlyUsed","setFavorites","setFavoritesCounter","addToRecentlyUsed","clearRecentlyUsed","setView","toggleCategory","pathName","setCategoryCollapsed","expandAllCategories","setCollapsedCategories","isSelected","isFavorite","isRecentlyUsed","getRefSeqTrackConf","configAndSessionTrackConfigurations","connectionInstances","allTrackConfigurationTrackIdSet","favoriteTracks","recentlyUsedTracks","allTracks","group","collapseSubCategories","collapseTopLevelCategories","trackGroups","hasAnySubcategories","lc","HierarchicalTrackSelectorWidgetF","AddConnectionWidgetF","cytobandLocation","CoreGetRefNames","CoreGetFeatureDetails","superArgs","getLayoutSession","CoreGetMetadata","CoreGetFileInfo","CoreGetFeatures","validateRendererType","CoreRender","des","CoreFreeResources","getRendererTypes","_rpcDriver","CoreGetFeatureDensityStats","CorePlugin","coreRpcMethods","RpcMethod","CytobandAdapterF","PhasedScheduler","phaseCallbacks","phaseOrder","phase","run","phaseName","TypeRecord","registeredTypes","baseClass","PluginManager","plugins","pluginMetadata","runtimePluginDefinitions","elementCreationSchedule","adapterTypes","textSearchAdapterTypes","trackTypes","connectionTypes","viewTypes","widgetTypes","rpcMethods","addTrackWidgets","internetAccountTypes","configured","extensionPoints","initialPlugins","addPlugin","plugin","isCore","pluginConfigurationSchemas","configurationSchemas","load","getPlugin","hasPlugin","createPluggableElements","setRootModel","getElementTypeRecord","groupName","addElementType","creationCallback","typeRecord","newElement","getElementType","getElementTypesInGroup","getViewElements","getTrackElements","getConnectionElements","getAddTrackWorkflowElements","getRpcElements","getAdapterElements","fieldName","null","pluggableTypes","typeGroup","jbrequireCache","lib","ReExports","jbrequire","pack","getTextSearchAdapterType","getAddTrackWorkflow","getWidgetType","getConnectionType","getRpcMethodType","methodName","getInternetAccountType","newView","extensionPointName","callbacks","extendee","accumulator","evaluateAsyncExtensionPoint","borderTop","mouseOverLine","setMouseOverLine","AllLines","scaleLinear","scaleLog","scaleQuantize","nice","rangeMin","rangeMax","getOrigin","getScaleType","fillRectCtx","fillStyle","fillRect","PrecomputedLayout","insert","getRectangles","collides","_rect","_top","addRectToBitmap","_data","_left","_right","BlockSet","lastBlock","getBlocks","getRegions","thisarg","BaseBlock","assign","elidedBlockCount","otherBlock","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","namedColorToHex","isNamedColor","getLuminance","convertedColor","muiGetLuminance","emphasize","coefficient","muiEmphasize","makeContrasting","foreground","minContrastRatio","convertedForeground","convertedBackground","backgroundLuminance","contrastRatio","getContrastRatio","originalColor","darken","lighten","TextSearchManager","QuickLRU","maxSize","loadTextSearchAdapters","relevantAdapters","adapterId","adapterInstance","aggregateTextSearchAdapters","jbrowse","getAdaptersWithAssembly","getTrackAdaptersWithAssembly","rankFn","adapters","searchIndex","sortResults","rightRoundedRect","leftTriangle","rightTriangle","colorMap","gneg","gpos25","gpos50","gpos100","gpos75","gvar","stalk","acen","lcap","rcap","centromereSeen","minSizeToBotherWith","segmentsIntersect","LayoutRow","widthLimit","setAllFilled","allFilled","getItemAt","rowState","bits","isRangeClear","initialize","rectWidth","oLeft","oRight","currLength","additionalLength","leftTrimAmount","rightTrimAmount","trimAmount","desiredLength","hardRowLimit","bitmap","pTotalHeight","storedRec","pLeft","pRight","pHeight","rectangle","originalHeight","maxTop","autovivifyRow","yEnd","hasSeen","pY","pX","regionRectangles","calculateAlleleCounts","allele","calculateMinorAlleleFrequency","firstMax","secondMax","num","findSecondLargestNumber","getMostFrequentAlt","mostFrequentAlt","altCount","lengthCutoffFilter","orientationTypes","fr","F1R2","F2R1","F1F2","F2F1","R1R2","R2R1","R1F2","R2F1","rf","ff","pairMap","LR","LL","RR","RL","originalRefName","o","g","randomColor","mix","ThrowingLayout","PrecomputedMultiLayout","sublayoutJson","absoluteCache","dirty","nameOrSceneGraph","childLeft","childRight","childTop","childBottom","expand","newLeft","newRight","newTop","newBottom","walkParents","walkChildren","xOffset","yOffset","node","hoverVertical","useClientY","elision","modelWidth","windowLeftBp","windowRightBp","blockSizePx","blockSizeBp","regionBpOffset","regionStart","regionEnd","regionBlockCount","windowRightBlockNum","windowLeftBlockNum","regionWidthPx","blockNum","RectBg","svgFontSize","hasColors","legendWidth","colorBoxWidth","clipid","clipPath","ColorLegend","locstr","includeAsm","oob","viewOffsetPx","blockLabelKeysToHide","sortedBlocks","alen","labelBounds","orientation","Axis","shadow","format","orient","LEFT","RIGHT","fg","rubberband","rubberbandText","contrastText","popover","mouseEvents","paddingRight","anchorEl","side","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","setAnchorEl","el","hasPairedReads","alphaColor","toHslString","flagInclude","flagExclude","negFlags","posFlags","cacheGetter","ctor","prop","getter","getOwnPropertyDescriptor","prototype","filterReadFlag","filterTagValue","readVal","filterVal","configEditorComponent","isViewContainer","isSessionModel","disableAddTracks","isSessionWithShareURL","shareURL","isSessionModelWithConnections","isSessionModelWithConnectionEditing","isSessionWithSessionPlugins","isViewModel","isTrackModel","isDisplayModel","isTrackViewModel","isRootModelWithInternetAccounts","isLocalPathLocation","AuthNeededError","setPrototypeOf","deserializedFeatures","serialized","_renderArgs","featureObservable","modificationRegex","getModProbabilities","getModPositions","mm","fseq","fstrand","mods","basemod","skips","typestr","getMethBins","flen","methBins","hydroxyMethBins","methProbs","hydroxyMethProbs","probabilities","probIndex","idx2","prob","filterChain","inputFilter","displayedRegionLeftPx","windowLeftPx","windowRightPx","displayedRegionRightPx","FeatureRenderer","RpcRenderedSvgGroup","bpSoFar","lengthBetween","numBlocksWideEnough","extraBp","bpToStart","interRegionPaddingBp","currBlock","cigarToMismatches","ops","qual","roffset","soffset","hasRefAndSeq","altbase","q","subarray","mdRegex","cigarRegex","parseCigar","getMismatches","md","mdstring","cigarMismatches","lastCigar","lastTemplateOffset","lastRefOffset","lastSkipPos","mismatchRecords","getTemplateCoordLocal","refCoord","templateOffset","refOffset","mismatch","mdToMismatches","getOrientedCigar","flip","getOrientedMismatches","getLengthOnRef","lengthOnRef","normalize","aln","saRef","saStart","saStrand","saCigar","saLengthOnRef","saLength","saLengthSansClipping","saStrandNormalized","saClipPos","saRealStart","seqLength","AutocompleteTextField","inputBoxVal","setInputValue","setCurrentSearch","helperText","InputProps","placeholder","setOpen","loaded","setLoaded","currentSearch","inputValue","searchOptions","setSearchOptions","debouncedSearch","useDebounce","aggregateResults","getDeduplicatedResult","regionOptions","disableListWrap","disableClearable","freeSolo","includeInputInList","selectOnFocus","onInputChange","_event","newInputValue","loadingText","onOpen","selectedOption","getOptionDisabled","filterOptions","toLocaleLowerCase","getFiltered","renderInput","getOptionLabel","opt","currBp","scroll","layoutSessions","getLayoutId","getWorkerSession","freeResourcesInWorker","rasterizeLayers","xlinkHref","convertToBlob","fakeCtx","canvasRecordedData","getSvg","innerHTML","SVGBackground","shift","SVGRegionSeparators","Ruler","major","minor","hideText","SVGRuler","renderRuler","SVGScalebar","displayBp","x0","SVGHeader","cytobandHeight","rulerHeight","SVGTrackLabel","xoff","coarseStripHTML","SVGTracks","displayResults","textOffset","prevOffset","reactElements","themeName","allThemes","trackLabelMaxLen","renderToStaticMarkup","xmlns","xmlnsXlink","viewBox","YScaleBar","fetchers","globalRangeCache","HttpRangeFetcher","chunkSize","maxFetchSize","minimumTTL","RemoteFile","fetchBinaryRange","rangeParse","buffer","getRange","Response","requestDate","responseDate","hint","arrayBuffer","resolveUriLocation","LocalFile","BlobFile","absoluteLocation","internetAccount","getInternetAccount","checkAuthNeededFetch"],"sourceRoot":""}