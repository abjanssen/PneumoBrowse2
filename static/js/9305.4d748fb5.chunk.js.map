{"version":3,"file":"static/js/9305.4d748fb5.chunk.js","mappings":"gPAcA,MAgEA,EAhEsBA,EACpBC,SACAC,cAKA,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,eAAeC,KAAKC,SAC7CC,EAAWP,EAAOQ,OAAMC,GAAgB,sBAAXA,EAAEC,OACrC,OACEC,EAAAA,cAACC,EAAAA,EAAM,CACLC,MAAI,EACJZ,QAASA,KACPA,GAAQ,EAAM,EAEhBa,MAAM,qCAENH,EAAAA,cAACI,EAAAA,EAAa,KACZJ,EAAAA,cAACK,EAAAA,EAAU,KACPT,EAEE,KADA,+GACK,YAGXI,EAAAA,cAAA,UACGX,EAAOiB,KAAIC,GACVP,EAAAA,cAAA,MAAIQ,IAAKD,EAAME,UACZC,EAAAA,EAAAA,gBAAeH,EAAO,QAAQ,MAAIA,EAAMR,SAI/CC,EAAAA,cAACW,EAAAA,EAAS,CACRC,MAAOrB,EACPsB,SAAUC,IACRtB,EAAOsB,EAAMC,OAAOH,MAAM,EAE5BI,WAAW,eAEbhB,EAAAA,cAACK,EAAAA,EAAU,KAAC,+BAEdL,EAAAA,cAACiB,EAAAA,EAAa,KACZjB,EAAAA,cAACkB,EAAAA,EAAM,CACLC,QAASA,KACP7B,GAAQ,EAAM,EAEhB8B,MAAM,WACP,UAGDpB,EAAAA,cAACkB,EAAAA,EAAM,CACLC,QAASA,KACP7B,GAAQ,EAAM,CAAE+B,KAAM9B,GAAM,EAE9B6B,MAAM,UACNE,QAAQ,YACRC,WAAS,GACV,WAII,C","sources":["../../../plugins/wiggle/src/CreateMultiWiggleExtension/ConfirmDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport Dialog from '@jbrowse/core/ui/Dialog'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\n\nconst ConfirmDialog = ({\n  tracks,\n  onClose,\n}: {\n  tracks: AnyConfigurationModel[]\n  onClose: (arg: boolean, arg1?: { name: string }) => void\n}) => {\n  const [val, setVal] = useState(`MultiWiggle ${Date.now()}`)\n  const allQuant = tracks.every(t => t.type === 'QuantitativeTrack')\n  return (\n    <Dialog\n      open\n      onClose={() => {\n        onClose(false)\n      }}\n      title=\"Confirm multi-wiggle track create\"\n    >\n      <DialogContent>\n        <Typography>\n          {!allQuant\n            ? 'Not every track looks like a QuantitativeTrack. This could have unexpected behavior, confirm if it looks ok.'\n            : null}\n          Listing:\n        </Typography>\n        <ul>\n          {tracks.map(track => (\n            <li key={track.trackId}>\n              {readConfObject(track, 'name')} - {track.type}\n            </li>\n          ))}\n        </ul>\n        <TextField\n          value={val}\n          onChange={event => {\n            setVal(event.target.value)\n          }}\n          helperText=\"Track name\"\n        />\n        <Typography>Confirm creation of track?</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            onClose(false)\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            onClose(true, { name: val })\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmDialog\n"],"names":["ConfirmDialog","tracks","onClose","val","setVal","useState","Date","now","allQuant","every","t","type","React","Dialog","open","title","DialogContent","Typography","map","track","key","trackId","readConfObject","TextField","value","onChange","event","target","helperText","DialogActions","Button","onClick","color","name","variant","autoFocus"],"sourceRoot":""}