{"version":3,"file":"static/js/553.69627419.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/esm/Toolbar/Toolbar.js","../../../node_modules/@mui/material/esm/Badge/badgeClasses.js","../../../node_modules/@mui/material/esm/Toolbar/toolbarClasses.js","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetDataGrid.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetViewActual.tsx","../../../plugins/spreadsheet-view/src/SpreadsheetView/components/SpreadsheetView.tsx","../../../node_modules/@mui/material/esm/Badge/Badge.js","../../../node_modules/@mui/material/esm/Badge/useBadge.js","../../../node_modules/@mui/system/esm/styled/styled.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","import { DataGrid, useGridApiRef } from '@mui/x-data-grid'\nimport { observer } from 'mobx-react'\n\nimport type { SpreadsheetModel } from '../SpreadsheetModel'\n\nconst SpreadsheetDataGrid = observer(function ({\n  model,\n}: {\n  model: SpreadsheetModel\n}) {\n  const { rows, dataGridColumns, visibleColumns } = model\n  const apiRef = useGridApiRef()\n  return rows && dataGridColumns ? (\n    <DataGrid\n      apiRef={apiRef}\n      checkboxSelection\n      disableRowSelectionOnClick\n      columnHeaderHeight={35}\n      columnVisibilityModel={visibleColumns}\n      onFilterModelChange={() => {\n        // might be an x-data-grid undocumented api, if it stops working, can\n        // consider using controlled filtering\n        setTimeout(() => {\n          if (apiRef.current) {\n            model.setVisibleRows(apiRef.current.state.visibleRowsLookup)\n          }\n        })\n      }}\n      onColumnVisibilityModelChange={n => {\n        model.setVisibleColumns(n)\n      }}\n      rowHeight={25}\n      hideFooter={rows.length < 100}\n      slotProps={{\n        toolbar: {\n          showQuickFilter: true,\n        },\n      }}\n      showToolbar\n      rows={rows}\n      columns={dataGridColumns}\n    />\n  ) : null\n})\n\nexport default SpreadsheetDataGrid\n","import { useState } from 'react'\n\nimport { ResizeHandle } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport SpreadsheetDataGrid from './SpreadsheetDataGrid'\n\nimport type { SpreadsheetViewModel } from '../SpreadsheetViewModel'\n\nconst useStyles = makeStyles()(theme => ({\n  contentArea: {\n    overflow: 'auto',\n    position: 'relative',\n    marginBottom: theme.spacing(1),\n    background: theme.palette.background.paper,\n  },\n  resizeHandle: {\n    height: 5,\n    boxSizing: 'border-box',\n    background: theme.palette.action.disabled,\n    borderTop: '1px solid #fafafa',\n  },\n}))\n\nconst SpreadsheetViewActual = observer(function ({\n  model,\n}: {\n  model: SpreadsheetViewModel\n}) {\n  const [initialHeight, setInitialHeight] = useState<number>(0)\n  const { classes } = useStyles()\n  const { spreadsheet, hideVerticalResizeHandle, height } = model\n  return spreadsheet ? (\n    <>\n      <div style={{ height }} className={classes.contentArea}>\n        <SpreadsheetDataGrid model={spreadsheet} />\n      </div>\n      {hideVerticalResizeHandle ? null : (\n        <ResizeHandle\n          onMouseDown={() => {\n            setInitialHeight(height)\n          }}\n          onDrag={(_, dist) => model.setHeight(initialHeight - dist)}\n          className={classes.resizeHandle}\n        />\n      )}\n    </>\n  ) : (\n    <div>Unknown</div>\n  )\n})\n\nexport default SpreadsheetViewActual\n","import { Suspense, lazy } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport SpreadsheetViewActual from './SpreadsheetViewActual'\n\nimport type { SpreadsheetViewModel } from '../SpreadsheetViewModel'\n\nconst ImportWizard = lazy(() => import('./ImportWizard'))\n\nconst SpreadsheetContainer = observer(function ({\n  model,\n}: {\n  model: SpreadsheetViewModel\n}) {\n  return !model.spreadsheet?.initialized ? (\n    <Suspense fallback={null}>\n      <ImportWizard model={model.importWizard} />\n    </Suspense>\n  ) : (\n    <SpreadsheetViewActual model={model} />\n  )\n})\n\nexport default SpreadsheetContainer\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root'\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const externalForwardedProps = {\n    slots: {\n      root: slots?.root ?? components.Root,\n      badge: slots?.badge ?? components.Badge\n    },\n    slotProps: {\n      root: slotProps?.root ?? componentsProps.root,\n      badge: slotProps?.badge ?? componentsProps.badge\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: BadgeRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    className: clsx(classes.root, className),\n    ref,\n    additionalProps: {\n      as: component\n    }\n  });\n  const [BadgeSlot, badgeProps] = useSlot('badge', {\n    elementType: BadgeBadge,\n    externalForwardedProps,\n    ownerState,\n    className: classes.badge\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;"],"names":["ToolbarRoot","name","slot","overridesResolver","props","styles","ownerState","root","disableGutters","gutters","variant","theme","position","display","alignItems","variants","style","paddingLeft","spacing","paddingRight","breakpoints","up","minHeight","mixins","toolbar","inProps","ref","className","component","other","classes","slots","useUtilityClasses","as","getBadgeUtilityClass","getToolbarUtilityClass","observer","model","rows","dataGridColumns","visibleColumns","apiRef","useGridApiRef","_jsx","DataGrid","checkboxSelection","disableRowSelectionOnClick","columnHeaderHeight","columnVisibilityModel","onFilterModelChange","setTimeout","current","setVisibleRows","state","visibleRowsLookup","onColumnVisibilityModelChange","n","setVisibleColumns","rowHeight","hideFooter","length","slotProps","showQuickFilter","showToolbar","columns","useStyles","makeStyles","contentArea","overflow","marginBottom","background","palette","paper","resizeHandle","height","boxSizing","action","disabled","borderTop","initialHeight","setInitialHeight","useState","spreadsheet","hideVerticalResizeHandle","_jsxs","_Fragment","children","SpreadsheetDataGrid","ResizeHandle","onMouseDown","onDrag","_","dist","setHeight","ImportWizard","lazy","initialized","SpreadsheetViewActual","Suspense","fallback","importWizard","BadgeRoot","styled","verticalAlign","flexShrink","BadgeBadge","badge","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","memoTheme","flexDirection","flexWrap","justifyContent","alignContent","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","Object","entries","filter","createSimplePaletteValueFilter","map","backgroundColor","vars","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","getAnchorOrigin","anchorOriginProp","classesProp","components","componentsProps","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","showZero","variantProp","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","anchorOriginPropProp","undefined","composeClasses","externalForwardedProps","Root","Badge","RootSlot","rootProps","useSlot","elementType","clsx","additionalProps","BadgeSlot","badgeProps"],"sourceRoot":""}