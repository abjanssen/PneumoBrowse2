{"version":3,"file":"static/js/3678.fcfeda9b.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/TooltipContents.tsx","../../../plugins/alignments/src/LinearSNPCoverageDisplay/components/Tooltip.tsx"],"sourcesContent":["import { forwardRef } from 'react'\n\nimport { toLocale } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCoverageBin } from '../../shared/types'\nimport type { Feature } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(() => ({\n  td: {\n    whiteSpace: 'nowrap',\n  },\n}))\n\nconst toP = (s = 0) => +(+s).toFixed(1)\n\nconst pct = (n: number, total = 1) => `${toP((n / (total || 1)) * 100)}%`\n\ninterface Props {\n  feature: Feature\n  model: {\n    visibleModifications: Map<string, { color: string }>\n  }\n}\n\nfunction ColorSquare({\n  base,\n  model,\n}: {\n  base: string\n  model: { visibleModifications: Map<string, { color: string }> }\n}) {\n  const { visibleModifications } = model\n  return base.startsWith('mod_') ? (\n    <div\n      style={{\n        width: 10,\n        height: 10,\n        background: visibleModifications.get(base.replace('mod_', ''))?.color,\n      }}\n    />\n  ) : null\n}\n\nconst TooltipContents = forwardRef<HTMLDivElement, Props>(\n  function TooltipContents2(props, reactRef) {\n    const { feature, model } = props\n    const { classes } = useStyles()\n    const start = feature.get('start') + 1\n    const end = feature.get('end')\n    const name = feature.get('refName')\n    const { refbase, readsCounted, depth, ref, ...info } = feature.get(\n      'snpinfo',\n    ) as BaseCoverageBin\n\n    return (\n      <div ref={reactRef}>\n        <table>\n          <caption>\n            {[\n              name,\n              start === end\n                ? toLocale(start)\n                : `${toLocale(start)}..${toLocale(end)}`,\n            ]\n              .filter(f => !!f)\n              .join(':')}\n          </caption>\n          <thead>\n            <tr>\n              <th />\n              <th>Base</th>\n              <th>Count</th>\n              <th>% of Total</th>\n              <th>Strands</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td />\n              <td>Total</td>\n              <td>{readsCounted}</td>\n              <td> </td>\n              <td> </td>\n            </tr>\n            <tr>\n              <td />\n              <td>REF {refbase ? `(${refbase.toUpperCase()})` : ''}</td>\n              <td>{ref.entryDepth}</td>\n              <td>{pct(ref.entryDepth, readsCounted)}</td>\n              <td>\n                {ref['-1'] ? `${ref['-1']}(-)` : ''}\n                {ref['1'] ? `${ref['1']}(+)` : ''}\n              </td>\n            </tr>\n\n            {Object.entries(info).map(([key, entry]) =>\n              Object.entries(entry).map(([base, score]) => (\n                <tr key={`${key}_${base}`}>\n                  <td>\n                    <ColorSquare model={model} base={base} />\n                  </td>\n                  <td>{base.toUpperCase()} </td>\n                  <td className={classes.td}>\n                    {[\n                      score.entryDepth,\n                      score.avgProbability !== undefined\n                        ? `(avg. ${pct(score.avgProbability)} prob.)`\n                        : '',\n                    ]\n                      .filter(f => !!f)\n                      .join(' ')}\n                  </td>\n\n                  <td>\n                    {base === 'depth' || base === 'skip'\n                      ? '---'\n                      : pct(score.entryDepth, readsCounted)}\n                  </td>\n                  <td>\n                    {score['-1'] ? `${score['-1']}(-)` : ''}\n                    {score['1'] ? `${score['1']}(+)` : ''}\n                  </td>\n                </tr>\n              )),\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  },\n)\n\nexport default TooltipContents\n","import { Tooltip } from '@jbrowse/plugin-wiggle'\nimport { observer } from 'mobx-react'\n\nimport TooltipContents from './TooltipContents'\n\nimport type { Feature } from '@jbrowse/core/util'\n\ntype Coord = [number, number]\n\nconst SNPCoverageTooltip = observer(function (props: {\n  model: {\n    featureUnderMouse?: Feature\n  }\n  height: number\n  offsetMouseCoord: Coord\n  clientMouseCoord: Coord\n  clientRect?: DOMRect\n}) {\n  const { model } = props\n  const { featureUnderMouse: feat } = model\n  return feat && feat.get('type') === 'skip' ? null : (\n    <Tooltip TooltipContents={TooltipContents} {...props} />\n  )\n})\n\nexport default SNPCoverageTooltip\n"],"names":["useStyles","makeStyles","td","whiteSpace","pct","n","total","toP","s","toFixed","ColorSquare","t0","$","_c","base","model","visibleModifications","t1","startsWith","_jsx","style","width","height","background","get","replace","color","forwardRef","props","reactRef","feature","classes","start","end","name","refbase","readsCounted","depth","ref","info","t2","toLocale","t3","filter","_temp","t4","join","t5","t6","t7","t8","t10","t9","t11","children","Symbol","for","_jsxs","t12","toUpperCase","t13","t14","t15","t16","entryDepth","Object","entries","map","t17","key","entry","t18","score","className","undefined","avgProbability","_temp2","f","f_0","observer","featureUnderMouse","feat","Tooltip","TooltipContents"],"sourceRoot":""}