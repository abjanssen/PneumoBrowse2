{"version":3,"file":"static/js/4753.8b965594.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/SyntenyContextMenu.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/LinearSyntenyRendering.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/Component.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts"],"sourcesContent":["import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\n\nimport { draw, drawMatchSimple } from './components/util'\n\nimport type { LinearSyntenyDisplayModel } from './model'\nimport type { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const { level, height, featPositions } = model\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const offsets = view.views.map(v => v.offsetPx)\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPositions.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]!\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[level]!\n          const d2 = len / bpPerPxs[level + 1]!\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          }\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              ctx1.fillStyle =\n                colorMap[(continuingFlag && d1 > 1) || d2 > 1 ? op : 'M']\n              continuingFlag = false\n\n              draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              ctx1.fill()\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n                ctx3.fill()\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n        ctx1.fill()\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n\n  // eslint-disable-next-line unicorn/no-for-loop\n  for (let i = 0; i < featPositions.length; i++) {\n    const feature = featPositions[i]!\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      level,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { level, clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = model.height\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  ctx.strokeStyle = 'rgba(0, 0, 0, 0.9)'\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature: feature1,\n      level,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.stroke()\n      },\n      feature: feature2,\n      ctx,\n      level,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n","import { Menu } from '@jbrowse/core/ui'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\n\nimport type { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport type { LinearSyntenyDisplayModel } from '../model'\nimport type { Feature } from '@jbrowse/core/util'\n\ninterface ClickCoord {\n  clientX: number\n  clientY: number\n  feature: { f: Feature }\n}\n\nexport default function SyntenyContextMenu({\n  model,\n  onClose,\n  anchorEl,\n}: {\n  onClose: () => void\n  model: LinearSyntenyDisplayModel\n  anchorEl: ClickCoord\n}) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const { clientX, clientY, feature } = anchorEl\n  return (\n    <Menu\n      onMenuItemClick={(event, callback) => {\n        callback(event)\n        onClose()\n      }}\n      anchorEl={{\n        nodeType: 1,\n        getBoundingClientRect: () => {\n          const x = clientX\n          const y = clientY\n          return {\n            top: y,\n            left: x,\n            bottom: y,\n            right: x,\n            width: 0,\n            height: 0,\n            x,\n            y,\n            toJSON() {},\n          }\n        },\n      }}\n      onClose={onClose}\n      open={Boolean(anchorEl)}\n      menuItems={[\n        {\n          label: 'Center on feature',\n          onClick: () => {\n            const { f } = feature\n            const start = f.get('start')\n            const end = f.get('end')\n            const refName = f.get('refName')\n            const mate = f.get('mate')\n\n            const l1 = view.views[model.level]!\n            const l2 = view.views[model.level + 1]!\n            l1.navToLocString(`${refName}:${start}-${end}`).catch(\n              (e: unknown) => {\n                const err = `${l1.assemblyNames[0]}:${e}`\n                console.error(err)\n                getSession(model).notifyError(err, e)\n              },\n            )\n\n            l2.navToLocString(\n              `${mate.refName}:${mate.start}-${mate.end}`,\n            ).catch((e: unknown) => {\n              const err = `${l2.assemblyNames[0]}:${e}`\n              console.error(err)\n              getSession(model).notifyError(err, e)\n            })\n          },\n        },\n      ]}\n    />\n  )\n}\n","import { lazy, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { getContainingView } from '@jbrowse/core/util'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { MAX_COLOR_RANGE, getId } from '../drawSynteny'\nimport SyntenyContextMenu from './SyntenyContextMenu'\nimport { getTooltip, onSynClick, onSynContextClick } from './util'\n\nimport type { ClickCoord } from './util'\nimport type { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport type { LinearSyntenyDisplayModel } from '../model'\n\nconst SyntenyTooltip = lazy(() => import('./SyntenyTooltip'))\n\ntype Timer = ReturnType<typeof setTimeout>\n\nconst useStyles = makeStyles()({\n  pix: {\n    imageRendering: 'pixelated',\n    pointerEvents: 'none',\n    visibility: 'hidden',\n    position: 'absolute',\n  },\n  rel: {\n    position: 'relative',\n  },\n  mouseoverCanvas: {\n    position: 'absolute',\n    pointEvents: 'none',\n  },\n  mainCanvas: {\n    position: 'absolute',\n  },\n})\n\nconst LinearSyntenyRendering = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { mouseoverId, height } = model\n  const xOffset = useRef(0)\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const width = view.width\n  const delta = useRef(0)\n  const scheduled = useRef(false)\n  const timeout = useRef<Timer>(null)\n  const [anchorEl, setAnchorEl] = useState<ClickCoord>()\n  const [tooltip, setTooltip] = useState('')\n  const [currX, setCurrX] = useState<number>()\n  const [mouseCurrDownX, setMouseCurrDownX] = useState<number>()\n  const [mouseInitialDownX, setMouseInitialDownX] = useState<number>()\n  const [currY, setCurrY] = useState<number>()\n  const mainSyntenyCanvasRefp = useRef<HTMLCanvasElement>(null)\n\n  // these useCallbacks avoid new refs from being created on any mouseover,\n  // etc.\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const mouseoverDetectionCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setMouseoverCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const mainSyntenyCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setMainCanvasRef(ref)\n      mainSyntenyCanvasRefp.current = ref // this ref is additionally used in useEffect below\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      event.preventDefault()\n      if (event.ctrlKey) {\n        delta.current += event.deltaY / 500\n        for (const v of view.views) {\n          v.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n        }\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          for (const v of view.views) {\n            v.setScaleFactor(1)\n            v.zoomTo(\n              delta.current > 0\n                ? v.bpPerPx * (1 + delta.current)\n                : v.bpPerPx / (1 - delta.current),\n              event.clientX -\n                (mainSyntenyCanvasRefp.current?.getBoundingClientRect().left ||\n                  0),\n            )\n          }\n          delta.current = 0\n        }, 300)\n      } else {\n        if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {\n          xOffset.current += event.deltaX / 2\n        }\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            transaction(() => {\n              for (const v of view.views) {\n                v.horizontalScroll(xOffset.current)\n              }\n              xOffset.current = 0\n              scheduled.current = false\n            })\n          })\n        }\n      }\n    }\n    mainSyntenyCanvasRefp.current?.addEventListener('wheel', onWheel)\n    return () => {\n      mainSyntenyCanvasRefp.current?.removeEventListener('wheel', onWheel)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, height, width])\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const clickMapCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setClickMapCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const cigarClickMapCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setCigarClickMapCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  return (\n    <div className={classes.rel}>\n      <canvas\n        ref={mouseoverDetectionCanvasRef}\n        width={width}\n        height={height}\n        className={classes.mouseoverCanvas}\n      />\n      <canvas\n        ref={mainSyntenyCanvasRef}\n        onMouseMove={event => {\n          if (mouseCurrDownX !== undefined) {\n            xOffset.current += mouseCurrDownX - event.clientX\n            setMouseCurrDownX(event.clientX)\n            if (!scheduled.current) {\n              scheduled.current = true\n              window.requestAnimationFrame(() => {\n                transaction(() => {\n                  for (const v of view.views) {\n                    v.horizontalScroll(xOffset.current)\n                  }\n                  xOffset.current = 0\n                  scheduled.current = false\n                })\n              })\n            }\n          } else {\n            const ref1 = model.clickMapCanvas\n            const ref2 = model.cigarClickMapCanvas\n            if (!ref1 || !ref2) {\n              return\n            }\n            const rect = ref1.getBoundingClientRect()\n            const ctx1 = ref1.getContext('2d')\n            const ctx2 = ref2.getContext('2d')\n            if (!ctx1 || !ctx2) {\n              return\n            }\n            const { clientX, clientY } = event\n            const x = clientX - rect.left\n            const y = clientY - rect.top\n            setCurrX(clientX)\n            setCurrY(clientY)\n            const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n            const [r2, g2, b2] = ctx2.getImageData(x, y, 1, 1).data\n            const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n            const id = getId(r1!, g1!, b1!, unitMultiplier)\n            model.setMouseoverId(model.featPositions[id]?.f.id())\n            if (id === -1) {\n              setTooltip('')\n            } else if (model.featPositions[id]) {\n              const { f, cigar } = model.featPositions[id]\n              const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n              const cigarIdx = getId(r2!, g2!, b2!, unitMultiplier2)\n              setTooltip(\n                getTooltip({\n                  feature: f,\n                  cigarOp: cigar[cigarIdx],\n                  cigarOpLen: cigar[cigarIdx + 1],\n                }),\n              )\n            }\n          }\n        }}\n        onMouseLeave={() => {\n          model.setMouseoverId(undefined)\n          setMouseInitialDownX(undefined)\n          setMouseCurrDownX(undefined)\n        }}\n        onMouseDown={evt => {\n          setMouseCurrDownX(evt.clientX)\n          setMouseInitialDownX(evt.clientX)\n        }}\n        onMouseUp={evt => {\n          setMouseCurrDownX(undefined)\n          if (\n            mouseInitialDownX !== undefined &&\n            Math.abs(evt.clientX - mouseInitialDownX) < 5\n          ) {\n            onSynClick(evt, model)\n          }\n        }}\n        onContextMenu={evt => {\n          onSynContextClick(evt, model, setAnchorEl)\n        }}\n        data-testid=\"synteny_canvas\"\n        className={classes.mainCanvas}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={clickMapCanvasRef}\n        className={classes.pix}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={cigarClickMapCanvasRef}\n        className={classes.pix}\n        width={width}\n        height={height}\n      />\n      {mouseoverId && tooltip && currX && currY ? (\n        <SyntenyTooltip title={tooltip} />\n      ) : null}\n      {anchorEl ? (\n        <SyntenyContextMenu\n          model={model}\n          anchorEl={anchorEl}\n          onClose={() => {\n            setAnchorEl(undefined)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearSyntenyRendering\n","import { useEffect, useState } from 'react'\n\nimport { LoadingEllipses } from '@jbrowse/core/ui'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport LinearSyntenyRendering from './LinearSyntenyRendering'\n\nimport type { LinearSyntenyDisplayModel } from '../model'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n    blockMessage: {\n      background: '#f1f1f1',\n      padding: 10,\n    },\n    blockError: {\n      background: '#f1f1f1',\n      padding: 10,\n      color: 'red',\n    },\n  }\n})\n\nfunction LoadingMessage() {\n  // only show the loading message after 300ms to prevent excessive flickering\n  const [shown, setShown] = useState(false)\n  const { classes } = useStyles()\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setShown(true)\n    }, 300)\n    return () => {\n      clearTimeout(timeout)\n    }\n  })\n\n  return shown ? (\n    <div className={classes.loading}>\n      <LoadingEllipses />\n    </div>\n  ) : null\n}\n\nfunction BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockMessage}>{messageText}</div>\n}\n\nfunction BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockError}>{`${error}`}</div>\n}\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} />\n  }\n  if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  }\n  if (!model.features) {\n    return <LoadingMessage />\n  }\n\n  return <LinearSyntenyRendering model={model} />\n})\n\nexport default ServerSideRenderedBlockContent\n","import type React from 'react'\n\nimport {\n  assembleLocString,\n  doesIntersect2,\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\nimport { MAX_COLOR_RANGE, getId } from '../drawSynteny'\n\nimport type { LinearSyntenyDisplayModel } from '../model'\nimport type { Feature } from '@jbrowse/core/util'\n\ninterface Pos {\n  offsetPx: number\n}\n\nexport interface ClickCoord {\n  clientX: number\n  clientY: number\n  feature: { f: Feature }\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  level,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  level: number\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[level]!\n  const x12 = p12.offsetPx - offsets[level]!\n  const x21 = p21.offsetPx - offsets[level + 1]!\n  const x22 = p22.offsetPx - offsets[level + 1]!\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n}\n\nexport function onSynClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n) {\n  const view = getContainingView(model)\n  const track = getContainingTrack(model)\n  const {\n    featPositions,\n    numFeats,\n    clickMapCanvas: ref1,\n    cigarClickMapCanvas: ref2,\n    level,\n  } = model\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const x = event.clientX - rect.left\n  const y = event.clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const feat = featPositions[id]\n  if (feat) {\n    const { f } = feat\n    model.setClickId(f.id())\n    const session = getSession(model)\n    if (isSessionModelWithWidgets(session)) {\n      session.showWidget(\n        session.addWidget('SyntenyFeatureWidget', 'syntenyFeature', {\n          view,\n          track,\n          featureData: f.toJSON(),\n          level,\n        }),\n      )\n    }\n  }\n  return feat\n}\n\nexport function onSynContextClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n  setAnchorEl: (arg: ClickCoord) => void,\n) {\n  event.preventDefault()\n  const ref1 = model.clickMapCanvas\n  const ref2 = model.cigarClickMapCanvas\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const { clientX, clientY } = event\n  const x = clientX - rect.left\n  const y = clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const f = model.featPositions[id]\n  if (f) {\n    model.setClickId(f.f.id())\n    setAnchorEl({ clientX, clientY, feature: f })\n  }\n}\n\nexport function getTooltip({\n  feature,\n  cigarOp,\n  cigarOpLen,\n}: {\n  feature: Feature\n  cigarOp?: string\n  cigarOpLen?: string\n}) {\n  // @ts-expect-error\n  const f1 = feature.toJSON() as {\n    refName: string\n    start: number\n    end: number\n    strand?: number\n    assemblyName: string\n    identity?: number\n    name?: string\n    mate: {\n      start: number\n      end: number\n      refName: string\n      name: string\n    }\n  }\n  const f2 = f1.mate\n  const l1 = f1.end - f1.start\n  const l2 = f2.end - f2.start\n  const identity = f1.identity\n  const n1 = f1.name\n  const n2 = f2.name\n  return [\n    `Loc1: ${assembleLocString(f1)}`,\n    `Loc2: ${assembleLocString(f2)}`,\n    `Inverted: ${f1.strand === -1}`,\n    `Query len: ${l1.toLocaleString('en-US')}`,\n    `Target len: ${l2.toLocaleString('en-US')}`,\n    identity ? `Identity: ${identity.toPrecision(2)}` : '',\n    cigarOp ? `CIGAR operator: ${cigarOp}${cigarOpLen}` : '',\n    n1 ? `Name 1: ${n1}` : '',\n    n2 ? `Name 2: ${n2}` : '',\n  ]\n    .filter(f => !!f)\n    .join('<br/>')\n}\n"],"names":["MAX_COLOR_RANGE","makeColor","idx","Math","floor","colorMap","I","N","D","X","M","lineLimit","oobLimit","getId","r","g","b","unitMultiplier","drawRef","model","ctx1","ctx3","view","getContainingView","drawCurves","drawCIGAR","level","height","featPositions","width","bpPerPxs","views","map","v","bpPerPx","imageSmoothingEnabled","beginPath","offsets","offsetPx","length","fillStyle","strokeStyle","p11","p12","p21","p22","x11","x12","x21","x22","l1","abs","l2","y1","y2","mid","moveTo","bezierCurveTo","lineTo","stroke","f","cigar","minX","min","maxX","max","doesIntersect2","s1","get","k1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","unitMultiplier2","j","len","op","d1","d2","isNotLast","draw","fill","ctx2","clickMapCanvas","getContext","clearRect","i","feature","drawMatchSimple","cb","ctx","viewWidth","hideTiny","drawMouseoverSynteny","clickId","mouseoverId","mouseoverCanvas","resetTransform","scale","feature1","featMap","feature2","SyntenyContextMenu","onClose","anchorEl","clientX","clientY","_jsx","Menu","onMenuItemClick","event","callback","nodeType","getBoundingClientRect","top","left","bottom","right","x","y","toJSON","open","Boolean","menuItems","label","onClick","start","end","refName","mate","navToLocString","catch","e","err","assemblyNames","console","error","getSession","notifyError","SyntenyTooltip","lazy","useStyles","makeStyles","pix","imageRendering","pointerEvents","visibility","position","rel","pointEvents","mainCanvas","observer","classes","xOffset","useRef","delta","scheduled","timeout","setAnchorEl","useState","tooltip","setTooltip","currX","setCurrX","mouseCurrDownX","setMouseCurrDownX","mouseInitialDownX","setMouseInitialDownX","currY","setCurrY","mainSyntenyCanvasRefp","mouseoverDetectionCanvasRef","useCallback","ref","setMouseoverCanvasRef","mainSyntenyCanvasRef","setMainCanvasRef","current","useEffect","onWheel","preventDefault","ctrlKey","deltaY","setScaleFactor","clearTimeout","setTimeout","zoomTo","deltaX","window","requestAnimationFrame","transaction","horizontalScroll","addEventListener","removeEventListener","clickMapCanvasRef","setClickMapCanvasRef","cigarClickMapCanvasRef","setCigarClickMapCanvasRef","_jsxs","className","children","onMouseMove","undefined","ref1","ref2","cigarClickMapCanvas","rect","r1","g1","b1","getImageData","data","r2","g2","b2","numFeats","id","setMouseoverId","cigarIdx","getTooltip","cigarOp","cigarOpLen","onMouseLeave","onMouseDown","evt","onMouseUp","onSynClick","onContextMenu","onSynContextClick","title","theme","bg","palette","action","disabledBackground","loading","paddingLeft","backgroundColor","background","default","backgroundImage","textAlign","blockMessage","padding","blockError","color","LoadingMessage","shown","setShown","LoadingEllipses","BlockMessage","messageText","BlockError","message","features","LinearSyntenyRendering","x1","x2","x3","x4","len1","len2","tmp","closePath","drawBezierBox","drawBox","track","getContainingTrack","feat","setClickId","session","isSessionModelWithWidgets","showWidget","addWidget","featureData","f1","f2","identity","n1","name","n2","assembleLocString","strand","toLocaleString","toPrecision","filter","join"],"sourceRoot":""}