{"version":3,"file":"static/js/5331.8430f1f5.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/DropdownTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/FavoriteTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/RecentlyUsedTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabelMenu.tsx"],"sourcesContent":["import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\nimport { Badge } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { HierarchicalTrackSelectorModel } from '../model'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst ShoppingCart = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const { adminMode, sessionTracks } = session\n  const s = new Set<string>(sessionTracks?.map(t => t.trackId))\n  const canEdit = (t: string) => adminMode || s.has(t)\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return selection.length ? (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Clear selection',\n          onClick: () => {\n            model.clearSelection()\n          },\n        },\n        ...(selection.every(elt => canEdit(elt.trackId))\n          ? [\n              {\n                label: 'Delete tracks',\n                onClick: () => {\n                  // @ts-expect-error\n                  selection.forEach(s => session.deleteTrackConf?.(s))\n                },\n              },\n            ]\n          : []),\n\n        ...items.map(item => ({\n          ...item,\n          ...('onClick' in item\n            ? {\n                onClick: () => {\n                  item.onClick(model)\n                },\n              }\n            : {}),\n        })),\n      ]}\n    >\n      <Badge badgeContent={selection.length} color=\"primary\">\n        <ShoppingCartIcon />\n      </Badge>\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default ShoppingCart\n","import { useState } from 'react'\n\nimport {\n  getSession,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nconst HierarchicalFab = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return hasAddTrack || hasConnections ? (\n    <>\n      <Fab\n        color=\"secondary\"\n        className={classes.fab}\n        onClick={event => {\n          setAnchorEl(event.currentTarget)\n        }}\n      >\n        <AddIcon />\n      </Fab>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null)\n        }}\n      >\n        {hasConnections ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget(\n                    'AddConnectionWidget',\n                    'addConnectionWidget',\n                  ),\n                )\n              }\n            }}\n          >\n            Add connection\n          </MenuItem>\n        ) : null}\n        {hasAddTrack ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                    view: model.view.id,\n                  }),\n                )\n              }\n            }}\n          >\n            Add track\n          </MenuItem>\n        ) : null}\n      </Menu>\n    </>\n  ) : null\n})\n\nexport default HierarchicalFab\n","import { Suspense, lazy, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport {\n  getSession,\n  isSessionModelWithConnectionEditing,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { observer } from 'mobx-react'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\n// lazy components\nconst CloseConnectionDialog = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDialog = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDialog = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDialog = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: () => void\n  dereferenceTypeCount: Record<string, number>\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nconst HamburgerMenu = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDialogDetails, setDeleteDialogDetails] =\n    useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n  const [facetedOpen, setFacetedOpen] = useState(false)\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n    const result = session.prepareToBreakConnection?.(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDialogDetails({ name, connectionConf })\n    }\n  }\n\n  return (\n    <>\n      <CascadingMenuButton\n        menuItems={[\n          {\n            label: 'Open faceted track selector',\n            onClick: () => {\n              setFacetedOpen(true)\n            },\n          },\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Add track...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Connections...',\n            subMenu: [\n              ...(isSessionModelWithConnections(session)\n                ? [\n                    {\n                      label: 'Turn on/off connections...',\n                      onClick: () => {\n                        setConnectionToggleOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n              ...(isSessionModelWithConnectionEditing(session)\n                ? [\n                    {\n                      label: 'Add connection...',\n                      onClick: () => {\n                        if (isSessionModelWithWidgets(session)) {\n                          session.showWidget(\n                            session.addWidget(\n                              'AddConnectionWidget',\n                              'addConnectionWidget',\n                            ),\n                          )\n                        }\n                      },\n                    },\n                    {\n                      label: 'Delete connections...',\n                      onClick: () => {\n                        setConnectionManagerOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          },\n          {\n            label: 'Sort...',\n            type: 'subMenu',\n            subMenu: [\n              {\n                label: 'Sort tracks by name',\n                type: 'checkbox',\n                checked: model.activeSortTrackNames,\n                onClick: () => {\n                  model.setSortTrackNames(!model.activeSortTrackNames)\n                },\n              },\n              {\n                label: 'Sort categories by name',\n                type: 'checkbox',\n                checked: model.activeSortCategories,\n                onClick: () => {\n                  model.setSortCategories(!model.activeSortCategories)\n                },\n              },\n            ],\n          },\n          {\n            label: 'Collapse...',\n            type: 'subMenu',\n            subMenu: [\n              ...(model.hasAnySubcategories\n                ? [\n                    {\n                      label: 'Collapse subcategories',\n                      onClick: () => {\n                        model.collapseSubCategories()\n                      },\n                    },\n                  ]\n                : []),\n              {\n                label: 'Collapse top-level categories',\n                onClick: () => {\n                  model.collapseTopLevelCategories()\n                },\n              },\n              {\n                label: 'Expand all categories',\n                onClick: () => {\n                  model.expandAllCategories()\n                },\n              },\n            ],\n          },\n        ]}\n      >\n        <MenuIcon />\n      </CascadingMenuButton>\n      <Suspense fallback={null}>\n        {modalInfo ? (\n          <CloseConnectionDialog\n            modalInfo={modalInfo}\n            onClose={() => {\n              setModalInfo(undefined)\n            }}\n          />\n        ) : null}\n        {deleteDialogDetails ? (\n          <DeleteConnectionDialog\n            handleClose={() => {\n              setDeleteDialogDetails(undefined)\n            }}\n            deleteDialogDetails={deleteDialogDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDialog\n            handleClose={() => {\n              setConnectionManagerOpen(false)\n            }}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDialog\n            handleClose={() => {\n              setConnectionToggleOpen(false)\n            }}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => {\n              setFacetedOpen(false)\n            }}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n\nexport default HamburgerMenu\n","import { useState } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { observer } from 'mobx-react'\n\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst DropdownTrackSelector = observer(function ({\n  model,\n  tracks,\n  extraMenuItems,\n  children,\n  onClick,\n}: {\n  model: HierarchicalTrackSelectorModel\n  tracks: AnyConfigurationModel[]\n  extraMenuItems: MenuItem[]\n  onClick?: () => void\n  children: React.ReactElement\n}) {\n  const { view } = model\n  const [open, setOpen] = useState(false)\n  const session = getSession(model)\n  return view ? (\n    <CascadingMenuButton\n      closeAfterItemClick={false}\n      onClick={onClick}\n      menuItems={[\n        ...tracks.map(t => ({\n          type: 'checkbox' as const,\n          label: (\n            <>\n              <SanitizedHTML html={getTrackName(t, session)} />{' '}\n              <TrackLabelMenu\n                id={t.trackId}\n                trackId={t.trackId}\n                model={model}\n                conf={t}\n                setOpen={setOpen}\n                stopPropagation\n              />\n            </>\n          ),\n          checked: view.tracks.some(\n            (f: { configuration: AnyConfigurationModel }) =>\n              f.configuration === t,\n          ),\n          onClick: () => {\n            if (!open) {\n              if (model.view.toggleTrack(t.trackId)) {\n                model.addToRecentlyUsed(t.trackId)\n              }\n            }\n          },\n        })),\n        ...extraMenuItems,\n      ]}\n    >\n      {children}\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default DropdownTrackSelector\n","import GradeIcon from '@mui/icons-material/Grade'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n  margin: {\n    marginRight: 10,\n  },\n})\nconst FavoriteTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, favoriteTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setFavoritesCounter(0)\n      }}\n      tracks={favoriteTracks}\n      model={model}\n      extraMenuItems={\n        favoriteTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear favorites',\n                onClick: () => {\n                  model.clearFavorites()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No favorite tracks yet',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Favorite tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          color=\"secondary\"\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          className={classes.margin}\n          badgeContent={model.favoritesCounter}\n        >\n          <GradeIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default FavoriteTracks\n","import HistoryIcon from '@mui/icons-material/History'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n})\n\nconst RecentlyUsedTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, recentlyUsedCounter, recentlyUsedTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setRecentlyUsedCounter(0)\n      }}\n      model={model}\n      tracks={recentlyUsedTracks}\n      extraMenuItems={\n        recentlyUsedTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear recently used',\n                onClick: () => {\n                  model.clearRecentlyUsed()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No recently used',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Recently used tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          color=\"secondary\"\n          badgeContent={recentlyUsedCounter}\n        >\n          <HistoryIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default RecentlyUsedTracks\n","import ClearIcon from '@mui/icons-material/Clear'\nimport { IconButton, InputAdornment, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\nimport FavoriteTracks from './FavoriteTracks'\nimport RecentlyUsedTracks from './RecentlyUsedTracks'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst SearchTracksTextField = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText } = model\n  const { classes } = useStyles()\n  return (\n    <TextField\n      className={classes.searchBox}\n      label=\"Filter tracks\"\n      value={filterText}\n      onChange={event => {\n        model.setFilterText(event.target.value)\n      }}\n      fullWidth\n      slotProps={{\n        input: {\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => {\n                  model.clearFilterText()\n                }}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        },\n      }}\n    />\n  )\n})\n\nconst HierarchicalTrackSelectorHeader = observer(function ({\n  model,\n  setHeaderHeight,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n}) {\n  return (\n    <div\n      ref={ref => {\n        setHeaderHeight(ref?.getBoundingClientRect().height || 0)\n      }}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} />\n        <ShoppingCart model={model} />\n        <SearchTracksTextField model={model} />\n        <RecentlyUsedTracks model={model} />\n        <FavoriteTracks model={model} />\n      </div>\n    </div>\n  )\n})\n\nexport default HierarchicalTrackSelectorHeader\n","import type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  trackId: string\n  isLeaf: boolean\n  name: string\n  onChange: (trackId: string) => void\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  menuItems?: MenuItem[]\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  return subtree?.type === 'category'\n    ? subtree.children.flatMap(t =>\n        t.type === 'category' ? getAllChildren(t) : t.conf,\n      )\n    : []\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (const node of tree.children) {\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import { useState } from 'react'\n\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { getAllChildren, treeToMap } from '../util'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { menuItems = [], name, model, id, tree } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          data.toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography data-testid={`htsCategory-${name}`}>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Show all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.showTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            {\n              label: 'Hide all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.hideTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            ...menuItems,\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => {\n            setMenuEl(null)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { Checkbox, FormControlLabel, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { isUnsupported } from '../util'\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { NodeData } from '../util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n  selected: {\n    background: '#cccc',\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const {\n    checked,\n    conf,\n    model,\n    drawerPosition,\n    id,\n    trackId,\n    name,\n    selected,\n    onChange,\n  } = data\n  const description = readConfObject(conf, 'description')\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          onClick={event => {\n            if (event.ctrlKey || event.metaKey) {\n              if (selected) {\n                model.removeFromSelection([conf])\n              } else {\n                model.addToSelection([conf])\n              }\n              event.preventDefault()\n            }\n          }}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => {\n                onChange(trackId)\n              }}\n              disabled={isUnsupported(name)}\n              slotProps={{\n                input: {\n                  // @ts-expect-error\n                  'data-testid': `htsTrackEntry-${id}`,\n                },\n              }}\n            />\n          }\n          label={\n            <div\n              data-testid={`htsTrackLabel-${id}`}\n              className={selected ? classes.selected : undefined}\n            >\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <TrackLabelMenu model={model} trackId={trackId} id={id} conf={conf} />\n    </>\n  )\n}\n","import { makeStyles } from 'tss-react/mui'\n\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useCallback, useEffect, useMemo, useRef } from 'react'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\nimport Node from './TrackListNode'\n\nimport type { TreeNode } from '../../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = node.type === 'track'\n  const selected = isLeaf ? selection[node.trackId] : false\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => {\n        const trackTurnedOn = view.toggleTrack(trackId)\n        if (trackTurnedOn) {\n          model.addToRecentlyUsed(trackId)\n        }\n      },\n      toggleCollapse: (pathName: string) => {\n        model.toggleCategory(pathName)\n      },\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n\n  // doing this properly without ts-expect-error is tricky, react-vtree has\n  // some typescript examples that could help\n  const treeWalker = useCallback(\n    // @ts-expect-error\n    function* treeWalker() {\n      for (const child of tree.children) {\n        yield getNodeData(child, 0, extra, obj)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      while (true) {\n        // @ts-expect-error\n        const parentMeta = yield\n\n        // @ts-expect-error\n        for (const curr of parentMeta.node.children) {\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  /* biome-ignore lint/correctness/useExhaustiveDependencies: */\n  useEffect(() => {\n    // @ts-expect-error\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-expect-error */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n\nexport default HierarchicalTree\n","import { useState } from 'react'\n\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\nimport HierarchicalTree from './tree/HierarchicalTree'\n\nimport type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {args => (\n        <HierarchicalTree\n          height={(args.height || offset) - offset}\n          model={model}\n          tree={tree}\n        />\n      )}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    children\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [headerHeight, setHeaderHeight] = useState(0)\n  return (\n    <>\n      <HierarchicalHeader model={model} setHeaderHeight={setHeaderHeight} />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  )\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession } from '@jbrowse/core/util'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport FilledStarIcon from '@mui/icons-material/Star'\nimport StarIcon from '@mui/icons-material/StarBorderOutlined'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  cascadingStyle: {\n    padding: 0,\n  },\n})\n\nconst TrackLabelMenu = function ({\n  id,\n  trackId,\n  stopPropagation,\n  model,\n  setOpen,\n  conf,\n}: {\n  id: string\n  trackId: string\n  stopPropagation?: boolean\n  conf: AnyConfigurationModel\n  setOpen?: (arg: boolean) => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <CascadingMenuButton\n      className={classes.cascadingStyle}\n      stopPropagation={stopPropagation}\n      setOpen={setOpen}\n      data-testid={`htsTrackEntryMenu-${id}`}\n      menuItems={[\n        ...(getSession(model).getTrackActionMenuItems?.(conf) || []),\n        model.isFavorite(trackId)\n          ? {\n              label: 'Remove from favorites',\n              onClick: () => {\n                model.removeFromFavorites(trackId)\n              },\n              icon: StarIcon,\n            }\n          : {\n              label: 'Add to favorites',\n              onClick: () => {\n                model.addToFavorites(trackId)\n              },\n              icon: FilledStarIcon,\n            },\n        {\n          label: 'Add to selection',\n          onClick: () => {\n            model.addToSelection([conf])\n          },\n        },\n        ...(model.isSelected(conf)\n          ? [\n              {\n                label: 'Remove from selection',\n                onClick: () => {\n                  model.removeFromSelection([conf])\n                },\n              },\n            ]\n          : []),\n      ]}\n    >\n      <MoreHorizIcon />\n    </CascadingMenuButton>\n  )\n}\n\nexport default TrackLabelMenu\n"],"names":["observer","model","session","getSession","selection","pluginManager","getEnv","adminMode","sessionTracks","s","Set","map","t","trackId","items","evaluateExtensionPoint","length","_jsx","CascadingMenuButton","menuItems","label","onClick","clearSelection","every","elt","canEdit","has","forEach","deleteTrackConf","item","children","Badge","badgeContent","color","ShoppingCartIcon","useStyles","makeStyles","theme","fab","position","bottom","spacing","right","classes","anchorEl","setAnchorEl","useState","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","_jsxs","_Fragment","Fab","className","event","currentTarget","AddIcon","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","FacetedDialog","lazy","CloseConnectionDialog","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","modalInfo","setModalInfo","deleteDialogDetails","setDeleteDialogDetails","connectionToggleOpen","setConnectionToggleOpen","connectionManagerOpen","setConnectionManagerOpen","facetedOpen","setFacetedOpen","breakConnection","connectionConf","deletingConnection","name","readConfObject","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","subMenu","isSessionModelWithConnectionEditing","type","checked","activeSortTrackNames","setSortTrackNames","activeSortCategories","setSortCategories","hasAnySubcategories","collapseSubCategories","collapseTopLevelCategories","expandAllCategories","MenuIcon","Suspense","fallback","undefined","handleClose","tracks","extraMenuItems","setOpen","closeAfterItemClick","SanitizedHTML","html","getTrackName","TrackLabelMenu","conf","stopPropagation","some","f","configuration","toggleTrack","addToRecentlyUsed","smallBadge","height","margin","marginRight","favoriteTracks","DropdownTrackSelector","setFavoritesCounter","clearFavorites","Tooltip","title","badge","anchorOrigin","vertical","horizontal","favoritesCounter","GradeIcon","recentlyUsedCounter","recentlyUsedTracks","setRecentlyUsedCounter","clearRecentlyUsed","HistoryIcon","searchBox","SearchTracksTextField","filterText","TextField","value","onChange","setFilterText","target","fullWidth","slotProps","input","endAdornment","InputAdornment","IconButton","clearFilterText","ClearIcon","setHeaderHeight","ref","getBoundingClientRect","style","display","HamburgerMenu","ShoppingCart","RecentlyUsedTracks","FavoriteTracks","getAllChildren","subtree","flatMap","treeToMap","tree","Map","set","node","isUnsupported","endsWith","contrastColor","palette","tertiary","contrastText","accordionText","width","Category","isOpen","data","menuEl","setMenuEl","toggleCollapse","Typography","ArrowDropDownIcon","ArrowRightIcon","MoreHorizIcon","JBrowseMenu","r","get","addToSelection","removeFromSelection","entry","showTrack","hideTrack","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","backgroundColor","action","selected","background","TrackLabel","drawerPosition","description","placement","FormControlLabel","ctrlKey","metaKey","preventDefault","control","Checkbox","disabled","accordionBase","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","Array","fill","_","idx","left","whiteSpace","getNodeData","extra","defaultHeight","isOpenByDefault","treeRef","useRef","obj","useMemo","fromEntries","pathName","toggleCategory","treeWalker","useCallback","child","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","args","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","headerHeight","HierarchicalHeader","hierarchy","cascadingStyle","getTrackActionMenuItems","isFavorite","removeFromFavorites","icon","StarIcon","addToFavorites","FilledStarIcon","isSelected"],"sourceRoot":""}