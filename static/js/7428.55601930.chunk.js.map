{"version":3,"file":"static/js/7428.55601930.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceTypeSelector.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SequenceFeatureMenu.tsx","../../../node_modules/@mui/icons-material/esm/Settings.js","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/hooks.ts"],"sourcesContent":["import { FormControl, MenuItem, Select } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SequenceFeatureDetailsModel } from '../model'\n\nconst useStyles = makeStyles()({\n  formControl: {\n    margin: 0,\n    marginLeft: 4,\n  },\n})\n\nconst SequenceTypeSelector = observer(function ({\n  model,\n}: {\n  model: SequenceFeatureDetailsModel\n}) {\n  const { classes } = useStyles()\n  const { intronBp, upDownBp, mode, hasCDS, hasExonOrCDS } = model\n\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        size=\"small\"\n        value={mode}\n        onChange={event => {\n          model.setMode(event.target.value)\n        }}\n      >\n        {Object.entries({\n          ...(hasCDS\n            ? {\n                cds: 'CDS',\n              }\n            : {}),\n          ...(hasCDS\n            ? {\n                protein: 'Protein',\n              }\n            : {}),\n          ...(hasExonOrCDS\n            ? {\n                cdna: 'cDNA',\n              }\n            : {}),\n          ...(hasExonOrCDS\n            ? {\n                gene: 'Genomic w/ full introns',\n              }\n            : {}),\n          ...(hasExonOrCDS\n            ? {\n                gene_updownstream: `Genomic w/ full introns +/- ${upDownBp}bp up+down stream`,\n              }\n            : {}),\n          ...(hasExonOrCDS\n            ? {\n                gene_collapsed_intron: `Genomic w/ ${intronBp}bp intron`,\n              }\n            : {}),\n          ...(hasExonOrCDS\n            ? {\n                gene_updownstream_collapsed_intron: `Genomic w/ ${intronBp}bp intron +/- ${upDownBp}bp up+down stream `,\n              }\n            : {}),\n          ...(!hasExonOrCDS\n            ? {\n                genomic: 'Genomic',\n              }\n            : {}),\n          ...(!hasExonOrCDS\n            ? {\n                genomic_sequence_updownstream: `Genomic +/- ${upDownBp}bp up+down stream`,\n              }\n            : {}),\n        }).map(([key, val]) => (\n          <MenuItem key={key} value={key}>\n            {val}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nexport default SequenceTypeSelector\n","import { Suspense, lazy, useEffect, useRef, useState } from 'react'\n\nimport { Button, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport { useFeatureSequence } from './hooks'\nimport { ErrorMessage, LoadingEllipses } from '../../ui'\nimport SequenceFeatureMenu from './dialogs/SequenceFeatureMenu'\nimport SequenceTypeSelector from './dialogs/SequenceTypeSelector'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseFeatureWidgetModel } from '../stateModelFactory'\n\n// lazies\nconst SequencePanel = lazy(() => import('./SequencePanel'))\nconst SequenceDialog = lazy(() => import('./dialogs/SequenceDialog'))\n\n// set the key on this component to feature.id to clear state after new feature\n// is selected\nconst SequenceFeatureDetails = observer(function ({\n  model,\n  feature,\n}: {\n  model: BaseFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { sequenceFeatureDetails } = model\n  const { upDownBp } = sequenceFeatureDetails\n  const seqPanelRef = useRef<HTMLDivElement>(null)\n\n  const [openInDialog, setOpenInDialog] = useState(false)\n  const [force, setForce] = useState(false)\n  const { sequence, error } = useFeatureSequence(\n    model,\n    feature,\n    upDownBp,\n    force,\n  )\n  useEffect(() => {\n    sequenceFeatureDetails.setFeature(feature)\n  }, [sequenceFeatureDetails, feature])\n\n  return (\n    <>\n      <div>\n        <SequenceTypeSelector model={sequenceFeatureDetails} />\n        <SequenceFeatureMenu\n          ref={seqPanelRef}\n          model={sequenceFeatureDetails}\n          extraItems={[\n            {\n              label: 'Open in dialog',\n              onClick: () => {\n                // this is given a setTimeout because it allows the menu to\n                // close before dialog opens\n                setTimeout(() => {\n                  setOpenInDialog(true)\n                }, 1)\n              },\n            },\n          ]}\n        />\n      </div>\n      {openInDialog ? (\n        <div>\n          Open in dialog...\n          <Suspense fallback={<LoadingEllipses />}>\n            <SequenceDialog\n              model={model}\n              feature={feature}\n              handleClose={() => {\n                setOpenInDialog(false)\n              }}\n            />\n          </Suspense>\n        </div>\n      ) : (\n        <div>\n          {feature.type === 'gene' ? (\n            <Typography>\n              Note: inspect subfeature sequences for protein/CDS computations\n            </Typography>\n          ) : null}\n          {error ? (\n            <ErrorMessage error={error} />\n          ) : !sequence ? (\n            <LoadingEllipses />\n          ) : 'error' in sequence ? (\n            <>\n              <Typography color=\"error\">{sequence.error}</Typography>\n              <Button\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={() => {\n                  setForce(true)\n                }}\n              >\n                Force load\n              </Button>\n            </>\n          ) : (\n            <Suspense fallback={<LoadingEllipses />}>\n              <SequencePanel\n                ref={seqPanelRef}\n                feature={feature}\n                sequence={sequence}\n                model={sequenceFeatureDetails}\n              />\n            </Suspense>\n          )}\n        </div>\n      )}\n    </>\n  )\n})\n\nexport default SequenceFeatureDetails\n","import { forwardRef, lazy, useState } from 'react'\n\nimport MoreVert from '@mui/icons-material/MoreVert'\nimport Settings from '@mui/icons-material/Settings'\nimport copy from 'copy-to-clipboard'\nimport { saveAs } from 'file-saver'\nimport { observer } from 'mobx-react'\n\nimport CascadingMenuButton from '../../../ui/CascadingMenuButton'\n\nimport type { MenuItem } from '../../../ui'\nimport type { SequenceFeatureDetailsModel } from '../model'\n\n// lazies\nconst SequenceFeatureSettingsDialog = lazy(() => import('./SettingsDialog'))\n\ninterface Props {\n  model: SequenceFeatureDetailsModel\n  extraItems?: MenuItem[]\n}\nconst SequenceFeatureMenu = observer(\n  forwardRef<HTMLDivElement, Props>(function SequenceFeatureMenu2(\n    { model, extraItems = [] },\n    ref,\n  ) {\n    if (typeof ref === 'function') {\n      throw new Error('needs a non function ref')\n    }\n    const [showSettings, setShowSettings] = useState(false)\n    const { showCoordinatesSetting, showGenomicCoordsOption } = model\n\n    return (\n      <>\n        <CascadingMenuButton\n          menuItems={[\n            {\n              label: 'Copy plaintext',\n              onClick: () => {\n                const r = ref?.current\n                if (r) {\n                  copy(r.textContent || '', { format: 'text/plain' })\n                }\n              },\n            },\n            {\n              label: 'Copy HTML',\n              onClick: () => {\n                const r = ref?.current\n                if (r) {\n                  copy(r.outerHTML, { format: 'text/html' })\n                }\n              },\n            },\n            {\n              label: 'Download plaintext',\n              onClick: () => {\n                const r = ref?.current\n                if (r) {\n                  saveAs(\n                    new Blob([r.textContent || ''], {\n                      type: 'text/plain;charset=utf-8',\n                    }),\n                    'sequence.txt',\n                  )\n                }\n              },\n            },\n            {\n              label: 'Download HTML',\n              onClick: () => {\n                const r = ref?.current\n                if (r) {\n                  saveAs(\n                    new Blob([r.outerHTML || ''], {\n                      type: 'text/html;charset=utf-8',\n                    }),\n                    'sequence.html',\n                  )\n                }\n              },\n            },\n\n            ...extraItems,\n\n            {\n              label: 'Show coordinates?',\n              type: 'subMenu',\n              subMenu: [\n                {\n                  label: 'No coordinates',\n                  type: 'radio',\n                  checked: showCoordinatesSetting === 'none',\n                  onClick: () => {\n                    model.setShowCoordinates('none')\n                  },\n                },\n                {\n                  label: 'Coordinates relative to feature start',\n                  type: 'radio',\n                  checked: showCoordinatesSetting === 'relative',\n                  onClick: () => {\n                    model.setShowCoordinates('relative')\n                  },\n                },\n                ...(showGenomicCoordsOption\n                  ? [\n                      {\n                        label:\n                          'Coordinates relative to genome (only available for continuous genome based sequence types)',\n                        type: 'radio' as const,\n                        checked: showCoordinatesSetting === 'genomic',\n                        onClick: () => {\n                          model.setShowCoordinates('genomic')\n                        },\n                      },\n                    ]\n                  : []),\n              ],\n            },\n            {\n              label: 'Settings',\n              icon: Settings,\n              onClick: () => {\n                setShowSettings(true)\n              },\n            },\n          ]}\n        >\n          <MoreVert />\n        </CascadingMenuButton>\n\n        {showSettings ? (\n          <SequenceFeatureSettingsDialog\n            model={model}\n            handleClose={() => {\n              setShowSettings(false)\n            }}\n          />\n        ) : null}\n      </>\n    )\n  }),\n)\n\nexport default SequenceFeatureMenu\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19.14 12.94c.04-.3.06-.61.06-.94 0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.09.63-.09.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6 3.6 1.62 3.6 3.6-1.62 3.6-3.6 3.6\"\n}), 'Settings');","import { useEffect, useState } from 'react'\n\nimport { getConf } from '../../configuration'\nimport { getSession } from '../../util'\n\nimport type { Feature, SimpleFeatureSerialized } from '../../util'\nimport type { ErrorState, SeqState } from '../util'\n\nconst BPLIMIT = 500_000\n\ninterface CoordFeat extends SimpleFeatureSerialized {\n  refName: string\n  start: number\n  end: number\n}\n\nexport function useFeatureSequence(\n  model: { view?: { assemblyNames?: string[] } } | undefined,\n  feature: SimpleFeatureSerialized,\n  upDownBp: number,\n  forceLoad: boolean,\n) {\n  const [sequence, setSequence] = useState<SeqState | ErrorState>()\n  const [error, setError] = useState<unknown>()\n  useEffect(() => {\n    if (!model) {\n      return\n    }\n    const { assemblyManager, rpcManager } = getSession(model)\n    const assemblyName = model.view?.assemblyNames?.[0] || ''\n    async function fetchSeq(start: number, end: number, refName: string) {\n      const assembly = await assemblyManager.waitForAssembly(assemblyName)\n      if (!assembly) {\n        throw new Error('assembly not found')\n      }\n      const sessionId = 'getSequence'\n      const feats = await rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig: getConf(assembly, ['sequence', 'adapter']),\n        sessionId,\n        regions: [\n          {\n            start,\n            end,\n            refName: assembly.getCanonicalRefName(refName),\n            assemblyName,\n          },\n        ],\n      })\n\n      const [feat] = feats as Feature[]\n      return (feat?.get('seq') as string | undefined) || ''\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ;(async () => {\n      try {\n        setError(undefined)\n        const { start, end, refName } = feature as CoordFeat\n\n        if (!forceLoad && end - start > BPLIMIT) {\n          setSequence({\n            error: `Genomic sequence larger than ${BPLIMIT}bp, use \"force load\" button to display`,\n          })\n        } else {\n          const b = start - upDownBp\n          const e = end + upDownBp\n          const seq = await fetchSeq(start, end, refName)\n          const up = await fetchSeq(Math.max(0, b), start, refName)\n          const down = await fetchSeq(end, e, refName)\n          setSequence({ seq, upstream: up, downstream: down })\n        }\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    })()\n  }, [feature, model, upDownBp, forceLoad])\n  return { sequence, error }\n}\n"],"names":["useStyles","makeStyles","formControl","margin","marginLeft","observer","model","classes","intronBp","upDownBp","mode","hasCDS","hasExonOrCDS","_jsx","FormControl","className","children","Select","size","value","onChange","event","setMode","target","Object","entries","cds","protein","cdna","gene","gene_updownstream","gene_collapsed_intron","gene_updownstream_collapsed_intron","genomic","genomic_sequence_updownstream","map","key","val","MenuItem","SequencePanel","lazy","SequenceDialog","feature","sequenceFeatureDetails","seqPanelRef","useRef","openInDialog","setOpenInDialog","useState","force","setForce","sequence","error","useFeatureSequence","useEffect","setFeature","_jsxs","_Fragment","SequenceTypeSelector","SequenceFeatureMenu","ref","extraItems","label","onClick","setTimeout","Suspense","fallback","LoadingEllipses","handleClose","type","Typography","ErrorMessage","color","Button","variant","SequenceFeatureSettingsDialog","forwardRef","Error","showSettings","setShowSettings","showCoordinatesSetting","showGenomicCoordsOption","CascadingMenuButton","menuItems","r","current","copy","textContent","format","outerHTML","saveAs","Blob","subMenu","checked","setShowCoordinates","icon","Settings","MoreVert","d","BPLIMIT","forceLoad","setSequence","setError","assemblyManager","rpcManager","getSession","assemblyName","view","assemblyNames","async","fetchSeq","start","end","refName","assembly","waitForAssembly","sessionId","feats","call","adapterConfig","getConf","regions","getCanonicalRefName","feat","get","undefined","b","e","seq","up","Math","max","down","upstream","downstream","console"],"sourceRoot":""}