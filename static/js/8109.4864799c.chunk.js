"use strict";(globalThis.webpackChunk_jbrowse_web=globalThis.webpackChunk_jbrowse_web||[]).push([[8109],{88109:(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var r=n(7552),a=n(68446),l=n(943),i=n(68984),s=n(9502),o=n(36715),c=n(1343),u=n(33371),d=n(32808),m=n(97463),f=n(76157),p=n(99546);function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},h.apply(null,arguments)}function b({columns:e,filter:t,setFilter:n}){return r.createElement(r.Fragment,null,r.createElement(o.A,null,"These filters can use a plain text search or regex style query, e.g. in the genotype field, entering 1 will query for all genotypes that include the first alternate allele e.g. 0|1 or 1|1, entering [1-9]\\d* will find any non-zero allele e.g. 0|2 or 2/33"),e.map((({field:e})=>r.createElement(c.A,{key:`filter-${e}`,placeholder:`Filter ${e}`,value:t[e]||"",onChange:r=>{n({...t,[e]:r.target.value})}}))))}function g(e){const{feature:t,descriptions:n={}}=e,[a,l]=(0,r.useState)({}),s=t.samples||{},c=Object.entries(s);let g,E=[];const O=Object.keys(a);try{E=c.map((e=>({...Object.fromEntries(Object.entries(e[1]).map((e=>[e[0],`${e[1]}`]))),sample:e[0],id:e[0]}))).filter((e=>!O.length||O.every((t=>{const n=a[t];return!n||new RegExp(n,"i").exec(e[t])}))))}catch(e){g=e}const w=["sample",...Object.keys(c[0]?.[1]||{})],[y,A]=(0,r.useState)(!1),N=w.map((e=>(0,p.measureGridWidth)(E.map((t=>t[e]))))),v=w.map(((e,t)=>({field:e,description:n?.FORMAT?.[e]?.Description,width:N[t]})));return c.length?r.createElement(i.BaseCard,h({},e,{title:"Samples"}),g?r.createElement(o.A,{color:"error"},`${g}`):null,r.createElement(u.A,{control:r.createElement(d.A,{checked:y,onChange:e=>{A(e.target.checked)}}),label:r.createElement(o.A,{variant:"body2"},"Show options")}),y?r.createElement(b,{setFilter:l,columns:v,filter:a}):null,r.createElement(m.z,{autoHeight:!0,rows:E,hideFooter:E.length<100,columns:v,disableRowSelectionOnClick:!0,rowHeight:25,columnHeaderHeight:35,disableColumnMenu:!0,slots:{toolbar:y?f.O:null},slotProps:{toolbar:{printOptions:{disableToolbarButton:!0}}}})):null}function E({rows:e,columns:t}){const[n,a]=(0,r.useState)(!1),l=t.map((t=>(0,p.measureGridWidth)(e.map((e=>e[t.field])))));return e.length?r.createElement("div",null,r.createElement(u.A,{control:r.createElement(d.A,{checked:n,onChange:e=>{a(e.target.checked)}}),label:r.createElement(o.A,{variant:"body2"},"Show options")}),r.createElement(m.z,{rowHeight:25,rows:e,columns:t.map(((e,t)=>({...e,width:l[t]}))),slots:{toolbar:n?f.O:null}})):null}function O({data:e,fields:t,title:n}){return e.length?r.createElement(i.BaseCard,{title:n},r.createElement(E,{rows:e.map(((e,n)=>({id:n,...Object.fromEntries(e.split("|").map(((e,n)=>[t[n],e])))}))),columns:t.map((e=>({field:e})))})):null}const w={CHROM:"chromosome: An identifier from the reference genome",POS:"position: The reference position, with the 1st base having position 1",ID:"identifier: Semi-colon separated list of unique identifiers where available",REF:"reference base(s): Each base must be one of A,C,G,T,N (case insensitive).",ALT:"alternate base(s): Comma-separated list of alternate non-reference alleles",QUAL:"quality: Phred-scaled quality score for the assertion made in ALT",FILTER:"filter status: PASS if this position has passed all filters, otherwise a semicolon-separated list of codes for filters that fail"};function y(){return y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)({}).hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},y.apply(null,arguments)}const A=(0,r.lazy)((()=>n.e(7087).then(n.bind(n,67087))));function N({descriptions:e,feature:t}){const n=e?.INFO?.ANN?.Description,a=n?.match(/.*Functional annotations:'(.*)'$/)?.[1]?.split("|")||[],l=t.INFO?.ANN||[];return r.createElement(O,{fields:a,data:l,title:"Variant ANN field"})}function v({descriptions:e,feature:t}){const n=e?.INFO?.CSQ?.Description,a=n?.match(/.*Format: (.*)/)?.[1]?.split("|")||[],l=t.INFO?.CSQ||[];return r.createElement(O,{fields:a,data:l,title:"Variant CSQ field"})}const S=(0,a.observer)((function(e){const{model:t}=e,{featureData:n,descriptions:a}=t,o=JSON.parse(JSON.stringify(n)),{samples:c,ALT:u,type:d="",...m}=o;return r.createElement(l.A,{"data-testid":"variant-side-drawer"},r.createElement(i.FeatureDetails,y({feature:m,descriptions:{...w,...a}},e)),r.createElement(v,{feature:m,descriptions:a}),r.createElement(N,{feature:m,descriptions:a}),r.createElement(r.Suspense,{fallback:null},"breakend"===d?r.createElement(A,{feature:o,locStrings:o.ALT.map((e=>(0,s.h)(e)?.MatePosition||"")),model:t}):null,"translocation"===d?r.createElement(A,{feature:o,model:t,locStrings:[`${o.INFO.CHR2[0]}:${o.INFO.END}`]}):null,"paired_feature"===d?r.createElement(A,{feature:o,model:t,locStrings:[`${o.mate.refName}:${o.mate.start}`]}):null,d.includes("inversion")||d.includes("deletion")||d.includes("duplication")||d.includes("cnv")||d.includes("sv")?r.createElement(A,{feature:{uniqueId:"random",refName:o.refName,start:o.start,end:o.start+1,mate:{refName:o.refName,start:o.end,end:o.end+1}},model:t,locStrings:[`${o.refName}:${o.end}`]}):null),r.createElement(g,y({feature:o},e,{descriptions:a})))}))}}]);
//# sourceMappingURL=8109.4864799c.chunk.js.map