{"version":3,"file":"static/js/7389.2441600a.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/ImportSessionWidget/components/ImportError.tsx","../../../plugins/menus/src/ImportSessionWidget/components/ImportSessionWidget.tsx"],"sourcesContent":["import ErrorIcon from '@mui/icons-material/Error'\nimport { Paper, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => ({\n  error: {\n    margin: theme.spacing(2),\n  },\n  errorHeader: {\n    background: theme.palette.error.light,\n    color: theme.palette.error.contrastText,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  errorMessage: {\n    padding: theme.spacing(2),\n  },\n}))\n\nexport default function ImportError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.error}>\n      <div className={classes.errorHeader}>\n        <ErrorIcon color=\"inherit\" fontSize=\"large\" />\n        <div>\n          <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\n            Import error\n          </Typography>\n        </div>\n      </div>\n      <Typography className={classes.errorMessage}>{`${error}`}</Typography>\n    </Paper>\n  )\n}\n","import { useState } from 'react'\n\nimport { getSession } from '@jbrowse/core/util'\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\nimport { Button, Paper, Typography, alpha } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { useDropzone } from 'react-dropzone'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ImportError from './ImportError'\n\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\nconst MAX_FILE_SIZE = 512 * 1024 ** 2 // 512 MiB\n\nfunction styledBy(property: string, mapping: Record<string, string>) {\n  return (props: Record<string, string>) => mapping[props[property]!]\n}\n\n// @ts-expect-error\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  dropZone: {\n    textAlign: 'center',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: styledBy('isDragActive', {\n      true: theme.palette.secondary.light,\n      false: theme.palette.divider,\n    }),\n    borderStyle: 'dashed',\n    backgroundColor: styledBy('isDragActive', {\n      true: alpha(\n        theme.palette.text.primary,\n        theme.palette.action.hoverOpacity,\n      ),\n      false: theme.palette.background.default,\n    }),\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    '&:focus': {\n      borderColor: theme.palette.secondary.light,\n    },\n  },\n  uploadIcon: {\n    color: theme.palette.text.secondary,\n  },\n}))\n\nconst ImportSessionWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const [error, setError] = useState<unknown>()\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    // @ts-expect-error\n    accept: 'application/json',\n    maxSize: MAX_FILE_SIZE,\n    multiple: false,\n    onDrop: async (acceptedFiles, rejectedFiles) => {\n      try {\n        if (rejectedFiles.length > 0) {\n          throw new Error(rejectedFiles[0]!.errors.map(e => `${e}`).join(', '))\n        }\n        const sessionText = await acceptedFiles[0]!.text()\n        getSession(model).setSession?.(JSON.parse(sessionText).session)\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    },\n  })\n\n  // @ts-expect-error\n\n  const { classes } = useStyles({ isDragActive }) as any\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div {...getRootProps({ className: classes.dropZone })}>\n          <input {...getInputProps()} />\n          <CloudUploadIcon className={classes.uploadIcon} fontSize=\"large\" />\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n            Drag and drop files here\n          </Typography>\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body2\">\n            or\n          </Typography>\n          <Button color=\"primary\" variant=\"contained\">\n            Browse Files\n          </Button>\n        </div>\n      </Paper>\n      {error ? <ImportError error={error} /> : null}\n    </div>\n  )\n})\n\nexport default ImportSessionWidget\n"],"names":["useStyles","makeStyles","theme","error","margin","spacing","errorHeader","background","palette","light","color","contrastText","padding","textAlign","errorMessage","ImportError","t0","$","_c","classes","t1","t2","t3","Symbol","for","_jsx","ErrorIcon","fontSize","children","Typography","variant","align","_jsxs","className","t4","t5","t6","Paper","styledBy","property","mapping","props","root","paper","display","flexDirection","dropZone","borderWidth","borderRadius","borderColor","true","secondary","false","divider","borderStyle","backgroundColor","alpha","text","primary","action","hoverOpacity","default","outline","transition","uploadIcon","observer","model","setError","useState","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxSize","multiple","onDrop","async","acceptedFiles","rejectedFiles","length","Error","errors","map","e","join","sessionText","getSession","setSession","JSON","parse","session","console","CloudUploadIcon","Button"],"sourceRoot":""}