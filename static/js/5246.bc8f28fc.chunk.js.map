{"version":3,"file":"static/js/5246.bc8f28fc.chunk.js","mappings":"gPAeA,MAAMA,GAA0BC,EAAAA,EAAAA,OAC9B,IAAM,kCAmFR,GAhF0BC,EAAAA,EAAAA,WAAS,UAAU,MAC3CC,IAIA,MAAM,YAAEC,EAAW,KAAEC,EAAI,MAAEC,EAAK,QAAEC,GAAYJ,EAC9C,OACEK,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACiB,sBAAdJ,EAAKK,MACJC,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACN,MAAM,MAAEC,GAAUZ,EAClB,QAAca,IAAVZ,EAIFW,EAAMX,IAAQa,MAAMf,GACpBa,EAAMX,EAAQ,IAAIa,MAChBf,EAAYgB,UAET,CAKL,MAAMC,EAAKjB,EACLkB,EAAKlB,EAAYgB,KACjBG,EAAKF,EAAGG,aACRC,EAAKH,EAAGE,aACRE,EAAKT,EAAMU,MAAKtB,GAAQA,EAAKuB,cAAc,KAAOL,IAClDM,EAAKZ,EAAMU,MAAKtB,GAAQA,EAAKuB,cAAc,KAAOH,IACnDC,GAAOG,IACVC,EAAAA,EAAAA,YAAW3B,GAAO4B,OAChB,CACEL,EACI,mBAAkBM,EAAAA,EAAAA,mBAAkBX,qBACpC,GACJQ,EACI,mBAAkBG,EAAAA,EAAAA,mBAAkBV,qBACpC,IACJW,KAAK,UAGXP,GAAIP,MAAME,GACVQ,GAAIV,MAAMG,EACZ,GACAb,SACH,kCAID,MACJE,EAAAA,EAAAA,KAAA,MAAAF,UACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACN,MAAMkB,EAAU,IAAIC,EAAAA,cAAc/B,GAC5BgC,GAAUN,EAAAA,EAAAA,YAAW3B,GAC3BiC,EAAQC,aAAYC,GAAe,CACjCtC,EACA,CACEoC,UACAF,UACA3B,UACA+B,iBAEF,EACF7B,SACH,uDAMT,ICzEA,GAf6BP,EAAAA,EAAAA,WAAS,UAAU,MAC9CC,IAIA,OACEK,EAAAA,EAAAA,MAAC+B,EAAAA,EAAK,CAAA9B,SAAA,EACJE,EAAAA,EAAAA,KAAC6B,EAAAA,QAAiB,CAACC,MAAM,UAAUtC,MAAOA,KAC1CQ,EAAAA,EAAAA,KAAC+B,EAAAA,QAAQ,CAACD,MAAM,eAAchC,UAC5BE,EAAAA,EAAAA,KAACgC,EAAiB,CAACxC,MAAOA,QAIlC,G","sources":["../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/LinkToSyntenyView.tsx","../../../plugins/linear-comparative-view/src/SyntenyFeatureDetail/SyntenyFeatureDetail.tsx"],"sourcesContent":["import { lazy } from 'react'\n\nimport {\n  SimpleFeature,\n  assembleLocString,\n  getSession,\n} from '@jbrowse/core/util'\nimport { Link } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { SyntenyFeatureDetailModel } from './types'\nimport type { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst LaunchSyntenyViewDialog = lazy(\n  () => import('../LGVSyntenyDisplay/components/LaunchSyntenyViewDialog'),\n)\n\nconst LinkToSyntenyView = observer(function ({\n  model,\n}: {\n  model: SyntenyFeatureDetailModel\n}) {\n  const { featureData, view, level, trackId } = model\n  return (\n    <ul>\n      {view.type === 'LinearSyntenyView' ? (\n        <li>\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              const { views } = view as LinearSyntenyViewModel\n              if (level !== undefined) {\n                // level is \"pre-known\", and stored in the SyntenyFeatureWidget\n                // model state e.g. when clicking on a feature from a\n                // LinearSyntenyRendering\n                views[level]?.navTo(featureData)\n                views[level + 1]?.navTo(\n                  featureData.mate as SimpleFeatureSerialized,\n                )\n              } else {\n                // best effort to find the right level. this is triggered for\n                // example if a user clicks on a feature in a LGVSyntenyDisplay\n                // in an existing LinearSyntenyView, there is no real proper\n                // level \"pre-known\" to this situation\n                const f1 = featureData\n                const f2 = featureData.mate as SimpleFeatureSerialized\n                const r1 = f1.assemblyName as string\n                const r2 = f2.assemblyName as string\n                const v1 = views.find(view => view.assemblyNames[0] === r1)\n                const v2 = views.find(view => view.assemblyNames[0] === r2)\n                if (!v1 || !v2) {\n                  getSession(model).notify(\n                    [\n                      v1\n                        ? `Unable to find ${assembleLocString(f1)} in synteny view`\n                        : '',\n                      v2\n                        ? `Unable to find ${assembleLocString(f2)} in synteny view`\n                        : '',\n                    ].join(' ... '),\n                  )\n                }\n                v1?.navTo(f1)\n                v2?.navTo(f2)\n              }\n            }}\n          >\n            Center view on this feature\n          </Link>\n        </li>\n      ) : null}\n      <li>\n        <Link\n          href=\"#\"\n          onClick={event => {\n            event.preventDefault()\n            const feature = new SimpleFeature(featureData)\n            const session = getSession(model)\n            session.queueDialog(handleClose => [\n              LaunchSyntenyViewDialog,\n              {\n                session,\n                feature,\n                trackId,\n                handleClose,\n              },\n            ])\n          }}\n        >\n          Launch new linear synteny view on this feature\n        </Link>\n      </li>\n    </ul>\n  )\n})\n\nexport default LinkToSyntenyView\n","import BaseFeatureDetail from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail'\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport LinkToSyntenyView from './LinkToSyntenyView'\n\nimport type { SyntenyFeatureDetailModel } from './types'\n\nconst SyntenyFeatureDetail = observer(function ({\n  model,\n}: {\n  model: SyntenyFeatureDetailModel\n}) {\n  return (\n    <Paper>\n      <BaseFeatureDetail title=\"Feature\" model={model} />\n      <BaseCard title=\"Link to view\">\n        <LinkToSyntenyView model={model} />\n      </BaseCard>\n    </Paper>\n  )\n})\n\nexport default SyntenyFeatureDetail\n"],"names":["LaunchSyntenyViewDialog","lazy","observer","model","featureData","view","level","trackId","_jsxs","children","type","_jsx","Link","href","onClick","event","preventDefault","views","undefined","navTo","mate","f1","f2","r1","assemblyName","r2","v1","find","assemblyNames","v2","getSession","notify","assembleLocString","join","feature","SimpleFeature","session","queueDialog","handleClose","Paper","BaseFeatureDetail","title","BaseCard","LinkToSyntenyView"],"sourceRoot":""}