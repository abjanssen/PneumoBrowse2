{"version":3,"file":"static/js/3795.0386c297.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearComparativeView/components/VerticalGuide.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Rubberband.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/Header.tsx","../../../plugins/linear-comparative-view/src/LinearComparativeView/components/LinearComparativeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/LinearSyntenyView.tsx"],"sourcesContent":["import React from 'react'\nimport { Tooltip, Typography } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { stringify } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { LinearComparativeViewModel } from '../model'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()({\n  guide: {\n    pointerEvents: 'none',\n    height: '100%',\n    width: 1,\n    position: 'absolute',\n    zIndex: 10,\n  },\n  sm: {\n    fontSize: 10,\n  },\n})\n\nconst VerticalGuide = observer(function ({\n  model,\n  coordX,\n}: {\n  model: LCV\n  coordX: number\n}) {\n  const { classes } = useStyles()\n  return (\n    <Tooltip\n      open\n      placement=\"top\"\n      title={model.views\n        .map(view => view.pxToBp(coordX))\n        .map((elt, idx) => (\n          <Typography\n            className={classes.sm}\n            key={[JSON.stringify(elt), idx].join('-')}\n          >\n            {stringify(elt, true)}\n          </Typography>\n        ))}\n      arrow\n    >\n      <div\n        className={classes.guide}\n        style={{\n          left: coordX,\n          background: 'red',\n        }}\n      />\n    </Tooltip>\n  )\n})\n\nexport default VerticalGuide\n","import React, { useRef, useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { Popover, Typography, alpha } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { stringify } from '@jbrowse/core/util'\nimport { Menu } from '@jbrowse/core/ui'\nimport { LinearGenomeViewModel } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport VerticalGuide from './VerticalGuide'\n\ntype LCV = LinearComparativeViewModel\ntype LGV = LinearGenomeViewModel\n\nconst useStyles = makeStyles()(theme => {\n  return {\n    rubberband: {\n      height: '100%',\n      background: alpha(theme.palette.tertiary.main, 0.7),\n      position: 'absolute',\n      zIndex: 10,\n      textAlign: 'center',\n      overflow: 'hidden',\n    },\n    rubberbandControl: {\n      cursor: 'crosshair',\n      width: '100%',\n      minHeight: 8,\n    },\n    rubberbandText: {\n      color: theme.palette.tertiary.contrastText,\n    },\n    popover: {\n      mouseEvents: 'none',\n      cursor: 'crosshair',\n    },\n    paper: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1),\n    },\n  }\n})\n\nconst LinearComparativeRubberband = observer(function Rubberband({\n  model,\n  ControlComponent = <div />,\n}: {\n  model: LCV\n  ControlComponent?: React.ReactElement\n}) {\n  const [startX, setStartX] = useState<number>()\n  const [currentX, setCurrentX] = useState<number>()\n\n  // clientX and clientY used for anchorPosition for menu\n  // offsetX used for calculations about width of selection\n  const [anchorPosition, setAnchorPosition] = useState<{\n    offsetX: number\n    clientX: number\n    clientY: number\n  }>()\n  const [guideX, setGuideX] = useState<number>()\n  const controlsRef = useRef<HTMLDivElement>(null)\n  const rubberbandRef = useRef<HTMLDivElement>(null)\n  const { classes } = useStyles()\n  const mouseDragging = startX !== undefined && anchorPosition === undefined\n\n  useEffect(() => {\n    function computeOffsets(offsetX: number, view: LGV) {\n      if (startX === undefined) {\n        return\n      }\n      let leftPx = startX\n      let rightPx = offsetX\n      // handles clicking and dragging to the left\n      if (rightPx < leftPx) {\n        ;[leftPx, rightPx] = [rightPx, leftPx]\n      }\n      const leftOffset = view.pxToBp(leftPx)\n      const rightOffset = view.pxToBp(rightPx)\n\n      return { leftOffset, rightOffset }\n    }\n\n    function globalMouseMove(event: MouseEvent) {\n      if (controlsRef.current && mouseDragging) {\n        const relativeX =\n          event.clientX - controlsRef.current.getBoundingClientRect().left\n        setCurrentX(relativeX)\n      }\n    }\n\n    function globalMouseUp(event: MouseEvent) {\n      if (startX !== undefined && controlsRef.current) {\n        const { clientX, clientY } = event\n        const ref = controlsRef.current\n        const offsetX = clientX - ref.getBoundingClientRect().left\n        // as stated above, store both clientX/Y and offsetX for different\n        // purposes\n        setAnchorPosition({\n          offsetX,\n          clientX,\n          clientY,\n        })\n        model.views.forEach(view => {\n          const args = computeOffsets(offsetX, view)\n          if (args) {\n            const { leftOffset, rightOffset } = args\n            view.setOffsets(leftOffset, rightOffset)\n          }\n        })\n        setGuideX(undefined)\n      }\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', globalMouseMove)\n      window.addEventListener('mouseup', globalMouseUp)\n      return () => {\n        window.removeEventListener('mousemove', globalMouseMove)\n        window.removeEventListener('mouseup', globalMouseUp)\n      }\n    }\n    return () => {}\n  }, [startX, mouseDragging, model])\n\n  useEffect(() => {\n    if (\n      !mouseDragging &&\n      currentX !== undefined &&\n      startX !== undefined &&\n      Math.abs(currentX - startX) <= 3\n    ) {\n      handleClose()\n    }\n  }, [mouseDragging, currentX, startX])\n\n  function mouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault()\n    event.stopPropagation()\n    const relativeX =\n      event.clientX -\n      (event.target as HTMLDivElement).getBoundingClientRect().left\n    setStartX(relativeX)\n    setCurrentX(relativeX)\n  }\n\n  function mouseMove(event: React.MouseEvent<HTMLDivElement>) {\n    const target = event.target as HTMLDivElement\n    setGuideX(event.clientX - target.getBoundingClientRect().left)\n  }\n\n  function mouseOut() {\n    setGuideX(undefined)\n    model.views.forEach(view => {\n      view.setOffsets(undefined, undefined)\n    })\n  }\n\n  function handleClose() {\n    setAnchorPosition(undefined)\n    setStartX(undefined)\n    setCurrentX(undefined)\n  }\n\n  const open = Boolean(anchorPosition)\n\n  function handleMenuItemClick(_: unknown, callback: () => void) {\n    callback()\n    handleClose()\n  }\n\n  if (startX === undefined) {\n    return (\n      <>\n        {guideX !== undefined ? (\n          <VerticalGuide model={model} coordX={guideX} />\n        ) : null}\n        <div\n          ref={controlsRef}\n          className={classes.rubberbandControl}\n          onMouseDown={mouseDown}\n          onMouseOut={mouseOut}\n          onMouseMove={mouseMove}\n        >\n          {ControlComponent}\n        </div>\n      </>\n    )\n  }\n\n  const right = anchorPosition ? anchorPosition.offsetX : currentX || 0\n  const left = right < startX ? right : startX\n  const width = Math.abs(right - startX)\n  const { views } = model\n  const leftBpOffset = views.map(view => view.pxToBp(left))\n  const rightBpOffset = views.map(view => view.pxToBp(left + width))\n  const numOfBpSelected = views.map(view => Math.ceil(width * view.bpPerPx))\n  return (\n    <>\n      {rubberbandRef.current ? (\n        <>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'left',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'right',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {leftBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'left'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n          <Popover\n            className={classes.popover}\n            classes={{ paper: classes.paper }}\n            open\n            anchorEl={rubberbandRef.current}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right',\n            }}\n            transformOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left',\n            }}\n            keepMounted\n            disableRestoreFocus\n          >\n            {rightBpOffset.map((l, idx) => (\n              <Typography key={[JSON.stringify(l), idx, 'right'].join('-')}>\n                {stringify(l, true)}\n              </Typography>\n            ))}\n          </Popover>\n        </>\n      ) : null}\n      <div\n        ref={rubberbandRef}\n        className={classes.rubberband}\n        style={{ left, width }}\n      >\n        <Typography variant=\"h6\" className={classes.rubberbandText}>\n          {numOfBpSelected.map((n, i) => (\n            /* biome-ignore lint/suspicious/noArrayIndexKey: */\n            <Typography key={`${n}_${i}`}>\n              {`${n.toLocaleString('en-US')}bp`}\n            </Typography>\n          ))}\n        </Typography>\n      </div>\n      <div\n        className={classes.rubberbandControl}\n        ref={controlsRef}\n        onMouseDown={mouseDown}\n        onMouseOut={mouseOut}\n        onMouseMove={mouseMove}\n      >\n        {ControlComponent}\n      </div>\n      {anchorPosition ? (\n        <Menu\n          anchorReference=\"anchorPosition\"\n          anchorPosition={{\n            left: anchorPosition.clientX,\n            top: anchorPosition.clientY,\n          }}\n          onMenuItemClick={handleMenuItemClick}\n          open={open}\n          onClose={handleClose}\n          menuItems={model.rubberBandMenuItems()}\n        />\n      ) : null}\n    </>\n  )\n})\n\nexport default LinearComparativeRubberband\n","import React, { useState } from 'react'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { SearchBox } from '@jbrowse/plugin-linear-genome-view'\nimport { observer } from 'mobx-react'\nimport { Menu } from '@jbrowse/core/ui'\n\n// icons\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\n\ntype LCV = LinearComparativeViewModel\n\nconst useStyles = makeStyles()(() => ({\n  headerBar: {\n    gridArea: '1/1/auto/span 2',\n    display: 'flex',\n  },\n  spacer: {\n    flexGrow: 1,\n  },\n  iconButton: {\n    margin: 5,\n  },\n  bp: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 10,\n  },\n  searchContainer: {\n    marginLeft: 5,\n  },\n  searchBox: {\n    display: 'flex',\n  },\n}))\n\nconst TrackSelector = observer(({ model }: { model: LCV }) => {\n  return (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Synteny track selector',\n          onClick: () => model.activateTrackSelector(),\n        },\n        ...model.views.map((view, idx) => ({\n          label: `View ${idx + 1} track selector`,\n          onClick: () => view.activateTrackSelector(),\n        })),\n      ]}\n    >\n      <TrackSelectorIcon />\n    </CascadingMenuButton>\n  )\n})\n\nconst Header = observer(function ({ model }: { model: LCV }) {\n  const { classes } = useStyles()\n  const [menuAnchorEl, setMenuAnchorEl] = useState<HTMLElement>()\n  const anyShowHeaders = model.views.some(view => !view.hideHeader)\n  return (\n    <div className={classes.headerBar}>\n      <TrackSelector model={model} />\n\n      <IconButton\n        onClick={event => {\n          setMenuAnchorEl(event.currentTarget)\n        }}\n        className={classes.iconButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      {!anyShowHeaders\n        ? model.views.map(view => (\n            <div key={view.id} className={classes.searchBox}>\n              <div className={classes.searchContainer}>\n                <SearchBox model={view} showHelp={false} />\n              </div>\n              <div className={classes.bp}>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                  className={classes.bp}\n                >\n                  {Math.round(view.coarseTotalBp).toLocaleString('en-US')} bp\n                </Typography>\n              </div>\n            </div>\n          ))\n        : null}\n\n      <div className={classes.spacer} />\n\n      {menuAnchorEl ? (\n        <Menu\n          anchorEl={menuAnchorEl}\n          open\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuAnchorEl(undefined)\n          }}\n          menuItems={model.headerMenuItems()}\n          onClose={() => {\n            setMenuAnchorEl(undefined)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default Header\n","import React from 'react'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { getConf, AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { getEnv } from '@jbrowse/core/util'\nimport { ResizeHandle } from '@jbrowse/core/ui'\n\n// locals\nimport { LinearComparativeViewModel } from '../model'\nimport Rubberband from './Rubberband'\nimport Header from './Header'\n\nconst useStyles = makeStyles()(theme => ({\n  container: {\n    display: 'grid',\n  },\n  overlay: {\n    zIndex: 100,\n    gridArea: '1/1',\n  },\n  content: {\n    gridArea: '1/1',\n    position: 'relative',\n  },\n  grid: {\n    display: 'grid',\n  },\n  relative: {\n    position: 'relative',\n  },\n\n  // this helps keep the vertical guide inside the parent view container,\n  // similar style exists in the single LGV's trackscontainer\n  rubberbandContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n\n  rubberbandDiv: {\n    width: '100%',\n    background: theme.palette.action.disabledBackground,\n    height: 15,\n    '&:hover': {\n      background: theme.palette.action.selected,\n    },\n  },\n}))\n\ntype LCV = LinearComparativeViewModel\n\nconst Overlays = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  return (\n    <>\n      {model.tracks.map(track => {\n        const [display] = track.displays\n        const { RenderingComponent } = display\n        const trackId = getConf(track, 'trackId')\n        return RenderingComponent ? (\n          <div\n            className={classes.overlay}\n            key={trackId}\n            style={{\n              height: model.middleComparativeHeight,\n              overflow: 'hidden',\n            }}\n          >\n            <RenderingComponent model={display} />\n          </div>\n        ) : null\n      })}\n    </>\n  )\n})\n\n// The comparative is in the middle of the views\nconst MiddleComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  const { ReactComponent } = pluginManager.getViewType(views[0]!.type)!\n\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n      <div className={classes.container}>\n        <ReactComponent model={views[0]} />\n        <div className={classes.grid}>\n          <Overlays model={model} />\n        </div>\n        <ResizeHandle\n          onDrag={n =>\n            model.setMiddleComparativeHeight(model.middleComparativeHeight + n)\n          }\n          style={{\n            height: 4,\n            background: '#ccc',\n          }}\n        />\n        <ReactComponent model={views[1]} />\n      </div>\n    </div>\n  )\n})\nconst OverlayComparativeView = observer(({ model }: { model: LCV }) => {\n  const { classes } = useStyles()\n  const { views } = model\n  const { pluginManager } = getEnv(model)\n  return (\n    <div className={classes.rubberbandContainer}>\n      <Header model={model} />\n      <Rubberband\n        model={model}\n        ControlComponent={<div className={classes.rubberbandDiv} />}\n      />\n\n      <div className={classes.container}>\n        <div className={classes.content}>\n          <div className={classes.relative}>\n            {views.map(view => {\n              const { ReactComponent } = pluginManager.getViewType(view.type)!\n              return <ReactComponent key={view.id} model={view} />\n            })}\n          </div>\n          <Overlays model={model} />\n        </div>\n      </div>\n    </div>\n  )\n})\n\nconst LinearComparativeView = observer(function (props: {\n  ExtraButtons?: React.ReactNode\n  model: LCV\n}) {\n  const { model } = props\n\n  const middle = model.tracks.some(({ displays }) =>\n    displays.some((d: { configuration: AnyConfigurationModel }) =>\n      getConf(d, 'middle'),\n    ),\n  )\n  return middle ? (\n    <MiddleComparativeView {...props} />\n  ) : (\n    <OverlayComparativeView {...props} />\n  )\n})\n\nexport default LinearComparativeView\n","import React, { lazy } from 'react'\nimport { observer } from 'mobx-react'\n\n// locals\nimport LinearComparativeViewComponent from '../../LinearComparativeView/components/LinearComparativeView'\nimport { LinearSyntenyViewModel } from '../model'\n\nconst ImportForm = lazy(() => import('./ImportForm'))\n\ntype LSV = LinearSyntenyViewModel\n\nconst LinearSyntenyView = observer(({ model }: { model: LSV }) => {\n  return !model.initialized ? (\n    <ImportForm model={model} />\n  ) : (\n    <LinearComparativeViewComponent model={model} />\n  )\n})\n\nexport default LinearSyntenyView\n"],"names":["useStyles","makeStyles","guide","pointerEvents","height","width","position","zIndex","sm","fontSize","observer","model","coordX","classes","React","Tooltip","open","placement","title","views","map","view","pxToBp","elt","idx","Typography","className","key","JSON","stringify","join","arrow","style","left","background","theme","rubberband","alpha","palette","tertiary","main","textAlign","overflow","rubberbandControl","cursor","minHeight","rubberbandText","color","contrastText","popover","mouseEvents","paper","paddingLeft","spacing","paddingRight","ControlComponent","startX","setStartX","useState","currentX","setCurrentX","anchorPosition","setAnchorPosition","guideX","setGuideX","controlsRef","useRef","rubberbandRef","mouseDragging","undefined","mouseDown","event","preventDefault","stopPropagation","relativeX","clientX","target","getBoundingClientRect","mouseMove","mouseOut","forEach","setOffsets","handleClose","useEffect","globalMouseMove","current","globalMouseUp","clientY","offsetX","args","leftPx","rightPx","leftOffset","rightOffset","computeOffsets","window","addEventListener","removeEventListener","Math","abs","Boolean","VerticalGuide","ref","onMouseDown","onMouseOut","onMouseMove","right","leftBpOffset","rightBpOffset","numOfBpSelected","ceil","bpPerPx","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","keepMounted","disableRestoreFocus","l","variant","n","i","toLocaleString","Menu","anchorReference","top","onMenuItemClick","_","callback","onClose","menuItems","rubberBandMenuItems","headerBar","gridArea","display","spacer","flexGrow","iconButton","margin","bp","alignItems","marginLeft","searchContainer","searchBox","TrackSelector","CascadingMenuButton","label","onClick","activateTrackSelector","TrackSelectorIcon","menuAnchorEl","setMenuAnchorEl","anyShowHeaders","some","hideHeader","IconButton","currentTarget","MoreVertIcon","id","SearchBox","showHelp","round","coarseTotalBp","_event","headerMenuItems","container","overlay","content","grid","relative","rubberbandContainer","rubberbandDiv","action","disabledBackground","selected","Overlays","tracks","track","displays","RenderingComponent","trackId","getConf","middleComparativeHeight","MiddleComparativeView","pluginManager","getEnv","ReactComponent","getViewType","type","Header","Rubberband","ResizeHandle","onDrag","setMiddleComparativeHeight","OverlayComparativeView","props","d","ImportForm","lazy","initialized","LinearComparativeViewComponent"],"sourceRoot":""}