{"version":3,"file":"static/js/1204.fcdef978.chunk.js","mappings":"kPAOe,SAAAA,EAAAC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAAsB,MAAAC,EAAA,YAAAC,GAAAJ,GAUnCK,EAAAC,IAA0BC,EAAAA,EAAAA,UAAiB,GAAGJ,EAAKK,aAAa,IAAAC,EASvDC,EAEWC,EAGkBC,EAK7BC,EAGMC,EASAC,EACKC,EACT,OAjCqDf,EAAA,KAAAgB,OAAAC,IAAA,8BAO9CT,EAAAU,IACRb,EAASa,EAAKC,OAAAf,QACfJ,EAAA,GAAAQ,GAAAA,EAAAR,EAAA,GAAAA,EAAA,KAAAI,GALLK,GAAAW,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAC,UACZF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACDnB,MAAAA,EACGoB,SAAAhB,MAIER,EAAA,GAAAI,EAAAJ,EAAA,GAAAS,GAAAA,EAAAT,EAAA,GAAAA,EAAA,KAAAI,GAGFM,EAAAe,OAAAC,OAActB,GAAMJ,EAAA,GAAAI,EAAAJ,EAAA,GAAAU,GAAAA,EAAAV,EAAA,GAAAA,EAAA,KAAAG,GAAAH,EAAA,KAAAE,GAAAF,EAAA,KAAAI,GAErBO,EAAAA,KACPT,EAAKyB,cAAevB,GACpBD,KACDH,EAAA,GAAAG,EAAAH,EAAA,GAAAE,EAAAF,EAAA,GAAAI,EAAAJ,EAAA,GAAAW,GAAAA,EAAAX,EAAA,GAAAA,EAAA,KAAAU,GAAAV,EAAA,MAAAW,GANHC,GAAAQ,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACKC,SAAAnB,EACFoB,QAAA,YACCC,QAAApB,EAGRW,SACF,WAEQtB,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,GAAAA,EAAAZ,EAAA,IAAAA,EAAA,MAAAG,GACTU,GAAAO,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACGE,QAAA,YACFE,MAAA,YACGD,QAERA,KADC5B,KACDmB,SACF,WAEQtB,EAAA,IAAAG,EAAAH,EAAA,IAAAa,GAAAA,EAAAb,EAAA,IAAAA,EAAA,MAAAY,GAAAZ,EAAA,MAAAa,GAnBXC,GAAAmB,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAZ,SAAA,CACZV,EAUAC,KAScb,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,GAAAA,EAAAd,EAAA,IAAAA,EAAA,MAAAG,GAAAH,EAAA,MAAAS,GAAAT,EAAA,MAAAc,GA7BlBC,GAAAkB,EAAAA,EAAAA,MAACE,EAAAA,OAAM,CAACC,MAAI,EAAOC,MAAA,iBAA0BlC,QAAAA,EAAWmB,SAAA,CACtDb,EAQAK,KAqBOd,EAAA,IAAAG,EAAAH,EAAA,IAAAS,EAAAT,EAAA,IAAAc,EAAAd,EAAA,IAAAe,GAAAA,EAAAf,EAAA,IA9BTe,CA8BS,C","sources":["../../../plugins/variants/src/shared/components/SetRowHeightDialog.tsx"],"sourcesContent":["import { useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { Button, DialogActions, DialogContent, TextField } from '@mui/material'\n\nimport type { Source } from '../types'\n\nexport default function SetRowHeight({\n  model,\n  handleClose,\n}: {\n  model: {\n    rowHeight?: Source[]\n    setRowHeight: (arg: number) => void\n  }\n  handleClose: () => void\n}) {\n  const [value, setValue] = useState<string>(`${model.rowHeight}`)\n\n  return (\n    <Dialog open title=\"Set row height\" onClose={handleClose}>\n      <DialogContent>\n        <TextField\n          value={value}\n          onChange={event => {\n            setValue(event.target.value)\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={Number.isNaN(+value)}\n          variant=\"contained\"\n          onClick={() => {\n            model.setRowHeight(+value)\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n"],"names":["SetRowHeight","t0","$","_c","model","handleClose","value","setValue","useState","rowHeight","t1","t2","t3","t4","t5","t6","t7","t8","Symbol","for","event","target","_jsx","DialogContent","children","TextField","onChange","Number","isNaN","setRowHeight","Button","disabled","variant","onClick","color","_jsxs","DialogActions","Dialog","open","title"],"sourceRoot":""}