{"version":3,"file":"static/js/5132.4a3294f6.chunk.js","mappings":"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","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/util.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/Flags.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/Formatter.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/PairLink.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/tagInfo.ts","../../../plugins/alignments/src/AlignmentsFeatureDetail/AlignmentsFeatureDetail.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx"],"sourcesContent":["import { getSession } from '@jbrowse/core/util'\n\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\nexport function getTag(\n  tag: string,\n  feat: {\n    tags?: Record<string, unknown>\n    [key: string]: unknown\n  },\n) {\n  return feat.tags?.[tag] || feat[tag]\n}\n\nexport async function navToLoc(locString: string, model: IAnyStateTreeNode) {\n  const session = getSession(model)\n  const { view } = model\n  try {\n    if (view) {\n      await view.navToLocString(locString)\n    } else {\n      throw new Error('No view associated with this view anymore')\n    }\n  } catch (e) {\n    console.error(e)\n    session.notify(`${e}`)\n  }\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport SimpleField from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField'\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  compact: {\n    paddingRight: 0,\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n})\n\nconst flagNames = [\n  'read paired',\n  'read mapped in proper pair',\n  'read unmapped',\n  'mate unmapped',\n  'read reverse strand',\n  'mate reverse strand',\n  'first in pair',\n  'second in pair',\n  'not primary alignment',\n  'read fails platform/vendor quality checks',\n  'read is PCR or optical duplicate',\n  'supplementary alignment',\n]\n\nexport default function AlignmentFlags(props: { flags: number }) {\n  const { classes } = useStyles()\n  const { flags } = props\n\n  return (\n    <BaseCard {...props} title=\"Flags\">\n      <SimpleField name=\"Flag\" value={flags} />\n      <FormGroup>\n        {flagNames.map((name, idx) => {\n          const val = flags & (1 << idx)\n          const key = `${name}_${val}`\n          return (\n            <FormControlLabel\n              key={key}\n              control={\n                <Checkbox\n                  className={classes.compact}\n                  checked={Boolean(val)}\n                  name={name}\n                  readOnly\n                />\n              }\n              label={name}\n            />\n          )\n        })}\n      </FormGroup>\n    </BaseCard>\n  )\n}\n","import { useState } from 'react'\n\nimport copy from 'copy-to-clipboard'\n\n// this 'show more...' used specifically as a formatter on alignments feature\n// details because long SEQ or CRAM files, even a single div full of a ton of\n// data from a long read, can slow down the rest of the app\nexport default function Formatter({ value }: { value: unknown }) {\n  const [show, setShow] = useState(false)\n  const [copied, setCopied] = useState(false)\n  const display = String(value)\n  return display.length > 100 ? (\n    <>\n      <button\n        type=\"button\"\n        onClick={() => {\n          copy(display)\n          setCopied(true)\n          setTimeout(() => {\n            setCopied(false)\n          }, 700)\n        }}\n      >\n        {copied ? 'Copied to clipboard' : 'Copy'}\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          setShow(val => !val)\n        }}\n      >\n        {show ? 'Show less' : 'Show more'}\n      </button>\n      <div>{show ? display : `${display.slice(0, 100)}...`}</div>\n    </>\n  ) : (\n    <div>{display}</div>\n  )\n}\n","import { Link } from '@mui/material'\n\nimport { navToLoc } from './util'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\n\nexport default function PairLink({\n  locString,\n  model,\n}: {\n  locString: string\n  model: AlignmentFeatureWidgetModel\n}) {\n  return (\n    <Link\n      onClick={event => {\n        event.preventDefault()\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        navToLoc(locString, model)\n      }}\n      href=\"#\"\n    >\n      {locString}\n    </Link>\n  )\n}\n","export const tags = {\n  AM: 'The smallest template-independent mapping quality in the template',\n  AS: 'Alignment score generated by aligner',\n  BC: 'Barcode sequence identifying the sample',\n  BQ: 'Offset to base alignment quality (BAQ)',\n  BZ: 'Phred quality of the unique molecular barcode bases in the {OX} tag',\n  CB: 'Cell identifier',\n  CC: 'Reference name of the next hit',\n  CM: 'Edit distance between the color sequence and the color reference (see also {NM})',\n  CO: 'Free-text comments',\n  CP: 'Leftmost coordinate of the next hit',\n  CQ: 'Color read base qualities',\n  CR: 'Cellular barcode sequence bases (uncorrected)',\n  CS: 'Color read sequence',\n  CT: 'Complete read annotation tag, used for consensus annotation dummy features',\n  CY: 'Phred quality of the cellular barcode sequence in the {CR} tag',\n  E2: 'The 2nd most likely base calls',\n  FI: 'The index of segment in the template',\n  FS: 'Segment suffix',\n  FZ: 'Flow stopToken intensities',\n  GC: 'Reserved for backwards compatibility reasons',\n  GQ: 'Reserved for backwards compatibility reasons',\n  GS: 'Reserved for backwards compatibility reasons',\n  H0: 'Number of perfect hits',\n  H1: 'Number of 1-difference hits (see also {NM})',\n  H2: 'Number of 2-difference hits',\n  HI: 'Query hit index',\n  IH: 'Query hit total count',\n  LB: 'Library',\n  MC: 'CIGAR string for mate/next segment',\n  MD: 'String encoding mismatched and deleted reference bases',\n  MF: 'Reserved for backwards compatibility reasons',\n  MI: 'Molecular identifier; a string that uniquely identifies the molecule from which the record was derived',\n  ML: 'Base modification probabilities',\n  MM: 'Base modifications / methylation ',\n  MQ: 'Mapping quality of the mate/next segment',\n  NH: 'Number of reported alignments that contain the query in the current record',\n  NM: 'Edit distance to the reference',\n  OA: 'Original alignment',\n  OC: 'Original CIGAR (deprecated; use {OA} instead)',\n  OP: 'Original mapping position (deprecated; use {OA} instead)',\n  OQ: 'Original base quality',\n  OX: 'Original unique molecular barcode bases',\n  PG: 'Program',\n  PQ: 'Phred likelihood of the template',\n  PT: 'Read annotations for parts of the padded read sequence',\n  PU: 'Platform unit',\n  Q2: 'Phred quality of the mate/next segment sequence in the {R2} tag',\n  QT: 'Phred quality of the sample barcode sequence in the {BC} tag',\n  QX: 'Quality score of the unique molecular identifier in the {RX} tag',\n  R2: 'Sequence of the mate/next segment in the template',\n  RG: 'Read group',\n  RT: 'Reserved for backwards compatibility reasons',\n  RX: 'Sequence bases of the (possibly corrected) unique molecular identifier',\n  S2: 'Reserved for backwards compatibility reasons',\n  SA: 'Other canonical alignments in a chimeric alignment',\n  SM: 'Template-independent mapping quality',\n  SQ: 'Reserved for backwards compatibility reasons',\n  TC: 'The number of segments in the template',\n  TS: 'Transcript strand',\n  U2: 'Phred probability of the 2nd call being wrong conditional on the best being wrong',\n  UQ: 'Phred likelihood of the segment, conditional on the mapping being correct',\n}\n","import { lazy } from 'react'\n\nimport FeatureDetails from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails'\nimport { Paper } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport Flags from './Flags'\nimport Formatter from './Formatter'\nimport PairLink from './PairLink'\nimport { tags } from './tagInfo'\nimport { getTag } from './util'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst SupplementaryAlignments = lazy(() => import('./SupplementaryAlignments'))\nconst LinkedPairedAlignments = lazy(() => import('./LinkedPairedAlignments'))\n\nconst FeatDefined = observer(function (props: {\n  feat: SimpleFeatureSerialized\n  model: AlignmentFeatureWidgetModel\n}) {\n  const { model, feat } = props\n  const flags = feat.flags as number | null\n  const SA = getTag('SA', feat) as string | undefined\n  return (\n    <Paper data-testid=\"alignment-side-drawer\">\n      <FeatureDetails\n        {...props}\n        descriptions={{ tags }}\n        feature={feat}\n        formatter={(value, key) =>\n          key === 'next_segment_position' ? (\n            <PairLink model={model} locString={value as string} />\n          ) : (\n            <Formatter value={value} />\n          )\n        }\n      />\n\n      {SA !== undefined ? (\n        <SupplementaryAlignments model={model} tag={SA} feature={feat} />\n      ) : null}\n      {flags != null ? (\n        <>\n          {flags & 1 ? (\n            <LinkedPairedAlignments model={model} feature={feat} />\n          ) : null}\n\n          <Flags flags={flags} {...props} />\n        </>\n      ) : null}\n    </Paper>\n  )\n})\n\nconst AlignmentsFeatureDetails = observer(function (props: {\n  model: AlignmentFeatureWidgetModel\n}) {\n  const { model } = props\n  const { featureData } = model\n  const feat = structuredClone(featureData)\n  return feat ? (\n    <FeatDefined feat={feat} {...props} />\n  ) : (\n    <div>\n      No feature loaded, may not be available after page refresh because it was\n      too large for localStorage\n    </div>\n  )\n})\n\nexport default AlignmentsFeatureDetails\n","import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport Help from '@mui/icons-material/Help'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { LoadingEllipses } from '../../ui'\nimport { getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseFeatureWidgetModel } from '../stateModelFactory'\n\n// lazies\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\nconst HelpDialog = lazy(() => import('./dialogs/HelpDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = observer(function ({\n  model,\n  feature,\n}: {\n  model: BaseFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShown(!shown)\n          }}\n        >\n          {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n        </Button>\n      </FormControl>\n\n      <IconButton\n        onClick={() => {\n          getSession(model).queueDialog(handleClose => [\n            HelpDialog,\n            {\n              handleClose,\n            },\n          ])\n        }}\n      >\n        <Help />\n      </IconButton>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            key={feature.uniqueId}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default SequenceFeaturePanel\n","import { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { Divider, Typography } from '@mui/material'\n\nimport { generateTitle } from './util'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport Attributes from './Attributes'\nimport BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\nimport { ErrorMessage } from '../../ui'\nimport { getEnv, getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { Descriptors } from '../types'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport default function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Descriptors\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { maxDepth } = model\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  const m = mate as { start: number; end: number; refName: string } | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {m ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{\n              ...m,\n              start: m.start,\n              end: m.end,\n              refName: m.refName,\n              uniqueId: `${uniqueId}-mate`,\n            }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {depth < maxDepth && subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{\n                ...sub,\n                uniqueId: `${uniqueId}_${idx}`,\n              }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n"],"names":["getTag","tag","feat","tags","async","navToLoc","locString","model","session","getSession","view","Error","navToLocString","e","console","error","notify","useStyles","makeStyles","compact","paddingRight","paddingTop","paddingBottom","flagNames","AlignmentFlags","props","$","_c","classes","flags","t0","t1","t2","t3","_jsx","SimpleField","name","map","idx","val","key","FormControlLabel","control","Checkbox","className","checked","Boolean","readOnly","FormGroup","children","_jsxs","BaseCard","title","Formatter","value","show","setShow","useState","copied","setCopied","display","String","length","_Fragment","type","onClick","copy","setTimeout","_temp","slice","PairLink","event","preventDefault","Link","href","AM","AS","BC","BQ","BZ","CB","CC","CM","CO","CP","CQ","CR","CS","CT","CY","E2","FI","FS","FZ","GC","GQ","GS","H0","H1","H2","HI","IH","LB","MC","MD","MF","MI","ML","MM","MQ","NH","NM","OA","OC","OP","OQ","OX","PG","PQ","PT","PU","Q2","QT","QX","R2","RG","RT","RX","S2","SA","SM","SQ","TC","TS","U2","UQ","SupplementaryAlignments","lazy","LinkedPairedAlignments","FeatDefined","observer","Paper","FeatureDetails","descriptions","feature","formatter","undefined","Flags","featureData","structuredClone","Position","strand","strandMap","str","assembleLocString","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","toLocale","coreRenderedDetails","description","Object","entries","filter","_temp2","name_0","value_0","SequenceFeatureDetails","HelpDialog","theme","formControl","margin","container","marginTop","spacing","marginBottom","shown","setShown","FormControl","Button","variant","IconButton","queueDialog","handleClose","Help","Suspense","fallback","LoadingEllipses","uniqueId","coreDetails","omit","depth","maxDepth","mate","id","t4","t5","subfeatures","t6","pm","getEnv","pluginManager","evaluateExtensionPoint","ExtraPanel","m","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","generateTitle","Symbol","for","Typography","Divider","refName","Attributes","ErrorBoundary","FallbackComponent","Component","defaultExpanded","sub","JSON","stringify","ErrorMessage","expansionPanelDetails","padding","icon","color","palette","tertiary","contrastText","ExpandMore","AccordionSummary","expandIcon","AccordionDetails","Accordion"],"sourceRoot":""}