{"version":3,"file":"static/js/3448.c6e91c52.chunk.js","mappings":"wQAeA,MA8DA,GA5DgCA,EAAAA,EAAAA,UAAS,UAAU,MACjDC,EAAK,YACLC,IAKA,MAAM,QAAEC,EAAO,MAAEC,GAAUH,GACpBI,EAAKC,IAAUC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,UAVrBC,EAACC,EAAI,OAASA,GAAGC,QAAQ,GAUKF,CAAIN,EAAUC,MACtDQ,EAAAA,EAAAA,WAAU,KACRN,GAAOE,EAAAA,EAAAA,UAASL,EAAUC,KACzB,CAACD,EAASC,IACb,MAAMS,EAAOR,EAAIS,QAAQ,KAAM,IAC/B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,OAAM,CAACC,MAAM,kBAAkBC,MAAI,EAACC,QAASjB,EAAYkB,SAAA,EACxDL,EAAAA,EAAAA,MAACM,EAAAA,EAAa,CACZC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,IAAK,IACLL,SAAA,EAEFM,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAP,SAAC,wKAKZM,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,WAAW,6BACXC,MAAOzB,EACP0B,SAAUC,IACR1B,EAAO0B,EAAMC,OAAOH,cAI1Bf,EAAAA,EAAAA,MAACmB,EAAAA,EAAa,CAAAd,SAAA,EACZM,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,YACNC,QAASA,KACPpC,KACAkB,SACH,YAGDM,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,QAASA,KACPrC,EAAMsC,QAAQ1B,EAAOZ,EAAMG,OAC3BF,KACAkB,SACH,gBAMT,E","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/RegionWidthEditorDialog.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { Dialog } from '@jbrowse/core/ui'\nimport { toLocale } from '@jbrowse/core/util'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { LinearGenomeViewModel } from '../model'\n\nconst toP = (s = 0) => +(+s).toFixed(1)\n\nconst RegionWidthEditorDialog = observer(function ({\n  model,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const { bpPerPx, width } = model\n  const [val, setVal] = useState(toLocale(toP(bpPerPx * width)))\n  useEffect(() => {\n    setVal(toLocale(bpPerPx * width))\n  }, [bpPerPx, width])\n  const val2 = val.replace(/,/g, '')\n  return (\n    <Dialog title=\"Edit zoom level\" open onClose={handleClose}>\n      <DialogContent\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 30,\n        }}\n      >\n        <Typography>\n          Enter a specific number of base pairs to change the viewport to show.\n          This is approximate and does not account for padding between regions\n          or off-screen scrolling\n        </Typography>\n        <TextField\n          helperText=\"current zoom level (in bp)\"\n          value={val}\n          onChange={event => {\n            setVal(event.target.value)\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            model.zoomTo(+val2 / model.width)\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default RegionWidthEditorDialog\n"],"names":["observer","model","handleClose","bpPerPx","width","val","setVal","useState","toLocale","toP","s","toFixed","useEffect","val2","replace","_jsxs","Dialog","title","open","onClose","children","DialogContent","style","display","flexDirection","gap","_jsx","Typography","TextField","helperText","value","onChange","event","target","DialogActions","Button","variant","color","onClick","zoomTo"],"sourceRoot":""}