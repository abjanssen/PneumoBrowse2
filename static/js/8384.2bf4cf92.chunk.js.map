{"version":3,"file":"static/js/8384.2bf4cf92.chunk.js","mappings":"gMAOO,MAAMA,EAAkB,SAE/B,SAASC,EAAUC,GAIjB,MAAO,OAHGC,KAAKC,MAAMF,EAAM,OAAe,OAChCC,KAAKC,MAAMF,EAAM,KAAO,OACxBA,EAAM,MAElB,CAEA,MAAMG,EAAW,CACfC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,EAAG,QACH,IAAK,SAGDC,EAAY,EAEZC,EAAW,KAEV,SAASC,EAAMC,EAAWC,EAAWC,EAAWC,GACrD,OAAOd,KAAKC,OAAW,IAAJU,EAAU,IAAU,IAAJC,EAAUC,EAAI,GAAKC,EACxD,CAEO,SAASC,EACdC,EACAC,EACAC,GAEA,MAAMC,GAAOC,EAAAA,EAAAA,mBAAkBJ,GACzBK,EAAaF,EAAKE,WAClBC,EAAYH,EAAKG,UACjBC,EAAuBJ,EAAKI,sBAC5B,MAAEC,EAAK,OAAEC,EAAM,cAAEC,GAAkBV,EACnCW,EAAQR,EAAKQ,MACbC,EAAWT,EAAKU,MAAMC,IAAIC,GAAKA,EAAEC,SAEnCd,IACFA,EAAKe,uBAAwB,GAG/BhB,EAAKiB,YACL,MAAMC,EAAUhB,EAAKU,MAAMC,IAAIC,GAAKA,EAAEK,UAChCtB,EAAiBd,KAAKC,MAAMJ,EAAkB6B,EAAcW,QAIlEpB,EAAKqB,UAAYpC,EAASK,EAC1BU,EAAKsB,YAAcrC,EAASK,EAC5B,IAAK,MAAM,IAAEiC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,KAASjB,EAAe,CAClD,MAAMkB,EAAMJ,EAAIJ,SAAWD,EAAQX,GAC7BqB,EAAMJ,EAAIL,SAAWD,EAAQX,GAC7BsB,EAAMJ,EAAIN,SAAWD,EAAQX,EAAQ,GACrCuB,EAAMJ,EAAIP,SAAWD,EAAQX,EAAQ,GACrCwB,EAAKhD,KAAKiD,IAAIJ,EAAMD,GACpBM,EAAKlD,KAAKiD,IAAIF,EAAMD,GACpBK,EAAK,EACLC,EAAK3B,EACL4B,GAAOD,EAAKD,GAAM,EAKtBH,GAAMxC,GACN0C,GAAM1C,GACNsC,EAAMnB,EAAQlB,GACdqC,GAAOrC,IAEPQ,EAAKqC,OAAOV,EAAKO,GACb9B,EACFJ,EAAKsC,cAAcX,EAAKS,EAAKP,EAAKO,EAAKP,EAAKM,GAE5CnC,EAAKuC,OAAOV,EAAKM,GAGvB,CACAnC,EAAKwC,SAILxC,EAAKqB,UAAYpC,EAASK,EAC1BU,EAAKsB,YAAcrC,EAASK,EAC5B,IAAK,MAAM,IAAEiC,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,EAAG,EAAEe,EAAC,MAAEC,KAAWjC,EAAe,CAC5D,MAAMkB,EAAMJ,EAAIJ,SAAWD,EAAQX,GAC7BqB,EAAMJ,EAAIL,SAAWD,EAAQX,GAC7BsB,EAAMJ,EAAIN,SAAWD,EAAQX,EAAQ,GACrCuB,EAAMJ,EAAIP,SAAWD,EAAQX,EAAQ,GACrCwB,EAAKhD,KAAKiD,IAAIJ,EAAMD,GACpBM,EAAKlD,KAAKiD,IAAIF,EAAMD,GACpBc,EAAO5D,KAAK6D,IAAIf,EAAKC,GACrBe,EAAO9D,KAAK+D,IAAIjB,EAAKC,GACrBI,EAAK,EACLC,EAAK3B,EACL4B,GAAOD,EAAKD,GAAM,EAExB,KACIH,GAAMxC,GAAa0C,GAAM1C,KAC3BwD,EAAAA,EAAAA,gBAAeJ,EAAME,GAAOrD,EAAUU,EAAKQ,MAAQlB,GACnD,CACA,MAAMwD,EAAKP,EAAEQ,IAAI,UACXC,GAAa,IAARF,EAAYpB,EAAMD,EAKvBwB,EAAOD,IAJM,IAARF,EAAYrB,EAAMC,GAIN,GAAK,EACtBwB,GAAQvB,EAAMC,EAAM,GAAK,GAAKkB,EAGpC,IAAIK,EAAMH,EACNI,GAAc,IAARN,EAAYlB,EAAMD,EAC5B,GAAIa,EAAMtB,QAAUf,EAAW,CAE7B,IAAIkD,GAAiB,EAGjBC,EAAM,EACNC,EAAM,EACV,MAAMC,EAAkB3E,KAAKC,MAAMJ,EAAkB8D,EAAMtB,QAE3D,IAAK,IAAIuC,EAAI,EAAGA,EAAIjB,EAAMtB,OAAQuC,GAAK,EAAG,CACxC,MAAM7E,EAAM6E,EAAID,EAAkB,EAE5BE,GAAOlB,EAAMiB,GACbE,EAAKnB,EAAMiB,EAAI,GAEhBJ,IACHC,EAAMH,EACNI,EAAMH,GAGR,MAAMQ,EAAKF,EAAMjD,EAASJ,GACpBwD,EAAKH,EAAMjD,EAASJ,EAAQ,GAelC,GAbW,MAAPsD,GAAqB,MAAPA,GAAqB,MAAPA,GAC9BR,GAAOS,EAAKX,EACZG,GAAOS,EAAKX,GACI,MAAPS,GAAqB,MAAPA,EACvBR,GAAOS,EAAKX,EAGE,MAAPU,IACPP,GAAOS,EAAKX,KAOVrE,KAAK+D,IAAIU,EAAKC,EAAKJ,EAAKC,GAAO,GAC/BvE,KAAK6D,IAAIY,EAAKC,EAAKJ,EAAKC,GAAO5C,GAEjC,CAIA,MAAMsD,EAAYL,EAAIjB,EAAMtB,OAAS,EACrC,GACErC,KAAKiD,IAAIqB,EAAMG,IAAQ,GACvBzE,KAAKiD,IAAIsB,EAAMG,IAAQ,GACvBO,EAEAT,GAAiB,MACZ,CAIL,MAAMU,EAAUV,GAAkBO,EAAK,GAAMC,EAAK,EAAIF,EAAK,IAC3D7D,EAAKqB,UAAYpC,EAASgF,GAC1BV,GAAiB,EAEbjD,EACa,MAAX2D,KACFC,EAAAA,EAAAA,IAAKlE,EAAMwD,EAAKH,EAAKnB,EAAIoB,EAAKG,EAAKtB,EAAIC,EAAKhC,GAC5CJ,EAAKmE,UAGPD,EAAAA,EAAAA,IAAKlE,EAAMwD,EAAKH,EAAKnB,EAAIoB,EAAKG,EAAKtB,EAAIC,EAAKhC,GAC5CJ,EAAKmE,QAEHlE,IACFA,EAAKoB,UAAYxC,EAAUC,IAC3BoF,EAAAA,EAAAA,IAAKjE,EAAMuD,EAAKH,EAAKnB,EAAIoB,EAAKG,EAAKtB,EAAIC,EAAKhC,GAC5CH,EAAKkE,OAET,CACF,CACF,CACF,MACED,EAAAA,EAAAA,IAAKlE,EAAM2B,EAAKC,EAAKM,EAAIJ,EAAKD,EAAKM,EAAIC,EAAKhC,GAC5CJ,EAAKmE,MAET,CACF,CAGA,MAAMC,EAAOrE,EAAMsE,gBAAgBC,WAAW,MAC9C,GAAKF,EAAL,CAGAA,EAAKpD,uBAAwB,EAC7BoD,EAAKG,UAAU,EAAG,EAAG7D,EAAOF,GAG5B,IAAK,IAAIgE,EAAI,EAAGA,EAAI/D,EAAcW,OAAQoD,IAAK,CAC7C,MAAMC,EAAUhE,EAAc+D,GACxB1F,EAAM0F,EAAI3E,EAAiB,EACjCuE,EAAK/C,UAAYxC,EAAUC,IAG3B4F,EAAAA,EAAAA,IAAgB,CACdC,GAAIC,IACFA,EAAIT,QAENM,UACAG,IAAKR,EACLhE,aACAG,QACAW,UACA1B,WACAqF,UAAW3E,EAAKQ,MAChBoE,UAAU,EACVtE,UAEJ,CAzBA,CA0BF,CAEO,SAASuE,EAAqBhF,GACnC,MAAM,MAAEQ,EAAK,QAAEyE,EAAO,YAAEC,GAAgBlF,EAElCG,GAAOC,EAAAA,EAAAA,mBAAkBJ,GACzBK,EAAaF,EAAKE,WAClBI,EAAST,EAAMS,OACfE,EAAQR,EAAKQ,MACbkE,EAAM7E,EAAMmF,iBAAiBZ,WAAW,MACxCpD,EAAUhB,EAAKU,MAAMC,IAAIC,GAAKA,EAAEK,UAEtC,IAAKyD,EACH,OAEFA,EAAIO,iBACJP,EAAIQ,MAZ0B,KAa9BR,EAAIL,UAAU,EAAG,EAAG7D,EAAOF,GAC3BoE,EAAItD,YAAc,qBAClBsD,EAAIvD,UAAY,qBAChB,MAAMgE,EAAWtF,EAAMuF,QAAQL,GAAe,IAC1CI,IACFX,EAAAA,EAAAA,IAAgB,CACdC,GAAIC,IACFA,EAAIT,QAENM,QAASY,EACT9E,QACAqE,MACApF,WACAqF,UAAW3E,EAAKQ,MAChBN,aACAc,UACAV,WAGJ,MAAM+E,EAAWxF,EAAMuF,QAAQN,GAAW,IACtCO,IACFb,EAAAA,EAAAA,IAAgB,CACdC,GAAIC,IACFA,EAAIpC,UAENiC,QAASc,EACTX,MACArE,QACAf,WACAqF,UAAW3E,EAAKQ,MAChBN,aACAc,UACAV,UAGN,C,kGC3PO,SAASkE,GAAgB,QAC9BD,EAAO,IACPG,EAAG,QACH1D,EAAO,MACPX,EAAK,GACLoE,EAAE,OACFnE,EAAM,WACNJ,EAAU,SACVZ,EAAQ,UACRqF,EAAS,SACTC,IAaA,MAAM,IAAEvD,EAAG,IAAEC,EAAG,IAAEC,EAAG,IAAEC,GAAQ+C,EAEzB9C,EAAMJ,EAAIJ,SAAWD,EAAQX,GAC7BqB,EAAMJ,EAAIL,SAAWD,EAAQX,GAC7BsB,EAAMJ,EAAIN,SAAWD,EAAQX,EAAQ,GACrCuB,EAAMJ,EAAIP,SAAWD,EAAQX,EAAQ,GAErCwB,EAAKhD,KAAKiD,IAAIJ,EAAMD,GACpBM,EAAKlD,KAAKiD,IAAIF,EAAMD,GAEpBM,EAAK3B,EACL4B,GAAOD,EAFF,GAEa,EAClBQ,EAAO5D,KAAK6D,IAAIf,EAAKC,GACrBe,EAAO9D,KAAK+D,IAAIjB,EAAKC,IAEtBiB,EAAAA,EAAAA,gBAAeJ,EAAME,GAAOrD,EAAUqF,EAAYrF,KAMnDuC,GAAM,GAAKE,GAAM,EAGd6C,IACHF,EAAI3D,YACJ2D,EAAIvC,OAAOV,EAjBJ,GAkBHvB,EACFwE,EAAItC,cAAcX,EAAKS,EAAKP,EAAKO,EAAKP,EAAKM,GAE3CyC,EAAIrC,OAAOV,EAAKM,GAElByC,EAAIpC,WAGN0B,EAAKU,EAAKjD,EAAKC,EA1BN,EA0BeE,EAAKD,EAAKM,EAAIC,EAAKhC,GAC3CuE,EAAGC,IAEP,CAEO,SAASV,EACdU,EACAY,EACAC,EACAvD,EACAwD,EACAC,EACAxD,EACAC,EACAhC,GAEIA,EAwBC,SACLwE,EACAY,EACAC,EACAvD,EACAwD,EACAC,EACAxD,EACAC,GAEA,MAAMwD,EAAO7G,KAAKiD,IAAIwD,EAAKC,GACrBI,EAAO9G,KAAKiD,IAAIwD,EAAKC,GAK3B,GAAIG,EAAO,GAAKC,EAAO,GAAKJ,EAAKD,GAAMzG,KAAKiD,IAAIwD,EAAKE,GAAM,IAAK,CAC9D,MAAMI,EAAMN,EACZA,EAAKC,EACLA,EAAKK,CACP,CACAlB,EAAI3D,YACJ2D,EAAIvC,OAAOmD,EAAItD,GACf0C,EAAIrC,OAAOkD,EAAIvD,GACf0C,EAAItC,cAAcmD,EAAIrD,EAAKsD,EAAItD,EAAKsD,EAAIvD,GACxCyC,EAAIrC,OAAOoD,EAAIxD,GACfyC,EAAItC,cAAcqD,EAAIvD,EAAKoD,EAAIpD,EAAKoD,EAAItD,GACxC0C,EAAImB,WACN,CAnDIC,CAAcpB,EAAKY,EAAIC,EAAIvD,EAAIwD,EAAIC,EAAIxD,EAAIC,GAMxC,SACLwC,EACAY,EACAC,EACAvD,EACAwD,EACAC,EACAxD,GAEAyC,EAAI3D,YACJ2D,EAAIvC,OAAOmD,EAAItD,GACf0C,EAAIrC,OAAOkD,EAAIvD,GACf0C,EAAIrC,OAAOmD,EAAIvD,GACfyC,EAAIrC,OAAOoD,EAAIxD,GACfyC,EAAImB,WACN,CAnBIE,CAAQrB,EAAKY,EAAIC,EAAIvD,EAAIwD,EAAIC,EAAIxD,EAErC,CAiDO,SAAS+D,EACdC,EACApG,GAEA,MAAMG,GAAOC,EAAAA,EAAAA,mBAAkBJ,GACzBqG,GAAQC,EAAAA,EAAAA,oBAAmBtG,IAC3B,cACJU,EAAa,SACb6F,EACAjC,eAAgBkC,EAChBC,oBAAqBC,EAAI,MACzBlG,GACER,EACJ,IAAKwG,IAASE,EACZ,OAEF,MAAMC,EAAOH,EAAKI,wBACZ3G,EAAOuG,EAAKjC,WAAW,MACvBF,EAAOqC,EAAKnC,WAAW,MAC7B,IAAKtE,IAASoE,EACZ,OAEF,MAAMwC,EAAIT,EAAMU,QAAUH,EAAKI,KACzBC,EAAIZ,EAAMa,QAAUN,EAAKO,KACxBC,EAAIC,EAAIC,GAAMpH,EAAKqH,aAAaT,EAAGG,EAAG,EAAG,GAAGO,KAC7CzH,EAAiBd,KAAKC,MAAMJ,EAAAA,GAAkB0H,GAE9CiB,EAAO9G,GADFhB,EAAAA,EAAAA,IAAMyH,EAAKC,EAAKC,EAAKvH,IAEhC,GAAI0H,EAAM,CACR,MAAM,EAAE9E,GAAM8E,EACdxH,EAAMyH,WAAW/E,EAAEgF,MACnB,MAAMC,GAAUC,EAAAA,EAAAA,YAAW5H,IACvB6H,EAAAA,EAAAA,2BAA0BF,IAC5BA,EAAQG,WACNH,EAAQI,UAAU,uBAAwB,iBAAkB,CAC1D5H,OACAkG,QACA2B,YAAatF,EAAEuF,SACfzH,UAIR,CACA,OAAOgH,CACT,CAEO,SAASU,EACd9B,EACApG,EACAmI,GAEA/B,EAAMgC,iBACN,MAAM5B,EAAOxG,EAAMsE,eACboC,EAAO1G,EAAMyG,oBACnB,IAAKD,IAASE,EACZ,OAEF,MAAMC,EAAOH,EAAKI,wBACZ3G,EAAOuG,EAAKjC,WAAW,MACvBF,EAAOqC,EAAKnC,WAAW,MAC7B,IAAKtE,IAASoE,EACZ,OAEF,MAAM,QAAEyC,EAAO,QAAEG,GAAYb,EACvBS,EAAIC,EAAUH,EAAKI,KACnBC,EAAIC,EAAUN,EAAKO,KAClBC,EAAIC,EAAIC,GAAMpH,EAAKqH,aAAaT,EAAGG,EAAG,EAAG,GAAGO,KAC7CzH,EAAiBd,KAAKC,MAAMJ,EAAAA,GAAkBmB,EAAMuG,UACpDmB,GAAKhI,EAAAA,EAAAA,IAAMyH,EAAKC,EAAKC,EAAKvH,GAC1B4C,EAAI1C,EAAMU,cAAcgH,GAC1BhF,IACF1C,EAAMyH,WAAW/E,EAAEA,EAAEgF,MACrBS,EAAY,CAAErB,UAASG,UAASvC,QAAShC,IAE7C,CAEO,SAAS2F,GAAW,QACzB3D,EAAO,QACP4D,EAAO,WACPC,IAOA,MAAMC,EAAK9D,EAAQuD,SAebQ,EAAKD,EAAGE,KACR1G,EAAKwG,EAAGG,IAAMH,EAAGI,MACjB1G,EAAKuG,EAAGE,IAAMF,EAAGG,MACjBC,EAAWL,EAAGK,SACdC,EAAKN,EAAGO,KACRC,EAAKP,EAAGM,KACd,MAAO,CACL,UAASE,EAAAA,EAAAA,mBAAkBT,KAC3B,UAASS,EAAAA,EAAAA,mBAAkBR,KAC3B,cAA4B,IAAfD,EAAGU,SAChB,cAAclH,EAAGmH,eAAe,WAChC,eAAejH,EAAGiH,eAAe,WACjCN,EAAW,aAAaA,EAASO,YAAY,KAAO,GACpDd,EAAU,mBAAmBA,IAAUC,IAAe,GACtDO,EAAK,WAAWA,IAAO,GACvBE,EAAK,WAAWA,IAAO,IAEtBK,OAAO3G,KAAOA,GACd4G,KAAK,QACV,C,gGCzRA,MAAMC,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7BC,WAAY,CACVC,WAAY,UACZC,QAAS,GACTC,MAAO,SAII,SAAAC,EAAAC,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,IAAoB,MAAAC,GAAAH,GAC3B,QAANI,GAAoBX,IACwBY,EAAA,GAAGF,IAAO,IAAAG,EAAO,OAAPL,EAAA,KAAAG,EAAAT,YAAAM,EAAA,KAAAI,GAA/CC,GAAAC,EAAAA,EAAAA,KAAA,OAAgBC,UAAAJ,EAAOT,WAAWc,SAAGJ,IAAiBJ,EAAA,GAAAG,EAAAT,WAAAM,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,GAAAA,EAAAL,EAAA,GAAtDK,CAAsD,CCV/D,MAAMb,GAAYC,EAAAA,EAAAA,KAAAA,CAAagB,IAC7B,MAAMC,EAAKD,EAAME,QAAQC,OAAOC,mBAChC,MAAO,CACLC,QAAS,CACPC,YAAa,QACbC,gBAAiBP,EAAME,QAAQhB,WAAWsB,QAC1CC,gBAAiB,kEAAkER,UAAWA,UAC9FS,UAAW,UAEbC,aAAc,CACZzB,WAAY,UACZC,QAAS,OAKA,SAAAyB,EAAAtB,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,IAAsB,YAAAqB,GAAAvB,GAC7B,QAANI,GAAoBX,IAAW,IAAAY,EACiC,OADjCJ,EAAA,KAAAG,EAAAiB,cAAApB,EAAA,KAAAsB,GACxBlB,GAAAE,EAAAA,EAAAA,KAAA,OAAgBC,UAAAJ,EAAOiB,aAAaZ,SAAGc,IAAkBtB,EAAA,GAAAG,EAAAiB,aAAApB,EAAA,GAAAsB,EAAAtB,EAAA,GAAAI,GAAAA,EAAAJ,EAAA,GAAzDI,CAAyD,C,0DCPnD,SAAAmB,EAAAxB,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,KAA4B,MAAAhK,EAAA,QAAAuL,EAAA,SAAAC,GAAA1B,EAQ1C,IAAAK,EAAAJ,EAAA,KAAA/J,GACcmK,GAAA/J,EAAAA,EAAAA,mBAAkBJ,GAAM+J,EAAA,GAAA/J,EAAA+J,EAAA,GAAAI,GAAAA,EAAAJ,EAAA,GAArC,MAAA5J,EAAagK,GACP,QAANrD,EAAA,QAAAG,EAAA,QAAAvC,GAAsC8G,EAAQ,IAAApB,EAMzCqB,EANyC1B,EAAA,KAAAwB,GAGzBnB,EAAAA,CAAAhE,EAAAsF,KACfA,EAAStF,GACTmF,KACDxB,EAAA,GAAAwB,EAAAxB,EAAA,GAAAK,GAAAA,EAAAL,EAAA,GAAAA,EAAA,KAAAjD,GAAAiD,EAAA,KAAA9C,GACSwE,EAAA,CAAAE,SAAA,EAAA/E,sBAAAA,KAIW,CAAAM,IAAPD,EAEFF,KAHED,EAID8E,OAHC3E,EAIC4E,MALD/E,EAMAnG,MAAA,EAAAF,OAAA,EAAAoG,EANAC,EAMAE,EALAC,EAKAgB,MAAAA,GAAA,KAQb8B,EAAA,GAAAjD,EAAAiD,EAAA,GAAA9C,EAAA8C,EAAA,GAAA0B,GAAAA,EAAA1B,EAAA,GAEK,MAAA+B,EAAAC,QAAQP,GAAS,IAAAQ,EA8BtBC,EACD,OA/BuBlC,EAAA,KAAArF,GAAAqF,EAAA,KAAA/J,GAAA+J,EAAA,KAAA5J,GACZ6L,EAAA,EAAAE,MAEA,oBAAmBC,QAAAA,KAExB,MAAM,EAANzJ,GAAcgC,EACdkE,EAAclG,EAACQ,IAAK,SACpByF,EAAYjG,EAACQ,IAAK,OAClBkJ,EAAgB1J,EAACQ,IAAK,WACtBwF,EAAahG,EAACQ,IAAK,QAEnBlB,EAAW7B,EAAIU,MAAOb,EAAKQ,OAC3B0B,EAAW/B,EAAIU,MAAOb,EAAKQ,MAAA,GAC3BwB,EAAEqK,eAAgB,GAAGD,KAAWxD,KAASD,KAAM2D,MAAAC,IAE3C,MAAAC,EAAY,GAAGxK,EAAEyK,cAAA,MAAqBF,IACtCG,QAAAzC,MAAcuC,IACd5E,EAAAA,EAAAA,YAAW5H,GAAM2M,YAAaH,EAAKD,KAIvCrK,EAAEmK,eACA,GAAG3D,EAAI0D,WAAY1D,EAAIE,SAAUF,EAAIC,OACtC2D,MAAAM,IACC,MAAAC,EAAY,GAAG3K,EAAEuK,cAAA,MAAqBF,IACtCG,QAAAzC,MAAcuC,IACd5E,EAAAA,EAAAA,YAAW5H,GAAM2M,YAAaH,EAAKD,QAI1CxC,EAAA,GAAArF,EAAAqF,EAAA,GAAA/J,EAAA+J,EAAA,GAAA5J,EAAA4J,EAAA,IAAAiC,GAAAA,EAAAjC,EAAA,IAAAA,EAAA,MAAAwB,GAAAxB,EAAA,MAAAK,GAAAL,EAAA,MAAA0B,GAAA1B,EAAA,MAAA+B,GAAA/B,EAAA,MAAAiC,GAtDHC,GAAA5B,EAAAA,EAAAA,KAACyC,EAAAA,KAAI,CACcC,gBAAA3C,EAIPoB,SAAAC,EAkBDF,QAAAA,EACHyB,KAAAlB,EACKmB,UAAAjB,IA8BXjC,EAAA,IAAAwB,EAAAxB,EAAA,IAAAK,EAAAL,EAAA,IAAA0B,EAAA1B,EAAA,IAAA+B,EAAA/B,EAAA,IAAAiC,EAAAjC,EAAA,IAAAkC,GAAAA,EAAAlC,EAAA,IAvDFkC,CAuDE,C,eCjEN,MAAMiB,GAAiBC,EAAAA,EAAAA,MAAK,IAAM,iCAI5B5D,GAAYC,EAAAA,EAAAA,KAAAA,CAAa,CAC7B4D,IAAK,CACHC,eAAgB,YAChBC,cAAe,OACfC,WAAY,SACZC,SAAU,YAEZC,IAAK,CACHD,SAAU,YAEZrI,gBAAiB,CACfqI,SAAU,WACVE,YAAa,QAEfC,WAAY,CACVH,SAAU,cAyOd,GArO+BI,EAAAA,EAAAA,UAAS,UAAU,MAChD5N,IAIA,MAAM,QAAEkK,GAAYX,KACd,YAAErE,EAAW,OAAEzE,GAAWT,EAC1B6N,GAAUC,EAAAA,EAAAA,QAAO,GACjB3N,GAAOC,EAAAA,EAAAA,mBAAkBJ,GACzBW,EAAQR,EAAKQ,MACboN,GAAQD,EAAAA,EAAAA,QAAO,GACfE,GAAYF,EAAAA,EAAAA,SAAO,GACnBG,GAAUH,EAAAA,EAAAA,QAAc,OACvBtC,EAAUrD,IAAe+F,EAAAA,EAAAA,aACzBC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,aACnBK,EAAgBC,IAAqBN,EAAAA,EAAAA,aACrCO,EAAmBC,IAAwBR,EAAAA,EAAAA,aAC3CS,EAAOC,IAAYV,EAAAA,EAAAA,YACpBW,GAAwBf,EAAAA,EAAAA,QAA0B,MAKlDgB,GAA8BC,EAAAA,EAAAA,aACjCC,IACChP,EAAMiP,sBAAsBD,IAG9B,CAAChP,EAAOS,EAAQE,IAIZuO,GAAuBH,EAAAA,EAAAA,aAC1BC,IACChP,EAAMmP,iBAAiBH,GACvBH,EAAsBO,QAAUJ,GAGlC,CAAChP,EAAOS,EAAQE,KAGlB0O,EAAAA,EAAAA,WAAU,KACR,SAASC,EAAQlJ,GAEf,GADAA,EAAMgC,iBACFhC,EAAMmJ,QAAS,CACjBxB,EAAMqB,SAAWhJ,EAAMoJ,OAAS,IAChC,IAAK,MAAMzO,KAAKZ,EAAKU,MACnBE,EAAE0O,eACA1B,EAAMqB,QAAU,EAAI,EAAIrB,EAAMqB,QAAU,GAAK,EAAIrB,EAAMqB,UAGvDnB,EAAQmB,SACVM,aAAazB,EAAQmB,SAEvBnB,EAAQmB,QAAUO,WAAW,KAC3B,IAAK,MAAM5O,KAAKZ,EAAKU,MACnBE,EAAE0O,eAAe,GACjB1O,EAAE6O,OACA7B,EAAMqB,QAAU,EACZrO,EAAEC,SAAW,EAAI+M,EAAMqB,SACvBrO,EAAEC,SAAW,EAAI+M,EAAMqB,SAC3BhJ,EAAMU,SACH+H,EAAsBO,SAASxI,wBAAwBG,MACtD,IAGRgH,EAAMqB,QAAU,GACf,IACL,MACMpQ,KAAKiD,IAAImE,EAAMoJ,QAAUxQ,KAAKiD,IAAImE,EAAMyJ,UAC1ChC,EAAQuB,SAAWhJ,EAAMyJ,OAAS,GAE/B7B,EAAUoB,UACbpB,EAAUoB,SAAU,EACpBU,OAAOC,sBAAsB,MAC3BC,EAAAA,EAAAA,aAAY,KACV,IAAK,MAAMjP,KAAKZ,EAAKU,MACnBE,EAAEkP,iBAAiBpC,EAAQuB,SAE7BvB,EAAQuB,QAAU,EAClBpB,EAAUoB,SAAU,MAK9B,CAEA,OADAP,EAAsBO,SAASc,iBAAiB,QAASZ,GAClD,KACLT,EAAsBO,SAASe,oBAAoB,QAASb,KAG7D,CAACtP,EAAOS,EAAQE,IAGnB,MAAMyP,GAAoBrB,EAAAA,EAAAA,aACvBC,IACChP,EAAMqQ,qBAAqBrB,IAG7B,CAAChP,EAAOS,EAAQE,IAGZ2P,GAAyBvB,EAAAA,EAAAA,aAC5BC,IACChP,EAAMuQ,0BAA0BvB,IAGlC,CAAChP,EAAOS,EAAQE,IAGlB,OACE6P,EAAAA,EAAAA,MAAA,OAAKlG,UAAWJ,EAAQuD,IAAIlD,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,UACE2E,IAAKF,EACLnO,MAAOA,EACPF,OAAQA,EACR6J,UAAWJ,EAAQ/E,mBAErBkF,EAAAA,EAAAA,KAAA,UACE2E,IAAKE,EACLuB,YAAarK,IACX,QAAuBsK,IAAnBnC,EACFV,EAAQuB,SAAWb,EAAiBnI,EAAMU,QAC1C0H,EAAkBpI,EAAMU,SACnBkH,EAAUoB,UACbpB,EAAUoB,SAAU,EACpBU,OAAOC,sBAAsB,MAC3BC,EAAAA,EAAAA,aAAY,KACV,IAAK,MAAMjP,KAAKZ,EAAKU,MACnBE,EAAEkP,iBAAiBpC,EAAQuB,SAE7BvB,EAAQuB,QAAU,EAClBpB,EAAUoB,SAAU,WAIrB,CACL,MAAM5I,EAAOxG,EAAMsE,eACboC,EAAO1G,EAAMyG,oBACnB,IAAKD,IAASE,EACZ,OAEF,MAAMC,EAAOH,EAAKI,wBACZ3G,EAAOuG,EAAKjC,WAAW,MACvBF,EAAOqC,EAAKnC,WAAW,MAC7B,IAAKtE,IAASoE,EACZ,OAEF,MAAM,QAAEyC,EAAO,QAAEG,GAAYb,EACvBS,EAAIC,EAAUH,EAAKI,KACnBC,EAAIC,EAAUN,EAAKO,IACzBoH,EAASxH,GACT8H,EAAS3H,GACT,MAAOE,EAAIC,EAAIC,GAAMpH,EAAKqH,aAAaT,EAAGG,EAAG,EAAG,GAAGO,MAC5CoJ,EAAIC,EAAIC,GAAMxM,EAAKiD,aAAaT,EAAGG,EAAG,EAAG,GAAGO,KAC7CzH,EAAiBd,KAAKC,MAAMJ,EAAAA,GAAkBmB,EAAMuG,UACpDmB,GAAKhI,EAAAA,EAAAA,IAAMyH,EAAKC,EAAKC,EAAKvH,GAEhC,GADAE,EAAM8Q,eAAe9Q,EAAMU,cAAcgH,IAAKhF,EAAEgF,OACpC,IAARA,EACF0G,EAAW,SACN,GAAIpO,EAAMU,cAAcgH,GAAK,CAClC,MAAM,EAAEhF,EAAC,MAAEC,GAAU3C,EAAMU,cAAcgH,GACnC/D,EAAkB3E,KAAKC,MAAMJ,EAAAA,GAAkB8D,EAAMtB,QACrD0P,GAAWrR,EAAAA,EAAAA,IAAMiR,EAAKC,EAAKC,EAAKlN,GACtCyK,GACE/F,EAAAA,EAAAA,IAAW,CACT3D,QAAShC,EACT4F,QAAS3F,EAAMoO,GACfxI,WAAY5F,EAAMoO,EAAW,KAGnC,CACF,GAEFC,aAAcA,KACZhR,EAAM8Q,oBAAeJ,GACrBhC,OAAqBgC,GACrBlC,OAAkBkC,IAEpBO,YAAaC,IACX1C,EAAkB0C,EAAIpK,SACtB4H,EAAqBwC,EAAIpK,UAE3BqK,UAAWD,IACT1C,OAAkBkC,QAEMA,IAAtBjC,GACAzP,KAAKiD,IAAIiP,EAAIpK,QAAU2H,GAAqB,IAE5CtI,EAAAA,EAAAA,IAAW+K,EAAKlR,IAGpBoR,cAAeF,KACbhJ,EAAAA,EAAAA,IAAkBgJ,EAAKlR,EAAOmI,IAEhC,cAAY,iBACZmC,UAAWJ,EAAQyD,WACnBhN,MAAOA,EACPF,OAAQA,KAEV4J,EAAAA,EAAAA,KAAA,UACE2E,IAAKoB,EACL9F,UAAWJ,EAAQkD,IACnBzM,MAAOA,EACPF,OAAQA,KAEV4J,EAAAA,EAAAA,KAAA,UACE2E,IAAKsB,EACLhG,UAAWJ,EAAQkD,IACnBzM,MAAOA,EACPF,OAAQA,IAETyE,GAAeiJ,GAAWE,GAASM,GAClCtE,EAAAA,EAAAA,KAAC6C,EAAc,CAACmE,MAAOlD,IACrB,KACH3C,GACCnB,EAAAA,EAAAA,KAACiB,EAAkB,CACjBtL,MAAOA,EACPwL,SAAUA,EACVD,QAASA,KACPpD,OAAYuI,MAGd,OAGV,GCtQMnH,GAAYC,EAAAA,EAAAA,KAAAA,CAAagB,IAC7B,MAAMC,EAAKD,EAAME,QAAQC,OAAOC,mBAChC,MAAO,CACLC,QAAS,CACPC,YAAa,QACbC,gBAAiBP,EAAME,QAAQhB,WAAWsB,QAC1CC,gBAAiB,kEAAkER,UAAWA,UAC9FS,UAAW,aAKF,SAAAoG,EAAAxH,GAAA,MAAAC,GAAAC,EAAAA,EAAAA,GAAA,IAAwB,QAAAuH,GAAAzH,GAC/B,QAANI,GAAoBX,IAAW,IAAAY,EAIUC,EACjC,OALuBL,EAAA,KAAAwH,GAI3BpH,GAAAE,EAAAA,EAAAA,KAACmH,EAAAA,gBAAe,CAAUD,QAAAA,IAAWxH,EAAA,GAAAwH,EAAAxH,EAAA,GAAAI,GAAAA,EAAAJ,EAAA,GAAAA,EAAA,KAAAG,EAAAW,SAAAd,EAAA,KAAAI,GADvCC,GAAAC,EAAAA,EAAAA,KAAA,OAAgBC,UAAAJ,EAAOW,QAAQN,SAC7BJ,IACIJ,EAAA,GAAAG,EAAAW,QAAAd,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,GAAAA,EAAAL,EAAA,GAFNK,CAEM,CCZV,MAgBA,GAhBuCwD,EAAAA,EAAAA,UAAS,UAAU,MACxD5N,IAIA,OAAIA,EAAMiK,OACDI,EAAAA,EAAAA,KAACR,EAAU,CAACI,MAAOjK,EAAMiK,QACvBjK,EAAMuR,SACRlH,EAAAA,EAAAA,KAACe,EAAY,CAACC,YAAarL,EAAMuR,UAC9BvR,EAAMyR,UAGTpH,EAAAA,EAAAA,KAACqH,EAAsB,CAAC1R,MAAOA,KAF/BqK,EAAAA,EAAAA,KAACiH,EAAc,CAACC,QAASvR,EAAM2R,eAI1C,E","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/BlockError.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/BlockMessage.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/SyntenyContextMenu.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/LinearSyntenyRendering.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/LoadingMessage.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/Component.tsx"],"sourcesContent":["import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\n\nimport { draw, drawMatchSimple } from './components/util'\n\nimport type { LinearSyntenyDisplayModel } from './model'\nimport type { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const drawCIGARMatchesOnly = view.drawCIGARMatchesOnly\n  const { level, height, featPositions } = model\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const offsets = view.views.map(v => v.offsetPx)\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPositions.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]!\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[level]!\n          const d2 = len / bpPerPxs[level + 1]!\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          }\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              const letter = (continuingFlag && d1 > 1) || d2 > 1 ? op : 'M'\n              ctx1.fillStyle = colorMap[letter]\n              continuingFlag = false\n\n              if (drawCIGARMatchesOnly) {\n                if (letter === 'M') {\n                  draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n                  ctx1.fill()\n                }\n              } else {\n                draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n                ctx1.fill()\n              }\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n                ctx3.fill()\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n        ctx1.fill()\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n\n  // eslint-disable-next-line unicorn/no-for-loop\n  for (let i = 0; i < featPositions.length; i++) {\n    const feature = featPositions[i]!\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      level,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { level, clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = model.height\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  ctx.strokeStyle = 'rgba(0, 0, 0, 0.9)'\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature: feature1,\n      level,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.stroke()\n      },\n      feature: feature2,\n      ctx,\n      level,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n","import type React from 'react'\n\nimport {\n  assembleLocString,\n  doesIntersect2,\n  getContainingTrack,\n  getContainingView,\n  getSession,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\n\nimport { MAX_COLOR_RANGE, getId } from '../drawSynteny'\n\nimport type { LinearSyntenyDisplayModel } from '../model'\nimport type { Feature } from '@jbrowse/core/util'\n\ninterface Pos {\n  offsetPx: number\n}\n\nexport interface ClickCoord {\n  clientX: number\n  clientY: number\n  feature: { f: Feature }\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  level,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  level: number\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[level]!\n  const x12 = p12.offsetPx - offsets[level]!\n  const x21 = p21.offsetPx - offsets[level + 1]!\n  const x22 = p22.offsetPx - offsets[level + 1]!\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n}\n\nexport function onSynClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n) {\n  const view = getContainingView(model)\n  const track = getContainingTrack(model)\n  const {\n    featPositions,\n    numFeats,\n    clickMapCanvas: ref1,\n    cigarClickMapCanvas: ref2,\n    level,\n  } = model\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const x = event.clientX - rect.left\n  const y = event.clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const feat = featPositions[id]\n  if (feat) {\n    const { f } = feat\n    model.setClickId(f.id())\n    const session = getSession(model)\n    if (isSessionModelWithWidgets(session)) {\n      session.showWidget(\n        session.addWidget('SyntenyFeatureWidget', 'syntenyFeature', {\n          view,\n          track,\n          featureData: f.toJSON(),\n          level,\n        }),\n      )\n    }\n  }\n  return feat\n}\n\nexport function onSynContextClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n  setAnchorEl: (arg: ClickCoord) => void,\n) {\n  event.preventDefault()\n  const ref1 = model.clickMapCanvas\n  const ref2 = model.cigarClickMapCanvas\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const { clientX, clientY } = event\n  const x = clientX - rect.left\n  const y = clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const f = model.featPositions[id]\n  if (f) {\n    model.setClickId(f.f.id())\n    setAnchorEl({ clientX, clientY, feature: f })\n  }\n}\n\nexport function getTooltip({\n  feature,\n  cigarOp,\n  cigarOpLen,\n}: {\n  feature: Feature\n  cigarOp?: string\n  cigarOpLen?: string\n}) {\n  // @ts-expect-error\n  const f1 = feature.toJSON() as {\n    refName: string\n    start: number\n    end: number\n    strand?: number\n    assemblyName: string\n    identity?: number\n    name?: string\n    mate: {\n      start: number\n      end: number\n      refName: string\n      name: string\n    }\n  }\n  const f2 = f1.mate\n  const l1 = f1.end - f1.start\n  const l2 = f2.end - f2.start\n  const identity = f1.identity\n  const n1 = f1.name\n  const n2 = f2.name\n  return [\n    `Loc1: ${assembleLocString(f1)}`,\n    `Loc2: ${assembleLocString(f2)}`,\n    `Inverted: ${f1.strand === -1}`,\n    `Query len: ${l1.toLocaleString('en-US')}`,\n    `Target len: ${l2.toLocaleString('en-US')}`,\n    identity ? `Identity: ${identity.toPrecision(2)}` : '',\n    cigarOp ? `CIGAR operator: ${cigarOp}${cigarOpLen}` : '',\n    n1 ? `Name 1: ${n1}` : '',\n    n2 ? `Name 2: ${n2}` : '',\n  ]\n    .filter(f => !!f)\n    .join('<br/>')\n}\n","import { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  blockError: {\n    background: '#f1f1f1',\n    padding: 10,\n    color: 'red',\n  },\n})\n\nexport default function BlockError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockError}>{`${error}`}</div>\n}\n","import { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n    blockMessage: {\n      background: '#f1f1f1',\n      padding: 10,\n    },\n  }\n})\n\nexport default function BlockMessage({ messageText }: { messageText: string }) {\n  const { classes } = useStyles()\n  return <div className={classes.blockMessage}>{messageText}</div>\n}\n","import { Menu } from '@jbrowse/core/ui'\nimport { getContainingView, getSession } from '@jbrowse/core/util'\n\nimport type { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport type { LinearSyntenyDisplayModel } from '../model'\nimport type { Feature } from '@jbrowse/core/util'\n\ninterface ClickCoord {\n  clientX: number\n  clientY: number\n  feature: { f: Feature }\n}\n\nexport default function SyntenyContextMenu({\n  model,\n  onClose,\n  anchorEl,\n}: {\n  onClose: () => void\n  model: LinearSyntenyDisplayModel\n  anchorEl: ClickCoord\n}) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const { clientX, clientY, feature } = anchorEl\n  return (\n    <Menu\n      onMenuItemClick={(event, callback) => {\n        callback(event)\n        onClose()\n      }}\n      anchorEl={{\n        nodeType: 1,\n        getBoundingClientRect: () => {\n          const x = clientX\n          const y = clientY\n          return {\n            top: y,\n            left: x,\n            bottom: y,\n            right: x,\n            width: 0,\n            height: 0,\n            x,\n            y,\n            toJSON() {},\n          }\n        },\n      }}\n      onClose={onClose}\n      open={Boolean(anchorEl)}\n      menuItems={[\n        {\n          label: 'Center on feature',\n          onClick: () => {\n            const { f } = feature\n            const start = f.get('start')\n            const end = f.get('end')\n            const refName = f.get('refName')\n            const mate = f.get('mate')\n\n            const l1 = view.views[model.level]!\n            const l2 = view.views[model.level + 1]!\n            l1.navToLocString(`${refName}:${start}-${end}`).catch(\n              (e: unknown) => {\n                const err = `${l1.assemblyNames[0]}:${e}`\n                console.error(err)\n                getSession(model).notifyError(err, e)\n              },\n            )\n\n            l2.navToLocString(\n              `${mate.refName}:${mate.start}-${mate.end}`,\n            ).catch((e: unknown) => {\n              const err = `${l2.assemblyNames[0]}:${e}`\n              console.error(err)\n              getSession(model).notifyError(err, e)\n            })\n          },\n        },\n      ]}\n    />\n  )\n}\n","import { lazy, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { getContainingView } from '@jbrowse/core/util'\nimport { transaction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { MAX_COLOR_RANGE, getId } from '../drawSynteny'\nimport SyntenyContextMenu from './SyntenyContextMenu'\nimport { getTooltip, onSynClick, onSynContextClick } from './util'\n\nimport type { ClickCoord } from './util'\nimport type { LinearSyntenyViewModel } from '../../LinearSyntenyView/model'\nimport type { LinearSyntenyDisplayModel } from '../model'\n\nconst SyntenyTooltip = lazy(() => import('./SyntenyTooltip'))\n\ntype Timer = ReturnType<typeof setTimeout>\n\nconst useStyles = makeStyles()({\n  pix: {\n    imageRendering: 'pixelated',\n    pointerEvents: 'none',\n    visibility: 'hidden',\n    position: 'absolute',\n  },\n  rel: {\n    position: 'relative',\n  },\n  mouseoverCanvas: {\n    position: 'absolute',\n    pointEvents: 'none',\n  },\n  mainCanvas: {\n    position: 'absolute',\n  },\n})\n\nconst LinearSyntenyRendering = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  const { classes } = useStyles()\n  const { mouseoverId, height } = model\n  const xOffset = useRef(0)\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const width = view.width\n  const delta = useRef(0)\n  const scheduled = useRef(false)\n  const timeout = useRef<Timer>(null)\n  const [anchorEl, setAnchorEl] = useState<ClickCoord>()\n  const [tooltip, setTooltip] = useState('')\n  const [currX, setCurrX] = useState<number>()\n  const [mouseCurrDownX, setMouseCurrDownX] = useState<number>()\n  const [mouseInitialDownX, setMouseInitialDownX] = useState<number>()\n  const [currY, setCurrY] = useState<number>()\n  const mainSyntenyCanvasRefp = useRef<HTMLCanvasElement>(null)\n\n  // these useCallbacks avoid new refs from being created on any mouseover,\n  // etc.\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const mouseoverDetectionCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setMouseoverCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const mainSyntenyCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setMainCanvasRef(ref)\n      mainSyntenyCanvasRefp.current = ref // this ref is additionally used in useEffect below\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      event.preventDefault()\n      if (event.ctrlKey) {\n        delta.current += event.deltaY / 500\n        for (const v of view.views) {\n          v.setScaleFactor(\n            delta.current < 0 ? 1 - delta.current : 1 / (1 + delta.current),\n          )\n        }\n        if (timeout.current) {\n          clearTimeout(timeout.current)\n        }\n        timeout.current = setTimeout(() => {\n          for (const v of view.views) {\n            v.setScaleFactor(1)\n            v.zoomTo(\n              delta.current > 0\n                ? v.bpPerPx * (1 + delta.current)\n                : v.bpPerPx / (1 - delta.current),\n              event.clientX -\n                (mainSyntenyCanvasRefp.current?.getBoundingClientRect().left ||\n                  0),\n            )\n          }\n          delta.current = 0\n        }, 300)\n      } else {\n        if (Math.abs(event.deltaY) < Math.abs(event.deltaX)) {\n          xOffset.current += event.deltaX / 2\n        }\n        if (!scheduled.current) {\n          scheduled.current = true\n          window.requestAnimationFrame(() => {\n            transaction(() => {\n              for (const v of view.views) {\n                v.horizontalScroll(xOffset.current)\n              }\n              xOffset.current = 0\n              scheduled.current = false\n            })\n          })\n        }\n      }\n    }\n    mainSyntenyCanvasRefp.current?.addEventListener('wheel', onWheel)\n    return () => {\n      mainSyntenyCanvasRefp.current?.removeEventListener('wheel', onWheel)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [model, height, width])\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const clickMapCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setClickMapCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  const cigarClickMapCanvasRef = useCallback(\n    (ref: HTMLCanvasElement | null) => {\n      model.setCigarClickMapCanvasRef(ref)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [model, height, width],\n  )\n\n  return (\n    <div className={classes.rel}>\n      <canvas\n        ref={mouseoverDetectionCanvasRef}\n        width={width}\n        height={height}\n        className={classes.mouseoverCanvas}\n      />\n      <canvas\n        ref={mainSyntenyCanvasRef}\n        onMouseMove={event => {\n          if (mouseCurrDownX !== undefined) {\n            xOffset.current += mouseCurrDownX - event.clientX\n            setMouseCurrDownX(event.clientX)\n            if (!scheduled.current) {\n              scheduled.current = true\n              window.requestAnimationFrame(() => {\n                transaction(() => {\n                  for (const v of view.views) {\n                    v.horizontalScroll(xOffset.current)\n                  }\n                  xOffset.current = 0\n                  scheduled.current = false\n                })\n              })\n            }\n          } else {\n            const ref1 = model.clickMapCanvas\n            const ref2 = model.cigarClickMapCanvas\n            if (!ref1 || !ref2) {\n              return\n            }\n            const rect = ref1.getBoundingClientRect()\n            const ctx1 = ref1.getContext('2d')\n            const ctx2 = ref2.getContext('2d')\n            if (!ctx1 || !ctx2) {\n              return\n            }\n            const { clientX, clientY } = event\n            const x = clientX - rect.left\n            const y = clientY - rect.top\n            setCurrX(clientX)\n            setCurrY(clientY)\n            const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n            const [r2, g2, b2] = ctx2.getImageData(x, y, 1, 1).data\n            const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n            const id = getId(r1!, g1!, b1!, unitMultiplier)\n            model.setMouseoverId(model.featPositions[id]?.f.id())\n            if (id === -1) {\n              setTooltip('')\n            } else if (model.featPositions[id]) {\n              const { f, cigar } = model.featPositions[id]\n              const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n              const cigarIdx = getId(r2!, g2!, b2!, unitMultiplier2)\n              setTooltip(\n                getTooltip({\n                  feature: f,\n                  cigarOp: cigar[cigarIdx],\n                  cigarOpLen: cigar[cigarIdx + 1],\n                }),\n              )\n            }\n          }\n        }}\n        onMouseLeave={() => {\n          model.setMouseoverId(undefined)\n          setMouseInitialDownX(undefined)\n          setMouseCurrDownX(undefined)\n        }}\n        onMouseDown={evt => {\n          setMouseCurrDownX(evt.clientX)\n          setMouseInitialDownX(evt.clientX)\n        }}\n        onMouseUp={evt => {\n          setMouseCurrDownX(undefined)\n          if (\n            mouseInitialDownX !== undefined &&\n            Math.abs(evt.clientX - mouseInitialDownX) < 5\n          ) {\n            onSynClick(evt, model)\n          }\n        }}\n        onContextMenu={evt => {\n          onSynContextClick(evt, model, setAnchorEl)\n        }}\n        data-testid=\"synteny_canvas\"\n        className={classes.mainCanvas}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={clickMapCanvasRef}\n        className={classes.pix}\n        width={width}\n        height={height}\n      />\n      <canvas\n        ref={cigarClickMapCanvasRef}\n        className={classes.pix}\n        width={width}\n        height={height}\n      />\n      {mouseoverId && tooltip && currX && currY ? (\n        <SyntenyTooltip title={tooltip} />\n      ) : null}\n      {anchorEl ? (\n        <SyntenyContextMenu\n          model={model}\n          anchorEl={anchorEl}\n          onClose={() => {\n            setAnchorEl(undefined)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n})\n\nexport default LinearSyntenyRendering\n","import { LoadingEllipses } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()(theme => {\n  const bg = theme.palette.action.disabledBackground\n  return {\n    loading: {\n      paddingLeft: '0.6em',\n      backgroundColor: theme.palette.background.default,\n      backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${bg} 5px, ${bg} 10px)`,\n      textAlign: 'center',\n    },\n  }\n})\n\nexport default function LoadingMessage({ message }: { message?: string }) {\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.loading}>\n      <LoadingEllipses message={message} />\n    </div>\n  )\n}\n","import { observer } from 'mobx-react'\n\nimport BlockError from './BlockError'\nimport BlockMessage from './BlockMessage'\nimport LinearSyntenyRendering from './LinearSyntenyRendering'\nimport LoadingMessage from './LoadingMessage'\n\nimport type { LinearSyntenyDisplayModel } from '../model'\n\nconst ServerSideRenderedBlockContent = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyDisplayModel\n}) {\n  if (model.error) {\n    return <BlockError error={model.error} />\n  } else if (model.message) {\n    return <BlockMessage messageText={model.message} />\n  } else if (!model.features) {\n    return <LoadingMessage message={model.loadingStatus} />\n  } else {\n    return <LinearSyntenyRendering model={model} />\n  }\n})\n\nexport default ServerSideRenderedBlockContent\n"],"names":["MAX_COLOR_RANGE","makeColor","idx","Math","floor","colorMap","I","N","D","X","M","lineLimit","oobLimit","getId","r","g","b","unitMultiplier","drawRef","model","ctx1","ctx3","view","getContainingView","drawCurves","drawCIGAR","drawCIGARMatchesOnly","level","height","featPositions","width","bpPerPxs","views","map","v","bpPerPx","imageSmoothingEnabled","beginPath","offsets","offsetPx","length","fillStyle","strokeStyle","p11","p12","p21","p22","x11","x12","x21","x22","l1","abs","l2","y1","y2","mid","moveTo","bezierCurveTo","lineTo","stroke","f","cigar","minX","min","maxX","max","doesIntersect2","s1","get","k1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","unitMultiplier2","j","len","op","d1","d2","isNotLast","letter","draw","fill","ctx2","clickMapCanvas","getContext","clearRect","i","feature","drawMatchSimple","cb","ctx","viewWidth","hideTiny","drawMouseoverSynteny","clickId","mouseoverId","mouseoverCanvas","resetTransform","scale","feature1","featMap","feature2","x1","x2","x3","x4","len1","len2","tmp","closePath","drawBezierBox","drawBox","onSynClick","event","track","getContainingTrack","numFeats","ref1","cigarClickMapCanvas","ref2","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","r1","g1","b1","getImageData","data","feat","setClickId","id","session","getSession","isSessionModelWithWidgets","showWidget","addWidget","featureData","toJSON","onSynContextClick","setAnchorEl","preventDefault","getTooltip","cigarOp","cigarOpLen","f1","f2","mate","end","start","identity","n1","name","n2","assembleLocString","strand","toLocaleString","toPrecision","filter","join","useStyles","makeStyles","blockError","background","padding","color","BlockError","t0","$","_c","error","classes","t1","t2","_jsx","className","children","theme","bg","palette","action","disabledBackground","loading","paddingLeft","backgroundColor","default","backgroundImage","textAlign","blockMessage","BlockMessage","messageText","SyntenyContextMenu","onClose","anchorEl","t3","callback","nodeType","bottom","right","t4","Boolean","t5","t6","label","onClick","refName","navToLocString","catch","e","err","assemblyNames","console","notifyError","e_0","err_0","Menu","onMenuItemClick","open","menuItems","SyntenyTooltip","lazy","pix","imageRendering","pointerEvents","visibility","position","rel","pointEvents","mainCanvas","observer","xOffset","useRef","delta","scheduled","timeout","useState","tooltip","setTooltip","currX","setCurrX","mouseCurrDownX","setMouseCurrDownX","mouseInitialDownX","setMouseInitialDownX","currY","setCurrY","mainSyntenyCanvasRefp","mouseoverDetectionCanvasRef","useCallback","ref","setMouseoverCanvasRef","mainSyntenyCanvasRef","setMainCanvasRef","current","useEffect","onWheel","ctrlKey","deltaY","setScaleFactor","clearTimeout","setTimeout","zoomTo","deltaX","window","requestAnimationFrame","transaction","horizontalScroll","addEventListener","removeEventListener","clickMapCanvasRef","setClickMapCanvasRef","cigarClickMapCanvasRef","setCigarClickMapCanvasRef","_jsxs","onMouseMove","undefined","r2","g2","b2","setMouseoverId","cigarIdx","onMouseLeave","onMouseDown","evt","onMouseUp","onContextMenu","title","LoadingMessage","message","LoadingEllipses","features","LinearSyntenyRendering","loadingStatus"],"sourceRoot":""}