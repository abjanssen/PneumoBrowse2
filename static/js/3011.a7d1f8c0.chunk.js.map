{"version":3,"file":"static/js/3011.a7d1f8c0.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Accordion/Accordion.js","../../../node_modules/@mui/material/Accordion/AccordionContext.js","../../../node_modules/@mui/material/Accordion/accordionClasses.js","../../../node_modules/@mui/material/Collapse/Collapse.js","../../../node_modules/@mui/material/Collapse/collapseClasses.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading',\n  overridesResolver: (props, styles) => styles.heading\n})({\n  all: 'unset'\n});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'heading', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTimeout from '@mui/utils/useTimeout';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { duration } from \"../styles/createTransitions.js\";\nimport { getTransitionProps } from \"../transitions/utils.js\";\nimport { useForkRef } from \"../utils/index.js\";\nimport { getCollapseUtilityClass } from \"./collapseClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\nconst CollapseRoot = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height'),\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      height: 'auto',\n      width: 0,\n      transition: theme.transitions.create('width')\n    }\n  }, {\n    props: {\n      state: 'entered'\n    },\n    style: {\n      height: 'auto',\n      overflow: 'visible'\n    }\n  }, {\n    props: {\n      state: 'entered',\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px',\n    style: {\n      visibility: 'hidden'\n    }\n  }]\n})));\nconst CollapseWrapper = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\nconst CollapseWrapperInner = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})({\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\n\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/material-ui/react-stepper/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n  const {\n    addEndListener,\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    orientation,\n    collapsedSize: collapsedSizeProp\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const timer = useTimeout();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n    node.style[size] = collapsedSize;\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.start(autoTransitionDuration.current || 0, next);\n    }\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, {\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout,\n    ...other,\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, {\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: {\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize,\n        ...style\n      },\n      ref: handleRef,\n      ...childProps,\n      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`\n      // that might have been forwarded from the Transition component.\n      ownerState: {\n        ...ownerState,\n        state\n      },\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        ownerState: {\n          ...ownerState,\n          state\n        },\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          ownerState: {\n            ...ownerState,\n            state\n          },\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nif (Collapse) {\n  Collapse.muiSupportAuto = true;\n}\nexport default Collapse;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCollapseUtilityClass(slot) {\n  return generateUtilityClass('MuiCollapse', slot);\n}\nconst collapseClasses = generateUtilityClasses('MuiCollapse', ['root', 'horizontal', 'vertical', 'entered', 'hidden', 'wrapper', 'wrapperInner']);\nexport default collapseClasses;"],"names":["AccordionRoot","name","slot","overridesResolver","props","styles","ownerState","region","root","square","rounded","disableGutters","gutters","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","expanded","marginTop","marginBottom","disabled","action","disabledBackground","variants","style","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","AccordionHeading","heading","all","inProps","ref","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slots","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","setExpandedState","controlled","default","state","handleChange","event","summary","toArray","contextValue","toggle","classes","useUtilityClasses","externalForwardedProps","AccordionHeadingSlot","accordionProps","elementType","TransitionSlot","transitionProps","A","Provider","value","in","timeout","id","role","getAccordionUtilityClass","CollapseRoot","orientation","entered","collapsedSize","hidden","overflow","width","visibility","CollapseWrapper","wrapper","CollapseWrapperInner","wrapperInner","Collapse","addEndListener","collapsedSizeProp","component","easing","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","standard","timer","wrapperRef","autoTransitionDuration","isHorizontal","size","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","getWrapperSize","handleEnter","isAppearing","handleEntering","wrapperSize","transitionDuration","transitionTimingFunction","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","next","start","childProps","as","muiSupportAuto","getCollapseUtilityClass"],"sourceRoot":""}