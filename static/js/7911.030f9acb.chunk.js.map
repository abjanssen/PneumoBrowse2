{"version":3,"file":"static/js/7911.030f9acb.chunk.js","mappings":"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","sources":["../../../node_modules/is-primitive/index.js","../../../node_modules/isobject/index.js","../../../node_modules/is-plain-object/index.js","../../../node_modules/get-value/index.js","../../../node_modules/set-value/index.js","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/util.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigParse.ts","../../../plugins/legacy-jbrowse/src/JBrowse1Connection/jb1ConfigLoad.ts"],"sourcesContent":["/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst { deleteProperty } = Reflect;\nconst isPrimitive = require('is-primitive');\nconst isPlainObject = require('is-plain-object');\n\nconst isObject = value => {\n  return (typeof value === 'object' && value !== null) || typeof value === 'function';\n};\n\nconst isUnsafeKey = key => {\n  return key === '__proto__' || key === 'constructor' || key === 'prototype';\n};\n\nconst validateKey = key => {\n  if (!isPrimitive(key)) {\n    throw new TypeError('Object keys must be strings or symbols');\n  }\n\n  if (isUnsafeKey(key)) {\n    throw new Error(`Cannot set unsafe key: \"${key}\"`);\n  }\n};\n\nconst toStringKey = input => {\n  return Array.isArray(input) ? input.flat().map(String).join(',') : input;\n};\n\nconst createMemoKey = (input, options) => {\n  if (typeof input !== 'string' || !options) return input;\n  let key = input + ';';\n  if (options.arrays !== undefined) key += `arrays=${options.arrays};`;\n  if (options.separator !== undefined) key += `separator=${options.separator};`;\n  if (options.split !== undefined) key += `split=${options.split};`;\n  if (options.merge !== undefined) key += `merge=${options.merge};`;\n  if (options.preservePaths !== undefined) key += `preservePaths=${options.preservePaths};`;\n  return key;\n};\n\nconst memoize = (input, options, fn) => {\n  const key = toStringKey(options ? createMemoKey(input, options) : input);\n  validateKey(key);\n\n  const value = setValue.cache.get(key) || fn();\n  setValue.cache.set(key, value);\n  return value;\n};\n\nconst splitString = (input, options = {}) => {\n  const sep = options.separator || '.';\n  const preserve = sep === '/' ? false : options.preservePaths;\n\n  if (typeof input === 'string' && preserve !== false && /\\//.test(input)) {\n    return [input];\n  }\n\n  const parts = [];\n  let part = '';\n\n  const push = part => {\n    let number;\n    if (part.trim() !== '' && Number.isInteger((number = Number(part)))) {\n      parts.push(number);\n    } else {\n      parts.push(part);\n    }\n  };\n\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n\n    if (value === '\\\\') {\n      part += input[++i];\n      continue;\n    }\n\n    if (value === sep) {\n      push(part);\n      part = '';\n      continue;\n    }\n\n    part += value;\n  }\n\n  if (part) {\n    push(part);\n  }\n\n  return parts;\n};\n\nconst split = (input, options) => {\n  if (options && typeof options.split === 'function') return options.split(input);\n  if (typeof input === 'symbol') return [input];\n  if (Array.isArray(input)) return input;\n  return memoize(input, options, () => splitString(input, options));\n};\n\nconst assignProp = (obj, prop, value, options) => {\n  validateKey(prop);\n\n  // Delete property when \"value\" is undefined\n  if (value === undefined) {\n    deleteProperty(obj, prop);\n\n  } else if (options && options.merge) {\n    const merge = options.merge === 'function' ? options.merge : Object.assign;\n\n    // Only merge plain objects\n    if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {\n      obj[prop] = merge(obj[prop], value);\n    } else {\n      obj[prop] = value;\n    }\n\n  } else {\n    obj[prop] = value;\n  }\n\n  return obj;\n};\n\nconst setValue = (target, path, value, options) => {\n  if (!path || !isObject(target)) return target;\n\n  const keys = split(path, options);\n  let obj = target;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const next = keys[i + 1];\n\n    validateKey(key);\n\n    if (next === undefined) {\n      assignProp(obj, key, value, options);\n      break;\n    }\n\n    if (typeof next === 'number' && !Array.isArray(obj[key])) {\n      obj = obj[key] = [];\n      continue;\n    }\n\n    if (!isObject(obj[key])) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  return target;\n};\n\nsetValue.split = split;\nsetValue.cache = new Map();\nsetValue.clear = () => {\n  setValue.cache = new Map();\n};\n\nmodule.exports = setValue;\n","import getValue from 'get-value'\n\nimport type { Source, Track } from './types'\n\nexport function isTrack(arg: any): arg is Track {\n  return arg?.label && typeof arg.label === 'string'\n}\n\nexport function isSource(arg: any): arg is Source {\n  return arg?.url && typeof arg.url === 'string'\n}\n\n/**\n * updates a with values from b, recursively\n */\n\ntype Obj = Record<string, any>\nexport function deepUpdate(a: Obj, b: Obj): Obj {\n  for (const prop of Object.keys(b)) {\n    if (\n      prop in a &&\n      typeof b[prop] === 'object' &&\n      typeof a[prop] === 'object'\n    ) {\n      deepUpdate(a[prop], b[prop])\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * replace variables in a template string with values\n *\n * @param template - String with variable names in curly brackets\n * e.g., `http://foo/{bar}?arg={baz.foo}`\n * @param fillWith - object with attribute-value mappings\n * e.g., `{ 'bar': 'someurl', 'baz': { 'foo': 42 } }`\n * @returns the template string with variables in fillWith replaced\n * e.g., 'htp://foo/someurl?arg=valueforbaz'\n */\nexport function fillTemplate(template: string, fillWith: Obj): string {\n  return template.replaceAll(/{([\\s\\w.]+)}/g, (match, varName) => {\n    varName = varName.replaceAll(/\\s+/g, '')\n    const fill = getValue(fillWith, varName)\n    if (fill !== undefined) {\n      return typeof fill === 'function' ? fill(varName) : fill\n    }\n    if (fillWith.callback) {\n      // @ts-expect-error\n      const v = fillWith.callback.call(this, varName)\n      if (v !== undefined) {\n        return v\n      }\n    }\n    return match\n  })\n}\n\n/**\n * Clones objects (including DOM nodes) and all children.\n * Warning: do not clone cyclic structures\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n * @param src - The object to clone\n */\n\nexport function structuredClone(src: any): any {\n  if (\n    !src ||\n    typeof src !== 'object' ||\n    Object.prototype.toString.call(src) === '[object Function]'\n  ) {\n    // null, undefined, any non-object, or function\n    return src // anything\n  }\n  if (src.nodeType && 'cloneNode' in src) {\n    // DOM Node\n    return src.cloneNode(true) // Node\n  }\n  if (src instanceof Date) {\n    // Date\n    return new Date(src) // Date\n  }\n  if (src instanceof RegExp) {\n    // RegExp\n    return new RegExp(src) // RegExp\n  }\n  let r: unknown[]\n  if (Array.isArray(src)) {\n    // array\n    r = []\n    for (let i = 0, l = src.length; i < l; ++i) {\n      if (i in src) {\n        r[i] = structuredClone(src[i])\n      }\n    }\n    // we don't clone functions for performance reasons\n    //    }else if(d.isFunction(src)){\n    //      // function\n    //      r = function(){ return src.apply(this, arguments); };\n  } else {\n    // generic objects\n    r = src.constructor ? new src.constructor() : {}\n  }\n  return mixin(r, src, a => structuredClone(a))\n}\n\n/**\n * Copies/adds all properties of source to dest; returns dest.\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n *\n * All properties, including functions (sometimes termed \"methods\"), excluding\n * any non-standard extensions found in Object.prototype, are copied/added to\n * dest. Copying/adding each particular property is delegated to copyFunc\n * (if any); copyFunc defaults to the Javascript assignment operator if not\n * provided. Notice that by default, mixin executes a so-called \"shallow copy\"\n * and aggregate types are copied/added by reference.\n * @param dest - The object to which to copy/add all properties contained in\n * source.\n * @param source - The object from which to draw all properties to copy into dest.\n * @param copyFunc - The process used to copy/add a property in source; defaults\n * to the Javascript assignment operator.\n * @returns dest, as modified\n */\nfunction mixin(\n  dest: Obj,\n  source: Obj,\n  copyFunc?: (arg: unknown) => unknown,\n): Obj {\n  const empty = {}\n  for (const name in source) {\n    // the (!(name in empty) || empty[name] !== s) condition avoids copying\n    // properties in \"source\" inherited from Object.prototype.\t For example,\n    // if dest has a custom toString() method, don't overwrite it with the\n    // toString() method that source inherited from Object.prototype\n    const s = source[name]\n    if (\n      !(name in dest) ||\n      // @ts-expect-error\n      (dest[name] !== s && (!(name in empty) || empty[name] !== s))\n    ) {\n      dest[name] = copyFunc ? copyFunc(s) : s\n    }\n  }\n\n  return dest // Object\n}\n","/* eslint no-cond-assign: [\"error\", \"except-parens\"] */\nimport { objectHash } from '@jbrowse/core/util'\nimport getValue from 'get-value'\nimport setValue from 'set-value'\n\nimport { isSource, isTrack } from './util'\n\nimport type { Config, Names, Source, Store, Track } from './types'\n\nexport function parseJB1Json(config: Config | string, url: string): Config {\n  if (typeof config === 'string') {\n    let parsedConf: Config\n    try {\n      parsedConf = JSON.parse(config)\n    } catch (error) {\n      throw new Error(`${error} when parsing configuration.`)\n    }\n    return regularizeConf(parsedConf, url)\n  }\n  return regularizeConf(config, url)\n}\n\nexport function parseJB1Conf(config: string, url: string): Config {\n  let parsedConf: Config\n  try {\n    parsedConf = parse(config, url)\n  } catch (error) {\n    throw new Error(`${error} when parsing configuration.`)\n  }\n  return regularizeConf(parsedConf, url)\n}\n\nfunction isAlwaysArray(varName: string): boolean {\n  if (varName === 'include') {\n    return true\n  }\n  return false\n}\n\nfunction parse(text: string, url: string): Config {\n  let section: string[] = []\n  let keyPath: string[] | undefined\n  let operation: string\n  let value: string | undefined\n  const data: Config = { tracks: {} }\n  let lineNumber: number\n\n  function recordVal(): void {\n    if (value !== undefined) {\n      let parsedValue:\n        | string\n        | number\n        | boolean\n        | string[]\n        | number[]\n        | boolean[]\n      try {\n        // parse json\n        const match = /^json:(.+)/i.exec(value)\n        if (match) {\n          parsedValue = JSON.parse(match[1]!)\n        }\n        // parse numbers if it looks numeric\n        else if (/^[+-]?[\\d.,]+([eE][-+]?\\d+)?$/.test(value)) {\n          parsedValue = Number.parseFloat(value.replaceAll(',', ''))\n        } else {\n          parsedValue = value\n        }\n\n        if (!keyPath) {\n          throw new Error(`Error parsing in section ${section.join(' - ')}`)\n        }\n        const path = [...section, ...keyPath].join('.')\n        if (operation === '+=') {\n          let existing = getValue(data, path)\n          if (existing) {\n            if (!Array.isArray(existing)) {\n              existing = [existing]\n            }\n          } else {\n            existing = []\n          }\n\n          existing.push(parsedValue)\n          parsedValue = existing\n        }\n        if (parsedValue === 'true') {\n          parsedValue = true\n        }\n        if (parsedValue === 'false') {\n          parsedValue = false\n        }\n        setValue(data, path, parsedValue)\n      } catch (e) {\n        throw new Error(\n          `syntax error${url ? ` in ${url}` : ''}${\n            lineNumber ? ` at line ${lineNumber - 1}` : ''\n          }`,\n        )\n      }\n    }\n  }\n\n  for (const [i, textLine] of text.split(/\\n|\\r\\n|\\r/).entries()) {\n    lineNumber = i + 1\n    const line = textLine.replace(/^\\s*#.+/, '')\n\n    // new section\n    let match: RegExpMatchArray | null\n    if ((match = /^\\s*\\[([^\\]]+)/.exec(line))) {\n      // new section\n      recordVal()\n      keyPath = undefined\n      value = undefined\n      section = match[1]!.trim().split(/\\s*\\.\\s*/)\n      if (section.length === 1 && section[0]!.toLowerCase() === 'general') {\n        section = []\n      }\n    }\n    // new value\n    else if (\n      (match = line.match(\n        value === undefined ? /^([^+=]+)(\\+?=)(.*)/ : /^(\\S[^+=]+)(\\+?=)(.*)/,\n      ))\n    ) {\n      recordVal()\n      keyPath = match[1]!.trim().split(/\\s*\\.\\s*/)\n      // @ts-expect-error\n      ;[, , operation] = match\n      if (isAlwaysArray([...section, ...keyPath].join('.'))) {\n        operation = '+='\n      }\n      value = match[3]!.trim()\n    }\n    // add to existing array value\n    else if (\n      keyPath !== undefined &&\n      (match = /^\\s{0,4}\\+\\s*(.+)/.exec(line))\n    ) {\n      recordVal()\n      operation = '+='\n      value = match[1]!.trim()\n    }\n    // add to existing value\n    else if (value !== undefined && (match = /^\\s+(\\S.*)/.exec(line))) {\n      const m = match[1]!\n      value += value.length ? ` ${m.trim()}` : m.trim()\n    }\n    // done with last value\n    else {\n      recordVal()\n      keyPath = undefined\n      value = undefined\n    }\n  }\n\n  recordVal()\n\n  return data\n}\n\n/**\n * Applies defaults and any other necessary tweaks to the loaded configuration.\n * @param conf - the object containing the configuration, which it modifies\n * in-place\n * @param url - URL of the config file\n * @returns the same object it was passed\n */\nexport function regularizeConf(conf: Config, url: string): Config {\n  // if tracks is not an array, convert it to one\n  if (conf.tracks && !Array.isArray(conf.tracks)) {\n    // if it's a single track config, wrap it in an arrayref\n    if (isTrack(conf.tracks)) {\n      conf.tracks = [conf.tracks]\n    }\n    // otherwise, coerce it to an array\n    else {\n      const tracks: Track[] = []\n      for (const label of Object.keys(conf.tracks)) {\n        const track = conf.tracks[label]\n        if (isTrack(track)) {\n          tracks.push(track)\n        } else {\n          tracks.push({ label, ...track })\n        }\n      }\n      conf.tracks = tracks\n    }\n  }\n\n  // regularize trackMetadata.sources\n  const meta = conf.trackMetadata\n  if (meta?.sources) {\n    // if it's a single source config, wrap it in an arrayref\n    if (typeof meta.sources === 'string') {\n      meta.sources = [meta.sources]\n    }\n    if (isSource(meta.sources)) {\n      meta.sources = [meta.sources]\n    }\n\n    if (!Array.isArray(meta.sources)) {\n      const sources: Source[] = []\n      for (const name of Object.keys(meta.sources)) {\n        const source = meta.sources[name]!\n        if (!('name' in source)) {\n          source.name = name\n        }\n        sources.push(source)\n      }\n      meta.sources = sources\n    }\n\n    // coerce any string source defs to be URLs, and try to detect their types\n    meta.sources = meta.sources.map((sourceDef: string | Source): Source => {\n      if (typeof sourceDef === 'string') {\n        const newSourceDef: Source = { url: sourceDef }\n        const typeMatch = /\\.(\\w+)$/.exec(sourceDef)\n        if (typeMatch) {\n          newSourceDef.type = typeMatch[1]!.toLowerCase()\n        }\n        return newSourceDef\n      }\n      return sourceDef\n    })\n  }\n\n  conf.sourceUrl = conf.sourceUrl || url\n  if (conf.sourceUrl.startsWith('/')) {\n    conf.sourceUrl = new URL(conf.sourceUrl, window.location.href).href\n  }\n  conf.baseUrl = conf.baseUrl || new URL('.', conf.sourceUrl).href\n  if (conf.baseUrl.length && !conf.baseUrl.endsWith('/')) {\n    conf.baseUrl += '/'\n  }\n\n  if (conf.sourceUrl) {\n    // set a default baseUrl in each of the track and store confs, and the names\n    // conf, if needed\n    const addBase: (Track | Store | Names)[] = []\n    if (conf.tracks) {\n      addBase.push(...conf.tracks)\n    }\n    if (conf.stores) {\n      addBase.push(...Object.values(conf.stores))\n    }\n    if (conf.names) {\n      addBase.push(conf.names)\n    }\n\n    for (const t of addBase) {\n      if (!t.baseUrl) {\n        t.baseUrl = conf.baseUrl || '/'\n      }\n    }\n\n    // resolve the refSeqs and nameUrl if present\n    if (conf.refSeqs && typeof conf.refSeqs === 'string') {\n      conf.refSeqs = new URL(conf.refSeqs, conf.sourceUrl).href\n    }\n    if (conf.nameUrl) {\n      conf.nameUrl = new URL(conf.nameUrl, conf.sourceUrl).href\n    }\n  }\n\n  conf.stores = conf.stores || {}\n  for (let trackConfig of conf.tracks || []) {\n    // if there is a `config` subpart, just copy its keys in to the top-level\n    // config\n    if (trackConfig.config) {\n      const c = trackConfig.config\n      trackConfig.config = undefined\n      trackConfig = { ...c, ...trackConfig }\n    }\n\n    // skip if it's a new-style track def\n    if (trackConfig.store) {\n      continue\n    }\n\n    let trackClassName: string\n    if (trackConfig.type === 'FeatureTrack') {\n      trackClassName = 'JBrowse/View/Track/HTMLFeatures'\n    } else if (trackConfig.type === 'ImageTrack') {\n      trackClassName = 'JBrowse/View/Track/FixedImage'\n    } else if (trackConfig.type === 'ImageTrack.Wiggle') {\n      trackClassName = 'JBrowse/View/Track/FixedImage/Wiggle'\n    } else if (trackConfig.type === 'SequenceTrack') {\n      trackClassName = 'JBrowse/View/Track/Sequence'\n    } else {\n      trackClassName = regularizeClass('JBrowse/View/Track', trackConfig.type)\n    }\n\n    trackConfig.type = trackClassName\n\n    synthesizeTrackStoreConfig(conf, trackConfig)\n\n    if (trackConfig.histograms) {\n      if (!trackConfig.histograms.baseUrl) {\n        trackConfig.histograms.baseUrl = trackConfig.baseUrl\n      }\n      synthesizeTrackStoreConfig(conf, trackConfig.histograms)\n    }\n  }\n\n  return conf\n}\n\n/**\n * prefix class name with `root` if it contains no slashes\n * @param root - Prefix root\n * @param className - class name\n */\nfunction regularizeClass(root: string, className: string | undefined): string {\n  if (!className) {\n    return ''\n  }\n  if (!className.includes('/')) {\n    className = `${root}/${className}`\n  }\n  className = className.replace(/^\\//, '')\n  return className\n}\n\nfunction guessStoreClass(\n  trackConfig: Track | undefined,\n  urlTemplate: string,\n): string {\n  if (!trackConfig) {\n    return ''\n  }\n  if (trackConfig.type?.includes('/FixedImage')) {\n    return `JBrowse/Store/TiledImage/Fixed${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.jsonz?$/i.test(urlTemplate)) {\n    return `JBrowse/Store/SeqFeature/NCList${\n      trackConfig.backendVersion === 0 ? '_v0' : ''\n    }`\n  }\n  if (/\\.bam$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BAM'\n  }\n  if (/\\.cram$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/CRAM'\n  }\n  if (/\\.gff3?$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3'\n  }\n  if (/\\.bed$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BED'\n  }\n  if (/\\.vcf.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/VCFTabix'\n  }\n  if (/\\.gff3?.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/GFF3Tabix'\n  }\n  if (/\\.bed.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BEDTabix'\n  }\n  if (/\\.(bw|bigwig)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigWig'\n  }\n  if (/\\.(bb|bigbed)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BigBed'\n  }\n  if (/\\.(fa|fasta)$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/IndexedFasta'\n  }\n  if (/\\.(fa|fasta)\\.b?gz$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/BgzipIndexedFasta'\n  }\n  if (/\\.2bit$/i.test(urlTemplate)) {\n    return 'JBrowse/Store/SeqFeature/TwoBit'\n  }\n  if (trackConfig.type?.endsWith('/Sequence')) {\n    return 'JBrowse/Store/Sequence/StaticChunked'\n  }\n  return ''\n}\n\nfunction synthesizeTrackStoreConfig(\n  mainConf: Config,\n  trackConfig: Track,\n): void {\n  // figure out what data store class to use with the track, applying some\n  // defaults if it is not explicit in the configuration\n  const { urlTemplate = '' } = trackConfig\n\n  const storeClass = trackConfig.storeClass\n    ? regularizeClass('JBrowse/Store', trackConfig.storeClass)\n    : guessStoreClass(trackConfig, urlTemplate)\n\n  if (!storeClass) {\n    console.warn(\n      `Unable to determine an appropriate data store to use with track '${trackConfig.label}', please explicitly specify a storeClass in the configuration.`,\n    )\n    return\n  }\n\n  // synthesize a separate store conf\n  const storeConf: Store = { ...trackConfig, type: storeClass }\n\n  // if this is the first sequence store we see, and we have no refseqs store\n  // defined explicitly, make this the refseqs store.\n  storeConf.name =\n    (storeClass === 'JBrowse/Store/Sequence/StaticChunked' ||\n      storeClass === 'JBrowse/Store/Sequence/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta' ||\n      storeClass === 'JBrowse/Store/SeqFeature/TwoBit' ||\n      storeClass === 'JBrowse/Store/Sequence/TwoBit' ||\n      trackConfig.useAsRefSeqStore) &&\n    !mainConf.stores?.refseqs\n      ? 'refseqs'\n      : `store${objectHash(storeConf)}`\n  // record it\n  if (!mainConf.stores) {\n    mainConf.stores = {}\n  }\n  mainConf.stores[storeConf.name] = storeConf\n\n  // connect it to the track conf\n  trackConfig.store = storeConf.name\n}\n","import { openLocation } from '@jbrowse/core/util/io'\n\nimport { parseJB1Conf, parseJB1Json, regularizeConf } from './jb1ConfigParse'\nimport { deepUpdate, fillTemplate } from './util'\n\nimport type {\n  Config,\n  Include,\n  JBLocation,\n  LocalPathLocation,\n  Track,\n  UriLocation,\n} from './types'\n\nfunction isUriLocation(location: JBLocation): location is UriLocation {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return (location as UriLocation).uri !== undefined\n}\n\nfunction isLocalPathLocation(\n  location: JBLocation,\n): location is LocalPathLocation {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return (location as LocalPathLocation).localPath !== undefined\n}\n\nexport async function fetchJb1(\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  dataRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfig: Config = {\n    include: ['{dataRoot}/trackList.json', '{dataRoot}/tracks.conf'],\n  },\n  // eslint-disable-next-line unicorn/no-object-as-default-parameter\n  baseConfigRoot: JBLocation = { uri: '', locationType: 'UriLocation' },\n): Promise<Config> {\n  const protocol = 'uri' in dataRoot ? 'uri' : 'localPath'\n  const dataRootReg = JSON.parse(JSON.stringify(dataRoot))\n  let dataRootLocation = ''\n  if (isUriLocation(dataRoot)) {\n    dataRootLocation = dataRoot.uri\n  }\n  if (isLocalPathLocation(dataRoot)) {\n    dataRootLocation = dataRoot.localPath\n  }\n  if (dataRootLocation.endsWith('/')) {\n    dataRootReg[protocol] = dataRootLocation.slice(0, -1)\n  }\n  if (\n    (isUriLocation(baseConfigRoot) && baseConfigRoot.uri) ||\n    (isLocalPathLocation(baseConfigRoot) && baseConfigRoot.localPath)\n  ) {\n    const baseProtocol = 'uri' in baseConfigRoot ? 'uri' : 'localPath'\n    let baseConfigLocation = ''\n    if (isUriLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.uri\n    }\n    if (isLocalPathLocation(baseConfigRoot)) {\n      baseConfigLocation = baseConfigRoot.localPath\n    }\n    if (baseConfigLocation.endsWith('/')) {\n      baseConfigLocation = baseConfigLocation.slice(0, -1)\n    }\n    let newConfig: Config = {}\n    for (const conf of ['jbrowse.conf', 'jbrowse_conf.json']) {\n      let fetchedConfig = null\n      try {\n        // @ts-expect-error\n        fetchedConfig = await fetchConfigFile({\n          [baseProtocol]: `${baseConfigLocation}/${conf}`,\n        })\n      } catch (error) {\n        console.error(\n          `tried to access ${baseConfigLocation}/${conf}, but failed`,\n        )\n      }\n      newConfig = mergeConfigs(newConfig, fetchedConfig) || {}\n    }\n    if (dataRootReg[protocol]) {\n      newConfig.dataRoot = dataRootReg[protocol]\n    }\n    return createFinalConfig(newConfig)\n  }\n  const newConfig = regularizeConf(baseConfig, window.location.href)\n  if (dataRootReg[protocol]) {\n    newConfig.dataRoot = dataRootReg[protocol]\n  }\n  return createFinalConfig(newConfig)\n}\n\nexport async function createFinalConfig(\n  baseConfig: Config,\n  defaults = configDefaults,\n): Promise<Config> {\n  const configWithDefaults = deepUpdate(structuredClone(defaults), baseConfig)\n  let finalConfig = await loadIncludes(configWithDefaults)\n  finalConfig = mergeConfigs(finalConfig, baseConfig) || finalConfig\n  fillTemplates(finalConfig, finalConfig)\n  validateConfig(finalConfig)\n  return finalConfig\n}\n\nexport async function fetchConfigFile(location: JBLocation): Promise<Config> {\n  const result = await openLocation(location).readFile('utf8')\n  if (isUriLocation(location)) {\n    return parseJb1(result, location.uri)\n  }\n  if (isLocalPathLocation(location)) {\n    return parseJb1(result, location.localPath)\n  }\n  return parseJb1(result)\n}\n\nexport function parseJb1(config: string, url = ''): Config {\n  if (config.trim().startsWith('{')) {\n    return parseJB1Json(config, url)\n  }\n  return parseJB1Conf(config, url)\n}\n\n/**\n * Merges config object b into a. Properties in b override those in a.\n */\nfunction mergeConfigs(a: Config | null, b: Config | null): Config | null {\n  if (b === null) {\n    return null\n  }\n\n  if (a === null) {\n    a = {}\n  }\n\n  for (const prop of Object.keys(b)) {\n    if (prop === 'tracks' && prop in a) {\n      const aTracks = a[prop] || []\n      const bTracks = b[prop] || []\n\n      if (Array.isArray(aTracks) && Array.isArray(bTracks)) {\n        a[prop] = mergeTrackConfigs(aTracks, bTracks)\n      } else {\n        throw new Error(\n          `Track config has not been properly regularized: ${aTracks} ${bTracks}`,\n        )\n      }\n    } else if (\n      !noRecursiveMerge(prop) &&\n      prop in a &&\n      // @ts-expect-error\n      typeof b[prop] === 'object' &&\n      // @ts-expect-error\n      typeof a[prop] === 'object'\n    ) {\n      // @ts-expect-error\n      a[prop] = deepUpdate(a[prop], b[prop])\n    } else if (prop === 'dataRoot') {\n      if (\n        a[prop] === undefined ||\n        (a[prop] === 'data' && b[prop] !== undefined)\n      ) {\n        a[prop] = b[prop]\n      }\n      // @ts-expect-error\n    } else if (a[prop] === undefined || b[prop] !== undefined) {\n      // @ts-expect-error\n      a[prop] = b[prop]\n    }\n  }\n  return a\n}\n\n/**\n * Special-case merging of two `tracks` configuration arrays.\n */\nfunction mergeTrackConfigs(a: Track[], b: Track[]): Track[] {\n  if (!b.length) {\n    return a\n  }\n\n  // index the tracks in `a` by track label\n  const aTracks: Record<string, Track> = {}\n  for (const [i, t] of a.entries()) {\n    t.index = i\n    aTracks[t.label] = t\n  }\n\n  for (const bT of b) {\n    const aT = aTracks[bT.label]\n    if (aT) {\n      mergeConfigs(aT, bT)\n    } else {\n      a.push(bT)\n    }\n  }\n\n  return a\n}\n\n/**\n * Recursively fetch, parse, and merge all the includes in the given config\n * object.  Calls the callback with the resulting configuration when finished.\n * @param inputConfig - Config to load includes into\n */\nasync function loadIncludes(inputConfig: Config): Promise<Config> {\n  inputConfig = structuredClone(inputConfig)\n\n  async function loadRecur(\n    config: Config,\n    upstreamConf: Config,\n  ): Promise<Config> {\n    const sourceUrl = config.sourceUrl || config.baseUrl\n    if (!sourceUrl) {\n      throw new Error(\n        `Could not determine source URL: ${JSON.stringify(config)}`,\n      )\n    }\n    const newUpstreamConf = mergeConfigs(structuredClone(upstreamConf), config)\n    if (!newUpstreamConf) {\n      throw new Error('Problem merging configs')\n    }\n    const includes = fillTemplates(\n      regularizeIncludes(config.include || []),\n      newUpstreamConf,\n    )\n    config.include = undefined\n\n    const loads = includes.map(async (include): Promise<Config> => {\n      include.cacheBuster = inputConfig.cacheBuster\n      const includedData = await fetchConfigFile({\n        uri: new URL(include.url, sourceUrl).href,\n        locationType: 'UriLocation',\n      })\n      return loadRecur(includedData, newUpstreamConf)\n    })\n    const includedDataObjects = await Promise.all(loads)\n    for (const includedData of includedDataObjects) {\n      config = mergeConfigs(config, includedData) || config\n    }\n    return config\n  }\n\n  return loadRecur(inputConfig, {})\n}\n\nfunction regularizeIncludes(\n  includes: Include | string | (Include | string)[] | null,\n): Include[] {\n  if (!includes) {\n    return []\n  }\n\n  // coerce include to an array\n  if (!Array.isArray(includes)) {\n    includes = [includes]\n  }\n\n  return includes.map((include): Include => {\n    // coerce bare strings in the includes to URLs\n    if (typeof include === 'string') {\n      include = { url: include }\n    }\n\n    // set defaults for format and version\n    if (!('format' in include)) {\n      include.format = include.url.endsWith('.conf') ? 'conf' : 'JB_json'\n    }\n    if (include.format === 'JB_json' && !('version' in include)) {\n      include.version = 1\n    }\n    return include\n  })\n}\n\nfunction fillTemplates<T>(subconfig: T, config: Config): T {\n  if (!subconfig) {\n    return subconfig\n  }\n  if (Array.isArray(subconfig)) {\n    for (let i = 0; i < subconfig.length; i += 1) {\n      subconfig[i] = fillTemplates(subconfig[i], config)\n    }\n  } else if (typeof subconfig === 'object') {\n    const sub = subconfig as Record<string, any>\n    for (const name of Object.keys(sub)) {\n      sub[name] = fillTemplates(sub[name], config)\n    }\n  } else if (typeof subconfig === 'string') {\n    // @ts-expect-error\n    return fillTemplate(subconfig, config)\n  }\n\n  return subconfig\n}\n\n/**\n * list of config properties that should not be recursively merged\n * @param propName - name of config property\n */\nfunction noRecursiveMerge(propName: string): boolean {\n  return propName === 'datasets'\n}\n\nconst configDefaults = {\n  tracks: [],\n\n  containerID: 'GenomeBrowser',\n  dataRoot: 'data',\n  show_tracklist: true,\n  show_nav: true,\n  show_menu: true,\n  show_overview: true,\n  show_fullviewlink: true,\n  update_browser_title: true,\n  updateBrowserURL: true,\n\n  refSeqs: '{dataRoot}/seq/refSeqs.json',\n  include: ['jbrowse.conf', 'jbrowse_conf.json'],\n  nameUrl: '{dataRoot}/names/root.json',\n\n  datasets: {\n    _DEFAULT_EXAMPLES: true,\n    volvox: { url: '?data=sample_data/json/volvox', name: 'Volvox Example' },\n    modencode: {\n      url: '?data=sample_data/json/modencode',\n      name: 'MODEncode Example',\n    },\n    yeast: { url: '?data=sample_data/json/yeast', name: 'Yeast Example' },\n  },\n\n  highlightSearchedRegions: false,\n  highResolutionMode: 'auto',\n}\n\n/**\n * Examine the loaded and merged configuration for errors.  Throws\n * exceptions if it finds anything amiss.\n * @returns nothing meaningful\n */\nfunction validateConfig(config: Config): void {\n  if (!config.tracks) {\n    config.tracks = []\n  }\n  if (!config.baseUrl) {\n    throw new Error('Must provide a `baseUrl` in configuration')\n  }\n}\n"],"names":["module","exports","val","Array","isArray","isObject","isObjectObject","o","Object","prototype","toString","call","ctor","prot","constructor","hasOwnProperty","join","segs","joinChar","options","isValid","key","target","isValidObject","path","default","String","isString","splitChar","separator","split","len","length","idx","prop","slice","hasProp","n","deleteProperty","Reflect","isPrimitive","isPlainObject","value","validateKey","TypeError","isUnsafeKey","Error","input","fn","flat","map","toStringKey","undefined","arrays","merge","preservePaths","createMemoKey","setValue","cache","get","set","memoize","sep","preserve","test","parts","part","push","number","trim","Number","isInteger","i","splitString","assignProp","obj","assign","keys","next","Map","clear","isTrack","arg","label","deepUpdate","a","b","isAlwaysArray","varName","regularizeConf","conf","url","tracks","track","meta","trackMetadata","sources","name","source","sourceDef","newSourceDef","typeMatch","exec","type","toLowerCase","sourceUrl","startsWith","URL","window","location","href","baseUrl","endsWith","addBase","stores","values","names","t","refSeqs","nameUrl","trackConfig","config","c","store","trackClassName","regularizeClass","synthesizeTrackStoreConfig","histograms","root","className","includes","replace","mainConf","urlTemplate","storeClass","backendVersion","guessStoreClass","console","warn","storeConf","useAsRefSeqStore","refseqs","objectHash","isUriLocation","uri","isLocalPathLocation","localPath","async","fetchJb1","dataRoot","locationType","baseConfig","include","baseConfigRoot","protocol","dataRootReg","JSON","parse","stringify","dataRootLocation","baseProtocol","baseConfigLocation","newConfig","fetchedConfig","fetchConfigFile","error","mergeConfigs","createFinalConfig","defaults","configDefaults","configWithDefaults","structuredClone","finalConfig","inputConfig","loadRecur","upstreamConf","newUpstreamConf","fillTemplates","format","version","regularizeIncludes","loads","cacheBuster","includedDataObjects","Promise","all","includedData","loadIncludes","validateConfig","result","openLocation","readFile","parseJb1","parsedConf","parseJB1Json","text","keyPath","operation","section","data","lineNumber","recordVal","parsedValue","match","parseFloat","replaceAll","existing","getValue","e","textLine","entries","line","m","parseJB1Conf","aTracks","bTracks","mergeTrackConfigs","noRecursiveMerge","index","bT","aT","subconfig","sub","template","fillWith","fill","callback","v","this","fillTemplate","propName","containerID","show_tracklist","show_nav","show_menu","show_overview","show_fullviewlink","update_browser_title","updateBrowserURL","datasets","_DEFAULT_EXAMPLES","volvox","modencode","yeast","highlightSearchedRegions","highResolutionMode"],"sourceRoot":""}