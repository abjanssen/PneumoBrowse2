{"version":3,"file":"static/js/3300.41339caa.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/Position.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/CoreDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseAttributes.tsx","../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/SequenceFeaturePanel.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/FeatureDetails.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/index.tsx","../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCoreDetails.tsx"],"sourcesContent":["import { assembleLocString } from '../../util'\n\nimport type { BaseProps } from '../types'\n\nexport default function Position(props: BaseProps) {\n  const { feature } = props\n  const strand = feature.strand as number\n  const strandMap: Record<string, string> = {\n    '-1': '-',\n    '0': '',\n    '1': '+',\n  }\n  const str = strandMap[strand] ? `(${strandMap[strand]})` : ''\n  const loc = assembleLocString(feature)\n  return <>{`${loc} ${str}`}</>\n}\n","import Position from './Position'\nimport SimpleField from './SimpleField'\nimport { toLocale } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseProps } from '../types'\n\nexport default function CoreDetails(props: BaseProps) {\n  const { feature } = props\n  const obj = feature as SimpleFeatureSerialized & {\n    start: number\n    end: number\n    assemblyName?: string\n    strand: number\n    refName: string\n    __jbrowsefmt: {\n      start?: number\n      assemblyName?: string\n      end?: number\n      refName?: string\n      name?: string\n    }\n  }\n\n  const formattedFeat = { ...obj, ...obj.__jbrowsefmt }\n  const { start, end } = formattedFeat\n\n  const displayedDetails: Record<string, any> = {\n    ...formattedFeat,\n    length: toLocale(end - start),\n  }\n\n  const coreRenderedDetails = {\n    description: 'Description',\n    name: 'Name',\n    length: 'Length',\n    type: 'Type',\n  }\n  return (\n    <>\n      <SimpleField\n        name=\"Position\"\n        value={<Position {...props} feature={formattedFeat} />}\n      />\n      {Object.entries(coreRenderedDetails)\n        .map(([key, name]) => [name, displayedDetails[key]])\n        .filter(([, value]) => value != null)\n        .map(([name, value]) => (\n          <SimpleField key={name} name={name} value={value} />\n        ))}\n    </>\n  )\n}\n","import Attributes from './Attributes'\nimport BaseCard from './BaseCard'\n\nimport type { BaseCardProps, BaseProps } from '../types'\n\nexport interface BaseInputProps extends BaseCardProps {\n  omit?: string[]\n  model: any\n  descriptions?: Record<string, React.ReactNode>\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}\n\nexport default function BaseAttributes(props: BaseProps) {\n  const { title = 'Attributes', feature } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <Attributes {...props} attributes={feature} />\n    </BaseCard>\n  )\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport Help from '@mui/icons-material/Help'\nimport { Button, FormControl, IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { LoadingEllipses } from '../../ui'\nimport { getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { BaseFeatureWidgetModel } from '../stateModelFactory'\n\n// lazies\nconst SequenceFeatureDetails = lazy(() => import('./SequenceFeatureDetails'))\nconst HelpDialog = lazy(() => import('./dialogs/HelpDialog'))\n\nconst useStyles = makeStyles()(theme => ({\n  formControl: {\n    margin: 0,\n  },\n\n  container: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n  },\n}))\n\n// display the stitched-together sequence of a gene's CDS, cDNA, or protein\n// sequence. this is a best effort and weird genomic phenomena could lead these\n// to not be 100% accurate\nconst SequenceFeaturePanel = observer(function ({\n  model,\n  feature,\n}: {\n  model: BaseFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { classes } = useStyles()\n  const [shown, setShown] = useState(false)\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            setShown(!shown)\n          }}\n        >\n          {shown ? 'Hide feature sequence' : 'Show feature sequence'}\n        </Button>\n      </FormControl>\n\n      <IconButton\n        onClick={() => {\n          getSession(model).queueDialog(handleClose => [\n            HelpDialog,\n            {\n              handleClose,\n            },\n          ])\n        }}\n      >\n        <Help />\n      </IconButton>\n      {shown ? (\n        <Suspense fallback={<LoadingEllipses />}>\n          <SequenceFeatureDetails\n            key={feature.uniqueId}\n            model={model}\n            feature={feature}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default SequenceFeaturePanel\n","import { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { Divider, Typography } from '@mui/material'\n\nimport { generateTitle } from './util'\nimport SequenceFeatureDetails from '../SequenceFeatureDetails'\nimport Attributes from './Attributes'\nimport BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\nimport { ErrorMessage } from '../../ui'\nimport { getEnv, getSession } from '../../util'\n\nimport type { SimpleFeatureSerialized } from '../../util'\nimport type { Descriptors } from '../types'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n// coreDetails are omitted in some circumstances\nconst coreDetails = [\n  'name',\n  'start',\n  'end',\n  'strand',\n  'refName',\n  'description',\n  'type',\n]\n\ninterface PanelDescriptor {\n  name: string\n  Component: React.FC<any>\n}\n\nexport default function FeatureDetails(props: {\n  model: IAnyStateTreeNode\n  feature: SimpleFeatureSerialized\n  depth?: number\n  omit?: string[]\n  descriptions?: Descriptors\n  formatter?: (val: unknown, key: string) => React.ReactNode\n}) {\n  const { omit = [], model, feature, depth = 0 } = props\n  const { maxDepth } = model\n  const { mate, name = '', id = '', type = '', subfeatures, uniqueId } = feature\n  const pm = getEnv(model).pluginManager\n  const session = getSession(model)\n\n  const ExtraPanel = pm.evaluateExtensionPoint('Core-extraFeaturePanel', null, {\n    session,\n    feature,\n    model,\n  }) as PanelDescriptor | undefined\n  const m = mate as { start: number; end: number; refName: string } | undefined\n  return (\n    <BaseCard title={generateTitle(name, id, type)}>\n      <Typography>Core details</Typography>\n      <CoreDetails {...props} />\n      {m ? (\n        <>\n          <Divider />\n          <Typography>Mate details</Typography>\n          <CoreDetails\n            {...props}\n            feature={{\n              ...m,\n              start: m.start,\n              end: m.end,\n              refName: m.refName,\n              uniqueId: `${uniqueId}-mate`,\n            }}\n          />\n        </>\n      ) : null}\n\n      <Divider />\n      <Typography>Attributes</Typography>\n      <Attributes\n        attributes={feature}\n        {...props}\n        omit={omit}\n        omitSingleLevel={coreDetails}\n      />\n\n      <ErrorBoundary FallbackComponent={e => <ErrorMessage error={e.error} />}>\n        <SequenceFeatureDetails {...props} />\n      </ErrorBoundary>\n\n      {ExtraPanel ? (\n        <>\n          <Divider />\n          <BaseCard title={ExtraPanel.name}>\n            <ExtraPanel.Component {...props} />\n          </BaseCard>\n        </>\n      ) : null}\n\n      {depth < maxDepth && subfeatures?.length ? (\n        <BaseCard title=\"Subfeatures\" defaultExpanded={depth < 1}>\n          {subfeatures.map((sub, idx) => (\n            <FeatureDetails\n              key={JSON.stringify(sub)}\n              feature={{\n                ...sub,\n                uniqueId: `${uniqueId}_${idx}`,\n              }}\n              model={model}\n              depth={depth + 1}\n            />\n          ))}\n        </BaseCard>\n      ) : null}\n    </BaseCard>\n  )\n}\n","import ExpandMore from '@mui/icons-material/ExpandMore'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import { observer } from 'mobx-react'\n\nimport { isEmpty } from './util'\nimport { replaceUndefinedWithNull } from '../util'\nimport FeatureDetails from './FeatureDetails'\nimport { ErrorMessage } from '../../ui'\n\nimport type { BaseInputProps } from './types'\n\nconst BaseFeatureDetail = observer(function ({ model }: BaseInputProps) {\n  const { error, descriptions, featureData } = model\n\n  if (error) {\n    return <ErrorMessage error={error} />\n  } else if (!featureData) {\n    return null\n  } else {\n    // replacing undefined with null helps with allowing fields to be hidden,\n    // setting null is not allowed by jexl so we set it to undefined to hide.\n    // see config guide. this replacement happens both here and when\n    // snapshotting the featureData\n    const featureData2 = replaceUndefinedWithNull(featureData)\n    return isEmpty(featureData2) ? null : (\n      <FeatureDetails\n        model={model}\n        feature={featureData2}\n        descriptions={descriptions}\n      />\n    )\n  }\n})\n\nexport default BaseFeatureDetail\n\nexport { default as BaseCard } from './BaseCard'\nexport { default as BaseAttributes } from './BaseAttributes'\nexport { default as BaseCoreDetails } from './BaseCoreDetails'\nexport { default as FeatureDetails } from './FeatureDetails'\n","import BaseCard from './BaseCard'\nimport CoreDetails from './CoreDetails'\n\nimport type { BaseProps } from '../types'\n\nexport default function BaseCoreDetails(props: BaseProps) {\n  const { title = 'Primary data' } = props\n  return (\n    <BaseCard {...props} title={title}>\n      <CoreDetails {...props} />\n    </BaseCard>\n  )\n}\n"],"names":["Position","props","$","_c","feature","strand","strandMap","str","t0","assembleLocString","t1","_jsx","_Fragment","children","CoreDetails","obj","formattedFeat","__jbrowsefmt","start","end","displayedDetails","length","toLocale","coreRenderedDetails","description","name","type","_jsxs","SimpleField","value","Object","entries","map","key","filter","_temp","_temp2","name_0","value_0","BaseAttributes","title","undefined","t2","Attributes","BaseCard","SequenceFeatureDetails","lazy","HelpDialog","useStyles","makeStyles","theme","formControl","margin","container","marginTop","spacing","marginBottom","observer","model","classes","shown","setShown","useState","className","FormControl","Button","variant","onClick","IconButton","getSession","queueDialog","handleClose","Help","Suspense","fallback","LoadingEllipses","uniqueId","coreDetails","FeatureDetails","omit","depth","maxDepth","mate","t3","id","t4","t5","subfeatures","t6","pm","getEnv","pluginManager","session","evaluateExtensionPoint","ExtraPanel","m","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","generateTitle","Symbol","for","Typography","Divider","refName","ErrorBoundary","FallbackComponent","Component","defaultExpanded","sub","idx","JSON","stringify","e","ErrorMessage","error","expansionPanelDetails","display","padding","icon","color","palette","tertiary","contrastText","ExpandMore","AccordionSummary","expandIcon","AccordionDetails","Accordion","descriptions","featureData","featureData2","replaceUndefinedWithNull","isEmpty","BaseCoreDetails"],"sourceRoot":""}