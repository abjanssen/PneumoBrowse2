{"version":3,"file":"static/js/5535.7c37dbd1.chunk.js","mappings":"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","sources":["../../../plugins/variants/src/VariantFeatureWidget/LaunchBreakendPanel/LaunchBreakendPanel.tsx"],"sourcesContent":["import { lazy } from 'react'\n\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util'\nimport { Link, Typography } from '@mui/material'\n\nimport type { VariantFeatureWidgetModel } from '../stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nfunction LocStringList({\n  locStrings,\n  model,\n}: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n}) {\n  const session = getSession(model)\n  return (\n    <div>\n      <Typography>Navigate to breakend endpoint in linear view:</Typography>\n      <ul>\n        {locStrings.map((locString, index) => (\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          <li key={`${locString}-${index}`}>\n            {locString}{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                const { view } = model\n                try {\n                  if (view) {\n                    view.navToLocString?.(locString)\n                  } else {\n                    throw new Error(\n                      'No view associated with this feature detail panel anymore',\n                    )\n                  }\n                } catch (e) {\n                  console.error(e)\n                  session.notify(`${e}`)\n                }\n              }}\n            >\n              (LGV)\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nfunction LaunchBreakpointSplitViewPanel({\n  locStrings,\n  model,\n  feature,\n}: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const session = getSession(model)\n  const simpleFeature = new SimpleFeature(feature)\n  const assemblyName = model.view?.displayedRegions[0]?.assemblyName\n  return (\n    <div>\n      <Typography>Launch split view</Typography>\n      <ul>\n        {locStrings.map(locString => (\n          <li key={JSON.stringify(locString)}>\n            {`${feature.refName}:${feature.start} // ${locString}`}{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                session.queueDialog(handleClose => [\n                  BreakendMultiLevelOptionDialog,\n                  {\n                    handleClose,\n                    session,\n                    feature: simpleFeature,\n                    stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_multilevel`,\n                    view: model.view,\n                    assemblyName,\n                  },\n                ])\n              }}\n            >\n              (top/bottom)\n            </Link>{' '}\n            <Link\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault()\n                session.queueDialog(handleClose => [\n                  BreakendSingleLevelOptionDialog,\n                  {\n                    handleClose,\n                    session,\n                    feature: simpleFeature,\n                    stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_singlelevel`,\n                    view: model.view,\n                    assemblyName,\n                  },\n                ])\n              }}\n            >\n              (single row)\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default function LaunchBreakendPanel(props: {\n  locStrings: string[]\n  model: VariantFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, locStrings, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let hasBreakpointSplitView = false\n\n  try {\n    hasBreakpointSplitView = !!pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n\n  return (\n    <BaseCard {...props} title=\"Breakends\">\n      <LocStringList model={model} locStrings={locStrings} />\n      {hasBreakpointSplitView ? (\n        <LaunchBreakpointSplitViewPanel\n          model={model}\n          locStrings={locStrings}\n          feature={feature}\n        />\n      ) : null}\n    </BaseCard>\n  )\n}\n"],"names":["BreakendMultiLevelOptionDialog","lazy","BreakendSingleLevelOptionDialog","LocStringList","locStrings","model","session","getSession","_jsxs","children","_jsx","Typography","map","locString","index","Link","href","onClick","event","preventDefault","view","Error","navToLocString","e","console","error","notify","LaunchBreakpointSplitViewPanel","t0","$","_c","feature","t1","t2","t3","t4","simpleFeature","SimpleFeature","assemblyName","displayedRegions","Symbol","for","refName","start","queueDialog","handleClose","stableViewId","id","event_0","handleClose_0","JSON","stringify","LaunchBreakendPanel","props","hasBreakpointSplitView","pluginManager","getEnv","getViewType","BaseCard","title"],"sourceRoot":""}