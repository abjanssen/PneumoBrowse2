{"version":3,"file":"static/js/5331.a0d11c8e.chunk.js","mappings":"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","sources":["../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalFab.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HamburgerMenu.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/DropdownTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/FavoriteTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/RecentlyUsedTracks.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalHeader.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/util.ts","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackCategory.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabel.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackListNode.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/HierarchicalTree.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/HierarchicalTrackSelector.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/ShoppingCart.tsx","../../../plugins/data-management/src/HierarchicalTrackSelectorWidget/components/tree/TrackLabelMenu.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nimport {\n  getSession,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport AddIcon from '@mui/icons-material/Add'\nimport { Fab, Menu, MenuItem } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(6),\n    right: theme.spacing(6),\n  },\n}))\n\nconst HierarchicalFab = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const session = getSession(model)\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null)\n\n  function handleFabClose() {\n    setAnchorEl(null)\n  }\n  const hasConnections = isSessionModelWithConnections(session)\n  const hasAddTrack = isSessionWithAddTracks(session)\n  return hasAddTrack || hasConnections ? (\n    <>\n      <Fab\n        color=\"secondary\"\n        className={classes.fab}\n        onClick={event => {\n          setAnchorEl(event.currentTarget)\n        }}\n      >\n        <AddIcon />\n      </Fab>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => {\n          setAnchorEl(null)\n        }}\n      >\n        {hasConnections ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget(\n                    'AddConnectionWidget',\n                    'addConnectionWidget',\n                  ),\n                )\n              }\n            }}\n          >\n            Add connection\n          </MenuItem>\n        ) : null}\n        {hasAddTrack ? (\n          <MenuItem\n            onClick={() => {\n              handleFabClose()\n              if (isSessionModelWithWidgets(session)) {\n                session.showWidget(\n                  session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                    view: model.view.id,\n                  }),\n                )\n              }\n            }}\n          >\n            Add track\n          </MenuItem>\n        ) : null}\n      </Menu>\n    </>\n  ) : null\n})\n\nexport default HierarchicalFab\n","import React, { Suspense, lazy, useState } from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport {\n  getSession,\n  isSessionModelWithConnectionEditing,\n  isSessionModelWithConnections,\n  isSessionModelWithWidgets,\n  isSessionWithAddTracks,\n} from '@jbrowse/core/util'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { observer } from 'mobx-react'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\n// lazies\nconst FacetedDialog = lazy(() => import('../faceted/FacetedDialog'))\n\n// lazy components\nconst CloseConnectionDialog = lazy(\n  () => import('../dialogs/CloseConnectionDialog'),\n)\nconst DeleteConnectionDialog = lazy(\n  () => import('../dialogs/DeleteConnectionDialog'),\n)\nconst ManageConnectionsDialog = lazy(\n  () => import('../dialogs/ManageConnectionsDialog'),\n)\nconst ToggleConnectionsDialog = lazy(\n  () => import('../dialogs/ToggleConnectionsDialog'),\n)\n\ninterface ModalArgs {\n  connectionConf: AnyConfigurationModel\n  safelyBreakConnection: () => void\n  dereferenceTypeCount: Record<string, number>\n  name: string\n}\n\ninterface DialogDetails {\n  name: string\n  connectionConf: AnyConfigurationModel\n}\n\nconst HamburgerMenu = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const session = getSession(model)\n  const [modalInfo, setModalInfo] = useState<ModalArgs>()\n  const [deleteDialogDetails, setDeleteDialogDetails] =\n    useState<DialogDetails>()\n  const [connectionToggleOpen, setConnectionToggleOpen] = useState(false)\n  const [connectionManagerOpen, setConnectionManagerOpen] = useState(false)\n  const [facetedOpen, setFacetedOpen] = useState(false)\n\n  function breakConnection(\n    connectionConf: AnyConfigurationModel,\n    deletingConnection?: boolean,\n  ) {\n    const name = readConfObject(connectionConf, 'name')\n    const result = session.prepareToBreakConnection?.(connectionConf)\n    if (result) {\n      const [safelyBreakConnection, dereferenceTypeCount] = result\n      if (Object.keys(dereferenceTypeCount).length > 0) {\n        setModalInfo({\n          connectionConf,\n          safelyBreakConnection,\n          dereferenceTypeCount,\n          name,\n        })\n      } else {\n        safelyBreakConnection()\n      }\n    }\n    if (deletingConnection) {\n      setDeleteDialogDetails({ name, connectionConf })\n    }\n  }\n\n  return (\n    <>\n      <CascadingMenuButton\n        menuItems={[\n          {\n            label: 'Open faceted track selector',\n            onClick: () => {\n              setFacetedOpen(true)\n            },\n          },\n          ...(isSessionWithAddTracks(session)\n            ? [\n                {\n                  label: 'Add track...',\n                  onClick: () => {\n                    if (isSessionModelWithWidgets(session)) {\n                      session.showWidget(\n                        session.addWidget('AddTrackWidget', 'addTrackWidget', {\n                          view: model.view.id,\n                        }),\n                      )\n                    }\n                  },\n                },\n              ]\n            : []),\n          {\n            label: 'Connections...',\n            subMenu: [\n              ...(isSessionModelWithConnections(session)\n                ? [\n                    {\n                      label: 'Turn on/off connections...',\n                      onClick: () => {\n                        setConnectionToggleOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n              ...(isSessionModelWithConnectionEditing(session)\n                ? [\n                    {\n                      label: 'Add connection...',\n                      onClick: () => {\n                        if (isSessionModelWithWidgets(session)) {\n                          session.showWidget(\n                            session.addWidget(\n                              'AddConnectionWidget',\n                              'addConnectionWidget',\n                            ),\n                          )\n                        }\n                      },\n                    },\n                    {\n                      label: 'Delete connections...',\n                      onClick: () => {\n                        setConnectionManagerOpen(true)\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          },\n          {\n            label: 'Sort...',\n            type: 'subMenu',\n            subMenu: [\n              {\n                label: 'Sort tracks by name',\n                type: 'checkbox',\n                checked: model.activeSortTrackNames,\n                onClick: () => {\n                  model.setSortTrackNames(!model.activeSortTrackNames)\n                },\n              },\n              {\n                label: 'Sort categories by name',\n                type: 'checkbox',\n                checked: model.activeSortCategories,\n                onClick: () => {\n                  model.setSortCategories(!model.activeSortCategories)\n                },\n              },\n            ],\n          },\n          {\n            label: 'Collapse...',\n            type: 'subMenu',\n            subMenu: [\n              ...(model.hasAnySubcategories\n                ? [\n                    {\n                      label: 'Collapse subcategories',\n                      onClick: () => {\n                        model.collapseSubCategories()\n                      },\n                    },\n                  ]\n                : []),\n              {\n                label: 'Collapse top-level categories',\n                onClick: () => {\n                  model.collapseTopLevelCategories()\n                },\n              },\n              {\n                label: 'Expand all categories',\n                onClick: () => {\n                  model.expandAllCategories()\n                },\n              },\n            ],\n          },\n        ]}\n      >\n        <MenuIcon />\n      </CascadingMenuButton>\n      <Suspense fallback={null}>\n        {modalInfo ? (\n          <CloseConnectionDialog\n            modalInfo={modalInfo}\n            onClose={() => {\n              setModalInfo(undefined)\n            }}\n          />\n        ) : null}\n        {deleteDialogDetails ? (\n          <DeleteConnectionDialog\n            handleClose={() => {\n              setDeleteDialogDetails(undefined)\n            }}\n            deleteDialogDetails={deleteDialogDetails}\n            session={session}\n          />\n        ) : null}\n        {connectionManagerOpen ? (\n          <ManageConnectionsDialog\n            handleClose={() => {\n              setConnectionManagerOpen(false)\n            }}\n            breakConnection={breakConnection}\n            session={session}\n          />\n        ) : null}\n        {connectionToggleOpen ? (\n          <ToggleConnectionsDialog\n            handleClose={() => {\n              setConnectionToggleOpen(false)\n            }}\n            session={session}\n            breakConnection={breakConnection}\n          />\n        ) : null}\n\n        {facetedOpen ? (\n          <FacetedDialog\n            handleClose={() => {\n              setFacetedOpen(false)\n            }}\n            model={model}\n          />\n        ) : null}\n      </Suspense>\n    </>\n  )\n})\n\nexport default HamburgerMenu\n","import React, { useState } from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { observer } from 'mobx-react'\n\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst DropdownTrackSelector = observer(function ({\n  model,\n  tracks,\n  extraMenuItems,\n  children,\n  onClick,\n}: {\n  model: HierarchicalTrackSelectorModel\n  tracks: AnyConfigurationModel[]\n  extraMenuItems: MenuItem[]\n  onClick?: () => void\n  children: React.ReactElement\n}) {\n  const { view } = model\n  const [open, setOpen] = useState(false)\n  const session = getSession(model)\n  return view ? (\n    <CascadingMenuButton\n      closeAfterItemClick={false}\n      onClick={onClick}\n      menuItems={[\n        ...tracks.map(t => ({\n          type: 'checkbox' as const,\n          label: (\n            <>\n              <SanitizedHTML html={getTrackName(t, session)} />{' '}\n              <TrackLabelMenu\n                id={t.trackId}\n                trackId={t.trackId}\n                model={model}\n                conf={t}\n                setOpen={setOpen}\n                stopPropagation\n              />\n            </>\n          ),\n          checked: view.tracks.some(\n            (f: { configuration: AnyConfigurationModel }) =>\n              f.configuration === t,\n          ),\n          onClick: () => {\n            if (!open) {\n              if (model.view.toggleTrack(t.trackId)) {\n                model.addToRecentlyUsed(t.trackId)\n              }\n            }\n          },\n        })),\n        ...extraMenuItems,\n      ]}\n    >\n      {children}\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default DropdownTrackSelector\n","import React from 'react'\n\nimport GradeIcon from '@mui/icons-material/Grade'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n  margin: {\n    marginRight: 10,\n  },\n})\nconst FavoriteTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, favoriteTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setFavoritesCounter(0)\n      }}\n      tracks={favoriteTracks}\n      model={model}\n      extraMenuItems={\n        favoriteTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear favorites',\n                onClick: () => {\n                  model.clearFavorites()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No favorite tracks yet',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Favorite tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          color=\"secondary\"\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          className={classes.margin}\n          badgeContent={model.favoritesCounter}\n        >\n          <GradeIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default FavoriteTracks\n","import React from 'react'\n\nimport HistoryIcon from '@mui/icons-material/History'\nimport { Badge, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport DropdownTrackSelector from './DropdownTrackSelector'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()({\n  smallBadge: {\n    height: 14,\n  },\n})\n\nconst RecentlyUsedTracks = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  const { view, recentlyUsedCounter, recentlyUsedTracks } = model\n  return view ? (\n    <DropdownTrackSelector\n      onClick={() => {\n        model.setRecentlyUsedCounter(0)\n      }}\n      model={model}\n      tracks={recentlyUsedTracks}\n      extraMenuItems={\n        recentlyUsedTracks.length\n          ? [\n              { type: 'divider' as const },\n              {\n                label: 'Clear recently used',\n                onClick: () => {\n                  model.clearRecentlyUsed()\n                },\n              },\n            ]\n          : [\n              {\n                label: 'No recently used',\n                onClick: () => {},\n              },\n            ]\n      }\n    >\n      <Tooltip title=\"Recently used tracks\">\n        <Badge\n          classes={{ badge: classes.smallBadge }}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          color=\"secondary\"\n          badgeContent={recentlyUsedCounter}\n        >\n          <HistoryIcon />\n        </Badge>\n      </Tooltip>\n    </DropdownTrackSelector>\n  ) : null\n})\n\nexport default RecentlyUsedTracks\n","import React from 'react'\n\nimport ClearIcon from '@mui/icons-material/Clear'\nimport { IconButton, InputAdornment, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport HamburgerMenu from './HamburgerMenu'\nimport ShoppingCart from '../ShoppingCart'\nimport FavoriteTracks from './FavoriteTracks'\nimport RecentlyUsedTracks from './RecentlyUsedTracks'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nconst useStyles = makeStyles()(theme => ({\n  searchBox: {\n    margin: theme.spacing(2),\n  },\n}))\n\nconst SearchTracksTextField = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText } = model\n  const { classes } = useStyles()\n  return (\n    <TextField\n      className={classes.searchBox}\n      label=\"Filter tracks\"\n      value={filterText}\n      onChange={event => {\n        model.setFilterText(event.target.value)\n      }}\n      fullWidth\n      slotProps={{\n        input: {\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={() => {\n                  model.clearFilterText()\n                }}\n              >\n                <ClearIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        },\n      }}\n    />\n  )\n})\n\nconst HierarchicalTrackSelectorHeader = observer(function ({\n  model,\n  setHeaderHeight,\n}: {\n  model: HierarchicalTrackSelectorModel\n  setHeaderHeight: (n: number) => void\n}) {\n  return (\n    <div\n      ref={ref => {\n        setHeaderHeight(ref?.getBoundingClientRect().height || 0)\n      }}\n      data-testid=\"hierarchical_track_selector\"\n    >\n      <div style={{ display: 'flex' }}>\n        <HamburgerMenu model={model} />\n        <ShoppingCart model={model} />\n        <SearchTracksTextField model={model} />\n        <RecentlyUsedTracks model={model} />\n        <FavoriteTracks model={model} />\n      </div>\n    </div>\n  )\n})\n\nexport default HierarchicalTrackSelectorHeader\n","import type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { MenuItem } from '@jbrowse/core/ui'\n\nexport interface NodeData {\n  nestingLevel: number\n  checked: boolean\n  conf: AnyConfigurationModel\n  drawerPosition: unknown\n  id: string\n  trackId: string\n  isLeaf: boolean\n  name: string\n  onChange: (trackId: string) => void\n  toggleCollapse: (arg: string) => void\n  tree: TreeNode\n  selected: boolean\n  menuItems?: MenuItem[]\n  model: HierarchicalTrackSelectorModel\n}\n\nexport function getAllChildren(subtree?: TreeNode): AnyConfigurationModel[] {\n  // @ts-expect-error\n  return subtree?.type === 'category'\n    ? subtree.children\n        .map(t => (t.type === 'category' ? getAllChildren(t) : t.conf))\n        .flat(Number.POSITIVE_INFINITY)\n    : []\n}\n\nexport function treeToMap(tree: TreeNode, map = new Map<string, TreeNode>()) {\n  if (tree.id && tree.children.length) {\n    map.set(tree.id, tree)\n  }\n  for (const node of tree.children) {\n    treeToMap(node, map)\n  }\n  return map\n}\n\nexport function isUnsupported(name = '') {\n  return name.endsWith('(Unsupported)') || name.endsWith('(Unknown)')\n}\n","import React, { useState } from 'react'\n\nimport JBrowseMenu from '@jbrowse/core/ui/Menu'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport { IconButton, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { getAllChildren, treeToMap } from '../util'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  contrastColor: {\n    color: theme.palette.tertiary.contrastText,\n  },\n\n  // margin:auto 0 to center text vertically\n  accordionText: {\n    margin: 'auto 0',\n    // width 100 so you can click anywhere on the category bar\n    width: '100%',\n  },\n}))\n\nexport default function Category({\n  isOpen,\n  setOpen,\n  data,\n}: {\n  isOpen: boolean\n  setOpen: (arg: boolean) => void\n  data: NodeData\n}) {\n  const { classes } = useStyles()\n  const [menuEl, setMenuEl] = useState<HTMLElement | null>(null)\n  const { menuItems = [], name, model, id, tree } = data\n\n  return (\n    <div\n      className={classes.accordionText}\n      onClick={() => {\n        if (!menuEl) {\n          data.toggleCollapse(id)\n          setOpen(!isOpen)\n        }\n      }}\n    >\n      <Typography data-testid={`htsCategory-${name}`}>\n        {isOpen ? <ArrowDropDownIcon /> : <ArrowRightIcon />}\n        {name}\n        <IconButton\n          onClick={event => {\n            setMenuEl(event.currentTarget)\n            event.stopPropagation()\n          }}\n          className={classes.contrastColor}\n        >\n          <MoreHorizIcon />\n        </IconButton>\n      </Typography>\n      {menuEl ? (\n        <JBrowseMenu\n          anchorEl={menuEl}\n          menuItems={[\n            {\n              label: 'Add to selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.addToSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Remove from selection',\n              onClick: () => {\n                const r = treeToMap(tree).get(id)\n                model.removeFromSelection(getAllChildren(r))\n              },\n            },\n            {\n              label: 'Show all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.showTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            {\n              label: 'Hide all tracks',\n              onClick: () => {\n                for (const entry of treeToMap(tree).get(id)?.children || []) {\n                  if (entry.type === 'track') {\n                    model.view.hideTrack(entry.trackId)\n                  }\n                }\n              },\n            },\n            ...menuItems,\n          ]}\n          onMenuItemClick={(_event, callback) => {\n            callback()\n            setMenuEl(null)\n          }}\n          open={Boolean(menuEl)}\n          onClose={() => {\n            setMenuEl(null)\n          }}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML'\nimport { Checkbox, FormControlLabel, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { isUnsupported } from '../util'\nimport TrackLabelMenu from './TrackLabelMenu'\n\nimport type { NodeData } from '../util'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()(theme => ({\n  compactCheckbox: {\n    padding: 0,\n  },\n\n  checkboxLabel: {\n    marginRight: 0,\n    '&:hover': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n  selected: {\n    background: '#cccc',\n  },\n}))\n\nexport interface InfoArgs {\n  target: HTMLElement\n  id: string\n  conf: AnyConfigurationModel\n}\n\nexport default function TrackLabel({ data }: { data: NodeData }) {\n  const { classes } = useStyles()\n  const {\n    checked,\n    conf,\n    model,\n    drawerPosition,\n    id,\n    trackId,\n    name,\n    onChange,\n    selected,\n  } = data\n  const description = readConfObject(conf, 'description')\n  return (\n    <>\n      <Tooltip\n        title={description + (selected ? ' (in selection)' : '')}\n        placement={drawerPosition === 'left' ? 'right' : 'left'}\n      >\n        <FormControlLabel\n          className={classes.checkboxLabel}\n          control={\n            <Checkbox\n              className={classes.compactCheckbox}\n              checked={checked}\n              onChange={() => {\n                onChange(trackId)\n              }}\n              disabled={isUnsupported(name)}\n              inputProps={{\n                // @ts-expect-error\n                'data-testid': `htsTrackEntry-${id}`,\n              }}\n            />\n          }\n          label={\n            <div\n              data-testid={`htsTrackLabel-${id}`}\n              style={{ background: selected ? '#cccc' : undefined }}\n            >\n              <SanitizedHTML html={name} />\n            </div>\n          }\n        />\n      </Tooltip>\n      <TrackLabelMenu model={model} trackId={trackId} id={id} conf={conf} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { makeStyles } from 'tss-react/mui'\n\nimport Category from './TrackCategory'\nimport TrackLabel from './TrackLabel'\n\nimport type { NodeData } from '../util'\n\nconst useStyles = makeStyles()(theme => ({\n  // this accordionBase element's small padding is used to give a margin to\n  // accordionColor it a \"margin\" because the virtualized elements can't really\n  // use margin in a conventional way (it doesn't affect layout)\n  accordionBase: {\n    display: 'flex',\n  },\n\n  accordionCard: {\n    padding: 3,\n    cursor: 'pointer',\n    display: 'flex',\n  },\n\n  nestingLevelMarker: {\n    position: 'absolute',\n    borderLeft: '1.5px solid #555',\n  },\n  // accordionColor set's display:flex so that the child accordionText use\n  // vertically centered text\n  accordionColor: {\n    background: theme.palette.tertiary.main,\n    color: theme.palette.tertiary.contrastText,\n    width: '100%',\n    display: 'flex',\n    paddingLeft: 5,\n  },\n}))\n\n// An individual node in the track selector. Note: manually sets cursor:\n// pointer improves usability for what can be clicked\nexport default function Node({\n  data,\n  isOpen,\n  style,\n  setOpen,\n}: {\n  data: NodeData\n  isOpen: boolean\n  style?: { height: number }\n  setOpen: (arg: boolean) => void\n}) {\n  const { isLeaf, nestingLevel } = data\n\n  const { classes } = useStyles()\n  const width = 10\n  const marginLeft = nestingLevel * width + (isLeaf ? width : 0)\n\n  return (\n    <div style={style} className={!isLeaf ? classes.accordionBase : undefined}>\n      {new Array(nestingLevel).fill(0).map((_, idx) => (\n        <div\n          /* biome-ignore lint/suspicious/noArrayIndexKey: */\n          key={`mark-${idx}`}\n          style={{ left: idx * width + 4, height: style?.height }}\n          className={classes.nestingLevelMarker}\n        />\n      ))}\n      <div\n        className={!isLeaf ? classes.accordionCard : undefined}\n        style={{\n          marginLeft,\n          whiteSpace: 'nowrap',\n          width: '100%',\n        }}\n      >\n        <div className={!isLeaf ? classes.accordionColor : undefined}>\n          {!isLeaf ? (\n            <Category isOpen={isOpen} data={data} setOpen={setOpen} />\n          ) : (\n            <TrackLabel data={data} />\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useEffect, useMemo, useRef } from 'react'\n\nimport { getSession } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\nimport { VariableSizeTree } from 'react-vtree'\n\nimport Node from './TrackListNode'\n\nimport type { TreeNode } from '../../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../../model'\n\nfunction getNodeData(\n  node: TreeNode,\n  nestingLevel: number,\n  extra: Record<string, unknown>,\n  selection: Record<string, unknown>,\n) {\n  const isLeaf = node.type === 'track'\n  const selected = isLeaf ? selection[node.trackId] : false\n  return {\n    data: {\n      defaultHeight: isLeaf ? 22 : 40,\n      isLeaf,\n      isOpenByDefault: true,\n      nestingLevel,\n      selected,\n      ...node,\n      ...extra,\n    },\n    nestingLevel,\n    node,\n  }\n}\n\ntype NodeData = ReturnType<typeof getNodeData>\n\n// this is the main tree component for the hierarchical track selector in note:\n// in jbrowse-web the toolbar is position=\"sticky\" which means the autosizer\n// includes the height of the toolbar, so we subtract the given offsets\nconst HierarchicalTree = observer(function HierarchicalTree({\n  height,\n  tree,\n  model,\n}: {\n  height: number\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { filterText, selection, view } = model\n  const treeRef = useRef<NodeData>(null)\n  const session = getSession(model)\n  const { drawerPosition } = session\n  const obj = useMemo(\n    () => Object.fromEntries(selection.map(s => [s.trackId, s])),\n    [selection],\n  )\n\n  const extra = useMemo(\n    () => ({\n      onChange: (trackId: string) => {\n        const trackTurnedOn = view.toggleTrack(trackId)\n        if (trackTurnedOn) {\n          model.addToRecentlyUsed(trackId)\n        }\n      },\n      toggleCollapse: (pathName: string) => {\n        model.toggleCategory(pathName)\n      },\n      tree,\n      model,\n      drawerPosition,\n    }),\n    [view, model, drawerPosition, tree],\n  )\n\n  // doing this properly without ts-expect-error is tricky, react-vtree has\n  // some typescript examples that could help\n  const treeWalker = useCallback(\n    // @ts-expect-error\n    function* treeWalker() {\n      for (const child of tree.children) {\n        yield getNodeData(child, 0, extra, obj)\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      while (true) {\n        // @ts-expect-error\n        const parentMeta = yield\n\n        // @ts-expect-error\n        for (const curr of parentMeta.node.children) {\n          yield getNodeData(curr, parentMeta.nestingLevel + 1, extra, obj)\n        }\n      }\n    },\n    [tree, extra, obj],\n  )\n\n  /* biome-ignore lint/correctness/useExhaustiveDependencies: */\n  useEffect(() => {\n    // @ts-expect-error\n    treeRef.current.recomputeTree({\n      refreshNodes: true,\n      useDefaultHeight: true,\n    })\n  }, [tree, filterText])\n  return (\n    <>\n      {/* @ts-expect-error */}\n      <VariableSizeTree ref={treeRef} treeWalker={treeWalker} height={height}>\n        {/* @ts-expect-error */}\n        {Node}\n      </VariableSizeTree>\n    </>\n  )\n})\n\nexport default HierarchicalTree\n","import React, { useState } from 'react'\n\nimport { observer } from 'mobx-react'\nimport AutoSizer from 'react-virtualized-auto-sizer'\n\nimport HierarchicalFab from './HierarchicalFab'\nimport HierarchicalHeader from './tree/HierarchicalHeader'\nimport HierarchicalTree from './tree/HierarchicalTree'\n\nimport type { TreeNode } from '../generateHierarchy'\nimport type { HierarchicalTrackSelectorModel } from '../model'\n\n// Don't use autosizer in jest and instead hardcode a height, otherwise fails\n// jest tests\nconst AutoSizedHierarchicalTree = ({\n  tree,\n  model,\n  offset,\n}: {\n  tree: TreeNode\n  model: HierarchicalTrackSelectorModel\n  offset: number\n}) => {\n  return typeof jest === 'undefined' ? (\n    <AutoSizer disableWidth>\n      {args => (\n        <HierarchicalTree\n          height={(args.height || offset) - offset}\n          model={model}\n          tree={tree}\n        />\n      )}\n    </AutoSizer>\n  ) : (\n    <HierarchicalTree height={9000} model={model} tree={tree} />\n  )\n}\n\nconst Wrapper = ({\n  overrideDimensions,\n  children,\n}: {\n  overrideDimensions?: { width: number; height: number }\n  children: React.ReactNode\n}) => {\n  return overrideDimensions ? (\n    <div style={{ ...overrideDimensions }}>{children}</div>\n  ) : (\n    children\n  )\n}\nconst HierarchicalTrackSelectorContainer = observer(function ({\n  model,\n  toolbarHeight,\n  overrideDimensions,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight: number\n  overrideDimensions?: { width: number; height: number }\n}) {\n  return (\n    <Wrapper overrideDimensions={overrideDimensions}>\n      <HierarchicalTrackSelector model={model} toolbarHeight={toolbarHeight} />\n      <HierarchicalFab model={model} />\n    </Wrapper>\n  )\n})\n\nconst HierarchicalTrackSelector = observer(function ({\n  model,\n  toolbarHeight = 0,\n}: {\n  model: HierarchicalTrackSelectorModel\n  toolbarHeight?: number\n}) {\n  const [headerHeight, setHeaderHeight] = useState(0)\n  return (\n    <>\n      <HierarchicalHeader model={model} setHeaderHeight={setHeaderHeight} />\n      <AutoSizedHierarchicalTree\n        tree={model.hierarchy}\n        model={model}\n        offset={toolbarHeight + headerHeight}\n      />\n    </>\n  )\n})\n\nexport default HierarchicalTrackSelectorContainer\n","import React from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getEnv, getSession } from '@jbrowse/core/util'\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart'\nimport { Badge } from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport type { HierarchicalTrackSelectorModel } from '../model'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\nconst ShoppingCart = observer(function ({\n  model,\n}: {\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { selection } = model\n  const { pluginManager } = getEnv(model)\n  const session = getSession(model)\n  const items = pluginManager.evaluateExtensionPoint(\n    'TrackSelector-multiTrackMenuItems',\n    [],\n    { session },\n  ) as MenuItem[]\n\n  return selection.length ? (\n    <CascadingMenuButton\n      menuItems={[\n        {\n          label: 'Clear',\n          onClick: () => {\n            model.clearSelection()\n          },\n        },\n        ...items.map(item => ({\n          ...item,\n          ...('onClick' in item\n            ? {\n                onClick: () => {\n                  item.onClick(model)\n                },\n              }\n            : {}),\n        })),\n      ]}\n    >\n      <Badge badgeContent={selection.length} color=\"primary\">\n        <ShoppingCartIcon />\n      </Badge>\n    </CascadingMenuButton>\n  ) : null\n})\n\nexport default ShoppingCart\n","import React from 'react'\n\nimport CascadingMenuButton from '@jbrowse/core/ui/CascadingMenuButton'\nimport { getSession } from '@jbrowse/core/util'\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz'\nimport FilledStarIcon from '@mui/icons-material/Star'\nimport StarIcon from '@mui/icons-material/StarBorderOutlined'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { HierarchicalTrackSelectorModel } from '../../model'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\nconst useStyles = makeStyles()({\n  cascadingStyle: {\n    padding: 0,\n  },\n})\n\nconst TrackLabelMenu = function ({\n  id,\n  trackId,\n  stopPropagation,\n  model,\n  setOpen,\n  conf,\n}: {\n  id: string\n  trackId: string\n  stopPropagation?: boolean\n  conf: AnyConfigurationModel\n  setOpen?: (arg: boolean) => void\n  model: HierarchicalTrackSelectorModel\n}) {\n  const { classes } = useStyles()\n  return (\n    <CascadingMenuButton\n      className={classes.cascadingStyle}\n      stopPropagation={stopPropagation}\n      setOpen={setOpen}\n      data-testid={`htsTrackEntryMenu-${id}`}\n      menuItems={[\n        ...(getSession(model).getTrackActionMenuItems?.(conf) || []),\n        model.isFavorite(trackId)\n          ? {\n              label: 'Remove from favorites',\n              onClick: () => {\n                model.removeFromFavorites(trackId)\n              },\n              icon: StarIcon,\n            }\n          : {\n              label: 'Add to favorites',\n              onClick: () => {\n                model.addToFavorites(trackId)\n              },\n              icon: FilledStarIcon,\n            },\n        {\n          label: 'Add to selection',\n          onClick: () => {\n            model.addToSelection([conf])\n          },\n        },\n        ...(model.isSelected(conf)\n          ? [\n              {\n                label: 'Remove from selection',\n                onClick: () => {\n                  model.removeFromSelection([conf])\n                },\n              },\n            ]\n          : []),\n      ]}\n    >\n      <MoreHorizIcon />\n    </CascadingMenuButton>\n  )\n}\n\nexport default TrackLabelMenu\n"],"names":["useStyles","makeStyles","theme","fab","position","bottom","spacing","right","observer","model","classes","session","getSession","anchorEl","setAnchorEl","useState","handleFabClose","hasConnections","isSessionModelWithConnections","hasAddTrack","isSessionWithAddTracks","React","Fab","color","className","onClick","event","currentTarget","AddIcon","Menu","open","Boolean","onClose","MenuItem","isSessionModelWithWidgets","showWidget","addWidget","view","id","FacetedDialog","lazy","CloseConnectionDialog","DeleteConnectionDialog","ManageConnectionsDialog","ToggleConnectionsDialog","modalInfo","setModalInfo","deleteDialogDetails","setDeleteDialogDetails","connectionToggleOpen","setConnectionToggleOpen","connectionManagerOpen","setConnectionManagerOpen","facetedOpen","setFacetedOpen","breakConnection","connectionConf","deletingConnection","name","readConfObject","result","prepareToBreakConnection","safelyBreakConnection","dereferenceTypeCount","Object","keys","length","CascadingMenuButton","menuItems","label","subMenu","isSessionModelWithConnectionEditing","type","checked","activeSortTrackNames","setSortTrackNames","activeSortCategories","setSortCategories","hasAnySubcategories","collapseSubCategories","collapseTopLevelCategories","expandAllCategories","MenuIcon","Suspense","fallback","undefined","handleClose","tracks","extraMenuItems","children","setOpen","closeAfterItemClick","map","t","SanitizedHTML","html","getTrackName","TrackLabelMenu","trackId","conf","stopPropagation","some","f","configuration","toggleTrack","addToRecentlyUsed","smallBadge","height","margin","marginRight","favoriteTracks","DropdownTrackSelector","setFavoritesCounter","clearFavorites","Tooltip","title","Badge","badge","anchorOrigin","vertical","horizontal","badgeContent","favoritesCounter","GradeIcon","recentlyUsedCounter","recentlyUsedTracks","setRecentlyUsedCounter","clearRecentlyUsed","HistoryIcon","searchBox","SearchTracksTextField","filterText","TextField","value","onChange","setFilterText","target","fullWidth","slotProps","input","endAdornment","InputAdornment","IconButton","clearFilterText","ClearIcon","setHeaderHeight","ref","getBoundingClientRect","style","display","HamburgerMenu","ShoppingCart","RecentlyUsedTracks","FavoriteTracks","getAllChildren","subtree","flat","Number","POSITIVE_INFINITY","treeToMap","tree","Map","set","node","isUnsupported","endsWith","contrastColor","palette","tertiary","contrastText","accordionText","width","Category","isOpen","data","menuEl","setMenuEl","toggleCollapse","Typography","ArrowDropDownIcon","ArrowRightIcon","MoreHorizIcon","JBrowseMenu","r","get","addToSelection","removeFromSelection","entry","showTrack","hideTrack","onMenuItemClick","_event","callback","compactCheckbox","padding","checkboxLabel","backgroundColor","action","selected","background","TrackLabel","drawerPosition","description","placement","FormControlLabel","control","Checkbox","disabled","inputProps","accordionBase","accordionCard","cursor","nestingLevelMarker","borderLeft","accordionColor","main","paddingLeft","Node","isLeaf","nestingLevel","marginLeft","Array","fill","_","idx","key","left","whiteSpace","getNodeData","extra","selection","defaultHeight","isOpenByDefault","treeRef","useRef","obj","useMemo","fromEntries","s","pathName","toggleCategory","treeWalker","useCallback","child","parentMeta","curr","useEffect","current","recomputeTree","refreshNodes","useDefaultHeight","VariableSizeTree","AutoSizedHierarchicalTree","offset","jest","AutoSizer","disableWidth","args","HierarchicalTree","Wrapper","overrideDimensions","HierarchicalTrackSelectorContainer","toolbarHeight","HierarchicalTrackSelector","HierarchicalFab","headerHeight","HierarchicalHeader","hierarchy","pluginManager","getEnv","items","evaluateExtensionPoint","clearSelection","item","ShoppingCartIcon","cascadingStyle","getTrackActionMenuItems","isFavorite","removeFromFavorites","icon","StarIcon","addToFavorites","FilledStarIcon","isSelected"],"sourceRoot":""}