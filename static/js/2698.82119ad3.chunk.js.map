{"version":3,"file":"static/js/2698.82119ad3.chunk.js","mappings":"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","sources":["../../../packages/core/ui/Menu.tsx","../../../packages/core/util/types/mst.ts","../../../packages/core/ui/BaseTooltip.tsx","../../../packages/core/ui/SanitizedHTML.tsx","../../../plugins/data-management/src/index.ts","sessionSharing.ts","../../../packages/core/ui/CascadingMenuButton.tsx","../../../packages/product-core/src/Session/DrawerWidgets.ts","../../../packages/core/ui/Logo.tsx","../../../packages/core/ui/LoadingEllipses.tsx","../../../packages/core/ui/ErrorMessage.tsx","../../../packages/core/ui/Snackbar.tsx","../../../packages/app-core/src/ui/App/AppFab.tsx","../../../packages/core/ui/AppLogo.tsx","../../../packages/core/ui/DropDownMenu.tsx","../../../packages/app-core/src/ui/App/AppToolbar.tsx","../../../packages/app-core/src/ui/App/DialogQueue.tsx","../../../packages/app-core/src/ui/App/ViewContainerTitle.tsx","../../../packages/app-core/src/ui/App/ViewMenu.tsx","../../../packages/app-core/src/ui/App/ViewHeader.tsx","../../../packages/app-core/src/ui/App/ViewWrapper.tsx","../../../packages/app-core/src/ui/App/ViewContainer.tsx","../../../packages/app-core/src/ui/App/ViewsContainer.tsx","../../../packages/app-core/src/ui/App/App.tsx","../../../packages/core/util/TimeTraveller.ts","../../../packages/core/rpc/BaseRpcDriver.ts","../../../packages/core/rpc/MainThreadRpcDriver.ts","../../../packages/core/rpc/WebWorkerRpcDriver.ts","../../../packages/core/rpc/baseRpcConfig.ts","../../../packages/core/rpc/mainThreadRpcConfig.ts","../../../packages/core/rpc/webWorkerRpcConfig.ts","../../../packages/core/rpc/configSchema.ts","../../../packages/core/rpc/RpcManager.ts","../../../packages/app-core/src/menus.ts","components/ShareButton.tsx","components/JBrowse.tsx","SessionLoader.ts","../../../packages/core/assemblyManager/assembly.ts","makeWorkerInstance.ts","jbrowseModel.ts","rootModel/rootModel.ts","../../../packages/core/assemblyManager/assemblyConfigSchema.ts","../../../packages/app-core/src/JBrowseModel/index.ts","../../../packages/app-core/src/JBrowseConfig/index.ts","../../../packages/product-core/src/RootModel/FormatDetails.ts","../../../packages/product-core/src/RootModel/FormatAbout.ts","../../../packages/product-core/src/RootModel/HierarchicalConfig.ts","../../../packages/product-core/src/RootModel/BaseRootModel.ts","../../../packages/core/assemblyManager/assemblyManager.ts","../../../packages/product-core/src/RootModel/InternetAccounts.ts","../../../packages/app-core/src/HistoryManagement/index.ts","../../../packages/app-core/src/RootMenu/index.ts","../../../packages/core/ui/SnackbarModel.tsx","../../../packages/product-core/src/Session/ReferenceManagement.ts","../../../packages/web-core/src/BaseWebSession/index.ts","../../../packages/product-core/src/Session/DialogQueue.ts","../../../packages/product-core/src/Session/Themes.ts","../../../packages/product-core/src/Session/SessionTracks.ts","../../../packages/product-core/src/Session/Tracks.ts","../../../packages/app-core/src/Assemblies/SessionAssembliesMixin.ts","../../../packages/app-core/src/Assemblies/TemporaryAssembliesMixin.ts","../../../packages/web-core/src/SessionConnections.ts","../../../packages/app-core/src/AppFocus/index.ts","sessionModel/index.ts","createPluginManager.ts","loadHubSpec.ts","loadSessionSpec.ts","../../../packages/core/util/analytics.ts","components/Loader.tsx","../../../packages/core/util/QuickLRU.js","../../../packages/product-core/src/Session/BaseSession.ts","../../../packages/product-core/src/Session/Connections.ts","util.ts","factoryReset.ts","../../../packages/core/ui/ExternalLink.tsx","../../../packages/core/PluginLoader.ts","../../../packages/core/ui/ResizeHandle.tsx","../../../packages/core/ui/AssemblySelector.tsx","../../../packages/core/ui/FileSelector/FileSelector.tsx","../../../packages/core/ui/PrerenderedCanvas.tsx","../../../packages/core/ui/index.ts","../../../packages/core/ui/theme.ts","../../../packages/product-core/src/Session/MultipleViews.ts","../../../packages/core/ui/CascadingMenu.tsx","../../../packages/core/ui/EditableTypography.tsx","../../../packages/core/ui/Icons.tsx","../../../packages/core/util/tracks.ts","../../../packages/core/ui/Dialog.tsx","../../../packages/core/util/index.ts"],"sourcesContent":["import { forwardRef, useEffect, useRef, useState } from 'react'\n\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight'\nimport CheckBoxIcon from '@mui/icons-material/CheckBox'\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank'\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked'\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked'\nimport {\n  Divider,\n  Grow,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  MenuItem as MUIMenuItem,\n  MenuList,\n  Paper,\n  Popover,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// other\nimport { findLastIndex } from '../util'\n\nimport type {\n  MenuItemProps,\n  MenuProps as MUIMenuProps,\n  PopoverProps,\n  SvgIconProps,\n} from '@mui/material'\n\nconst useStyles = makeStyles()({\n  paper: {\n    position: 'fixed',\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    // So we see the popover when it's empty.\n    minWidth: 16,\n    minHeight: 16,\n    maxWidth: 'calc(100% - 32px)',\n    maxHeight: 'calc(100% - 32px)',\n    top: 0,\n    left: 0,\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n  },\n  menuItemEndDecoration: {\n    padding: 0,\n    margin: 0,\n    height: 16,\n  },\n})\n\ninterface MenuItemEndDecorationSubMenuProps {\n  type: 'subMenu'\n}\n\ninterface MenuItemEndDecorationSelectorProps {\n  type: 'checkbox' | 'radio'\n  checked: boolean\n  disabled?: boolean\n}\n\ntype MenuItemEndDecorationProps =\n  | MenuItemEndDecorationSubMenuProps\n  | MenuItemEndDecorationSelectorProps\n\nexport function MenuItemEndDecoration(props: MenuItemEndDecorationProps) {\n  const { classes } = useStyles()\n  const { type } = props\n  let checked: boolean | undefined\n  let disabled: boolean | undefined\n  if ('checked' in props) {\n    ;({ checked, disabled } = props)\n  }\n  let icon: React.ReactElement\n  switch (type) {\n    case 'subMenu': {\n      icon = <ArrowRightIcon color=\"action\" />\n      break\n    }\n    case 'checkbox': {\n      if (checked) {\n        const color = disabled ? 'inherit' : undefined\n        icon = <CheckBoxIcon color={color} />\n      } else {\n        icon = <CheckBoxOutlineBlankIcon color=\"action\" />\n      }\n      break\n    }\n    case 'radio': {\n      if (checked) {\n        const color = disabled ? 'inherit' : undefined\n        icon = <RadioButtonCheckedIcon color={color} />\n      } else {\n        icon = <RadioButtonUncheckedIcon color=\"action\" />\n      }\n      break\n    }\n    // No default\n  }\n  return <div className={classes.menuItemEndDecoration}>{icon}</div>\n}\n\nexport interface MenuDivider {\n  priority?: number\n  type: 'divider'\n}\n\nexport interface MenuSubHeader {\n  type: 'subHeader'\n  priority?: number\n  label: string\n}\n\nexport interface BaseMenuItem {\n  id?: string // used as react key if provided\n  label: React.ReactNode\n  priority?: number\n  subLabel?: string\n  icon?: React.ComponentType<SvgIconProps>\n  disabled?: boolean\n}\n\nexport interface NormalMenuItem extends BaseMenuItem {\n  type?: 'normal'\n  onClick: (...args: any[]) => void\n}\n\nexport interface CheckboxMenuItem extends BaseMenuItem {\n  type: 'checkbox'\n  checked: boolean\n  onClick: (...args: any[]) => void\n}\n\nexport interface RadioMenuItem extends BaseMenuItem {\n  type: 'radio'\n  checked: boolean\n  onClick: (...args: any[]) => void\n}\n\nexport interface SubMenuItem extends BaseMenuItem {\n  type?: 'subMenu'\n  subMenu: MenuItem[]\n}\n\nexport type MenuItem =\n  | MenuDivider\n  | MenuSubHeader\n  | NormalMenuItem\n  | CheckboxMenuItem\n  | RadioMenuItem\n  | SubMenuItem\n\ntype AnchorElProp = MUIMenuProps['anchorEl']\ntype OpenProp = MUIMenuProps['open']\ntype OnCloseProp = MUIMenuProps['onClose']\n\ninterface MenuPageProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement>,\n    callback: (...args: any[]) => void,\n  ) => void\n  anchorEl?: AnchorElProp\n  open: OpenProp\n  onClose: OnCloseProp\n  top?: boolean\n}\n\ntype MenuItemStyleProp = MenuItemProps['style']\n\nfunction checkIfValid(m: MenuItem) {\n  return m.type !== 'divider' && m.type !== 'subHeader' && !m.disabled\n}\nfunction findNextValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  const idx = menuItems.slice(currentIdx + 1).findIndex(checkIfValid)\n  if (idx === -1) {\n    return idx\n  }\n  return currentIdx + 1 + idx\n}\n\nfunction findPreviousValidIdx(menuItems: MenuItem[], currentIdx: number) {\n  return findLastIndex(menuItems.slice(0, currentIdx), checkIfValid)\n}\n\nconst MenuPage = forwardRef<HTMLDivElement, MenuPageProps>(\n  function MenuPage2(props, ref) {\n    const [subMenuAnchorEl, setSubMenuAnchorEl] = useState<HTMLElement>()\n    const [openSubMenuIdx, setOpenSubMenuIdx] = useState<number>()\n    const [isSubMenuOpen, setIsSubMenuOpen] = useState(false)\n    const [selectedMenuItemIdx, setSelectedMenuItemIdx] = useState<number>()\n    const [position, setPosition] = useState<{\n      top?: number\n      left?: number\n    }>()\n    const paperRef = useRef<HTMLDivElement | null>(null)\n    const { classes } = useStyles()\n\n    const {\n      menuItems,\n      onMenuItemClick,\n      open,\n      onClose,\n      anchorEl,\n      top = false,\n    } = props\n\n    useEffect(() => {\n      if (!open) {\n        setSubMenuAnchorEl(undefined)\n        setOpenSubMenuIdx(undefined)\n      }\n    }, [open])\n\n    useEffect(() => {\n      const shouldSubMenuBeOpen = open && Boolean(subMenuAnchorEl)\n      let timer: ReturnType<typeof setTimeout>\n      if (shouldSubMenuBeOpen && !isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(true)\n        }, 300)\n      } else if (!shouldSubMenuBeOpen && isSubMenuOpen) {\n        timer = setTimeout(() => {\n          setIsSubMenuOpen(false)\n        }, 300)\n      }\n      return () => {\n        clearTimeout(timer)\n      }\n    }, [isSubMenuOpen, open, subMenuAnchorEl])\n\n    useEffect(() => {\n      if (anchorEl) {\n        const rect = (anchorEl as HTMLElement).getBoundingClientRect()\n        if (position) {\n          if (\n            rect.top !== position.top ||\n            rect.left + rect.width !== position.left\n          ) {\n            setPosition({ top: rect.top, left: rect.left + rect.width })\n          }\n        } else {\n          setPosition({ top: rect.top, left: rect.left + rect.width })\n        }\n      } else if (!position) {\n        setPosition({})\n      }\n    }, [position, anchorEl])\n\n    const hasIcon = menuItems.some(\n      menuItem => 'icon' in menuItem && menuItem.icon,\n    )\n    const menuItemStyle: MenuItemStyleProp = {}\n\n    function handleClick(callback: (...args: any[]) => void) {\n      return (event: React.MouseEvent<HTMLLIElement>) => {\n        onMenuItemClick(event, callback)\n      }\n    }\n\n    const ListContents = (\n      <>\n        <MenuList autoFocusItem={open && !isSubMenuOpen} dense>\n          {menuItems\n            .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n            .map((menuItem, idx) => {\n              if (menuItem.type === 'divider') {\n                return (\n                  <Divider\n                    key={`divider-${JSON.stringify(menuItem)}-${idx}`}\n                    component=\"li\"\n                  />\n                )\n              }\n              if (menuItem.type === 'subHeader') {\n                return (\n                  <ListSubheader key={`subHeader-${menuItem.label}-${idx}`}>\n                    {menuItem.label}\n                  </ListSubheader>\n                )\n              }\n              let icon = null\n              let endDecoration = null\n              if (menuItem.icon) {\n                const Icon = menuItem.icon\n                icon = (\n                  <ListItemIcon>\n                    <Icon />\n                  </ListItemIcon>\n                )\n              }\n              if ('subMenu' in menuItem) {\n                endDecoration = <MenuItemEndDecoration type=\"subMenu\" />\n              } else if (\n                menuItem.type === 'checkbox' ||\n                menuItem.type === 'radio'\n              ) {\n                endDecoration = (\n                  <MenuItemEndDecoration\n                    type={menuItem.type}\n                    checked={menuItem.checked}\n                    disabled={menuItem.disabled}\n                  />\n                )\n              }\n              const onClick =\n                'onClick' in menuItem\n                  ? handleClick(menuItem.onClick)\n                  : undefined\n              return (\n                <MUIMenuItem\n                  key={menuItem.id || String(menuItem.label)}\n                  style={menuItemStyle}\n                  selected={idx === selectedMenuItemIdx}\n                  onClick={onClick}\n                  onMouseMove={e => {\n                    if (e.currentTarget !== document.activeElement) {\n                      e.currentTarget.focus()\n                      setSelectedMenuItemIdx(idx)\n                    }\n                    if ('subMenu' in menuItem) {\n                      if (openSubMenuIdx !== idx) {\n                        setSubMenuAnchorEl(e.currentTarget)\n                        setOpenSubMenuIdx(idx)\n                      }\n                    } else {\n                      setSubMenuAnchorEl(undefined)\n                      setOpenSubMenuIdx(undefined)\n                    }\n                  }}\n                  onKeyDown={e => {\n                    switch (e.key) {\n                      case 'ArrowLeft':\n                      case 'Escape': {\n                        onClose?.(e, 'escapeKeyDown')\n\n                        break\n                      }\n                      case 'ArrowUp': {\n                        setSelectedMenuItemIdx(\n                          findPreviousValidIdx(menuItems, idx),\n                        )\n\n                        break\n                      }\n                      case 'ArrowDown': {\n                        const a = findNextValidIdx(menuItems, idx)\n                        setSelectedMenuItemIdx(a)\n\n                        break\n                      }\n                      default: {\n                        if (\n                          'subMenu' in menuItem &&\n                          (e.key === 'ArrowRight' || e.key === 'Enter')\n                        ) {\n                          setSubMenuAnchorEl(e.currentTarget)\n                          setOpenSubMenuIdx(idx)\n                          setIsSubMenuOpen(true)\n                        }\n                      }\n                    }\n                  }}\n                  disabled={Boolean(menuItem.disabled)}\n                >\n                  {icon}\n                  <ListItemText\n                    primary={menuItem.label}\n                    secondary={menuItem.subLabel}\n                    inset={hasIcon && !menuItem.icon}\n                  />\n                  {endDecoration}\n                </MUIMenuItem>\n              )\n            })}\n        </MenuList>\n        {menuItems.map((menuItem, idx) => {\n          let subMenu = null\n          if ('subMenu' in menuItem) {\n            subMenu = (\n              <MenuPage\n                key={menuItem.id || String(menuItem.label)}\n                anchorEl={subMenuAnchorEl}\n                open={isSubMenuOpen && openSubMenuIdx === idx}\n                onClose={() => {\n                  setIsSubMenuOpen(false)\n                  setSubMenuAnchorEl(undefined)\n                }}\n                onMenuItemClick={onMenuItemClick}\n                menuItems={menuItem.subMenu}\n              />\n            )\n          }\n          return subMenu\n        })}\n      </>\n    )\n\n    return top ? (\n      ListContents\n    ) : (\n      // Grow is required for cascading sub-menus\n      <Grow in={open} style={{ transformOrigin: '0 0 0' }} ref={ref}>\n        <Paper\n          elevation={8}\n          ref={paperRef}\n          className={classes.paper}\n          style={{ ...position }}\n        >\n          {ListContents}\n        </Paper>\n      </Grow>\n    )\n  },\n)\n\ninterface MenuProps extends PopoverProps {\n  menuItems: MenuItem[]\n  onMenuItemClick: (\n    event: React.MouseEvent<HTMLLIElement>,\n    callback: (...args: any[]) => void,\n  ) => void\n}\n\nfunction Menu(props: MenuProps) {\n  const { open, onClose, menuItems, onMenuItemClick, ...other } = props\n\n  return (\n    <Popover\n      open={open}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n        ...other.anchorOrigin,\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n        ...other.transformOrigin,\n      }}\n      {...other}\n    >\n      <MenuPage\n        open={open}\n        onClose={onClose}\n        menuItems={menuItems}\n        onMenuItemClick={onMenuItemClick}\n        top\n      />\n    </Popover>\n  )\n}\n\nexport default Menu\n","import { types } from 'mobx-state-tree'\n\nimport { nanoid } from '../nanoid'\n\nexport const ElementId = types.optional(types.identifier, () => nanoid())\n\nexport const NoAssemblyRegion = types\n  .model('NoAssemblyRegion', {\n    refName: types.string,\n    start: types.number,\n    end: types.number,\n    reversed: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    setRefName(newRefName: string): void {\n      self.refName = newRefName\n    },\n  }))\n\nexport const Region = types.compose(\n  'Region',\n  NoAssemblyRegion,\n  types.model({\n    assemblyName: types.string,\n  }),\n)\n\nexport const LocalPathLocation = types.model('LocalPathLocation', {\n  locationType: types.literal('LocalPathLocation'),\n  localPath: types.string,\n})\n\n// like how blobId is used to get a blob map\nexport const BlobLocation = types.model('BlobLocation', {\n  locationType: types.literal('BlobLocation'),\n  name: types.string,\n  blobId: types.string,\n})\n\nexport const UriLocationRaw = types.model('UriLocation', {\n  locationType: types.literal('UriLocation'),\n  uri: types.string,\n  baseUri: types.maybe(types.string),\n\n  internetAccountId: types.maybe(types.string),\n\n  // auths information (such as tokens) needed for using this resource.\n  // if provided, these must be completely sufficient for using it\n  internetAccountPreAuthorization: types.maybe(\n    types.model('InternetAccountPreAuthorization', {\n      internetAccountType: types.string,\n      authInfo: types.frozen(),\n    }),\n  ),\n})\n\nexport const UriLocation = types.snapshotProcessor(UriLocationRaw, {\n  postProcessor: snap => {\n    // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n    const { baseUri, ...rest } = snap as Omit<typeof snap, symbol>\n    if (!baseUri) {\n      return rest\n    }\n    return snap\n  },\n})\n\nexport const FileLocation = types.snapshotProcessor(\n  types.union(LocalPathLocation, UriLocation, BlobLocation),\n  {\n    // @ts-expect-error\n    preProcessor(snap) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!snap) {\n        return undefined\n      }\n\n      // @ts-expect-error\n      // xref https://github.com/mobxjs/mobx-state-tree/issues/1524 for Omit\n      const { locationType, ...rest } = snap as Omit<typeof snap, symbol>\n      if (!locationType) {\n        // @ts-expect-error\n        const { uri, localPath, blob } = rest\n        let locationType = ''\n        if (uri !== undefined) {\n          locationType = 'UriLocation'\n        } else if (localPath !== undefined) {\n          locationType = 'LocalPathLocation'\n        } else if (blob !== undefined) {\n          locationType = 'BlobLocation'\n        }\n\n        return { ...rest, locationType }\n      }\n      return snap\n    },\n  },\n)\n","import {\n  offset,\n  useClientPoint,\n  useFloating,\n  useInteractions,\n} from '@floating-ui/react'\nimport { Portal, alpha, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nfunction round(value: number) {\n  return Math.round(value * 1e5) / 1e5\n}\n\nconst useStyles = makeStyles()(theme => ({\n  // these styles come from\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Tooltip/Tooltip.js\n  tooltip: {\n    position: 'absolute',\n    pointerEvents: 'none',\n    backgroundColor: alpha(theme.palette.grey[700], 0.9),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.fontSize,\n    lineHeight: `${round(14 / 10)}em`,\n    maxWidth: 300,\n    wordWrap: 'break-word',\n  },\n}))\n\nexport default function BaseTooltip({\n  clientPoint: clientPointCoords,\n  children,\n  placement = 'right',\n}: {\n  placement?: 'left' | 'right'\n  clientPoint?: { x: number; y: number }\n  children: React.ReactNode\n}) {\n  const theme = useTheme()\n  const popperTheme = theme.components?.MuiPopper\n  const { classes } = useStyles()\n  const { refs, floatingStyles, context } = useFloating({\n    placement,\n    strategy: 'fixed',\n    middleware: [offset(5)],\n  })\n\n  const clientPoint = useClientPoint(context, clientPointCoords)\n  const { getFloatingProps } = useInteractions([clientPoint])\n  return (\n    <Portal container={popperTheme?.defaultProps?.container}>\n      <div\n        className={classes.tooltip}\n        ref={refs.setFloating}\n        style={{\n          ...floatingStyles,\n          zIndex: 100000,\n          // workaround for tooltips flashing at top left corner of screen\n          // when first appearing\n          visibility:\n            floatingStyles.transform === 'translate(0px, 0px)'\n              ? 'hidden'\n              : undefined,\n          pointerEvents: 'none',\n        }}\n        {...getFloatingProps()}\n      >\n        {children}\n      </div>\n    </Portal>\n  )\n}\n","import dompurify from 'dompurify'\nimport escapeHTML from 'escape-html'\n\nimport { linkify } from '../util'\n\n// source https://github.com/sindresorhus/html-tags/blob/master/html-tags.json\n// with some random uncommon ones removed. note: we just use this to run the content\n// through dompurify without escaping if we see an htmlTag from this list\n// otherwise we escape angle brackets and things prematurely because it might be\n// something like <TRA> in VCF. Ref #657\nconst htmlTags = [\n  'a',\n  'b',\n  'br',\n  'code',\n  'div',\n  'em',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'i',\n  'img',\n  'li',\n  'p',\n  'pre',\n  'span',\n  'small',\n  'strong',\n  'table',\n  'tbody',\n  'sup',\n  'sub',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'u',\n  'ul',\n]\n\nlet added = false\n\n// adapted from is-html\n// https://github.com/sindresorhus/is-html/blob/master/index.js\nconst full = new RegExp(htmlTags.map(tag => `<${tag}\\\\b[^>]*>`).join('|'), 'i')\nfunction isHTML(str: string) {\n  return full.test(str)\n}\n\n// note this is mocked during testing, see\n// packages/__mocks__/@jbrowse/core/ui/SanitizedHTML something about dompurify\n// behavior causes errors during tests, was seen in\n// products/jbrowse-web/src/tests/Connection.test.tsx test (can delete mock to\n// see)\n//\nexport default function SanitizedHTML({\n  html: pre,\n  className,\n}: {\n  className?: string\n  html: unknown\n}) {\n  // try to add links to the text first\n  const html = linkify(`${pre}`)\n  const value = isHTML(html) ? html : escapeHTML(html)\n  if (!added) {\n    // eslint-disable-next-line react-compiler/react-compiler\n    added = true\n    // see https://github.com/cure53/DOMPurify/issues/317\n    // only have to add this once, and can't do it globally because dompurify\n    // not yet initialized at global scope\n    dompurify.addHook('afterSanitizeAttributes', node => {\n      if (node.tagName === 'A') {\n        node.setAttribute('rel', 'noopener noreferrer')\n        node.setAttribute('target', '_blank')\n      }\n    })\n  }\n\n  return (\n    <span\n      className={className}\n      dangerouslySetInnerHTML={{\n        __html: dompurify.sanitize(value),\n      }}\n    />\n  )\n}\n","import { lazy } from 'react'\n\nimport Plugin from '@jbrowse/core/Plugin'\n\nimport AddConnectionWidgetF from './AddConnectionWidget'\nimport AddTrackWidgetF from './AddTrackWidget'\nimport HierarchicalTrackSelectorWidgetF from './HierarchicalTrackSelectorWidget'\nimport PluginStoreWidgetF from './PluginStoreWidget'\nimport UCSCTrackHubConnectionF from './UCSCTrackHub'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst AssemblyManager = lazy(() => import('./AssemblyManager'))\n\nexport default class DataManagementPlugin extends Plugin {\n  name = 'DataManagementPlugin'\n\n  exports = {\n    AssemblyManager,\n  }\n\n  install(pluginManager: PluginManager) {\n    UCSCTrackHubConnectionF(pluginManager)\n    AddTrackWidgetF(pluginManager)\n    HierarchicalTrackSelectorWidgetF(pluginManager)\n    AddConnectionWidgetF(pluginManager)\n    PluginStoreWidgetF(pluginManager)\n  }\n\n  configure(_pluginManager: PluginManager) {}\n}\n\nexport { AssemblyManager }\n\nexport type { AddTrackModel } from './AddTrackWidget/model'\nexport type { HierarchicalTrackSelectorModel } from './HierarchicalTrackSelectorWidget'\n","import { toUrlSafeB64 } from './util'\n\n// from https://stackoverflow.com/questions/1349404/\nfunction generateUID(length: number) {\n  return window\n    .btoa(\n      [...window.crypto.getRandomValues(new Uint8Array(length * 2))]\n        .map(b => String.fromCharCode(b))\n        .join(''),\n    )\n    .replaceAll(/[+/]/g, '')\n    .slice(0, length)\n}\n\nconst encrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  return AES.encrypt(text, password).toString()\n}\n\nconst decrypt = async (text: string, password: string) => {\n  const AES = await import('crypto-js/aes')\n  const Utf8 = await import('crypto-js/enc-utf8')\n  const bytes = AES.decrypt(text, password)\n  return bytes.toString(Utf8)\n}\n\nfunction getErrorMsg(err: string) {\n  try {\n    const obj = JSON.parse(err)\n    return obj.message\n  } catch (e) {\n    return err\n  }\n}\n// writes the encrypted session, current datetime, and referer to DynamoDB\nexport async function shareSessionToDynamo(\n  session: unknown,\n  url: string,\n  referer: string,\n) {\n  const sess = await toUrlSafeB64(JSON.stringify(session))\n  const password = generateUID(5)\n  const encryptedSession = await encrypt(sess, password)\n\n  const data = new FormData()\n  data.append('session', encryptedSession)\n  data.append('dateShared', `${Date.now()}`)\n  data.append('referer', referer)\n\n  const response = await fetch(`${url}share`, {\n    method: 'POST',\n    mode: 'cors',\n    body: data,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n  const json = await response.json()\n  return {\n    json,\n    encryptedSession,\n    password,\n  }\n}\n\nexport async function readSessionFromDynamo(\n  baseUrl: string,\n  sessionQueryParam: string,\n  password: string,\n  signal?: AbortSignal,\n) {\n  const sessionId = sessionQueryParam.split('share-')[1]!\n  const url = `${baseUrl}?sessionId=${encodeURIComponent(sessionId)}`\n  const response = await fetch(url, {\n    signal,\n  })\n\n  if (!response.ok) {\n    const err = await response.text()\n    throw new Error(getErrorMsg(err))\n  }\n\n  const json = await response.json()\n  return decrypt(json.session, password)\n}\n","import { useEffect } from 'react'\n\nimport CascadingMenu from '@jbrowse/core/ui/CascadingMenu'\nimport { IconButton } from '@mui/material'\nimport {\n  bindPopover,\n  bindTrigger,\n  usePopupState,\n} from 'material-ui-popup-state/hooks'\nimport { observer } from 'mobx-react'\n\nimport type { MenuItem } from '@jbrowse/core/ui'\n\nconst CascadingMenuButton = observer(function CascadingMenuButton({\n  children,\n  menuItems,\n  closeAfterItemClick = true,\n  stopPropagation,\n  setOpen,\n  onClick: onClickExtra,\n  ...rest\n}: {\n  children?: React.ReactElement\n  menuItems: MenuItem[]\n  closeAfterItemClick?: boolean\n  stopPropagation?: boolean\n  onClick?: () => void\n  setOpen?: (arg: boolean) => void\n  [key: string]: unknown\n}) {\n  const popupState = usePopupState({\n    popupId: 'viewMenu',\n    variant: 'popover',\n  })\n  const { onClick, onTouchStart, ...rest2 } = bindTrigger(popupState)\n  const { isOpen } = popupState\n  useEffect(() => {\n    setOpen?.(isOpen)\n  }, [isOpen, setOpen])\n\n  return (\n    <>\n      <IconButton\n        onClick={event => {\n          if (stopPropagation) {\n            event.stopPropagation()\n          }\n          onClick(event)\n          onClickExtra?.()\n        }}\n        onTouchStart={event => {\n          if (stopPropagation) {\n            event.stopPropagation()\n          }\n          onTouchStart(event)\n          onClickExtra?.()\n        }}\n        {...rest2}\n        {...rest}\n        disabled={menuItems.length === 0}\n      >\n        {children}\n      </IconButton>\n      <CascadingMenu\n        {...bindPopover(popupState)}\n        onMenuItemClick={(_: unknown, callback: () => void) => {\n          callback()\n        }}\n        menuItems={menuItems}\n        closeAfterItemClick={closeAfterItemClick}\n        popupState={popupState}\n      />\n    </>\n  )\n})\n\nexport default CascadingMenuButton\n","import { isConfigurationModel } from '@jbrowse/core/configuration'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport { addDisposer, isAlive, types } from 'mobx-state-tree'\n\nimport { isBaseSession } from './BaseSession'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\nconst minDrawerWidth = 128\n\n/**\n * #stateModel DrawerWidgetSessionMixin\n */\nexport function DrawerWidgetSessionMixin(pluginManager: PluginManager) {\n  const widgetStateModelType = pluginManager.pluggableMstType(\n    'widget',\n    'stateModel',\n  )\n  type WidgetStateModel = Instance<typeof widgetStateModelType>\n  return types\n    .model({\n      /**\n       * #property\n       */\n      drawerPosition: types.optional(\n        types.string,\n        () => localStorageGetItem('drawerPosition') || 'right',\n      ),\n      /**\n       * #property\n       */\n      drawerWidth: types.optional(\n        types.refinement(types.integer, width => width >= minDrawerWidth),\n        384,\n      ),\n      /**\n       * #property\n       */\n      widgets: types.map(widgetStateModelType),\n      /**\n       * #property\n       */\n      activeWidgets: types.map(types.safeReference(widgetStateModelType)),\n\n      /**\n       * #property\n       */\n      minimized: types.optional(types.boolean, false),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get visibleWidget() {\n        if (isAlive(self)) {\n          // returns most recently added item in active widgets\n          return [...self.activeWidgets.values()][self.activeWidgets.size - 1]\n        }\n        return undefined\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setDrawerPosition(arg: string) {\n        self.drawerPosition = arg\n        localStorage.setItem('drawerPosition', arg)\n      },\n\n      /**\n       * #action\n       */\n      updateDrawerWidth(drawerWidth: number) {\n        if (drawerWidth === self.drawerWidth) {\n          return self.drawerWidth\n        }\n        let newDrawerWidth = drawerWidth\n        if (newDrawerWidth < minDrawerWidth) {\n          newDrawerWidth = minDrawerWidth\n        }\n        self.drawerWidth = newDrawerWidth\n        return newDrawerWidth\n      },\n\n      /**\n       * #action\n       */\n      resizeDrawer(distance: number) {\n        if (self.drawerPosition === 'left') {\n          distance *= -1\n        }\n        const oldDrawerWidth = self.drawerWidth\n        const newDrawerWidth = this.updateDrawerWidth(oldDrawerWidth - distance)\n        return oldDrawerWidth - newDrawerWidth\n      },\n\n      /**\n       * #action\n       */\n      addWidget(\n        typeName: string,\n        id: string,\n        initialState = {},\n        conf?: unknown,\n      ) {\n        const typeDefinition = pluginManager.getElementType('widget', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown widget type ${typeName}`)\n        }\n        const data = {\n          ...initialState,\n          id,\n          type: typeName,\n          configuration: conf || { type: typeName },\n        }\n        self.widgets.set(id, data)\n        return self.widgets.get(id)\n      },\n\n      /**\n       * #action\n       */\n      showWidget(widget: WidgetStateModel) {\n        if (self.activeWidgets.has(widget.id)) {\n          self.activeWidgets.delete(widget.id)\n        }\n        self.activeWidgets.set(widget.id, widget)\n        self.minimized = false\n      },\n\n      /**\n       * #action\n       */\n      hasWidget(widget: WidgetStateModel) {\n        return self.activeWidgets.has(widget.id)\n      },\n\n      /**\n       * #action\n       */\n      hideWidget(widget: WidgetStateModel) {\n        self.activeWidgets.delete(widget.id)\n      },\n\n      /**\n       * #action\n       */\n      minimizeWidgetDrawer() {\n        self.minimized = true\n      },\n      /**\n       * #action\n       */\n      showWidgetDrawer() {\n        self.minimized = false\n      },\n      /**\n       * #action\n       */\n      hideAllWidgets() {\n        self.activeWidgets.clear()\n      },\n\n      /**\n       * #action\n       * opens a configuration editor to configure the given thing,\n       * and sets the current task to be configuring it\n       * @param configuration -\n       */\n      editConfiguration(configuration: AnyConfigurationModel) {\n        if (!isConfigurationModel(configuration)) {\n          throw new Error(\n            'must pass a configuration model to editConfiguration',\n          )\n        }\n        const editor = this.addWidget(\n          'ConfigurationEditorWidget',\n          'configEditor',\n          { target: configuration },\n        )\n        this.showWidget(editor)\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('drawerPosition', self.drawerPosition)\n          }),\n        )\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages drawer widgets */\nexport type SessionWithDrawerWidgetsType = ReturnType<\n  typeof DrawerWidgetSessionMixin\n>\n\n/** Instance of a session that manages drawer widgets */\nexport type SessionWithDrawerWidgets = Instance<SessionWithDrawerWidgetsType>\n\n/** Type guard for SessionWithDrawerWidgets */\nexport function isSessionWithDrawerWidgets(\n  session: IAnyStateTreeNode,\n): session is SessionWithDrawerWidgets {\n  return (\n    isBaseSession(session) &&\n    'widgets' in session &&\n    'drawerPosition' in session\n  )\n}\n","type LogoVariant = 'color' | 'black' | 'white'\n\ninterface LogoProps {\n  variant?: LogoVariant\n}\n\nfunction getColors(variant?: LogoVariant) {\n  if (variant === 'black') {\n    return {\n      midnight: '#808080',\n      forrest: '#666666',\n      grape: '#4d4d4d',\n      mandarin: '#333333',\n      gray: '#1a1a1a',\n    }\n  }\n  if (variant === 'white') {\n    return {\n      midnight: '#ffffff',\n      forrest: '#e6e6e6',\n      grape: '#cccccc',\n      mandarin: '#b3b3b3',\n      gray: '#999999',\n    }\n  }\n  return {\n    midnight: '#0d233f',\n    forrest: '#135560',\n    grape: '#721e63',\n    mandarin: '#ffb11d',\n    gray: '#dadada',\n  }\n}\n\nexport function Logomark({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 175 175\">\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nexport function LogoFull({ variant }: LogoProps) {\n  return (\n    <svg viewBox=\"0 0 641 175\">\n      <Text variant={variant} />\n      <Icon variant={variant} />\n    </svg>\n  )\n}\n\nfunction Icon({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <>\n      <path\n        style={{ fill: colors.midnight }}\n        d=\"M120.5,57.5c.168,0,.333.012.5.013V40.506c-.167,0-.333-.006-.5-.006a98.325,98.325,0,0,0-77.4,37.565q-2.664,3.378-5.023,6.994l14.206,9.327Q54.043,91.709,56,89.179A81.363,81.363,0,0,1,120.5,57.5Z\"\n      />\n      <path\n        style={{ fill: colors.forrest }}\n        d=\"M148.668,86.223c.308.133.6.283.908.42l6.746-15.618c-.153-.067-.3-.143-.454-.21a81.36,81.36,0,0,0-71.777,3.5q-2.8,1.544-5.469,3.309l9.249,14.054A63.93,63.93,0,0,1,148.668,86.223Z\"\n      />\n      <path\n        style={{ fill: colors.grape }}\n        d=\"M170.894,109.37A63.929,63.929,0,0,0,113.4,88.861l2.336,15.474a48.456,48.456,0,0,1,44.322,15.42c.111.125.214.255.324.381l11.16-10C171.323,109.879,171.118,109.62,170.894,109.37Z\"\n      />\n      <path\n        style={{ fill: colors.mandarin }}\n        d=\"M150.921,150.314c.04.163.07.326.107.489l16.509-4.058c-.039-.163-.067-.326-.107-.489A48.457,48.457,0,0,0,135.575,111.8l-5.515,15.591A32.466,32.466,0,0,1,150.921,150.314Z\"\n      />\n      <path\n        style={{ fill: colors.gray }}\n        d=\"M134.1,138.129l-9.779,13.213a32.486,32.486,0,0,1,7.823,14.463l15.147.852c.012-.166.032-.331.041-.5A32.464,32.464,0,0,0,134.1,138.129Z\"\n      />\n    </>\n  )\n}\n\nfunction Text({ variant }: LogoProps) {\n  const colors = getColors(variant)\n  return (\n    <g\n      aria-label=\"JBrowse\"\n      transform=\"translate(213.084 144.241)\"\n      style={{ fill: colors.midnight }}\n    >\n      <path d=\"m 26.355,-71.505 v 54.075 2.835 q 0,6.825 -0.42,10.185 -0.735,5.67 -2.835,9.135 -3.255,5.355 -8.505,8.4 -4.83,2.73 -11.55,3.57 L 1.47,11.76 Q 7.35,10.185 9.24,4.2 10.605,-0.105 10.605,-9.975 v -5.565 -55.965 q 1.785,0 4.62,0.315 2.835,0.21 3.255,0.21 1.785,0 2.94,-0.105 4.515,-0.42 4.935,-0.42 z\" />\n      <path d=\"m 60.68836,-65.415 v 24.78 h 3.255 q 2.94,0 4.935,-0.525 2.1,-0.525 3.885,-2.1 2.31,-1.995 3.36,-4.83 1.155,-2.835 1.155,-6.09 0,-5.565 -2.94,-8.61 -2.94,-3.045 -8.295,-3.045 -2.52,0 -5.355,0.42 z m 0,30.87 V -6.09 h 5.25 q 4.725,0 8.505,-3.675 3.885,-3.78 3.885,-10.08 0,-8.19 -4.62,-11.655 -4.095,-3.045 -13.02,-3.045 z M 44.93836,0 v -71.505 h 27.09 q 9.135,0 14.385,3.255 6.51,3.99 6.51,12.6 0,7.035 -5.25,11.655 -4.62,4.095 -11.97,5.145 v 0.945 q 7.56,0.735 12.285,3.99 6.615,4.62 6.615,13.335 0,10.185 -7.98,15.75 -6.93,4.83 -17.43,4.83 z\" />\n      <path d=\"M 109.44281,0.525 V -50.4 q 1.785,0.21 3.99,0.42 2.31,0.105 3.255,0.105 2.31,0 4.2,-0.21 1.89,-0.21 3.045,-0.315 v 13.02 q 1.89,-6.51 5.46,-9.87 4.41,-4.095 11.655,-4.095 -0.315,2.73 -0.42,6.825 -0.105,3.99 -0.105,7.455 l -0.945,0.84 q -0.945,-0.735 -2.415,-1.05 -1.47,-0.315 -2.94,-0.315 -3.57,0 -6.195,1.89 -2.52,1.785 -3.465,5.04 -0.42,1.155 -0.525,3.15 -0.105,1.89 -0.105,4.515 v 4.515 19.005 q -1.785,-0.21 -2.625,-0.21 -3.675,-0.315 -4.62,-0.315 -2.31,0 -4.2,0.21 -1.89,0.21 -3.045,0.315 z\" />\n      <path d=\"m 173.77337,1.47 q -11.655,0 -18.585,-6.825 -6.93,-6.825 -6.93,-18.48 0,-12.6 6.72,-20.055 6.825,-7.455 18.9,-7.455 11.97,0 18.9,6.72 6.93,6.72 6.93,18.48 0,12.285 -6.72,19.74 -7.14,7.875 -19.215,7.875 z m 0.735,-48.09 q -5.88,0 -8.505,6.51 -2.205,5.565 -2.205,15.96 0,8.19 1.47,12.915 2.415,7.98 8.505,7.98 5.565,0 8.19,-7.875 2.205,-6.51 2.205,-16.695 0,-8.505 -2.1,-13.23 -2.52,-5.565 -7.56,-5.565 z\" />\n      <path d=\"m 222.03563,-50.4 10.5,36.015 q 3.675,-11.235 5.67,-17.85 2.415,-8.085 5.04,-18.165 1.05,0.105 3.045,0.315 2.1,0.21 2.835,0.21 1.995,0 3.15,-0.105 1.26,-0.21 2.73,-0.42 l 10.71,36.015 q 5.88,-17.43 10.71,-36.015 l 4.2,0.315 4.095,-0.315 q -5.145,13.125 -9.135,24.57 -5.04,14.28 -8.505,26.355 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.205,-0.105 -1.89,0 -3.36,0.21 -1.365,0.21 -2.31,0.315 l -10.605,-34.755 q -4.41,13.65 -6.72,21.105 -2.31,7.35 -4.095,13.65 -1.89,-0.21 -3.36,-0.42 -1.365,-0.105 -2.31,-0.105 -1.995,0 -3.465,0.21 -1.365,0.21 -2.31,0.315 -3.78,-12.81 -5.04,-17.01 -2.205,-7.245 -5.46,-17.01 -2.835,-8.4 -5.88,-16.905 1.575,0 4.305,0.315 2.73,0.21 3.36,0.21 1.47,0 4.305,-0.21 2.835,-0.315 3.465,-0.315 z\" />\n      <path d=\"m 292.84172,-12.81 h 2.625 q 1.47,4.095 4.62,6.51 3.15,2.415 7.35,2.415 2.94,0 5.46,-1.785 2.625,-1.89 2.625,-4.62 0,-3.885 -6.195,-6.615 -10.395,-4.62 -11.655,-5.46 -6.405,-4.515 -6.405,-12.285 0,-7.77 5.25,-12.18 5.25,-4.515 12.81,-4.515 3.99,0 8.085,1.365 4.095,1.26 7.14,3.57 l -2.52,9.24 h -2.94 q -0.63,-3.57 -3.57,-6.195 -2.835,-2.625 -6.405,-2.625 -3.15,0 -5.46,1.575 -2.31,1.47 -2.31,4.515 0,3.885 6.405,6.51 10.185,4.095 11.865,5.25 6.405,4.41 6.405,12.81 0,7.455 -5.46,12.18 -5.355,4.62 -14.805,4.62 -8.19,0 -14.49,-4.305 z\" />\n      <path d=\"m 349.61228,-29.925 h 15.54 q 0,-6.51 -1.05,-10.395 -1.68,-6.3 -5.88,-6.3 -5.04,0 -7.14,6.195 -1.47,4.305 -1.47,10.5 z m 30.03,5.04 h -30.03 q 0,9.135 3.045,13.86 3.57,5.67 11.55,5.67 3.255,0 6.405,-1.26 3.15,-1.26 5.88,-3.465 l 1.26,0.945 -2.31,5.88 q -6.72,4.725 -15.015,4.725 -12.915,0 -19.635,-7.245 -6.72,-7.245 -6.72,-20.37 0,-11.235 6.405,-18.165 6.51,-7.035 17.64,-7.035 11.655,0 16.905,7.56 4.62,6.615 4.62,18.9 z\" />\n    </g>\n  )\n}\n","import { Typography } from '@mui/material'\nimport { keyframes } from 'tss-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { TypographyProps } from '@mui/material'\n\nconst useStyles = makeStyles()({\n  dots: {\n    '&::after': {\n      display: 'inline-block',\n      content: '\"\"',\n      width: '1em',\n      textAlign: 'left',\n      animation: `${keyframes`\n      0% {\n        content: '';\n      }\n      25% {\n          content: '.';\n      }\n      50% {\n        content: '..';\n      }\n      75% {\n        content: '...';\n      }\n      `} 1.2s infinite ease-in-out`,\n    },\n  },\n})\n\ninterface Props extends TypographyProps {\n  message?: string\n}\n\nexport default function LoadingEllipses({\n  message,\n  variant = 'body2',\n  ...rest\n}: Props) {\n  const { cx, classes } = useStyles()\n  return (\n    <Typography\n      className={cx(classes.dots, rest.className)}\n      {...rest}\n      variant={variant}\n    >\n      {message || 'Loading'}\n    </Typography>\n  )\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport RefreshIcon from '@mui/icons-material/Refresh'\nimport ReportIcon from '@mui/icons-material/Report'\nimport { IconButton, Tooltip } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport RedErrorMessageBox from './RedErrorMessageBox'\n\n// lazies\nconst ErrorMessageStackTraceDialog = lazy(\n  () => import('./ErrorMessageStackTraceDialog'),\n)\n\nconst useStyles = makeStyles()(theme => ({\n  bg: {\n    background: theme.palette.divider,\n    border: '1px solid black',\n    margin: 20,\n  },\n  iconFloat: {\n    float: 'right',\n    marginLeft: 100,\n  },\n}))\n\nfunction parseError(str: string) {\n  let snapshotError = ''\n  const findStr = 'is not assignable'\n  const idx = str.indexOf(findStr)\n  if (idx !== -1) {\n    const trim = str.slice(0, idx + findStr.length)\n    // best effort to make a better error message than the default\n    // mobx-state-tree\n\n    // case 1. element has a path\n    const match = /.*at path \"(.*)\" snapshot `(.*)` is not assignable/m.exec(\n      trim,\n    )\n    if (match) {\n      str = `Failed to load element at ${match[1]}...Failed element had snapshot`\n      snapshotError = match[2]!\n    }\n\n    // case 2. element has no path\n    const match2 = /.*snapshot `(.*)` is not assignable/.exec(trim)\n    if (match2) {\n      str = 'Failed to load element...Failed element had snapshot'\n      snapshotError = match2[1]!\n    }\n  }\n  return snapshotError\n}\n\nfunction ErrorButtons({\n  error,\n  onReset,\n}: {\n  error: unknown\n  onReset?: () => void\n}) {\n  const { classes } = useStyles()\n  const [showStack, setShowStack] = useState(false)\n  return (\n    <div className={classes.iconFloat}>\n      {typeof error === 'object' && error && 'stack' in error ? (\n        <Tooltip title=\"Get stack trace\">\n          <IconButton\n            onClick={() => {\n              setShowStack(true)\n            }}\n            color=\"primary\"\n          >\n            <ReportIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {onReset ? (\n        <Tooltip title=\"Retry\">\n          <IconButton onClick={onReset} color=\"primary\">\n            <RefreshIcon />\n          </IconButton>\n        </Tooltip>\n      ) : null}\n      {showStack ? (\n        <Suspense fallback={null}>\n          <ErrorMessageStackTraceDialog\n            error={error}\n            onClose={() => {\n              setShowStack(false)\n            }}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n}\n\nfunction ErrorMessage({\n  error,\n  onReset,\n}: {\n  error: unknown\n  onReset?: () => void\n}) {\n  const { classes } = useStyles()\n  const str = `${error}`\n  const str2 = str.indexOf('expected an instance of')\n  const str3 = str2 !== -1 ? str.slice(0, str2) : str\n  const snapshotError = parseError(str)\n  return (\n    <RedErrorMessageBox>\n      {str3.slice(0, 10000)}\n      <ErrorButtons error={error} onReset={onReset} />\n      {snapshotError ? (\n        <pre className={classes.bg}>\n          {JSON.stringify(JSON.parse(snapshotError), null, 2)}\n        </pre>\n      ) : null}\n    </RedErrorMessageBox>\n  )\n}\n\nexport default ErrorMessage\n","import { Suspense, lazy } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport type { AbstractSessionModel } from '../util'\nimport type { SnackbarMessage } from './SnackbarModel'\n\nconst SnackbarContents = lazy(() => import('./SnackbarContents'))\n\ninterface SnackbarSession extends AbstractSessionModel {\n  snackbarMessages: SnackbarMessage[]\n  popSnackbarMessage: () => void\n}\n\nconst Snackbar = observer(function ({ session }: { session: SnackbarSession }) {\n  const { snackbarMessages } = session\n  const latestMessage = snackbarMessages.at(-1)\n\n  return latestMessage ? (\n    <Suspense fallback={null}>\n      <SnackbarContents\n        onClose={(_event, reason) => {\n          if (reason !== 'clickaway') {\n            session.popSnackbarMessage()\n          }\n        }}\n        contents={latestMessage}\n      />\n    </Suspense>\n  ) : null\n})\n\nexport default Snackbar\n","import LaunchIcon from '@mui/icons-material/Launch'\nimport { Fab, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => ({\n  left: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    left: theme.spacing(2),\n  },\n  right: {\n    zIndex: 10000,\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nconst AppFab = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { minimized, activeWidgets, drawerPosition } = session\n  const { classes } = useStyles()\n\n  return activeWidgets.size > 0 && minimized ? (\n    <Tooltip title=\"Open drawer widget\">\n      <Fab\n        className={drawerPosition === 'right' ? classes.right : classes.left}\n        color=\"primary\"\n        data-testid=\"drawer-maximize\"\n        onClick={() => {\n          session.showWidgetDrawer()\n        }}\n      >\n        <LaunchIcon />\n      </Fab>\n    </Tooltip>\n  ) : null\n})\n\nexport default AppFab\n","import { observer } from 'mobx-react'\n\nimport { readConfObject } from '../configuration'\nimport { LogoFull } from './Logo'\n\nimport type { AnyConfigurationModel } from '../configuration'\n\nconst Logo = observer(function ({\n  session,\n}: {\n  session: { configuration: AnyConfigurationModel }\n}) {\n  const { configuration } = session\n  const logoPath = readConfObject(configuration, 'logoPath')\n  return logoPath?.uri ? (\n    <img src={logoPath.uri} alt=\"Custom logo\" />\n  ) : (\n    <LogoFull variant=\"white\" />\n  )\n})\n\nexport default Logo\n","import { useRef, useState } from 'react'\n\nimport ArrowDropDown from '@mui/icons-material/ArrowDropDown'\nimport { Button, alpha } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport Menu from './Menu'\n\nimport type { MenuItem } from './Menu'\n\nconst useStyles = makeStyles()(theme => ({\n  buttonRoot: {\n    '&:hover': {\n      backgroundColor: alpha(\n        theme.palette.primary.contrastText,\n        theme.palette.action.hoverOpacity,\n      ),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n}))\n\nconst DropDownMenu = observer(function ({\n  menuTitle,\n  session,\n  menuItems,\n}: {\n  menuTitle: string\n\n  session: any\n  menuItems: MenuItem[]\n}) {\n  const [open, setOpen] = useState(false)\n  const anchorEl = useRef(null)\n  const { classes } = useStyles()\n\n  function handleClose() {\n    setOpen(false)\n  }\n\n  return (\n    <>\n      <Button\n        ref={anchorEl}\n        onClick={() => {\n          setOpen(!open)\n        }}\n        color=\"inherit\"\n        data-testid=\"dropDownMenuButton\"\n        classes={{ root: classes.buttonRoot }}\n      >\n        {menuTitle}\n        <ArrowDropDown />\n      </Button>\n      <Menu\n        anchorEl={anchorEl.current}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        onMenuItemClick={(_event, callback) => {\n          callback(session)\n          handleClose()\n        }}\n        open={open}\n        onClose={handleClose}\n        menuItems={menuItems}\n      />\n    </>\n  )\n})\n\nexport default DropDownMenu\n","import AppLogo from '@jbrowse/core/ui/AppLogo'\nimport DropDownMenu from '@jbrowse/core/ui/DropDownMenu'\nimport EditableTypography from '@jbrowse/core/ui/EditableTypography'\nimport { Toolbar, Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\nimport type { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\nimport type { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  inputBase: {\n    color: theme.palette.primary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.primary.light,\n  },\n}))\n\ninterface Menu {\n  label: string\n  menuItems: JBMenuItem[]\n}\n\ntype AppSession = SessionWithDrawerWidgets & {\n  menus: () => Menu[]\n  snackbarMessages: SnackbarMessage[]\n  renameCurrentSession: (arg: string) => void\n  popSnackbarMessage: () => unknown\n}\n\nconst AppToolbar = observer(function ({\n  session,\n  HeaderButtons = <div />,\n}: {\n  HeaderButtons?: React.ReactElement\n  session: AppSession\n}) {\n  const { classes } = useStyles()\n  const { name, menus } = session\n\n  return (\n    <Toolbar>\n      {menus().map(menu => (\n        <DropDownMenu\n          key={menu.label}\n          menuTitle={menu.label}\n          menuItems={menu.menuItems}\n          session={session}\n        />\n      ))}\n      <div className={classes.grow} />\n      <Tooltip title=\"Rename session\" arrow>\n        <EditableTypography\n          value={name}\n          variant=\"body1\"\n          classes={{\n            inputBase: classes.inputBase,\n            inputRoot: classes.inputRoot,\n            inputFocused: classes.inputFocused,\n          }}\n          setValue={newName => {\n            session.renameCurrentSession(newName)\n          }}\n        />\n      </Tooltip>\n      {HeaderButtons}\n      <div className={classes.grow} />\n      <div\n        style={{\n          width: 150,\n          maxHeight: 48,\n        }}\n      >\n        <AppLogo session={session} />\n      </div>\n    </Toolbar>\n  )\n})\n\nexport default AppToolbar\n","import { Suspense } from 'react'\n\nimport { observer } from 'mobx-react'\n\nimport type { SessionWithDrawerWidgets } from '@jbrowse/core/util'\n\nconst DialogQueue = observer(function ({\n  session,\n}: {\n  session: SessionWithDrawerWidgets\n}) {\n  const { DialogComponent, DialogProps } = session\n  return DialogComponent ? (\n    <Suspense fallback={null}>\n      <DialogComponent {...DialogProps} />\n    </Suspense>\n  ) : null\n})\n\nexport default DialogQueue\n","import EditableTypography from '@jbrowse/core/ui/EditableTypography'\nimport { getSession } from '@jbrowse/core/util'\nimport { Tooltip } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes'\n\nconst useStyles = makeStyles()(theme => ({\n  input: {\n    paddingBottom: 0,\n    paddingTop: 2,\n  },\n  inputBase: {\n    color: theme.palette.secondary.contrastText,\n  },\n  inputRoot: {\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n  },\n  inputFocused: {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: theme.palette.secondary.light,\n  },\n}))\nconst ViewContainerTitle = observer(function ({\n  view,\n}: {\n  view: IBaseViewModel\n}) {\n  const { classes } = useStyles()\n  const { assemblyManager } = getSession(view)\n  return (\n    <Tooltip title=\"Rename view\" arrow>\n      <EditableTypography\n        value={\n          view.displayName ||\n          // @ts-expect-error\n          `${view.assemblyNames?.map(r => assemblyManager.get(r)?.displayName).join(',') || 'Untitled view'}${\n            view.minimized ? ' (minimized)' : ''\n          }`\n        }\n        setValue={val => {\n          view.setDisplayName(val)\n        }}\n        variant=\"body2\"\n        classes={{\n          input: classes.input,\n          inputBase: classes.inputBase,\n          inputRoot: classes.inputRoot,\n          inputFocused: classes.inputFocused,\n        }}\n      />\n    </Tooltip>\n  )\n})\n\nexport default ViewContainerTitle\n","import CascadingMenu from '@jbrowse/core/ui/CascadingMenu'\nimport { getSession } from '@jbrowse/core/util'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport KeyboardDoubleArrowDownIcon from '@mui/icons-material/KeyboardDoubleArrowDown'\nimport KeyboardDoubleArrowUpIcon from '@mui/icons-material/KeyboardDoubleArrowUp'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport { IconButton } from '@mui/material'\nimport {\n  bindPopover,\n  bindTrigger,\n  usePopupState,\n} from 'material-ui-popup-state/hooks'\nimport { observer } from 'mobx-react'\n\nimport type { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\nimport type {\n  IconButtonProps as IconButtonPropsType,\n  SvgIconProps,\n} from '@mui/material'\n\nconst ViewMenu = observer(function ({\n  model,\n  IconButtonProps,\n  IconProps,\n}: {\n  model: IBaseViewModel\n  IconButtonProps?: IconButtonPropsType\n  IconProps: SvgIconProps\n}) {\n  const session = getSession(model) as AbstractSessionModel & {\n    moveViewDown: (arg: string) => void\n    moveViewUp: (arg: string) => void\n    moveViewToBottom: (arg: string) => void\n    moveViewToTop: (arg: string) => void\n  }\n\n  const popupState = usePopupState({\n    popupId: 'viewMenu',\n    variant: 'popover',\n  })\n\n  // note: This does not use CascadingMenuButton on purpose, because there was\n  // a confusing bug related to it! see\n  // https://github.com/GMOD/jbrowse-components/issues/4115\n  //\n  // Make sure to test the Breakpoint split view menu checkboxes if you intend\n  // to change this\n  return (\n    <>\n      <IconButton\n        {...IconButtonProps}\n        {...bindTrigger(popupState)}\n        data-testid=\"view_menu_icon\"\n      >\n        <MenuIcon {...IconProps} fontSize=\"small\" />\n      </IconButton>\n      <CascadingMenu\n        {...bindPopover(popupState)}\n        onMenuItemClick={(_event: unknown, callback: () => void) => {\n          callback()\n        }}\n        menuItems={[\n          ...(session.views.length > 1\n            ? [\n                {\n                  label: 'View order',\n                  type: 'subMenu' as const,\n                  subMenu: [\n                    ...(session.views.length > 2\n                      ? [\n                          {\n                            label: 'Move view to top',\n                            icon: KeyboardDoubleArrowUpIcon,\n                            onClick: () => {\n                              session.moveViewToTop(model.id)\n                            },\n                          },\n                        ]\n                      : []),\n                    {\n                      label: 'Move view up',\n                      icon: KeyboardArrowUpIcon,\n                      onClick: () => {\n                        session.moveViewUp(model.id)\n                      },\n                    },\n                    {\n                      label: 'Move view down',\n                      icon: KeyboardArrowDownIcon,\n                      onClick: () => {\n                        session.moveViewDown(model.id)\n                      },\n                    },\n                    ...(session.views.length > 2\n                      ? [\n                          {\n                            label: 'Move view to bottom',\n                            icon: KeyboardDoubleArrowDownIcon,\n                            onClick: () => {\n                              session.moveViewToBottom(model.id)\n                            },\n                          },\n                        ]\n                      : []),\n                  ],\n                },\n              ]\n            : []),\n          ...model.menuItems(),\n        ]}\n        popupState={popupState}\n      />\n    </>\n  )\n})\nexport default ViewMenu\n","import { useEffect, useRef } from 'react'\n\nimport { VIEW_HEADER_HEIGHT } from '@jbrowse/core/ui'\nimport { getSession } from '@jbrowse/core/util'\nimport { isSessionWithMultipleViews } from '@jbrowse/product-core'\nimport AddIcon from '@mui/icons-material/Add'\nimport CloseIcon from '@mui/icons-material/Close'\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight'\nimport MinimizeIcon from '@mui/icons-material/Minimize'\nimport { IconButton } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ViewContainerTitle from './ViewContainerTitle'\nimport ViewMenu from './ViewMenu'\n\nimport type { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes/models'\n\nconst useStyles = makeStyles()(theme => ({\n  icon: {\n    color: theme.palette.secondary.contrastText,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  viewHeader: {\n    display: 'flex',\n    height: VIEW_HEADER_HEIGHT,\n    top: 0,\n    zIndex: 900,\n    background: theme.palette.secondary.main,\n  },\n  viewTitle: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}))\n\nconst ViewButtons = observer(function ({\n  view,\n  onClose,\n  onMinimize,\n}: {\n  view: IBaseViewModel\n  onClose: () => void\n  onMinimize: () => void\n}) {\n  const { classes } = useStyles()\n  return (\n    <>\n      <IconButton data-testid=\"minimize_view\" onClick={onMinimize}>\n        {view.minimized ? (\n          <AddIcon className={classes.icon} fontSize=\"small\" />\n        ) : (\n          <MinimizeIcon className={classes.icon} fontSize=\"small\" />\n        )}\n      </IconButton>\n      <IconButton data-testid=\"close_view\" onClick={onClose}>\n        <CloseIcon className={classes.icon} fontSize=\"small\" />\n      </IconButton>\n    </>\n  )\n})\n\nconst ViewHeader = observer(function ({\n  view,\n  onClose,\n  onMinimize,\n  className,\n}: {\n  view: IBaseViewModel\n  onClose: () => void\n  onMinimize: () => void\n  className?: string\n}) {\n  const { classes, cx } = useStyles()\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const session = getSession(view)\n  let stickyViewHeaders = false\n  if (isSessionWithMultipleViews(session)) {\n    ;({ stickyViewHeaders } = session)\n  }\n\n  // scroll the view into view when first mounted. note: this effect will run\n  // only once, because of the empty array second param\n  useEffect(() => {\n    if (typeof jest === 'undefined') {\n      scrollRef.current?.scrollIntoView({ block: 'center' })\n    }\n  }, [])\n  return (\n    <div\n      ref={scrollRef}\n      className={cx(classes.viewHeader, className)}\n      style={{ position: stickyViewHeaders ? 'sticky' : undefined }}\n    >\n      <ViewMenu model={view} IconProps={{ className: classes.icon }} />\n      <div className={classes.grow} />\n      <div className={classes.viewTitle}>\n        {session.focusedViewId === view.id ? (\n          <KeyboardArrowRightIcon className={classes.icon} fontSize=\"small\" />\n        ) : null}\n        <ViewContainerTitle view={view} />\n      </div>\n      <div className={classes.grow} />\n      <ViewButtons onClose={onClose} onMinimize={onMinimize} view={view} />\n    </div>\n  )\n})\n\nexport default ViewHeader\n","import React, { Suspense } from 'react'\n\n// ui elements\nimport LoadingEllipses from '@jbrowse/core/ui/LoadingEllipses'\nimport { getEnv } from '@jbrowse/core/util'\nimport { observer } from 'mobx-react'\n\nimport type {\n  AbstractViewModel,\n  SessionWithFocusedViewAndDrawerWidgets,\n} from '@jbrowse/core/util'\n\nconst ViewWrapper = observer(function ({\n  view,\n  session,\n}: {\n  view: AbstractViewModel\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const { pluginManager } = getEnv(session)\n  const viewType = pluginManager.getViewType(view.type)\n  if (!viewType) {\n    throw new Error(`unknown view type ${view.type}`)\n  }\n  const { ReactComponent } = viewType\n  if (view.minimized) {\n    return null\n  }\n\n  return (\n    <Suspense fallback={<LoadingEllipses variant=\"h6\" />}>\n      <ReactComponent model={view} session={session} />\n    </Suspense>\n  )\n})\n\nexport default ViewWrapper\n","import { useEffect } from 'react'\n\nimport { useWidthSetter } from '@jbrowse/core/util'\nimport { Paper, useTheme } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ViewHeader from './ViewHeader'\nimport ViewWrapper from './ViewWrapper'\n\nimport type {\n  AbstractViewModel,\n  SessionWithFocusedViewAndDrawerWidgets,\n} from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => ({\n  viewContainer: {\n    margin: theme.spacing(0.5),\n    padding: `0 ${theme.spacing(1)} ${theme.spacing(1)}`,\n    overflow: 'clip',\n    // xref https://stackoverflow.com/questions/43909940/why-does-overflowhidden-prevent-positionsticky-from-working\n    // note that contain:paint also seems to work\n  },\n  focusedView: {\n    background: theme.palette.secondary.main,\n  },\n  unfocusedView: {\n    background: theme.palette.secondary.dark,\n  },\n}))\n\nconst ViewContainer = observer(function ({\n  view,\n  session,\n}: {\n  view: AbstractViewModel\n  session: SessionWithFocusedViewAndDrawerWidgets\n}) {\n  const theme = useTheme()\n  const ref = useWidthSetter(view, theme.spacing(1))\n  const { classes, cx } = useStyles()\n\n  useEffect(() => {\n    function handleSelectView(e: Event) {\n      if (e.target instanceof Element && ref.current?.contains(e.target)) {\n        session.setFocusedViewId(view.id)\n      }\n    }\n\n    document.addEventListener('mousedown', handleSelectView)\n    document.addEventListener('keydown', handleSelectView)\n    return () => {\n      document.removeEventListener('mousedown', handleSelectView)\n      document.removeEventListener('keydown', handleSelectView)\n    }\n  }, [ref, session, view])\n\n  const backgroundColorClassName =\n    session.focusedViewId === view.id\n      ? classes.focusedView\n      : classes.unfocusedView\n  const viewContainerClassName = cx(\n    classes.viewContainer,\n    backgroundColorClassName,\n  )\n\n  return (\n    <Paper ref={ref} elevation={12} className={viewContainerClassName}>\n      <ViewHeader\n        view={view}\n        onClose={() => {\n          session.removeView(view)\n        }}\n        onMinimize={() => {\n          view.setMinimized(!view.minimized)\n        }}\n        className={backgroundColorClassName}\n      />\n      <Paper elevation={0}>\n        <ViewWrapper view={view} session={session} />\n      </Paper>\n    </Paper>\n  )\n})\n\nexport default ViewContainer\n","import { Suspense, lazy } from 'react'\n\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ViewContainer from './ViewContainer'\n\nimport type { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util'\n\nconst ViewLauncher = lazy(() => import('./ViewLauncher'))\n\nconst useStyles = makeStyles()({\n  viewsContainer: {\n    overflowY: 'auto',\n    gridRow: 'components',\n  },\n})\n\ninterface Props {\n  HeaderButtons?: React.ReactElement\n  session: SessionWithFocusedViewAndDrawerWidgets & {\n    renameCurrentSession: (arg: string) => void\n    snackbarMessages: SnackbarMessage[]\n    popSnackbarMessage: () => unknown\n  }\n}\n\nconst ViewsContainer = observer(function ViewsContainer(props: Props) {\n  const { session } = props\n  const { views } = session\n  const { classes } = useStyles()\n  return (\n    <div className={classes.viewsContainer}>\n      {views.length > 0 ? (\n        views.map(view => (\n          <ViewContainer\n            key={`view-${view.id}`}\n            view={view}\n            session={session}\n          />\n        ))\n      ) : (\n        <Suspense fallback={null}>\n          <ViewLauncher {...props} />\n        </Suspense>\n      )}\n\n      {/* blank space at the bottom of screen allows scroll */}\n      <div style={{ height: 300 }} />\n    </div>\n  )\n})\n\nexport default ViewsContainer\n","import { Suspense, lazy } from 'react'\n\nimport Snackbar from '@jbrowse/core/ui/Snackbar'\nimport { AppBar } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport AppFab from './AppFab'\nimport AppToolbar from './AppToolbar'\nimport DialogQueue from './DialogQueue'\nimport ViewsContainer from './ViewsContainer'\n\nimport type { MenuItem as JBMenuItem } from '@jbrowse/core/ui/Menu'\nimport type { SnackbarMessage } from '@jbrowse/core/ui/SnackbarModel'\nimport type { SessionWithFocusedViewAndDrawerWidgets } from '@jbrowse/core/util'\n\n// lazies\nconst DrawerWidget = lazy(() => import('./DrawerWidget'))\n\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    display: 'grid',\n    height: '100vh',\n    width: '100%',\n    colorScheme: theme.palette.mode,\n  },\n  appContainer: {\n    gridColumn: 'main',\n    display: 'grid',\n    gridTemplateRows: '[menubar] min-content [components] auto',\n    height: '100vh',\n  },\n\n  appBar: {\n    flexGrow: 1,\n    gridRow: 'menubar',\n  },\n}))\n\ninterface Menu {\n  label: string\n  menuItems: JBMenuItem[]\n}\n\ninterface Props {\n  HeaderButtons?: React.ReactElement\n  session: SessionWithFocusedViewAndDrawerWidgets & {\n    menus: () => Menu[]\n    snackbarMessages: SnackbarMessage[]\n    renameCurrentSession: (arg: string) => void\n    popSnackbarMessage: () => unknown\n  }\n}\n\nconst LazyDrawerWidget = observer(function (props: Props) {\n  const { session } = props\n  return (\n    <Suspense fallback={null}>\n      <DrawerWidget session={session} />\n    </Suspense>\n  )\n})\n\nconst App = observer(function (props: Props) {\n  const { session } = props\n  const { classes } = useStyles()\n  const { minimized, visibleWidget, drawerWidth, drawerPosition } = session\n  const drawerVisible = visibleWidget && !minimized\n  const d = drawerVisible ? `[drawer] ${drawerWidth}px` : undefined\n  const grid =\n    drawerPosition === 'right' ? ['[main] 1fr', d] : [d, '[main] 1fr']\n\n  return (\n    <div\n      className={classes.root}\n      style={{ gridTemplateColumns: grid.filter(f => !!f).join(' ') }}\n    >\n      {drawerVisible && drawerPosition === 'left' ? (\n        <LazyDrawerWidget session={session} />\n      ) : null}\n      <DialogQueue session={session} />\n      <div className={classes.appContainer}>\n        <AppBar className={classes.appBar} position=\"static\">\n          <AppToolbar {...props} />\n        </AppBar>\n        <ViewsContainer {...props} />\n      </div>\n      <AppFab session={session} />\n\n      {drawerVisible && drawerPosition === 'right' ? (\n        <LazyDrawerWidget session={session} />\n      ) : null}\n\n      <Snackbar session={session} />\n    </div>\n  )\n})\n\nexport { App }\n","// adapted from https://github.com/mobxjs/mobx-state-tree/blob/master/packages/mst-middlewares/src/time-traveller.ts\nimport {\n  applySnapshot,\n  getEnv,\n  getSnapshot,\n  onSnapshot,\n  resolvePath,\n  types,\n} from 'mobx-state-tree'\n\nimport type { IAnyStateTreeNode, IDisposer } from 'mobx-state-tree'\n\nconst MAX_HISTORY_LENGTH = 20\n\nfunction debounce(func: (...args: unknown[]) => void, timeout = 300) {\n  let timer: ReturnType<typeof setTimeout>\n  return (...args: unknown[]) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      func(...args)\n    }, timeout)\n  }\n}\n\nconst TimeTraveller = types\n  .model('TimeTraveller', {\n    undoIdx: -1,\n    targetPath: '',\n  })\n  .volatile(() => ({\n    history: [] as unknown[],\n    notTrackingUndo: false,\n  }))\n  .views(self => ({\n    get canUndo() {\n      return self.undoIdx > 0 && !self.notTrackingUndo\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1 && !self.notTrackingUndo\n    },\n  }))\n  .actions(self => {\n    let targetStore: IAnyStateTreeNode | undefined\n    let snapshotDisposer: IDisposer\n    let skipNextUndoState = false\n\n    return {\n      // allows user code to (temporarily) stop tracking undo states\n      stopTrackingUndo() {\n        self.notTrackingUndo = true\n      },\n      // allows user code to resume tracking undo states\n      resumeTrackingUndo() {\n        self.notTrackingUndo = false\n      },\n      addUndoState(todos: unknown) {\n        if (self.notTrackingUndo) {\n          return\n        }\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false\n          return\n        }\n        self.history.splice(self.undoIdx + 1)\n        self.history.push(todos)\n        if (self.history.length > MAX_HISTORY_LENGTH) {\n          self.history.shift()\n        }\n        self.undoIdx = self.history.length - 1\n      },\n\n      beforeDestroy() {\n        snapshotDisposer()\n      },\n      initialize() {\n        targetStore = self.targetPath\n          ? resolvePath(self, self.targetPath)\n          : getEnv(self).targetStore\n\n        if (!targetStore) {\n          throw new Error(\n            'Failed to find target store for TimeTraveller. Please provide `targetPath` property, or a `targetStore` in the environment',\n          )\n        }\n\n        snapshotDisposer = onSnapshot(\n          targetStore,\n          debounce((snapshot: unknown) => {\n            this.addUndoState(snapshot)\n          }, 300),\n        )\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore))\n        }\n      },\n      undo() {\n        self.undoIdx--\n        skipNextUndoState = true\n        if (targetStore) {\n          applySnapshot(targetStore, self.history[self.undoIdx])\n        }\n      },\n      redo() {\n        self.undoIdx++\n        skipNextUndoState = true\n        if (targetStore) {\n          applySnapshot(targetStore, self.history[self.undoIdx])\n        }\n      },\n    }\n  })\n\nexport default TimeTraveller\n","import { isAlive, isStateTreeNode } from 'mobx-state-tree'\n\nimport { readConfObject } from '../configuration'\nimport { clamp } from '../util'\n\nimport type PluginManager from '../PluginManager'\nimport type { AnyConfigurationModel } from '../configuration'\n\nexport interface WorkerHandle {\n  status?: string\n  error?: unknown\n  on?: (channel: string, callback: (message: unknown) => void) => void\n  off?: (channel: string, callback: (message: unknown) => void) => void\n  destroy(): void\n  call(\n    functionName: string,\n    args?: unknown,\n    options?: {\n      statusCallback?(message: string): void\n      timeout?: number\n      rpcDriverClassName: string\n    },\n  ): Promise<unknown>\n}\n\nexport interface RpcDriverConstructorArgs {\n  config: AnyConfigurationModel\n}\n\nfunction isCloneable(thing: unknown) {\n  return !(typeof thing === 'function') && !(thing instanceof Error)\n}\n\nfunction detectHardwareConcurrency() {\n  const mainThread = typeof window !== 'undefined'\n  const canDetect = mainThread && 'hardwareConcurrency' in window.navigator\n  return mainThread && canDetect ? window.navigator.hardwareConcurrency : 1\n}\nclass LazyWorker {\n  workerP?: Promise<WorkerHandle> | undefined\n\n  constructor(public driver: BaseRpcDriver) {}\n\n  async getWorker() {\n    if (!this.workerP) {\n      this.workerP = this.driver.makeWorker().catch((e: unknown) => {\n        this.workerP = undefined\n        throw e\n      })\n    }\n    return this.workerP\n  }\n}\n\nexport default abstract class BaseRpcDriver {\n  abstract name: string\n\n  private lastWorkerAssignment = -1\n\n  // sessionId -> worker number\n  private workerAssignments = new Map<string, number>()\n\n  abstract makeWorker(): Promise<WorkerHandle>\n\n  private workerPool?: LazyWorker[]\n\n  maxPingTime = 30000\n\n  workerCheckFrequency = 5000\n\n  config: AnyConfigurationModel\n\n  constructor(args: RpcDriverConstructorArgs) {\n    this.config = args.config\n  }\n\n  // filter the given object and just remove any non-cloneable things from it\n  filterArgs<THING_TYPE>(thing: THING_TYPE, sessionId: string): THING_TYPE {\n    if (Array.isArray(thing)) {\n      return thing\n        .filter(thing => isCloneable(thing))\n        .map(t => this.filterArgs(t, sessionId)) as unknown as THING_TYPE\n    } else if (typeof thing === 'object' && thing !== null) {\n      if (isStateTreeNode(thing) && !isAlive(thing)) {\n        throw new Error('dead state tree node passed to RPC call')\n      } else if (thing instanceof File) {\n        return thing\n      } else {\n        return Object.fromEntries(\n          Object.entries(thing)\n            .filter(e => isCloneable(e[1]))\n            .map(([k, v]) => [k, this.filterArgs(v, sessionId)]),\n        ) as THING_TYPE\n      }\n    } else {\n      return thing\n    }\n  }\n\n  async remoteAbort(\n    sessionId: string,\n    functionName: string,\n    stopTokenId: number,\n  ) {\n    const worker = await this.getWorker(sessionId)\n    await worker.call(\n      functionName,\n      { stopTokenId },\n      { timeout: 1000000, rpcDriverClassName: this.name },\n    )\n  }\n\n  createWorkerPool(): LazyWorker[] {\n    const hardwareConcurrency = detectHardwareConcurrency()\n\n    const workerCount =\n      readConfObject(this.config, 'workerCount') ||\n      clamp(1, Math.max(1, hardwareConcurrency - 1), 5)\n\n    const workers = []\n    for (let i = 0; i < workerCount; i++) {\n      workers.push(new LazyWorker(this))\n    }\n    return workers\n  }\n\n  getWorkerPool() {\n    if (!this.workerPool) {\n      const res = this.createWorkerPool()\n      this.workerPool = res\n      return res // making this several steps makes TS happy\n    }\n    return this.workerPool\n  }\n\n  async getWorker(sessionId: string): Promise<WorkerHandle> {\n    const workers = this.getWorkerPool()\n    let workerNumber = this.workerAssignments.get(sessionId)\n    if (workerNumber === undefined) {\n      const workerAssignment = (this.lastWorkerAssignment + 1) % workers.length\n      this.workerAssignments.set(sessionId, workerAssignment)\n      this.lastWorkerAssignment = workerAssignment\n      workerNumber = workerAssignment\n    }\n\n    return workers[workerNumber]!.getWorker()\n  }\n\n  async call(\n    pluginManager: PluginManager,\n    sessionId: string,\n    functionName: string,\n    args: {\n      statusCallback?: (message: unknown) => void\n    },\n    options = {},\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const unextendedWorker = await this.getWorker(sessionId)\n    const worker = pluginManager.evaluateExtensionPoint(\n      'Core-extendWorker',\n      unextendedWorker,\n    ) as WorkerHandle\n    const rpcMethod = pluginManager.getRpcMethodType(functionName)\n    if (!rpcMethod) {\n      throw new Error(`unknown RPC method ${functionName}`)\n    }\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const filteredAndSerializedArgs = this.filterArgs(serializedArgs, sessionId)\n\n    // now actually call the worker\n    const call = await worker.call(functionName, filteredAndSerializedArgs, {\n      timeout: 5 * 60 * 1000, // 5 minutes\n      statusCallback: args.statusCallback,\n      rpcDriverClassName: this.name,\n      ...options,\n    })\n\n    return rpcMethod.deserializeReturn(call, args, this.name)\n  }\n}\n","import BaseRpcDriver from './BaseRpcDriver'\n\nimport type { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport type PluginManager from '../PluginManager'\n\nclass DummyHandle {\n  destroy(): void {}\n\n  async call(\n    _functionName: string,\n    _filteredArgs?: Record<string, unknown>,\n    _options = {},\n  ): Promise<unknown> {\n    return undefined\n  }\n}\n\n/**\n * Stub RPC driver class that runs RPC functions in-band in the main thread.\n *\n * @param rpcFuncs - object containing runnable rpc functions\n */\nexport default class MainThreadRpcDriver extends BaseRpcDriver {\n  name = 'MainThreadRpcDriver'\n\n  makeWorker: () => Promise<DummyHandle>\n\n  constructor(args: RpcDriverConstructorArgs) {\n    super(args)\n    this.makeWorker = async (): Promise<DummyHandle> => new DummyHandle()\n  }\n\n  async call(\n    pm: PluginManager,\n    sessionId: string,\n    funcName: string,\n    args: Record<string, unknown>,\n  ) {\n    if (!sessionId) {\n      throw new TypeError('sessionId is required')\n    }\n    const rpcMethod = pm.getRpcMethodType(funcName)\n    if (!rpcMethod) {\n      throw new Error(`unknown RPC method ${funcName}`)\n    }\n    const serializedArgs = await rpcMethod.serializeArguments(args, this.name)\n    const result = await rpcMethod.execute(serializedArgs, this.name)\n    return rpcMethod.deserializeReturn(result, args, this.name)\n  }\n}\n","import Rpc from 'librpc-web-mod'\nimport { deserializeError } from 'serialize-error'\n\nimport BaseRpcDriver from './BaseRpcDriver'\nimport { nanoid } from '../util/nanoid'\n\nimport type { RpcDriverConstructorArgs } from './BaseRpcDriver'\nimport type { PluginDefinition } from '../PluginLoader'\n\ninterface WebWorkerRpcDriverConstructorArgs extends RpcDriverConstructorArgs {\n  makeWorkerInstance: () => Worker\n}\n\ninterface Options {\n  statusCallback?: (arg0: unknown) => void\n  rpcDriverClassName: string\n}\n\nclass WebWorkerHandle extends Rpc.Client {\n  destroy(): void {\n    this.workers[0]!.terminate()\n  }\n\n  async call(funcName: string, args: Record<string, unknown>, opts: Options) {\n    const { statusCallback, rpcDriverClassName } = opts\n    const channel = `message-${nanoid()}`\n    const listener = (message: unknown) => {\n      statusCallback?.(message)\n    }\n    this.on(channel, listener)\n    const result = await super.call(\n      funcName,\n      { ...args, channel, rpcDriverClassName },\n      opts,\n    )\n    this.off(channel, listener)\n    return result\n  }\n}\n\nexport default class WebWorkerRpcDriver extends BaseRpcDriver {\n  name = 'WebWorkerRpcDriver'\n\n  makeWorkerInstance: () => Worker\n\n  constructor(\n    args: WebWorkerRpcDriverConstructorArgs,\n    public workerBootConfiguration: {\n      plugins: PluginDefinition[]\n      windowHref: string\n    },\n  ) {\n    super(args)\n    this.makeWorkerInstance = args.makeWorkerInstance\n  }\n\n  async makeWorker() {\n    // note that we are making a Rpc.Client connection with a worker pool of\n    // one for each worker, because we want to do our own state-group-aware\n    // load balancing rather than using librpc's builtin round-robin\n    const instance = this.makeWorkerInstance()\n\n    // @ts-ignore this is used to avoid warning in jbrowse-web startup\n    // (because this file is referred to via src, declare.d.ts file is in\n    // e.g. products/jbrowse-web)\n    const worker = new WebWorkerHandle({ workers: [instance] })\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n    if (isSafari) {\n      // xref https://github.com/GMOD/jbrowse-components/issues/3245\n      // eslint-disable-next-line no-console\n      console.log(\n        'console logging the webworker handle avoids the track going into an infinite loading state, this is a hacky workaround for safari',\n        instance,\n      )\n    }\n\n    // send the worker its boot configuration using info from the pluginManager\n    return new Promise((resolve: (w: WebWorkerHandle) => void, reject) => {\n      const listener = (e: MessageEvent) => {\n        switch (e.data.message) {\n          case 'ready': {\n            resolve(worker)\n            worker.workers[0]!.removeEventListener('message', listener)\n            break\n          }\n          case 'readyForConfig': {\n            worker.workers[0]!.postMessage({\n              message: 'config',\n              config: this.workerBootConfiguration,\n            })\n            break\n          }\n          case 'error': {\n            reject(deserializeError(e.data.error))\n            break\n          }\n          // No default\n        }\n      }\n      worker.workers[0]!.addEventListener('message', listener)\n    })\n  }\n}\n","import { ConfigurationSchema } from '../configuration'\n\n/**\n * #config BaseRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst BaseRpcDriverConfigSchema = ConfigurationSchema(\n  'BaseRpcDriver',\n  {\n    /**\n     * #slot\n     */\n    workerCount: {\n      type: 'number',\n      description:\n        'The number of workers to use. If 0 (the default) JBrowse will decide how many workers to use.',\n      defaultValue: 0,\n    },\n  },\n  { explicitlyTyped: true },\n)\nexport default BaseRpcDriverConfigSchema\n","import { ConfigurationSchema } from '../configuration'\nimport BaseRpcDriverConfigSchema from './baseRpcConfig'\n\n/**\n * #config MainThreadRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst MainThreadRpcDriverConfigSchema = ConfigurationSchema(\n  'MainThreadRpcDriver',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseRpcDriverConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default MainThreadRpcDriverConfigSchema\n","import { ConfigurationSchema } from '../configuration'\nimport BaseRpcDriverConfigSchema from './baseRpcConfig'\n\n/**\n * #config WebWorkerRpcDriver\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nconst WebWorkerRpcDriverConfigSchema = ConfigurationSchema(\n  'WebWorkerRpcDriver',\n  {},\n  {\n    /**\n     * #baseConfiguration\n     */\n    baseConfiguration: BaseRpcDriverConfigSchema,\n    explicitlyTyped: true,\n  },\n)\nexport default WebWorkerRpcDriverConfigSchema\n","import { types } from 'mobx-state-tree'\n\nimport { ConfigurationSchema } from '../configuration'\nimport MainThreadRpcDriverConfigSchema from './mainThreadRpcConfig'\nimport WebWorkerRpcDriverConfigSchema from './webWorkerRpcConfig'\n\n/**\n * #config RpcOptions\n */\nfunction x() {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport default ConfigurationSchema(\n  'RpcOptions',\n  {\n    /**\n     * #slot\n     */\n    defaultDriver: {\n      type: 'string',\n      description:\n        'the RPC driver to use for tracks and tasks that are not configured to use a specific RPC backend',\n      defaultValue: 'MainThreadRpcDriver',\n    },\n    /**\n     * #slot\n     */\n    drivers: types.optional(\n      types.map(\n        types.union(\n          MainThreadRpcDriverConfigSchema,\n          WebWorkerRpcDriverConfigSchema,\n        ),\n      ),\n      {\n        MainThreadRpcDriver: { type: 'MainThreadRpcDriver' },\n        WebWorkerRpcDriver: { type: 'WebWorkerRpcDriver' },\n      },\n    ),\n  },\n  {\n    actions: (self: any) => ({\n      addDriverConfig(configName: string, configSnapshot: { type: string }) {\n        self.drivers.set(configName, configSnapshot)\n      },\n    }),\n  },\n)\n","import { readConfObject } from '../configuration'\nimport MainThreadRpcDriver from './MainThreadRpcDriver'\nimport WebWorkerRpcDriver from './WebWorkerRpcDriver'\nimport rpcConfigSchema from './configSchema'\n\nimport type PluginManager from '../PluginManager'\nimport type { AnyConfigurationModel } from '../configuration'\n\ntype DriverClass = WebWorkerRpcDriver | MainThreadRpcDriver\ninterface BackendConfigurations {\n  WebWorkerRpcDriver?: Omit<\n    ConstructorParameters<typeof WebWorkerRpcDriver>[0],\n    'config'\n  >\n  MainThreadRpcDriver?: Omit<\n    ConstructorParameters<typeof MainThreadRpcDriver>[0],\n    'config'\n  >\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst DriverClasses = {\n  WebWorkerRpcDriver,\n  MainThreadRpcDriver,\n}\n\nexport default class RpcManager {\n  static configSchema = rpcConfigSchema\n\n  driverObjects: Map<string, DriverClass>\n\n  constructor(\n    public pluginManager: PluginManager,\n    public mainConfiguration: AnyConfigurationModel,\n    public backendConfigurations: BackendConfigurations,\n  ) {\n    this.driverObjects = new Map()\n  }\n\n  getDriver(backendName: keyof typeof DriverClasses) {\n    const driver = this.driverObjects.get(backendName)\n    if (driver) {\n      return driver\n    }\n    const config = this.mainConfiguration.drivers.get('WebWorkerRpcDriver')\n    if (backendName === 'MainThreadRpcDriver') {\n      const backendConfiguration =\n        this.backendConfigurations.MainThreadRpcDriver\n\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      const newDriver = new MainThreadRpcDriver({\n        ...backendConfiguration,\n        config,\n      })\n      this.driverObjects.set(backendName, newDriver)\n      return newDriver\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    else if (backendName === 'WebWorkerRpcDriver') {\n      const backendConfiguration = this.backendConfigurations.WebWorkerRpcDriver\n      if (!backendConfiguration) {\n        throw new Error(\n          `requested RPC driver \"${backendName}\" is missing config`,\n        )\n      }\n      const newDriver = new WebWorkerRpcDriver(\n        { ...backendConfiguration, config },\n        {\n          plugins: this.pluginManager.runtimePluginDefinitions,\n          windowHref: window.location.href,\n        },\n      )\n      this.driverObjects.set(backendName, newDriver)\n      return newDriver\n    } else {\n      throw new Error(`requested RPC driver \"${backendName}\" is not installed`)\n    }\n  }\n\n  async getDriverForCall(\n    _sessionId: string,\n    _functionName: string,\n    args: { rpcDriverName?: string },\n  ) {\n    const backendName =\n      args.rpcDriverName ||\n      readConfObject(this.mainConfiguration, 'defaultDriver')\n\n    return this.getDriver(backendName)\n  }\n\n  async call(\n    sessionId: string,\n    functionName: string,\n    args: Record<string, unknown>,\n    opts = {},\n  ) {\n    if (!sessionId) {\n      throw new Error('sessionId is required')\n    }\n    const driverForCall = await this.getDriverForCall(\n      sessionId,\n      functionName,\n      args,\n    )\n    return driverForCall.call(\n      this.pluginManager,\n      sessionId,\n      functionName,\n      args,\n      opts,\n    )\n  }\n}\n","import type { MenuItem } from '@jbrowse/core/ui'\n\ninterface InsertInSubMenuAction {\n  type: 'insertInSubMenu'\n  menuPath: string[]\n  menuItem: MenuItem\n  position: number\n}\ninterface InsertInMenuAction {\n  type: 'insertInMenu'\n  menuName: string\n  menuItem: MenuItem\n  position: number\n}\ninterface AppendToMenuAction {\n  type: 'appendToMenu'\n  menuName: string\n  menuItem: MenuItem\n}\ninterface AppendToSubMenuAction {\n  type: 'appendToSubMenu'\n  menuPath: string[]\n  menuItem: MenuItem\n}\ninterface AppendMenuAction {\n  type: 'appendMenu'\n  menuName: string\n}\ninterface InsertMenuAction {\n  type: 'insertMenu'\n  menuName: string\n  position: number\n}\ninterface SetMenusAction {\n  type: 'setMenus'\n  newMenus: Menu[]\n}\n\nexport type MenuAction =\n  | InsertMenuAction\n  | AppendMenuAction\n  | AppendToSubMenuAction\n  | AppendToMenuAction\n  | InsertInMenuAction\n  | InsertInSubMenuAction\n  | SetMenusAction\n\nexport interface Menu {\n  label: string\n  menuItems: MenuItem[]\n}\n\n/**\n * #action\n * Add a top-level menu\n *\n * @param menuName - Name of the menu to insert.\n *\n * @returns The new length of the top-level menus array\n */\nexport function appendMenu({\n  menus,\n  menuName,\n}: {\n  menus: Menu[]\n  menuName: string\n}) {\n  return menus.push({ label: menuName, menuItems: [] })\n}\n/**\n * #action\n * Insert a top-level menu\n *\n * @param menuName - Name of the menu to insert.\n *\n * @param position - Position to insert menu. If negative, counts from th\n * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n * second-to-last one.\n *\n * @returns The new length of the top-level menus array\n */\nexport function insertMenu({\n  menus,\n  menuName,\n  position,\n}: {\n  menus: Menu[]\n  menuName: string\n  position: number\n}) {\n  menus.splice((position < 0 ? menus.length : 0) + position, 0, {\n    label: menuName,\n    menuItems: [],\n  })\n  return menus.length\n}\n/**\n * #action\n * Add a menu item to a top-level menu\n *\n * @param menuName - Name of the top-level menu to append to.\n *\n * @param menuItem - Menu item to append.\n *\n * @returns The new length of the menu\n */\nexport function appendToMenu({\n  menus,\n  menuName,\n  menuItem,\n}: {\n  menus: Menu[]\n  menuName: string\n  menuItem: MenuItem\n}) {\n  const menu = menus.find(m => m.label === menuName)\n  if (!menu) {\n    menus.push({ label: menuName, menuItems: [menuItem] })\n    return 1\n  }\n  return menu.menuItems.push(menuItem)\n}\n/**\n * #action\n * Insert a menu item into a top-level menu\n *\n * @param menuName - Name of the top-level menu to insert into\n *\n * @param menuItem - Menu item to insert\n *\n * @param position - Position to insert menu item. If negative, counts\n * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n * the second-to-last one.\n *\n * @returns The new length of the menu\n */\nexport function insertInMenu({\n  menus,\n  menuName,\n  menuItem,\n  position,\n}: {\n  menus: Menu[]\n  menuName: string\n  menuItem: MenuItem\n  position: number\n}) {\n  const menu = menus.find(m => m.label === menuName)\n  if (!menu) {\n    menus.push({ label: menuName, menuItems: [menuItem] })\n    return 1\n  }\n  const insertPosition =\n    position < 0 ? menu.menuItems.length + position : position\n  menu.menuItems.splice(insertPosition, 0, menuItem)\n  return menu.menuItems.length\n}\n/**\n * #action\n * Add a menu item to a sub-menu\n *\n * @param menuPath - Path to the sub-menu to add to, starting with the\n * top-level menu (e.g. `['File', 'Insert']`).\n *\n * @param menuItem - Menu item to append.\n *\n * @returns The new length of the sub-menu\n */\nexport function appendToSubMenu({\n  menus,\n  menuPath,\n  menuItem,\n}: {\n  menus: Menu[]\n  menuPath: string[]\n  menuItem: MenuItem\n}) {\n  let topMenu = menus.find(m => m.label === menuPath[0])\n  if (!topMenu) {\n    const idx = appendMenu({ menus, menuName: menuPath[0]! })\n    topMenu = menus[idx - 1]!\n  }\n  let { menuItems: subMenu } = topMenu\n  const pathSoFar = [menuPath[0]]\n  for (const menuName of menuPath.slice(1)) {\n    pathSoFar.push(menuName)\n    let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n    if (!sm) {\n      const idx = subMenu.push({ label: menuName, subMenu: [] })\n      sm = subMenu[idx - 1]!\n    }\n    if (!('subMenu' in sm)) {\n      throw new Error(`\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`)\n    }\n    subMenu = sm.subMenu\n  }\n  return subMenu.push(menuItem)\n}\n/**\n * #action\n * Insert a menu item into a sub-menu\n *\n * @param menuPath - Path to the sub-menu to add to, starting with the\n * top-level menu (e.g. `['File', 'Insert']`).\n *\n * @param menuItem - Menu item to insert.\n *\n * @param position - Position to insert menu item. If negative, counts\n * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n * the second-to-last one.\n *\n * @returns The new length of the sub-menu\n */\nexport function insertInSubMenu({\n  menus,\n  menuPath,\n  menuItem,\n  position,\n}: {\n  menus: Menu[]\n  menuPath: string[]\n  menuItem: MenuItem\n  position: number\n}) {\n  let topMenu = menus.find(m => m.label === menuPath[0])\n  if (!topMenu) {\n    const idx = appendMenu({ menus, menuName: menuPath[0]! })\n    topMenu = menus[idx - 1]!\n  }\n  let { menuItems: subMenu } = topMenu\n  const pathSoFar = [menuPath[0]]\n  for (const menuName of menuPath.slice(1)) {\n    pathSoFar.push(menuName)\n    let sm = subMenu.find(mi => 'label' in mi && mi.label === menuName)\n    if (!sm) {\n      const idx = subMenu.push({ label: menuName, subMenu: [] })\n      sm = subMenu[idx - 1]!\n    }\n    if (!('subMenu' in sm)) {\n      throw new Error(`\"${menuName}\" in path \"${pathSoFar}\" is not a subMenu`)\n    }\n    subMenu = sm.subMenu\n  }\n  subMenu.splice(position, 0, menuItem)\n  return subMenu.length\n}\n\nexport function processMutableMenuActions(ret: Menu[], actions: MenuAction[]) {\n  for (const action of actions) {\n    if (action.type === 'setMenus') {\n      ret = action.newMenus\n    } else if (action.type === 'appendMenu') {\n      appendMenu({ menus: ret, ...action })\n    } else if (action.type === 'insertMenu') {\n      insertMenu({ menus: ret, ...action })\n    } else if (action.type === 'insertInSubMenu') {\n      insertInSubMenu({ menus: ret, ...action })\n    } else if (action.type === 'appendToSubMenu') {\n      appendToSubMenu({ menus: ret, ...action })\n    } else if (action.type === 'appendToMenu') {\n      appendToMenu({ menus: ret, ...action })\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    } else if (action.type === 'insertInMenu') {\n      insertInMenu({ menus: ret, ...action })\n    }\n  }\n  return ret\n}\n","import { Suspense, lazy, useState } from 'react'\n\nimport ShareIcon from '@mui/icons-material/Share'\nimport { Button, alpha } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { AbstractSessionModel } from '@jbrowse/core/util'\n\nconst useStyles = makeStyles()(theme => ({\n  shareDiv: {\n    textAlign: 'center',\n    paddingLeft: '2px',\n  },\n  shareButton: {\n    backgroundColor: alpha(\n      theme.palette.primary.contrastText,\n      theme.palette.action.hoverOpacity,\n    ),\n    '&:hover': {\n      '@media (hover: none)': {\n        backgroundColor: 'transparent',\n      },\n    },\n  },\n}))\n\nconst ShareDialog = lazy(() => import('./ShareDialog'))\n\nconst ShareButton = observer(function (props: {\n  session: AbstractSessionModel & { shareURL: string }\n}) {\n  const [open, setOpen] = useState(false)\n  const { session } = props\n  const { classes } = useStyles()\n\n  return (\n    <div className={classes.shareDiv}>\n      <Button\n        size=\"small\"\n        color=\"inherit\"\n        startIcon={<ShareIcon />}\n        classes={{ root: classes.shareButton }}\n        onClick={async () => {\n          setOpen(true)\n        }}\n      >\n        Share\n      </Button>\n      {open ? (\n        <Suspense fallback={null}>\n          <ShareDialog\n            session={session}\n            handleClose={() => {\n              setOpen(false)\n            }}\n          />\n        </Suspense>\n      ) : null}\n    </div>\n  )\n})\n\nexport default ShareButton\n","import { useEffect } from 'react'\n\nimport { App } from '@jbrowse/app-core'\nimport { CssBaseline, ThemeProvider } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { onSnapshot } from 'mobx-state-tree'\nimport { StringParam, useQueryParam } from 'use-query-params'\n\nimport ShareButton from './ShareButton'\n\nimport type { WebSessionModel } from '../sessionModel'\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst JBrowse = observer(function ({\n  pluginManager,\n}: {\n  pluginManager: PluginManager\n}) {\n  const [adminKey] = useQueryParam('adminKey', StringParam)\n  const [adminServer] = useQueryParam('adminServer', StringParam)\n  const [configPath] = useQueryParam('config', StringParam)\n  const [, setSessionId] = useQueryParam('session', StringParam)\n  const { rootModel } = pluginManager\n  const { error, jbrowse, session: s } = rootModel!\n  const session = s as WebSessionModel\n  const { id, theme } = session\n\n  useEffect(() => {\n    setSessionId(`local-${id}`, 'replaceIn')\n    // @ts-expect-error\n    window.JBrowseRootModel = rootModel\n    // @ts-expect-error\n    window.JBrowseSession = session\n  }, [id, rootModel, session, setSessionId])\n\n  useEffect(() => {\n    return adminKey\n      ? onSnapshot(jbrowse, async snapshot => {\n          try {\n            const response = await fetch(adminServer || '/updateConfig', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                adminKey,\n                configPath,\n                config: snapshot,\n              }),\n            })\n            if (!response.ok) {\n              const message = await response.text()\n              throw new Error(`HTTP ${response.status} (${message})`)\n            }\n          } catch (e) {\n            session.notify(`Admin server error: ${e}`)\n          }\n        })\n      : undefined\n  }, [jbrowse, session, adminKey, adminServer, configPath])\n\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/only-throw-error\n    throw error\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App\n        // @ts-expect-error\n        session={session}\n        HeaderButtons={<ShareButton session={session} />}\n      />\n    </ThemeProvider>\n  )\n})\n\nexport default JBrowse\n","import PluginLoader from '@jbrowse/core/PluginLoader'\nimport { openLocation } from '@jbrowse/core/util/io'\nimport { nanoid } from '@jbrowse/core/util/nanoid'\nimport { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport { readSessionFromDynamo } from './sessionSharing'\nimport { addRelativeUris, checkPlugins, fromUrlSafeB64, readConf } from './util'\n\nimport type { SessionTriagedInfo } from './types'\nimport type { PluginDefinition, PluginRecord } from '@jbrowse/core/PluginLoader'\nimport type { Instance } from 'mobx-state-tree'\n\nconst SessionLoader = types\n  .model({\n    /**\n     * #property\n     */\n    configPath: types.maybe(types.string),\n    /**\n     * #property\n     */\n    sessionQuery: types.maybe(types.string),\n    /**\n     * #property\n     */\n    password: types.maybe(types.string),\n    /**\n     * #property\n     */\n    adminKey: types.maybe(types.string),\n    /**\n     * #property\n     */\n    loc: types.maybe(types.string),\n    /**\n     * #property\n     */\n    sessionTracks: types.maybe(types.string),\n    /**\n     * #property\n     */\n    assembly: types.maybe(types.string),\n    /**\n     * #property\n     */\n    tracks: types.maybe(types.string),\n    /**\n     * #property\n     */\n    tracklist: types.maybe(types.boolean),\n    /**\n     * #property\n     */\n    highlight: types.maybe(types.string),\n    /**\n     * #property\n     */\n    nav: types.maybe(types.boolean),\n    /**\n     * #property\n     */\n    initialTimestamp: types.number,\n\n    /**\n     * #property\n     */\n    hubURL: types.maybe(types.array(types.string)),\n    /**\n     * #property\n     */\n    configSnapshot: types.frozen<Record<string, unknown> | undefined>(\n      undefined,\n    ),\n    /**\n     * #property\n     */\n    sessionSnapshot: types.frozen<Record<string, unknown> | undefined>(\n      undefined,\n    ),\n  })\n  .volatile(() => ({\n    /**\n     * #volatile\n     */\n    sessionTriaged: undefined as SessionTriagedInfo | undefined,\n    /**\n     * #volatile\n     */\n    sessionSpec: undefined as Record<string, unknown> | undefined,\n    /**\n     * #volatile\n     */\n    hubSpec: undefined as Record<string, unknown> | undefined,\n    /**\n     * #volatile\n     */\n    blankSession: false,\n    /**\n     * #volatile\n     */\n    runtimePlugins: undefined as PluginRecord[] | undefined,\n    /**\n     * #volatile\n     */\n    sessionPlugins: undefined as PluginRecord[] | undefined,\n    /**\n     * #volatile\n     */\n    sessionError: undefined as unknown,\n    /**\n     * #volatile\n     */\n    configError: undefined as unknown,\n    /**\n     * #volatile\n     */\n    bc1:\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      window.BroadcastChannel\n        ? new window.BroadcastChannel('jb_request_session')\n        : undefined,\n    /**\n     * #volatile\n     */\n    bc2:\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      window.BroadcastChannel\n        ? new window.BroadcastChannel('jb_respond_session')\n        : undefined,\n  }))\n  .views(self => ({\n    /**\n     * #getter\n     */\n    get isSharedSession() {\n      return !!self.sessionQuery?.startsWith('share-')\n    },\n    /**\n     * #getter\n     */\n    get isSpecSession() {\n      return !!self.sessionQuery?.startsWith('spec-')\n    },\n    /**\n     * #getter\n     */\n    get isHubSession() {\n      return !!self.hubURL\n    },\n    /**\n     * #getter\n     */\n    get isJb1StyleSession() {\n      return !!self.loc\n    },\n\n    /**\n     * #getter\n     */\n    get isEncodedSession() {\n      return !!self.sessionQuery?.startsWith('encoded-')\n    },\n    /**\n     * #getter\n     */\n    get isJsonSession() {\n      return !!self.sessionQuery?.startsWith('json-')\n    },\n    /**\n     * #getter\n     */\n    get isLocalSession() {\n      return !!self.sessionQuery?.startsWith('local-')\n    },\n    /**\n     * #getter\n     */\n    get ready() {\n      return Boolean(\n        this.isSessionLoaded && !self.configError && this.pluginsLoaded,\n      )\n    },\n    /**\n     * #getter\n     */\n    get error() {\n      return self.configError || self.sessionError\n    },\n    /**\n     * #getter\n     */\n    get pluginsLoaded() {\n      if (self.sessionError || self.blankSession || self.sessionSpec) {\n        // don't need session plugins for these cases\n        return Boolean(self.runtimePlugins)\n      }\n      return Boolean(self.runtimePlugins && self.sessionPlugins)\n    },\n    /**\n     * #getter\n     */\n    get isSessionLoaded() {\n      return Boolean(\n        self.sessionError ||\n          self.sessionSnapshot ||\n          self.blankSession ||\n          self.sessionSpec,\n      )\n    },\n    /**\n     * #getter\n     */\n    get isConfigLoaded() {\n      return Boolean(self.configError || self.configSnapshot)\n    },\n    /**\n     * #getter\n     */\n    get sessionTracksParsed() {\n      return self.sessionTracks ? JSON.parse(self.sessionTracks) : []\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    setSessionQuery(session?: any) {\n      self.sessionQuery = session\n    },\n    /**\n     * #action\n     */\n    setConfigError(error: unknown) {\n      self.configError = error\n    },\n    /**\n     * #action\n     */\n    setSessionError(error: unknown) {\n      self.sessionError = error\n    },\n    /**\n     * #action\n     */\n    setRuntimePlugins(plugins: PluginRecord[]) {\n      self.runtimePlugins = plugins\n    },\n    /**\n     * #action\n     */\n    setSessionPlugins(plugins: PluginRecord[]) {\n      self.sessionPlugins = plugins\n    },\n    /**\n     * #action\n     */\n    setConfigSnapshot(snap: Record<string, unknown>) {\n      self.configSnapshot = snap\n    },\n    /**\n     * #action\n     */\n    setBlankSession(flag: boolean) {\n      self.blankSession = flag\n    },\n    /**\n     * #action\n     */\n    setSessionTriaged(args?: SessionTriagedInfo) {\n      self.sessionTriaged = args\n    },\n    /**\n     * #action\n     */\n    setSessionSnapshot(snap: Record<string, unknown>) {\n      self.sessionSnapshot = snap\n    },\n  }))\n  .actions(self => ({\n    /**\n     * #action\n     */\n    async fetchPlugins(config: { plugins: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(config.plugins, {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        })\n        pluginLoader.installGlobalReExports(window)\n        const runtimePlugins = await pluginLoader.load(window.location.href)\n        self.setRuntimePlugins([...runtimePlugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    /**\n     * #action\n     */\n    async fetchSessionPlugins(snap: { sessionPlugins?: PluginDefinition[] }) {\n      try {\n        const pluginLoader = new PluginLoader(snap.sessionPlugins || [], {\n          fetchESM: url => import(/* webpackIgnore:true */ url),\n        }).installGlobalReExports(window)\n        const plugins = await pluginLoader.load(window.location.href)\n        self.setSessionPlugins([...plugins])\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n\n    /**\n     * #action\n     */\n    async loadSession(\n      snap: { sessionPlugins?: PluginDefinition[]; id: string },\n      userAcceptedConfirmation?: boolean,\n    ) {\n      try {\n        const { sessionPlugins = [] } = snap\n        const sessionPluginsAllowed = await checkPlugins(sessionPlugins)\n        if (sessionPluginsAllowed || userAcceptedConfirmation) {\n          await this.fetchSessionPlugins(snap)\n          self.setSessionSnapshot(snap)\n        } else {\n          self.setSessionTriaged({\n            snap,\n            origin: 'session',\n            reason: sessionPlugins,\n          })\n        }\n      } catch (e) {\n        console.error(e)\n        self.setConfigError(e)\n      }\n    },\n    /**\n     * #action\n     */\n    async fetchConfig() {\n      // @ts-expect-error\n      const path = window.__jbrowseConfigPath\n      const { configPath = path || 'config.json' } = self\n      const shouldFetchConfig = configPath !== 'none'\n\n      // if ?config=none then we will not load the config, which is useful for\n      // ?hubURL which may not need a config\n      //\n      // however, in the rare case that you want hubs and a config (e.g. your\n      // config has plugins to load) then you can still have this too\n      if (shouldFetchConfig) {\n        const text = await openLocation({\n          uri:\n            configPath +\n            // @ts-expect-error\n            (window.__jbrowseCacheBuster ? `?rand=${Math.random()}` : ''),\n          locationType: 'UriLocation',\n        }).readFile('utf8')\n        const config = JSON.parse(text)\n        const configUri = new URL(configPath, window.location.href)\n        addRelativeUris(config, configUri)\n\n        // cross origin config check\n        if (configUri.hostname !== window.location.hostname) {\n          const configPlugins = config.plugins || []\n          const configPluginsAllowed = await checkPlugins(configPlugins)\n          if (!configPluginsAllowed) {\n            self.setSessionTriaged({\n              snap: config,\n              origin: 'config',\n              reason: configPlugins,\n            })\n            return\n          }\n        }\n        await this.fetchPlugins(config)\n        self.setConfigSnapshot(config)\n      } else {\n        self.setConfigSnapshot({})\n      }\n    },\n    /**\n     * action\n     */\n    async setUpConfig() {\n      // @ts-expect-error\n      const path = window.__jbrowseConfigPath\n      const { configPath = path || 'config.json' } = self\n      const configUri = new URL(configPath, window.location.href)\n      const { configSnapshot } = self\n      const config = JSON.parse(JSON.stringify(configSnapshot))\n      addRelativeUris(config, configUri)\n      self.setConfigSnapshot(config)\n      await this.fetchPlugins(config)\n    },\n    /**\n     * #action\n     */\n    async fetchSessionStorageSession() {\n      const sessionStr = sessionStorage.getItem('current')\n      const query = self.sessionQuery!.replace('local-', '')\n\n      if (sessionStr) {\n        const sessionSnap = JSON.parse(sessionStr).session || {}\n        if (query === sessionSnap.id) {\n          return this.loadSession(sessionSnap)\n        }\n      }\n\n      if (self.bc1) {\n        self.bc1.postMessage(query)\n        try {\n          const result = await new Promise<Record<string, unknown>>(\n            (resolve, reject) => {\n              if (self.bc2) {\n                self.bc2.onmessage = msg => {\n                  resolve(msg.data)\n                }\n              }\n              setTimeout(() => {\n                reject(new Error('timeout'))\n              }, 1000)\n            },\n          )\n          await this.loadSession({ ...result, id: nanoid() })\n        } catch (e) {\n          // the broadcast channels did not find the session in another tab\n          // clear session param, so just ignore\n        }\n      }\n      throw new Error('Local storage session not found')\n    },\n    /**\n     * #action\n     */\n    async checkExistingSession(sessionSnapshot: Record<string, unknown>) {\n      if (!self.sessionPlugins) {\n        // session snapshot probably provided during .create() but plugins\n        // haven't been loaded yet\n        // @ts-expect-error\n        await this.loadSession(sessionSnapshot)\n      }\n    },\n    /**\n     * #action\n     */\n    async fetchSharedSession() {\n      const defaultURL = 'https://share.jbrowse.org/api/v1/'\n      const decryptedSession = await readSessionFromDynamo(\n        // @ts-expect-error\n        `${readConf(self.configSnapshot, 'shareURL', defaultURL)}load`,\n        self.sessionQuery || '',\n        self.password || '',\n      )\n\n      const session = JSON.parse(await fromUrlSafeB64(decryptedSession))\n      await this.loadSession({\n        ...session,\n        id: nanoid(),\n      })\n    },\n    /**\n     * #action\n     */\n    async decodeEncodedUrlSession() {\n      const session = JSON.parse(\n        // @ts-expect-error\n        await fromUrlSafeB64(self.sessionQuery.replace('encoded-', '')),\n      )\n      await this.loadSession({\n        ...session,\n        id: nanoid(),\n      })\n    },\n    /**\n     * #action\n     */\n    decodeSessionSpec() {\n      if (!self.sessionQuery) {\n        return\n      }\n      self.sessionSpec = JSON.parse(self.sessionQuery.replace('spec-', ''))\n    },\n    /**\n     * #action\n     */\n    decodeJb1StyleSession() {\n      const {\n        loc,\n        tracks,\n        assembly,\n        tracklist,\n        nav,\n        highlight,\n        sessionTracksParsed: sessionTracks,\n      } = self\n      if (loc) {\n        self.sessionSpec = {\n          sessionTracks,\n          views: [\n            {\n              type: 'LinearGenomeView',\n              tracks: tracks?.split(','),\n              sessionTracks,\n              loc,\n              assembly,\n              tracklist,\n              nav,\n              highlight: highlight?.split(' '),\n            },\n          ],\n        }\n      }\n    },\n\n    /**\n     * #action\n     */\n    decodeHubSpec() {\n      const { hubURL, sessionTracksParsed: sessionTracks } = self\n\n      self.hubSpec = {\n        sessionTracks,\n        hubURL,\n      }\n    },\n    /**\n     * #action\n     */\n    async decodeJsonUrlSession() {\n      // @ts-expect-error\n      const { session } = JSON.parse(self.sessionQuery.replace(/^json-/, ''))\n      await this.loadSession({\n        ...session,\n        id: nanoid(),\n      })\n    },\n    /**\n     * #aftercreate\n     */\n    afterCreate() {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      ;(async () => {\n        try {\n          await (self.configSnapshot ? this.setUpConfig() : this.fetchConfig())\n\n          addDisposer(\n            self,\n            autorun(async () => {\n              try {\n                const {\n                  isLocalSession,\n                  isEncodedSession,\n                  isSpecSession,\n                  isSharedSession,\n                  isJsonSession,\n                  isJb1StyleSession,\n                  isHubSession,\n                  sessionQuery,\n                  sessionSnapshot,\n                  configSnapshot,\n                } = self\n                if (!configSnapshot) {\n                  return\n                }\n\n                if (self.bc1) {\n                  self.bc1.onmessage = msg => {\n                    const r =\n                      JSON.parse(sessionStorage.getItem('current') || '{}')\n                        .session || {}\n                    if (r.id === msg.data && self.bc2) {\n                      self.bc2.postMessage(r)\n                    }\n                  }\n                }\n                if (sessionSnapshot) {\n                  await this.checkExistingSession(sessionSnapshot)\n                } else if (isSharedSession) {\n                  await this.fetchSharedSession()\n                } else if (isSpecSession) {\n                  this.decodeSessionSpec()\n                } else if (isJb1StyleSession) {\n                  this.decodeJb1StyleSession()\n                } else if (isEncodedSession) {\n                  await this.decodeEncodedUrlSession()\n                } else if (isJsonSession) {\n                  await this.decodeJsonUrlSession()\n                } else if (isLocalSession) {\n                  await this.fetchSessionStorageSession()\n                } else if (isHubSession) {\n                  // this is later in the list: prioritiz local session of \"hub\n                  // spec\" since hub is left in URL even when there may be a\n                  // local session\n                  this.decodeHubSpec()\n                  self.setBlankSession(true)\n                } else if (sessionQuery) {\n                  // if there was a sessionQuery and we don't recognize it\n                  throw new Error('unrecognized session format')\n                } else {\n                  // placeholder for session loaded, but none found\n                  self.setBlankSession(true)\n                }\n              } catch (e) {\n                console.error(e)\n                self.setSessionError(e)\n              }\n            }),\n          )\n        } catch (e) {\n          console.error(e)\n          self.setConfigError(e)\n        }\n      })()\n    },\n  }))\n\nexport type SessionLoaderModel = Instance<typeof SessionLoader>\n\nexport default SessionLoader\n","import AbortablePromiseCache from '@gmod/abortable-promise-cache'\nimport { getParent, types } from 'mobx-state-tree'\n\nimport { getConf } from '../configuration'\nimport { adapterConfigCacheKey } from '../data_adapters/util'\nimport { when } from '../util'\nimport QuickLRU from '../util/QuickLRU'\n\nimport type PluginManager from '../PluginManager'\nimport type { AnyConfigurationModel } from '../configuration'\nimport type {\n  BaseOptions,\n  BaseRefNameAliasAdapter,\n  RegionsAdapter,\n} from '../data_adapters/BaseAdapter'\nimport type RpcManager from '../rpc/RpcManager'\nimport type { Feature, Region } from '../util'\nimport type { IAnyType, Instance } from 'mobx-state-tree'\n\ntype AdapterConf = Record<string, unknown>\n\n/* biome-ignore lint/complexity/useRegexLiterals: */\nconst refNameRegex = new RegExp(\n  '[0-9A-Za-z!#$%&+./:;?@^_|~-][0-9A-Za-z!#$%&*+./:;=?@^_|~-]*',\n)\n\n// Based on the UCSC Genome Browser chromosome color palette:\n// https://github.com/ucscGenomeBrowser/kent/blob/a50ed53aff81d6fb3e34e6913ce18578292bc24e/src/hg/inc/chromColors.h\n// Some colors darkened to have at least a 3:1 contrast ratio on a white\n// background\nconst refNameColors = [\n  'rgb(153, 102, 0)',\n  'rgb(102, 102, 0)',\n  'rgb(153, 153, 30)',\n  'rgb(204, 0, 0)',\n  'rgb(255, 0, 0)',\n  'rgb(255, 0, 204)',\n  'rgb(165, 132, 132)', // originally 'rgb(255, 204, 204)'\n  'rgb(204, 122, 0)', // originally rgb(255, 153, 0)'\n  'rgb(178, 142, 0)', // originally 'rgb(255, 204, 0)'\n  'rgb(153, 153, 0)', // originally 'rgb(255, 255, 0)'\n  'rgb(122, 153, 0)', // originally 'rgb(204, 255, 0)'\n  'rgb(0, 165, 0)', // originally 'rgb(0, 255, 0)'\n  'rgb(53, 128, 0)',\n  'rgb(0, 0, 204)',\n  'rgb(96, 145, 242)', // originally 'rgb(102, 153, 255)'\n  'rgb(107, 142, 178)', // originally 'rgb(153, 204, 255)'\n  'rgb(0, 165, 165)', // originally 'rgb(0, 255, 255)'\n  'rgb(122, 153, 153)', // originally 'rgb(204, 255, 255)'\n  'rgb(153, 0, 204)',\n  'rgb(204, 51, 255)',\n  'rgb(173, 130, 216)', // originally 'rgb(204, 153, 255)'\n  'rgb(102, 102, 102)',\n  'rgb(145, 145, 145)', // originally 'rgb(153, 153, 153)'\n  'rgb(142, 142, 142)', // originally 'rgb(204, 204, 204)'\n  'rgb(142, 142, 107)', // originally 'rgb(204, 204, 153)'\n  'rgb(96, 163, 48)', // originally 'rgb(121, 204, 61)'\n]\n\nasync function loadRefNameMap(\n  assembly: Assembly,\n  adapterConfig: unknown,\n  options: BaseOptions,\n  stopToken?: string,\n) {\n  const { sessionId } = options\n  await when(() => !!(assembly.regions && assembly.refNameAliases), {\n    name: 'when assembly ready',\n  })\n\n  const refNames = (await assembly.rpcManager.call(\n    sessionId || 'assemblyRpc',\n    'CoreGetRefNames',\n    {\n      adapterConfig,\n      stopToken,\n      ...options,\n    },\n    { timeout: 1000000 },\n  )) as string[]\n\n  const { refNameAliases } = assembly\n  if (!refNameAliases) {\n    throw new Error(`error loading assembly ${assembly.name}'s refNameAliases`)\n  }\n\n  const refNameMap = Object.fromEntries(\n    refNames.map(name => {\n      checkRefName(name)\n      return [assembly.getCanonicalRefName(name), name]\n    }),\n  )\n\n  return {\n    forwardMap: refNameMap,\n    reverseMap: Object.fromEntries(\n      Object.entries(refNameMap).map(([canonicalName, adapterName]) => [\n        adapterName,\n        canonicalName,\n      ]),\n    ),\n  }\n}\n\n// Valid refName pattern from https://samtools.github.io/hts-specs/SAMv1.pdf\nfunction checkRefName(refName: string) {\n  if (!refNameRegex.test(refName)) {\n    throw new Error(`Encountered invalid refName: \"${refName}\"`)\n  }\n}\n\ntype RefNameAliases = Record<string, string>\n\ninterface CacheData {\n  adapterConf: unknown\n  self: Assembly\n  sessionId: string\n  options: BaseOptions\n}\n\nexport interface RefNameMap {\n  forwardMap: RefNameAliases\n  reverseMap: RefNameAliases\n}\n\nexport interface BasicRegion {\n  start: number\n  end: number\n  refName: string\n  assemblyName: string\n}\n\n/**\n * #stateModel Assembly\n */\nexport default function assemblyFactory(\n  assemblyConfigType: IAnyType,\n  pluginManager: PluginManager,\n) {\n  const adapterLoads = new AbortablePromiseCache<CacheData, RefNameMap>({\n    cache: new QuickLRU({ maxSize: 1000 }),\n\n    // @ts-expect-error\n    // TODO:ABORT (possible? desirable??)\n    async fill(\n      args: CacheData,\n      _stopToken?: string,\n      statusCallback?: (arg: string) => void,\n    ) {\n      const { adapterConf, self, options } = args\n      return loadRefNameMap(self, adapterConf, { ...options, statusCallback })\n    },\n  })\n  return types\n    .model({\n      /**\n       * #property\n       */\n      configuration: types.safeReference(assemblyConfigType),\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      error: undefined as unknown,\n      /**\n       * #volatile\n       */\n      loadingP: undefined as Promise<void> | undefined,\n      /**\n       * #volatile\n       */\n      volatileRegions: undefined as BasicRegion[] | undefined,\n      /**\n       * #volatile\n       */\n      refNameAliases: undefined as RefNameAliases | undefined,\n      /**\n       * #volatile\n       */\n      lowerCaseRefNameAliases: undefined as RefNameAliases | undefined,\n      /**\n       * #volatile\n       */\n      cytobands: undefined as Feature[] | undefined,\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getConf(arg: string) {\n        return self.configuration ? getConf(self, arg) : undefined\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       * this is a getter with a side effect of loading the data. not the best\n       * practice, but it helps to lazy load the assembly\n       */\n      get initialized() {\n        // @ts-expect-error\n        self.load()\n        return !!self.refNameAliases\n      },\n\n      /**\n       * #getter\n       */\n      get name(): string {\n        return self.getConf('name') || ''\n      },\n\n      /**\n       * #getter\n       */\n      get regions() {\n        // @ts-expect-error\n        self.load()\n        return self.volatileRegions\n      },\n\n      /**\n       * #getter\n       */\n      get aliases(): string[] {\n        return self.getConf('aliases') || []\n      },\n\n      /**\n       * #getter\n       */\n      get displayName(): string | undefined {\n        return self.getConf('displayName') || self.getConf('name') || ''\n      },\n      /**\n       * #method\n       */\n      hasName(name: string) {\n        return this.allAliases.includes(name)\n      },\n\n      /**\n       * #getter\n       */\n      get allAliases() {\n        return [this.name, ...this.aliases]\n      },\n\n      /**\n       * #getter\n       * note: lowerCaseRefNameAliases not included here: this allows the list\n       * of refnames to be just the \"normal casing\", but things like\n       * getCanonicalRefName can resolve a lower-case name if needed\n       */\n      get allRefNames() {\n        return !self.refNameAliases\n          ? undefined\n          : Object.keys(self.refNameAliases)\n      },\n      /**\n       * #getter\n       */\n      get lowerCaseRefNames() {\n        return !self.lowerCaseRefNameAliases\n          ? undefined\n          : Object.keys(self.lowerCaseRefNameAliases)\n      },\n\n      /**\n       * #getter\n       */\n      get allRefNamesWithLowerCase() {\n        return this.allRefNames && this.lowerCaseRefNames\n          ? [...new Set([...this.allRefNames, ...this.lowerCaseRefNames])]\n          : undefined\n      },\n      /**\n       * #getter\n       */\n      get rpcManager(): RpcManager {\n        return getParent<any>(self, 2).rpcManager\n      },\n      /**\n       * #getter\n       */\n      get refNameColors() {\n        const colors: string[] = self.getConf('refNameColors') || []\n        return colors.length === 0 ? refNameColors : colors\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get refNames() {\n        return self.regions?.map(region => region.refName)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getCanonicalRefName(refName: string) {\n        if (!self.refNameAliases || !self.lowerCaseRefNameAliases) {\n          throw new Error(\n            'aliases not loaded, we expect them to be loaded before getCanonicalRefName can be called',\n          )\n        }\n\n        return (\n          self.refNameAliases[refName] || self.lowerCaseRefNameAliases[refName]\n        )\n      },\n      /**\n       * #method\n       */\n      getRefNameColor(refName: string) {\n        if (!self.refNames) {\n          return undefined\n        }\n        const idx = self.refNames.indexOf(refName)\n        return idx === -1\n          ? undefined\n          : self.refNameColors[idx % self.refNameColors.length]\n      },\n      /**\n       * #method\n       */\n      isValidRefName(refName: string) {\n        if (!self.refNameAliases) {\n          throw new Error(\n            'isValidRefName cannot be called yet, the assembly has not finished loading',\n          )\n        }\n        return !!this.getCanonicalRefName(refName)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setLoaded({\n        regions,\n        refNameAliases,\n        lowerCaseRefNameAliases,\n        cytobands,\n      }: {\n        regions: Region[]\n        refNameAliases: RefNameAliases\n        lowerCaseRefNameAliases: RefNameAliases\n        cytobands: Feature[]\n      }) {\n        this.setRegions(regions)\n        this.setRefNameAliases(refNameAliases, lowerCaseRefNameAliases)\n        this.setCytobands(cytobands)\n      },\n      /**\n       * #action\n       */\n      setError(e: unknown) {\n        self.error = e\n      },\n      /**\n       * #action\n       */\n      setRegions(regions: Region[]) {\n        self.volatileRegions = regions\n      },\n      /**\n       * #action\n       */\n      setRefNameAliases(\n        aliases: RefNameAliases,\n        lowerCaseAliases: RefNameAliases,\n      ) {\n        self.refNameAliases = aliases\n        self.lowerCaseRefNameAliases = lowerCaseAliases\n      },\n      /**\n       * #action\n       */\n      setCytobands(cytobands: Feature[]) {\n        self.cytobands = cytobands\n      },\n      /**\n       * #action\n       */\n      setLoadingP(p?: Promise<void>) {\n        self.loadingP = p\n      },\n      /**\n       * #action\n       */\n      load() {\n        if (!self.loadingP) {\n          self.loadingP = this.loadPre().catch((e: unknown) => {\n            this.setLoadingP(undefined)\n            this.setError(e)\n          })\n        }\n        return self.loadingP\n      },\n      /**\n       * #action\n       */\n      async loadPre() {\n        const conf = self.configuration\n        const refNameAliasesAdapterConf = conf?.refNameAliases?.adapter\n        const cytobandAdapterConf = conf?.cytobands?.adapter\n        const sequenceAdapterConf = conf?.sequence.adapter\n        const assemblyName = self.name\n\n        const regions = await getAssemblyRegions({\n          config: sequenceAdapterConf,\n          pluginManager,\n        })\n\n        const adapterRegionsWithAssembly = regions.map(r => {\n          checkRefName(r.refName)\n          return { ...r, assemblyName }\n        })\n        const refNameAliases = {} as Record<string, string>\n\n        const refNameAliasCollection = await getRefNameAliases({\n          config: refNameAliasesAdapterConf,\n          pluginManager,\n        })\n\n        for (const { refName, aliases, override } of refNameAliasCollection) {\n          for (const alias of aliases) {\n            checkRefName(alias)\n            refNameAliases[alias] = refName\n          }\n          // the override field is supplied by a RefNameAliasAdapter to make\n          // the refName field returned by the adapter to be used as the\n          // primary names for this assembly\n          if (override) {\n            refNameAliases[refName] = refName\n          }\n        }\n        // add identity to the refNameAliases list\n        for (const region of adapterRegionsWithAssembly) {\n          // this ||= means that if the refNameAliasAdapter already set a\n          // mapping for the primary region to be an alias\n          refNameAliases[region.refName] ||= region.refName\n        }\n        const lowerCaseRefNameAliases = Object.fromEntries(\n          Object.entries(refNameAliases).map(([key, val]) => [\n            key.toLowerCase(),\n            val,\n          ]),\n        )\n\n        this.setLoaded({\n          refNameAliases,\n          regions: adapterRegionsWithAssembly.map(r => ({\n            ...r,\n            refName: refNameAliases[r.refName] || r.refName,\n          })),\n          lowerCaseRefNameAliases,\n          cytobands: await getCytobands({\n            config: cytobandAdapterConf,\n            pluginManager,\n          }),\n        })\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getAdapterMapEntry(adapterConf: AdapterConf, options: BaseOptions) {\n        const { stopToken, statusCallback, ...rest } = options\n        if (!options.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        return adapterLoads.get(\n          adapterConfigCacheKey(adapterConf),\n          {\n            adapterConf,\n            self,\n            options: rest,\n          } as CacheData,\n\n          // stopToken intentionally not passed here, fixes issues like #2221.\n          // alternative fix #2540 was proposed but non-working currently\n          undefined,\n          statusCallback,\n        )\n      },\n\n      /**\n       * #method\n       * get Map of `canonical-name -> adapter-specific-name`\n       */\n      async getRefNameMapForAdapter(\n        adapterConf: AdapterConf,\n        opts: BaseOptions,\n      ) {\n        if (!opts.sessionId) {\n          throw new Error('sessionId is required')\n        }\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.forwardMap\n      },\n\n      /**\n       * #method\n       * get Map of `adapter-specific-name -> canonical-name`\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: AdapterConf,\n        opts: BaseOptions,\n      ) {\n        const map = await this.getAdapterMapEntry(adapterConf, opts)\n        return map.reverseMap\n      },\n    }))\n}\n\nasync function getRefNameAliases({\n  config,\n  pluginManager,\n  stopToken,\n}: {\n  config: AnyConfigurationModel\n  pluginManager: PluginManager\n  stopToken?: string\n}) {\n  const type = pluginManager.getAdapterType(config.type)!\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(\n    config,\n    undefined,\n    pluginManager,\n  ) as BaseRefNameAliasAdapter\n  return adapter.getRefNameAliases({ stopToken })\n}\n\nasync function getCytobands({\n  config,\n  pluginManager,\n}: {\n  config: AnyConfigurationModel\n  pluginManager: PluginManager\n}) {\n  const type = pluginManager.getAdapterType(config.type)!\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager)\n\n  // @ts-expect-error\n  return adapter.getData()\n}\n\nasync function getAssemblyRegions({\n  config,\n  pluginManager,\n  stopToken,\n}: {\n  config: AnyConfigurationModel\n  pluginManager: PluginManager\n  stopToken?: string\n}) {\n  const type = pluginManager.getAdapterType(config.type)!\n  const CLASS = await type.getAdapterClass()\n  const adapter = new CLASS(config, undefined, pluginManager) as RegionsAdapter\n  return adapter.getRegions({ stopToken })\n}\n\nexport type AssemblyModel = ReturnType<typeof assemblyFactory>\nexport type Assembly = Instance<AssemblyModel>\n","// this is in a separate module here so it can be mocked out by jest. the\n// import.meta.url is not well recognized by jest and we use MainThreadRpc in\n// tests anyways right now\n//\n// note: this uses webpack 5 native worker modules\n//\n// see https://github.com/cmdcolin/cra-webpack5-web-worker-example for simple example\n// and docs https://webpack.js.org/guides/web-workers/\n//\n// also note: the craco config for webpack publicPath: 'auto' is needed for\n// these workers\nexport default function makeWorkerInstance() {\n  return new Worker(new URL('./rpcWorker', import.meta.url))\n}\n","import { JBrowseModelF } from '@jbrowse/app-core'\nimport { getSnapshot, resolveIdentifier, types } from 'mobx-state-tree'\n\nimport { removeAttr } from './util'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n// poke some things for testing (this stuff will eventually be removed)\n// @ts-expect-error\nwindow.getSnapshot = getSnapshot\n// @ts-expect-error\nwindow.resolveIdentifier = resolveIdentifier\n\n/**\n * #stateModel JBrowseWebConfigModel\n * #category root\n * the rootModel.jbrowse state model for JBrowse Web\n */\nexport default function JBrowseWeb({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AnyConfigurationSchemaType\n}) {\n  return types.snapshotProcessor(\n    JBrowseModelF({ pluginManager, assemblyConfigSchema }),\n    {\n      postProcessor(snapshot: Record<string, any>) {\n        return removeAttr(structuredClone(snapshot), 'baseUri')\n      },\n    },\n  )\n}\n","import { lazy } from 'react'\n\nimport {\n  HistoryManagementMixin,\n  RootAppMenuMixin,\n  processMutableMenuActions,\n} from '@jbrowse/app-core'\nimport TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport assemblyConfigSchemaFactory from '@jbrowse/core/assemblyManager/assemblyConfigSchema'\nimport { readConfObject } from '@jbrowse/core/configuration'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport { Cable, DNA } from '@jbrowse/core/ui/Icons'\nimport { AssemblyManager } from '@jbrowse/plugin-data-management'\nimport {\n  BaseRootModelFactory,\n  InternetAccountsRootModelMixin,\n} from '@jbrowse/product-core'\nimport AddIcon from '@mui/icons-material/Add'\nimport ExtensionIcon from '@mui/icons-material/Extension'\nimport FileCopyIcon from '@mui/icons-material/FileCopy'\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport PublishIcon from '@mui/icons-material/Publish'\nimport RedoIcon from '@mui/icons-material/Redo'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport StarIcon from '@mui/icons-material/Star'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport UndoIcon from '@mui/icons-material/Undo'\nimport { formatDistanceToNow } from 'date-fns'\nimport { saveAs } from 'file-saver'\nimport { openDB } from 'idb'\nimport { autorun } from 'mobx'\nimport { addDisposer, cast, getSnapshot, getType, types } from 'mobx-state-tree'\n\n// other\nimport packageJSON from '../../package.json'\nimport jbrowseWebFactory from '../jbrowseModel'\nimport makeWorkerInstance from '../makeWorkerInstance'\nimport { filterSessionInPlace } from '../util'\n\nimport type { SessionDB, SessionMetadata } from '../types'\nimport type { Menu } from '@jbrowse/app-core'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AbstractSessionModel,\n  SessionWithWidgets,\n} from '@jbrowse/core/util'\nimport type { BaseSessionType, SessionWithDialogs } from '@jbrowse/product-core'\nimport type { IDBPDatabase } from 'idb'\nimport type {\n  IAnyStateTreeNode,\n  IAnyType,\n  Instance,\n  SnapshotIn,\n} from 'mobx-state-tree'\n\n// lazies\nconst SetDefaultSession = lazy(() => import('../components/SetDefaultSession'))\nconst PreferencesDialog = lazy(() => import('../components/PreferencesDialog'))\n\ntype AssemblyConfig = ReturnType<typeof assemblyConfigSchemaFactory>\ntype SessionModelFactory = (args: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AssemblyConfig\n}) => IAnyType\n\n/**\n * #stateModel JBrowseWebRootModel\n *\n * composed of\n * - [BaseRootModel](../baserootmodel)\n * - [InternetAccountsMixin](../internetaccountsmixin)\n * - [HistoryManagementMixin](../historymanagementmixin)\n * - [RootAppMenuMixin](../rootappmenumixin)\n *\n * note: many properties of the root model are available through the session,\n * and we generally prefer using the session model (via e.g. getSession) over\n * the root model (via e.g. getRoot) in plugin code\n */\nexport default function RootModel({\n  pluginManager,\n  sessionModelFactory,\n  adminMode = false,\n}: {\n  pluginManager: PluginManager\n  sessionModelFactory: SessionModelFactory\n  adminMode?: boolean\n}) {\n  const assemblyConfigSchema = assemblyConfigSchemaFactory(pluginManager)\n  const jbrowseModelType = jbrowseWebFactory({\n    pluginManager,\n    assemblyConfigSchema,\n  })\n  const sessionModelType = sessionModelFactory({\n    pluginManager,\n    assemblyConfigSchema,\n  })\n  return types\n    .compose(\n      BaseRootModelFactory({\n        pluginManager,\n        jbrowseModelType,\n        sessionModelType,\n        assemblyConfigSchema,\n      }),\n      InternetAccountsRootModelMixin(pluginManager),\n      HistoryManagementMixin(),\n      RootAppMenuMixin(),\n    )\n    .props({\n      /**\n       * #property\n       */\n      configPath: types.maybe(types.string),\n    })\n    .volatile(self => ({\n      /**\n       * #volatile\n       */\n      adminMode,\n      /**\n       * #volatile\n       */\n      sessionDB: undefined as IDBPDatabase<SessionDB> | undefined,\n      /**\n       * #volatile\n       */\n      version: packageJSON.version,\n      /**\n       * #volatile\n       */\n      pluginsUpdated: false,\n      /**\n       * #volatile\n       */\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          WebWorkerRpcDriver: { makeWorkerInstance },\n          MainThreadRpcDriver: {},\n        },\n      ),\n      /**\n       * #volatile\n       */\n      savedSessionMetadata: undefined as SessionMetadata[] | undefined,\n      /**\n       * #volatile\n       */\n      textSearchManager: new TextSearchManager(pluginManager),\n      /**\n       * #volatile\n       */\n      error: undefined as unknown,\n      /**\n       * #volatile\n       */\n      reloadPluginManagerCallback: (\n        _configSnapshot: Record<string, unknown>,\n        _sessionSnapshot: Record<string, unknown>,\n      ) => {\n        console.error('reloadPluginManagerCallback unimplemented')\n      },\n    }))\n\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setSavedSessionMetadata(sessions: SessionMetadata[]) {\n        self.savedSessionMetadata = sessions\n      },\n\n      /**\n       * #action\n       */\n      async fetchSessionMetadata() {\n        if (self.sessionDB) {\n          const ret = await self.sessionDB.getAll('metadata')\n          this.setSavedSessionMetadata(\n            ret\n              .filter(f => f.configPath === (self.configPath || ''))\n              .sort((a, b) => +b.createdAt - +a.createdAt),\n          )\n        }\n      },\n      /**\n       * #action\n       */\n      setSessionDB(sessionDB: IDBPDatabase<SessionDB>) {\n        self.sessionDB = sessionDB\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #aftercreate\n       */\n      afterCreate() {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;(async () => {\n          try {\n            const sessionDB = await openDB<SessionDB>('sessionsDB', 2, {\n              upgrade(db) {\n                db.createObjectStore('metadata')\n                db.createObjectStore('sessions')\n              },\n            })\n            self.setSessionDB(sessionDB)\n\n            addDisposer(\n              self,\n              autorun(\n                async () => {\n                  if (self.session) {\n                    try {\n                      // careful not to access self.savedSessionMetadata in\n                      // here, or else it can create an infinite loop\n                      const s = self.session\n\n                      // step 1. update the idb data according to whatever\n                      // triggered the autorun\n                      if (self.sessionDB) {\n                        await sessionDB.put('sessions', getSnapshot(s), s.id)\n\n                        const ret = await self.sessionDB.get('metadata', s.id)\n                        await sessionDB.put(\n                          'metadata',\n                          {\n                            ...ret,\n                            favorite: ret?.favorite || false,\n                            name: s.name,\n                            id: s.id,\n                            createdAt: new Date(),\n                            configPath: self.configPath || '',\n                          },\n                          s.id,\n                        )\n                      }\n                      // step 2. refetch the metadata\n                      await self.fetchSessionMetadata()\n                    } catch (e) {\n                      console.error(e)\n                      self.session?.notifyError(`${e}`, e)\n                    }\n                  }\n                },\n                { delay: 400 },\n              ),\n            )\n          } catch (e) {\n            console.error(e)\n            self.session?.notifyError(`${e}`, e)\n          }\n\n          let savingFailed = false\n          addDisposer(\n            self,\n            autorun(\n              () => {\n                if (self.session) {\n                  const s = self.session as AbstractSessionModel\n                  const sessionSnap = getSnapshot(s)\n                  try {\n                    sessionStorage.setItem(\n                      'current',\n                      JSON.stringify({\n                        session: sessionSnap,\n                        createdAt: new Date(),\n                      }),\n                    )\n                    if (savingFailed) {\n                      savingFailed = false\n                      s.notify('Auto-saving restored', 'info')\n                    }\n\n                    // this check is not able to be modularized into it's own\n                    // autorun at current time because it depends on session\n                    // storage snapshot being set above\n                    if (self.pluginsUpdated) {\n                      self.reloadPluginManagerCallback(\n                        structuredClone(getSnapshot(self.jbrowse)),\n                        structuredClone(sessionSnap),\n                      )\n                    }\n                  } catch (e) {\n                    console.error(e)\n                    const msg = `${e}`\n                    if (!savingFailed) {\n                      savingFailed = true\n                      if (msg.includes('quota')) {\n                        s.notifyError(\n                          'Unable to auto-save session, exceeded sessionStorage quota. This may be because a very large feature was stored in session',\n                          e,\n                        )\n                      } else {\n                        s.notifyError(msg, e)\n                      }\n                    }\n                  }\n                }\n              },\n              { delay: 400 },\n            ),\n          )\n        })()\n      },\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot: SnapshotIn<BaseSessionType>) {\n        const oldSession = self.session\n        self.session = cast(sessionSnapshot)\n        if (self.session) {\n          // validate all references in the session snapshot\n          try {\n            filterSessionInPlace(self.session, getType(self.session))\n          } catch (error) {\n            // throws error if session filtering failed\n            self.session = oldSession\n            throw error\n          }\n        }\n      },\n\n      /**\n       * #action\n       */\n      setPluginsUpdated(flag: boolean) {\n        self.pluginsUpdated = flag\n      },\n      /**\n       * #action\n       */\n      setReloadPluginManagerCallback(\n        callback: (\n          configSnapshot: Record<string, unknown>,\n          sessionSnapshot: Record<string, unknown>,\n        ) => void,\n      ) {\n        self.reloadPluginManagerCallback = callback\n      },\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        const { defaultSession } = self.jbrowse\n        this.setSession({\n          ...defaultSession,\n          name: `${defaultSession.name} ${new Date().toLocaleString()}`,\n        })\n      },\n      /**\n       * #action\n       */\n      async activateSession(id: string) {\n        const ret = await self.sessionDB?.get('sessions', id)\n        if (ret) {\n          this.setSession(ret)\n        } else {\n          self.session.notifyError('Session not found')\n        }\n      },\n      /**\n       * #action\n       */\n      async favoriteSavedSession(id: string) {\n        if (self.sessionDB) {\n          const ret = self.savedSessionMetadata!.find(f => f.id === id)\n          if (ret) {\n            await self.sessionDB.put(\n              'metadata',\n              {\n                ...ret,\n                favorite: true,\n              },\n              ret.id,\n            )\n            await self.fetchSessionMetadata()\n          }\n        }\n      },\n      /**\n       * #action\n       */\n      async unfavoriteSavedSession(id: string) {\n        if (self.sessionDB) {\n          const ret = self.savedSessionMetadata!.find(f => f.id === id)\n          if (ret) {\n            await self.sessionDB.put(\n              'metadata',\n              {\n                ...ret,\n                favorite: false,\n              },\n              ret.id,\n            )\n          }\n          await self.fetchSessionMetadata()\n        }\n      },\n      /**\n       * #action\n       */\n      async deleteSavedSession(id: string) {\n        if (self.sessionDB) {\n          await self.sessionDB.delete('metadata', id)\n          await self.sessionDB.delete('sessions', id)\n          await self.fetchSessionMetadata()\n        }\n      },\n      /**\n       * #action\n       */\n      renameCurrentSession(sessionName: string) {\n        this.setSession({\n          ...getSnapshot(self.session),\n          name: sessionName,\n        })\n      },\n\n      /**\n       * #action\n       */\n      setError(error?: unknown) {\n        self.error = error\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      menus() {\n        const preConfiguredSessions = readConfObject(\n          self.jbrowse,\n          'preConfiguredSessions',\n        )\n        const favs = self.savedSessionMetadata\n          ?.filter(f => f.favorite)\n          .slice(0, 5)\n        const rest = self.savedSessionMetadata\n          ?.filter(f => !f.favorite)\n          .slice(0, 5)\n\n        const ret = [\n          {\n            label: 'File',\n            menuItems: [\n              {\n                label: 'New session',\n                icon: AddIcon,\n                onClick: () => {\n                  self.setDefaultSession()\n                },\n              },\n              {\n                label: 'Import session...',\n                icon: PublishIcon,\n                onClick: (session: SessionWithWidgets) => {\n                  const widget = session.addWidget(\n                    'ImportSessionWidget',\n                    'importSessionWidget',\n                  )\n                  session.showWidget(widget)\n                },\n              },\n              {\n                label: 'Export session',\n                icon: GetAppIcon,\n                onClick: (session: IAnyStateTreeNode) => {\n                  saveAs(\n                    new Blob(\n                      [\n                        JSON.stringify(\n                          { session: getSnapshot(session) },\n                          null,\n                          2,\n                        ),\n                      ],\n                      { type: 'text/plain;charset=utf-8' },\n                    ),\n                    'session.json',\n                  )\n                },\n              },\n              {\n                label: 'Duplicate session',\n                icon: FileCopyIcon,\n                onClick: () => {\n                  // @ts-expect-error\n                  const { id, ...rest } = getSnapshot(self.session)\n                  self.setSession(rest)\n                },\n              },\n              ...(preConfiguredSessions?.length\n                ? [\n                    {\n                      label: 'Pre-configured sessions...',\n                      subMenu: preConfiguredSessions.map(\n                        (r: { name: string }) => ({\n                          label: r.name,\n                          onClick: () => {\n                            self.setSession(r)\n                          },\n                        }),\n                      ),\n                    },\n                  ]\n                : []),\n              ...(favs?.length\n                ? [\n                    {\n                      label: 'Favorite sessions...',\n                      subMenu: [\n                        ...favs.slice(0, 5).map(r => ({\n                          label: `${r.name} (${r.id === self.session.id ? 'current' : formatDistanceToNow(r.createdAt, { addSuffix: true })})`,\n                          disabled: r.id === self.session.id,\n                          icon: StarIcon,\n                          onClick: () => {\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                            ;(async () => {\n                              try {\n                                await self.activateSession(r.id)\n                              } catch (e) {\n                                self.session.notifyError(`${e}`, e)\n                              }\n                            })()\n                          },\n                        })),\n                        {\n                          label: 'More...',\n                          icon: FolderOpenIcon,\n                          onClick: (session: SessionWithWidgets) => {\n                            const widget = session.addWidget(\n                              'SessionManager',\n                              'sessionManager',\n                            )\n                            session.showWidget(widget)\n                          },\n                        },\n                      ],\n                    },\n                  ]\n                : []),\n              {\n                label: 'Recent sessions...',\n                type: 'subMenu',\n                subMenu: rest?.length\n                  ? [\n                      ...rest.map(r => ({\n                        label: `${r.name} (${r.id === self.session.id ? 'current' : formatDistanceToNow(r.createdAt, { addSuffix: true })})`,\n                        disabled: r.id === self.session.id,\n                        onClick: () => {\n                          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                          ;(async () => {\n                            try {\n                              await self.activateSession(r.id)\n                            } catch (e) {\n                              self.session.notifyError(`${e}`, e)\n                            }\n                          })()\n                        },\n                      })),\n                      {\n                        label: 'More...',\n                        icon: FolderOpenIcon,\n                        onClick: (session: SessionWithWidgets) => {\n                          const widget = session.addWidget(\n                            'SessionManager',\n                            'sessionManager',\n                          )\n                          session.showWidget(widget)\n                        },\n                      },\n                    ]\n                  : [{ label: 'No autosaves found', onClick: () => {} }],\n              },\n              { type: 'divider' },\n              {\n                label: 'Open track...',\n                icon: StorageIcon,\n                onClick: (session: SessionWithWidgets) => {\n                  if (session.views.length === 0) {\n                    session.notify('Please open a view to add a track first')\n                  } else if (session.views.length > 0) {\n                    const widget = session.addWidget(\n                      'AddTrackWidget',\n                      'addTrackWidget',\n                      { view: session.views[0]!.id },\n                    )\n                    session.showWidget(widget)\n                    if (session.views.length > 1) {\n                      session.notify(\n                        'This will add a track to the first view. Note: if you want to open a track in a specific view open the track selector for that view and use the add track (plus icon) in the bottom right',\n                      )\n                    }\n                  }\n                },\n              },\n              {\n                label: 'Open connection...',\n                icon: Cable,\n                onClick: (session: SessionWithWidgets) => {\n                  session.showWidget(\n                    session.addWidget(\n                      'AddConnectionWidget',\n                      'addConnectionWidget',\n                    ),\n                  )\n                },\n              },\n            ],\n          },\n          ...(adminMode\n            ? [\n                {\n                  label: 'Admin',\n                  menuItems: [\n                    {\n                      label: 'Set default session',\n                      onClick: () => {\n                        self.session.queueDialog((onClose: () => void) => [\n                          SetDefaultSession,\n                          {\n                            rootModel: self,\n                            onClose,\n                          },\n                        ])\n                      },\n                    },\n                  ],\n                },\n              ]\n            : []),\n          {\n            label: 'Add',\n            menuItems: [],\n          },\n          {\n            label: 'Tools',\n            menuItems: [\n              {\n                label: 'Undo',\n                icon: UndoIcon,\n                onClick: () => {\n                  if (self.history.canUndo) {\n                    self.history.undo()\n                  }\n                },\n              },\n              {\n                label: 'Redo',\n                icon: RedoIcon,\n                onClick: () => {\n                  if (self.history.canRedo) {\n                    self.history.redo()\n                  }\n                },\n              },\n              { type: 'divider' },\n              {\n                label: 'Plugin store',\n                icon: ExtensionIcon,\n                onClick: () => {\n                  if (self.session) {\n                    self.session.showWidget(\n                      self.session.addWidget(\n                        'PluginStoreWidget',\n                        'pluginStoreWidget',\n                      ),\n                    )\n                  }\n                },\n              },\n              {\n                label: 'Assembly manager',\n                icon: DNA,\n                onClick: () => {\n                  self.session.queueDialog((onClose: () => void) => [\n                    AssemblyManager,\n                    {\n                      onClose,\n                      session: self.session,\n                      rootModel: self,\n                    },\n                  ])\n                },\n              },\n\n              {\n                label: 'Preferences',\n                icon: SettingsIcon,\n                onClick: () => {\n                  if (self.session) {\n                    ;(self.session as SessionWithDialogs).queueDialog(\n                      handleClose => [\n                        PreferencesDialog,\n                        {\n                          session: self.session,\n                          handleClose,\n                        },\n                      ],\n                    )\n                  }\n                },\n              },\n            ],\n          },\n        ] as Menu[]\n\n        return processMutableMenuActions(ret, self.mutableMenuActions)\n      },\n    }))\n}\n\nexport type WebRootModelType = ReturnType<typeof RootModel>\nexport type WebRootModel = Instance<WebRootModelType>\n","import { ConfigurationSchema } from '../configuration'\n\nimport type PluginManager from '../PluginManager'\n\n/**\n * #config BaseAssembly\n * #category assemblyManagement\n * This corresponds to the assemblies section of the config\n */\nfunction assemblyConfigSchema(pluginManager: PluginManager) {\n  return ConfigurationSchema(\n    'BaseAssembly',\n    {\n      /**\n       * #slot\n       * aliases are \"reference name aliases\" e.g. aliases for hg38 might be\n       * \"GRCh38\"\n       */\n      aliases: {\n        type: 'stringArray',\n        defaultValue: [],\n        description: 'Other possible names for the assembly',\n      },\n\n      /**\n       * #slot\n       * sequence refers to a reference sequence track that has an adapter\n       * containing, importantly, a sequence adapter such as\n       * IndexedFastaAdapter\n       */\n      sequence: pluginManager.getTrackType('ReferenceSequenceTrack')!\n        .configSchema,\n\n      /**\n       * #slot\n       */\n      refNameColors: {\n        type: 'stringArray',\n        defaultValue: [],\n        description:\n          'Define custom colors for each reference sequence. Will cycle through this list if there are not enough colors for every sequence.',\n      },\n\n      refNameAliases: ConfigurationSchema(\n        'RefNameAliases',\n        {\n          /**\n           * #slot refNameAliases.adapter\n           * refNameAliases help resolve e.g. chr1 and 1 as the same entity the\n           * data for refNameAliases are fetched from an adapter, that is\n           * commonly a tsv like chromAliases.txt from UCSC or similar\n           */\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow refNameAliases to be unspecified\n            return !snap.adapter\n              ? {\n                  adapter: {\n                    type: 'RefNameAliasAdapter',\n                  },\n                }\n              : snap\n          },\n        },\n      ),\n      cytobands: ConfigurationSchema(\n        'Cytoband',\n        {\n          /**\n           * #slot cytobands.adapter\n           * cytoband data is fetched from an adapter, and can be displayed by\n           * a view type as ideograms\n           */\n          adapter: pluginManager.pluggableConfigSchemaType('adapter'),\n        },\n        {\n          preProcessSnapshot: snap => {\n            // allow cytoBand to be unspecified\n            return !snap.adapter\n              ? {\n                  adapter: {\n                    type: 'CytobandAdapter',\n                  },\n                }\n              : snap\n          },\n        },\n      ),\n\n      /**\n       * #slot\n       */\n      displayName: {\n        type: 'string',\n        defaultValue: '',\n        description:\n          'A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\" while the assembly name may just be \"hg38\"',\n      },\n    },\n    {\n      /**\n       * #identifier name\n       * the name acts as a unique identifier in the config, so it cannot be\n       * duplicated. it usually a short human readable \"id\" like hg38, but you\n       * can also optionally customize the assembly \"displayName\" config slot\n       */\n      explicitIdentifier: 'name',\n    },\n  )\n}\n\nexport default assemblyConfigSchema\nexport type BaseAssemblyConfigSchema = ReturnType<typeof assemblyConfigSchema>\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { toJS } from 'mobx'\nimport { cast, getParent, getSnapshot } from 'mobx-state-tree'\n\nimport { JBrowseConfigF } from '../JBrowseConfig'\n\nimport type { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type RpcManager from '@jbrowse/core/rpc/RpcManager'\n\n/**\n * #stateModel AppCoreJBrowseModel\n * note that JBrowseRootConfig is a config model, but config models are MST\n * trees themselves, which is why this stateModel is allowed to extend it\n *\n * the AppCoreJBrowseModel is generally on a property named rootModel.jbrowse\n *\n * extends\n * - [JBrowseRootConfig](/docs/config/jbrowserootconfig)\n\n */\nexport function JBrowseModelF({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return JBrowseConfigF({ pluginManager, assemblyConfigSchema })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyNames(): string[] {\n        return self.assemblies.map(assembly => readConfObject(assembly, 'name'))\n      },\n      /**\n       * #getter\n       */\n      get rpcManager(): RpcManager {\n        return getParent<any>(self).rpcManager\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addAssemblyConf(conf: AnyConfigurationModel) {\n        const { name } = conf\n        if (!name) {\n          throw new Error('Can\\'t add assembly with no \"name\"')\n        }\n        if (self.assemblyNames.includes(name)) {\n          throw new Error(\n            `Can't add assembly with name \"${name}\", an assembly with that name already exists`,\n          )\n        }\n        const length = self.assemblies.push({\n          ...conf,\n          sequence: {\n            type: 'ReferenceSequenceTrack',\n            trackId: `${name}-${Date.now()}`,\n            ...conf.sequence,\n          },\n        })\n        return self.assemblies[length - 1]\n      },\n      /**\n       * #action\n       */\n      removeAssemblyConf(assemblyName: string) {\n        const toRemove = self.assemblies.find(a => a.name === assemblyName)\n        if (toRemove) {\n          self.assemblies.remove(toRemove)\n        }\n      },\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: AnyConfigurationModel) {\n        const { type } = trackConf\n        if (!type) {\n          throw new Error(`unknown track type ${type}`)\n        }\n        const length = self.tracks.push(trackConf)\n        return self.tracks[length - 1]\n      },\n      /**\n       * #action\n       */\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { type } = connectionConf\n        if (!type) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connections.push(connectionConf)\n        return self.connections[length - 1]\n      },\n      /**\n       * #action\n       */\n      deleteConnectionConf(configuration: AnyConfigurationModel) {\n        const elt = self.connections.find(conn => conn.id === configuration.id)\n        return self.connections.remove(elt)\n      },\n      /**\n       * #action\n       */\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const elt = self.tracks.find(t => t.trackId === trackConf.trackId)\n        return self.tracks.remove(elt)\n      },\n      /**\n       * #action\n       */\n      addPlugin(pluginDefinition: PluginDefinition) {\n        self.plugins.push(pluginDefinition)\n\n        const rootModel = getParent<any>(self)\n        rootModel.setPluginsUpdated(true)\n      },\n      /**\n       * #action\n       */\n      removePlugin(pluginDefinition: PluginDefinition) {\n        self.plugins = cast(\n          self.plugins.filter(\n            plugin =>\n              // @ts-expect-error\n              plugin.url !== pluginDefinition.url ||\n              // @ts-expect-error\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              // @ts-expect-error\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              // @ts-expect-error\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n\n        getParent<any>(self).setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      setDefaultSessionConf(sessionConf: AnyConfigurationModel) {\n        const newDefault =\n          getParent<any>(self).session.name === sessionConf.name\n            ? getSnapshot(sessionConf)\n            : toJS(sessionConf)\n\n        if (!newDefault.name) {\n          throw new Error(`unable to set default session to ${newDefault.name}`)\n        }\n\n        self.defaultSession = cast(newDefault)\n      },\n      /**\n       * #action\n       */\n      addInternetAccountConf(internetAccountConf: AnyConfigurationModel) {\n        const { type } = internetAccountConf\n        if (!type) {\n          throw new Error(`unknown internetAccount type ${type}`)\n        }\n        const length = self.internetAccounts.push(internetAccountConf)\n        return self.internetAccounts[length - 1]\n      },\n      /**\n       * #action\n       */\n      deleteInternetAccountConf(configuration: AnyConfigurationModel) {\n        const elt = self.internetAccounts.find(a => a.id === configuration.id)\n        return self.internetAccounts.remove(elt)\n      },\n    }))\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport {\n  FormatAboutConfigSchemaFactory,\n  FormatDetailsConfigSchemaFactory,\n  HierarchicalConfigSchemaFactory,\n} from '@jbrowse/product-core'\nimport { types } from 'mobx-state-tree'\n\nimport type { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\n\n/**\n * #config JBrowseRootConfig\n * #category root\n *\n * this is a config model representing a config.json (for jbrowse-web) or\n * somefile.jbrowse (for jbrowse-desktop, where configs have the .jbrowse\n * extension)\n *\n * includes\n * - [FormatDetails](../formatdetails) for global (instead of per-track)\n *   feature detail formatters\n * - [FormatAbout](../formatabout) for global (instead of per-track) about\n *   track formatters\n * - [HierarchicalConfigSchema](../hierarchicalconfigschema) for track selector\n *   configs\n *\n * also includes any pluginManager.pluginConfigurationSchemas(), so plugins\n * that have a configurationSchema field on their class are mixed into this\n * object\n */\nexport function JBrowseConfigF({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: AnyConfigurationSchemaType\n}) {\n  return types.model('JBrowseConfig', {\n    configuration: ConfigurationSchema('Root', {\n      /**\n       * #slot configuration.rpc\n       */\n      rpc: RpcManager.configSchema,\n\n      /**\n       * #slot configuration.highResolutionScaling\n       */\n      highResolutionScaling: {\n        type: 'number',\n        defaultValue: 2,\n      },\n\n      formatDetails: FormatDetailsConfigSchemaFactory(),\n      formatAbout: FormatAboutConfigSchemaFactory(),\n\n      /*\n       * #slot configuration.shareURL\n       */\n      shareURL: {\n        type: 'string',\n        defaultValue: 'https://share.jbrowse.org/api/v1/',\n      },\n      /**\n       * #slot configuration.disableAnalytics\n       */\n      disableAnalytics: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n\n      hierarchical: HierarchicalConfigSchemaFactory(),\n      /**\n       * #slot configuration.theme\n       */\n      theme: {\n        type: 'frozen',\n        defaultValue: {},\n      },\n      /**\n       * #slot configuration.extraThemes\n       */\n      extraThemes: {\n        type: 'frozen',\n        defaultValue: {},\n      },\n      /**\n       * #slot configuration.logoPath\n       */\n      logoPath: {\n        type: 'fileLocation',\n        defaultValue: { uri: '', locationType: 'UriLocation' },\n      },\n      ...pluginManager.pluginConfigurationSchemas(),\n    }),\n    /**\n     * #slot\n     * defines plugins of the format\n     * ```typescript\n     * type PluginDefinition=\n     *    { umdUrl: string, name:string } |\n     *    { url: string, name: string } |\n     *    { esmUrl: string } |\n     *    { cjsUrl: string } |\n     *    { umdLoc: { uri: string } } |\n     *    { esmLoc: { uri: string } } |\n     * ```\n     */\n    plugins: types.array(types.frozen<PluginDefinition>()),\n    /**\n     * #slot\n     * configuration of the assemblies in the instance, see BaseAssembly\n     */\n    assemblies: types.array(assemblyConfigSchema),\n    /**\n     * #slot\n     * track configuration is an array of track config schemas. multiple\n     * instances of a track can exist that use the same configuration\n     */\n    tracks: types.array(pluginManager.pluggableConfigSchemaType('track')),\n    /**\n     * #slot\n     * configuration for internet accounts, see InternetAccounts\n     */\n    internetAccounts: types.array(\n      pluginManager.pluggableConfigSchemaType('internet account'),\n    ),\n    /**\n     * #slot\n     * configuration for aggregate text search adapters (created by e.g.\n     * jbrowse text-index, but can be a pluggable TextSearchAdapter type)\n     */\n    aggregateTextSearchAdapters: types.array(\n      pluginManager.pluggableConfigSchemaType('text search adapter'),\n    ),\n\n    /**\n     * #slot\n     * configuration for connections\n     */\n    connections: types.array(\n      pluginManager.pluggableConfigSchemaType('connection'),\n    ),\n\n    /**\n     * #slot\n     */\n    defaultSession: types.optional(types.frozen(), {\n      name: 'New Session',\n    }),\n\n    /**\n     * #slot\n     */\n    preConfiguredSessions: types.array(types.frozen()),\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FormatDetails\n * generally exists on the tracks in the config.json or as a 'session' config as\n * configuration.formatDetails\n */\nexport function FormatDetailsConfigSchemaFactory() {\n  return ConfigurationSchema('FormatDetails', {\n    /**\n     * #slot configuration.formatDetails.feature\n     */\n    feature: {\n      type: 'frozen',\n      description: 'adds extra fields to the feature details',\n      defaultValue: {},\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot configuration.formatDetails.subfeatures\n     */\n    subfeatures: {\n      type: 'frozen',\n      description: 'adds extra fields to the subfeatures of a feature',\n      defaultValue: {},\n      contextVariable: ['feature'],\n    },\n    /**\n     * #slot configuration.formatDetails.depth\n     */\n    depth: {\n      type: 'number',\n      defaultValue: 2,\n      description:\n        'depth to iterate the formatDetails->subfeatures callback on subfeatures (used for example to only apply the callback to the first layer of subfeatures)',\n    },\n    /**\n     * #slot configuration.formatDetails.maxDepth\n     */\n    maxDepth: {\n      type: 'number',\n      defaultValue: 10000,\n      description: 'hide subfeatures greater than a certain depth',\n    },\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n/**\n * #config FormatAbout\n * generally exists on the config.json or root config as configuration.formatAbout\n */\nexport function FormatAboutConfigSchemaFactory() {\n  return ConfigurationSchema('FormatAbout', {\n    /**\n     * #slot configuration.formatAbout.config\n     */\n    config: {\n      type: 'frozen',\n      description: 'formats configuration object in about dialog',\n      defaultValue: {},\n      contextVariable: ['config'],\n    },\n    /**\n     * #slot configuration.formatAbout.hideUris\n     */\n\n    hideUris: {\n      type: 'boolean',\n      defaultValue: false,\n    },\n  })\n}\n","import { ConfigurationSchema } from '@jbrowse/core/configuration'\n\n/**\n * #config HierarchicalConfigSchema\n * generally exists on the config.json or root config as configuration.hierarchical\n */\nexport function HierarchicalConfigSchemaFactory() {\n  return ConfigurationSchema('hierarchical', {\n    sort: ConfigurationSchema('hierarchicalSort', {\n      /**\n       * #slot configuration.hierarchical.sort.trackNames\n       */\n      trackNames: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      /**\n       * #slot configuration.hierarchical.sort.categories\n       */\n      categories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n    }),\n    defaultCollapsed: ConfigurationSchema('defaultCollapsed', {\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.categoryNames\n       */\n      categoryNames: {\n        type: 'stringArray',\n        defaultValue: [],\n      },\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.topLevelCategories\n       */\n      topLevelCategories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n      /**\n       * #slot configuration.hierarchical.defaultCollapsed.subCategories\n       */\n      subCategories: {\n        type: 'boolean',\n        defaultValue: false,\n      },\n    }),\n  })\n}\n","import TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport assemblyManagerFactory from '@jbrowse/core/assemblyManager'\nimport RpcManager from '@jbrowse/core/rpc/RpcManager'\nimport { cast, getSnapshot, isStateTreeNode, types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type { IAnyType, Instance, SnapshotIn } from 'mobx-state-tree'\n\n/**\n * #stateModel BaseRootModel\n * #category root\n * factory function for the Base-level root model shared by all products\n */\nexport function BaseRootModelFactory({\n  pluginManager,\n  jbrowseModelType,\n  sessionModelType,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  jbrowseModelType: IAnyType\n  sessionModelType: IAnyType\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return types\n    .model('BaseRootModel', {\n      /**\n       * #property\n       * `jbrowse` is a mapping of the config.json into the in-memory state\n       * tree\n       */\n      jbrowse: jbrowseModelType,\n\n      /**\n       * #property\n       * `session` encompasses the currently active state of the app, including\n       * views open, tracks open in those views, etc.\n       */\n      session: types.maybe(sessionModelType),\n      /**\n       * #property\n       */\n      sessionPath: types.optional(types.string, ''),\n\n      /**\n       * #property\n       */\n      assemblyManager: types.optional(\n        assemblyManagerFactory(assemblyConfigSchema, pluginManager),\n        {},\n      ),\n    })\n    .volatile(self => ({\n      /**\n       * #volatile\n       */\n      rpcManager: new RpcManager(\n        pluginManager,\n        self.jbrowse.configuration.rpc,\n        {\n          MainThreadRpcDriver: {},\n        },\n      ),\n\n      /**\n       * #volatile\n       */\n      adminMode: false,\n      /**\n       * #volatile\n       */\n      error: undefined as unknown,\n      /**\n       * #volatile\n       */\n      textSearchManager: new TextSearchManager(pluginManager),\n      /**\n       * #volatile\n       */\n      pluginManager,\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setError(error: unknown) {\n        self.error = error\n      },\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot?: SnapshotIn<IAnyType>) {\n        self.session = cast(sessionSnapshot)\n      },\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        this.setSession(self.jbrowse.defaultSession)\n      },\n      /**\n       * #action\n       */\n      setSessionPath(path: string) {\n        self.sessionPath = path\n      },\n      /**\n       * #action\n       */\n      renameCurrentSession(newName: string) {\n        if (self.session) {\n          this.setSession({\n            ...getSnapshot(self.session),\n            name: newName,\n          })\n        }\n      },\n    }))\n}\n\nexport type BaseRootModelType = ReturnType<typeof BaseRootModelFactory>\nexport type BaseRootModel = Instance<BaseRootModelType>\n\n/** Type guard for checking if something is a JB root model */\nexport function isRootModel(thing: unknown): thing is BaseRootModelType {\n  return (\n    isStateTreeNode(thing) &&\n    'session' in thing &&\n    'jbrowse' in thing &&\n    'assemblyManager' in thing\n  )\n}\n","import { reaction } from 'mobx'\nimport { addDisposer, getParent, types } from 'mobx-state-tree'\n\nimport { readConfObject } from '../configuration'\nimport { when } from '../util'\nimport assemblyFactory from './assembly'\n\nimport type { AnyConfigurationModel } from '../configuration'\nimport type { Assembly } from './assembly'\nimport type PluginManager from '../PluginManager'\nimport type RpcManager from '../rpc/RpcManager'\nimport type { IAnyType, Instance } from 'mobx-state-tree'\n\ntype AdapterConf = Record<string, unknown>\n\n/**\n * #stateModel AssemblyManager\n */\nfunction assemblyManagerFactory(conf: IAnyType, pm: PluginManager) {\n  type Conf = Instance<typeof conf> // this is type any, try to narrow...\n  return types\n    .model({\n      /**\n       * #property\n       * this is automatically managed by an autorun which looks in the parent\n       * session.assemblies, session.sessionAssemblies, and\n       * session.temporaryAssemblies\n       */\n      assemblies: types.array(assemblyFactory(conf, pm)),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblyNameMap() {\n        const obj = {} as Record<string, Assembly>\n        for (const assembly of self.assemblies) {\n          for (const name of assembly.allAliases) {\n            obj[name] = assembly\n          }\n        }\n        return obj\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      get(asmName: string) {\n        return self.assemblyNameMap[asmName]\n      },\n\n      /**\n       * #getter\n       */\n      get assemblyNamesList() {\n        return this.assemblyList.map(asm => asm.name)\n      },\n\n      /**\n       * #getter\n       * combined jbrowse.assemblies, session.sessionAssemblies, and\n       * session.temporaryAssemblies\n       */\n      get assemblyList() {\n        const {\n          jbrowse: { assemblies },\n          session: { sessionAssemblies = [], temporaryAssemblies = [] } = {},\n        } = getParent<any>(self)\n        return [\n          ...assemblies,\n          ...sessionAssemblies,\n          ...temporaryAssemblies,\n        ] as AnyConfigurationModel[]\n      },\n\n      get rpcManager(): RpcManager {\n        return getParent<any>(self).rpcManager\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       * use this method instead of assemblyManager.get(assemblyName) to get an\n       * assembly with regions loaded\n       */\n      async waitForAssembly(assemblyName: string) {\n        if (!assemblyName) {\n          throw new Error('no assembly name supplied to waitForAssembly')\n        }\n        let assembly = self.get(assemblyName)\n        if (!assembly) {\n          try {\n            await when(() => Boolean(self.get(assemblyName)), { timeout: 1000 })\n            assembly = self.get(assemblyName)\n          } catch (e) {\n            // ignore\n          }\n        }\n\n        if (!assembly) {\n          return undefined\n        }\n        await assembly.load()\n        await when(\n          () =>\n            !!(assembly.regions && assembly.refNameAliases) || !!assembly.error,\n        )\n        if (assembly.error) {\n          // eslint-disable-next-line @typescript-eslint/only-throw-error\n          throw assembly.error\n        }\n        return assembly\n      },\n\n      /**\n       * #method\n       */\n      async getRefNameMapForAdapter(\n        adapterConf: AdapterConf,\n        assemblyName: string | undefined,\n        opts: { stopToken?: string; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n\n      /**\n       * #method\n       */\n      async getReverseRefNameMapForAdapter(\n        adapterConf: AdapterConf,\n        assemblyName: string | undefined,\n        opts: { stopToken?: string; sessionId: string },\n      ) {\n        if (assemblyName) {\n          const asm = await this.waitForAssembly(assemblyName)\n          return asm?.getReverseRefNameMapForAdapter(adapterConf, opts)\n        }\n        return {}\n      },\n\n      /**\n       * #method\n       */\n      isValidRefName(refName: string, assemblyName: string) {\n        const assembly = self.get(assemblyName)\n        if (assembly) {\n          return assembly.isValidRefName(refName)\n        }\n        throw new Error(\n          `Failed to look up refName:${refName} on assemblyName:${assemblyName} (assembly does not exist)`,\n        )\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          reaction(\n            () => self.assemblyList,\n            assemblyConfs => {\n              for (const asm of self.assemblies) {\n                if (!asm.configuration) {\n                  this.removeAssembly(asm)\n                }\n              }\n              for (const conf of assemblyConfs) {\n                const name = readConfObject(conf, 'name')\n                if (!self.assemblies.some(a => a.name === name)) {\n                  this.addAssembly(conf)\n                }\n              }\n            },\n            { fireImmediately: true, name: 'assemblyManagerAfterAttach' },\n          ),\n        )\n      },\n\n      /**\n       * #action\n       * private: you would generally want to add to manipulate\n       * jbrowse.assemblies, session.sessionAssemblies, or\n       * session.temporaryAssemblies instead of using this directly\n       */\n      removeAssembly(asm: Assembly) {\n        self.assemblies.remove(asm)\n      },\n\n      /**\n       * #action\n       * private: you would generally want to add to manipulate\n       * jbrowse.assemblies, session.sessionAssemblies, or\n       * session.temporaryAssemblies instead of using this directly\n       *\n       * this can take an active instance of an assembly, in which case it is\n       * referred to, or it can take an identifier e.g. assembly name, which is\n       * used as a reference. snapshots cannot be used\n       */\n      addAssembly(configuration: Conf) {\n        self.assemblies.push({ configuration })\n      },\n    }))\n}\n\nexport default assemblyManagerFactory\n","import { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport type { BaseRootModel } from './BaseRootModel'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { UriLocation } from '@jbrowse/core/util'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel InternetAccountsMixin\n * #category root\n */\nexport function InternetAccountsRootModelMixin(pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      internetAccounts: types.array(\n        pluginManager.pluggableMstType('internet account', 'stateModel'),\n      ),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      initializeInternetAccount(\n        internetAccountConfig: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const internetAccountType = pluginManager.getInternetAccountType(\n          internetAccountConfig.type,\n        )\n        if (!internetAccountType) {\n          throw new Error(\n            `unknown internet account type ${internetAccountConfig.type}`,\n          )\n        }\n\n        const length = self.internetAccounts.push({\n          ...initialSnapshot,\n          type: internetAccountConfig.type,\n          configuration: internetAccountConfig,\n        })\n        return self.internetAccounts[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      createEphemeralInternetAccount(\n        internetAccountId: string,\n        initialSnapshot: Record<string, unknown>,\n        url: string,\n      ) {\n        let hostUri: string | undefined\n\n        try {\n          hostUri = new URL(url).origin\n        } catch (e) {\n          // ignore\n        }\n        const internetAccountSplit = internetAccountId.split('-')\n        const configuration = {\n          type: internetAccountSplit[0]!,\n          internetAccountId: internetAccountId,\n          name: internetAccountSplit.slice(1).join('-'),\n          description: '',\n          domains: hostUri ? [hostUri] : [],\n        }\n        const type = pluginManager.getInternetAccountType(configuration.type)!\n        const internetAccount = type.stateModel.create({\n          ...initialSnapshot,\n          type: configuration.type,\n          configuration,\n        })\n        self.internetAccounts.push(internetAccount)\n        return internetAccount\n      },\n      /**\n       * #action\n       */\n      findAppropriateInternetAccount(location: UriLocation) {\n        // find the existing account selected from menu\n        const selectedId = location.internetAccountId\n        if (selectedId) {\n          const selectedAccount = self.internetAccounts.find(account => {\n            return account.internetAccountId === selectedId\n          })\n          if (selectedAccount) {\n            return selectedAccount\n          }\n        }\n\n        // if no existing account or not found, try to find working account\n        for (const account of self.internetAccounts) {\n          const handleResult = account.handlesLocation(location)\n          if (handleResult) {\n            return account\n          }\n        }\n\n        // if still no existing account, create ephemeral config to use\n        return selectedId\n          ? this.createEphemeralInternetAccount(selectedId, {}, location.uri)\n          : null\n      },\n    }))\n    .actions(self => ({\n      afterCreate() {\n        addDisposer(\n          self,\n          autorun(() => {\n            const { jbrowse } = self as typeof self & BaseRootModel\n            for (const internetAccount of jbrowse.internetAccounts) {\n              self.initializeInternetAccount(internetAccount)\n            }\n          }),\n        )\n      },\n    }))\n}\n\nexport type RootModelWithInternetAccountsType = ReturnType<\n  typeof InternetAccountsRootModelMixin\n>\nexport type RootModelWithInternetAccounts =\n  Instance<RootModelWithInternetAccountsType>\n","import TimeTraveller from '@jbrowse/core/util/TimeTraveller'\nimport { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport type { BaseRootModel } from '@jbrowse/product-core'\n\n/**\n * #stateModel HistoryManagementMixin\n * #category root\n */\nexport function HistoryManagementMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       * used for undo/redo\n       */\n      history: types.optional(TimeTraveller, { targetPath: '../session' }),\n    })\n    .actions(self => ({\n      afterCreate() {\n        document.addEventListener('keydown', e => {\n          if (\n            self.history.canRedo &&\n            // ctrl+shift+z or cmd+shift+z\n            (((e.ctrlKey || e.metaKey) && e.shiftKey && e.code === 'KeyZ') ||\n              // ctrl+y\n              (e.ctrlKey && !e.shiftKey && e.code === 'KeyY')) &&\n            document.activeElement?.tagName.toUpperCase() !== 'INPUT'\n          ) {\n            self.history.redo()\n          }\n          if (\n            self.history.canUndo &&\n            // ctrl+z or cmd+z\n            (e.ctrlKey || e.metaKey) &&\n            !e.shiftKey &&\n            e.code === 'KeyZ' &&\n            document.activeElement?.tagName.toUpperCase() !== 'INPUT'\n          ) {\n            self.history.undo()\n          }\n        })\n        addDisposer(\n          self,\n          autorun(() => {\n            const { session } = self as typeof self & BaseRootModel\n            if (session) {\n              // we use a specific initialization routine after session is\n              // created to get it to start tracking itself sort of related\n              // issue here\n              // https://github.com/mobxjs/mobx-state-tree/issues/1089#issuecomment-441207911\n              self.history.initialize()\n            }\n          }),\n        )\n      },\n    }))\n}\n","import { types } from 'mobx-state-tree'\n\nimport type { Menu, MenuAction } from '../menus'\nimport type { MenuItem } from '@jbrowse/core/ui/Menu'\n\n/**\n * #stateModel RootAppMenuMixin\n */\nexport function RootAppMenuMixin() {\n  return types\n    .model({})\n    .volatile(() => ({\n      mutableMenuActions: [] as MenuAction[],\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setMenus(newMenus: Menu[]) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          { type: 'setMenus', newMenus },\n        ]\n      },\n      /**\n       * #action\n       * Add a top-level menu\n       *\n       * @param menuName - Name of the menu to insert.\n       *\n       */\n      appendMenu(menuName: string) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          { type: 'appendMenu', menuName },\n        ]\n      },\n      /**\n       * #action\n       * Insert a top-level menu\n       *\n       * @param menuName - Name of the menu to insert.\n       *\n       * @param position - Position to insert menu. If negative, counts from th\n       * end, e.g. `insertMenu('My Menu', -1)` will insert the menu as the\n       * second-to-last one.\n       *\n       */\n      insertMenu(menuName: string, position: number) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          {\n            type: 'insertMenu',\n            menuName,\n            position,\n          },\n        ]\n      },\n      /**\n       * #action\n       * Add a menu item to a top-level menu\n       *\n       * @param menuName - Name of the top-level menu to append to.\n       *\n       * @param menuItem - Menu item to append.\n       */\n      appendToMenu(menuName: string, menuItem: MenuItem) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          {\n            type: 'appendToMenu',\n            menuName,\n            menuItem,\n          },\n        ]\n      },\n      /**\n       * #action\n       * Insert a menu item into a top-level menu\n       *\n       * @param menuName - Name of the top-level menu to insert into\n       *\n       * @param menuItem - Menu item to insert\n       *\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       */\n      insertInMenu(menuName: string, menuItem: MenuItem, position: number) {\n        self.mutableMenuActions.push({\n          type: 'insertInMenu',\n          menuName,\n          menuItem,\n          position,\n        })\n      },\n      /**\n       * #action\n       * Add a menu item to a sub-menu\n       *\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       *\n       * @param menuItem - Menu item to append.\n       *\n       * @returns The new length of the sub-menu\n       */\n      appendToSubMenu(menuPath: string[], menuItem: MenuItem) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          {\n            type: 'appendToSubMenu',\n            menuPath,\n            menuItem,\n          },\n        ]\n      },\n      /**\n       * #action\n       * Insert a menu item into a sub-menu\n       *\n       * @param menuPath - Path to the sub-menu to add to, starting with the\n       * top-level menu (e.g. `['File', 'Insert']`).\n       *\n       * @param menuItem - Menu item to insert.\n       *\n       * @param position - Position to insert menu item. If negative, counts\n       * from the end, e.g. `insertMenu('My Menu', -1)` will insert the menu as\n       * the second-to-last one.\n       */\n      insertInSubMenu(\n        menuPath: string[],\n        menuItem: MenuItem,\n        position: number,\n      ) {\n        self.mutableMenuActions = [\n          ...self.mutableMenuActions,\n          {\n            type: 'insertInSubMenu',\n            menuPath,\n            menuItem,\n            position,\n          },\n        ]\n      },\n    }))\n}\n","import { lazy } from 'react'\n\nimport Report from '@mui/icons-material/Report'\nimport { observable } from 'mobx'\nimport { types } from 'mobx-state-tree'\n\nimport type { NotificationLevel, SnackAction } from '../util/types'\n\n// lazies\nconst ErrorMessageStackTraceDialog = lazy(\n  () => import('@jbrowse/core/ui/ErrorMessageStackTraceDialog'),\n)\n\nexport interface SnackbarMessage {\n  message: string\n  level?: NotificationLevel\n  action?: SnackAction\n}\n\n/**\n * #stateModel SnackbarModel\n * #category session\n */\nexport default function SnackbarModel() {\n  return types\n    .model({})\n    .volatile(() => ({\n      /**\n       * #volatile\n       */\n      snackbarMessages: observable.array<SnackbarMessage>(),\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get snackbarMessageSet() {\n        return new Map(self.snackbarMessages.map(s => [s.message, s]))\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      notify(message: string, level?: NotificationLevel, action?: SnackAction) {\n        this.pushSnackbarMessage(message, level, action)\n        if (level === 'info' || level === 'success') {\n          setTimeout(() => {\n            this.removeSnackbarMessage(message)\n          }, 5000)\n        }\n      },\n\n      /**\n       * #action\n       */\n      notifyError(errorMessage: string, error?: unknown, extra?: unknown) {\n        this.notify(errorMessage, 'error', {\n          name: <Report />,\n          onClick: () => {\n            // @ts-expect-error\n            self.queueDialog((onClose: () => void) => [\n              ErrorMessageStackTraceDialog,\n              {\n                onClose,\n                error,\n                extra,\n              },\n            ])\n          },\n        })\n      },\n      /**\n       * #action\n       */\n      pushSnackbarMessage(\n        message: string,\n        level?: NotificationLevel,\n        action?: SnackAction,\n      ) {\n        if (action || !self.snackbarMessageSet.has(message)) {\n          self.snackbarMessages.push({ message, level, action })\n        }\n      },\n      /**\n       * #action\n       */\n      popSnackbarMessage() {\n        return self.snackbarMessages.pop()\n      },\n      /**\n       * #action\n       */\n      removeSnackbarMessage(message: string) {\n        const element = self.snackbarMessageSet.get(message)\n        if (element !== undefined) {\n          self.snackbarMessages.remove(element)\n        }\n      },\n    }))\n}\n","/** MST props, views, actions, etc related to managing connections */\n\nimport {\n  getContainingView,\n  isSessionModelWithWidgets,\n} from '@jbrowse/core/util'\nimport {\n  getMembers,\n  getParent,\n  getSnapshot,\n  getType,\n  isModelType,\n  isReferenceType,\n  types,\n  walk,\n} from 'mobx-state-tree'\n\nimport { isBaseSession } from './BaseSession'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport type { TrackViewModel } from '@jbrowse/core/util'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\nexport interface ReferringNode {\n  node: IAnyStateTreeNode\n  key: string\n}\n\n/**\n * #stateModel ReferenceManagementSessionMixin\n */\nexport function ReferenceManagementSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model('ReferenceManagementSessionMixin', {})\n    .views(self => ({\n      /**\n       * #method\n       * See if any MST nodes currently have a types.reference to this object.\n       *\n       * @param object - object\n       * @returns An array where the first element is the node referring\n       * to the object and the second element is they property name the node is\n       * using to refer to the object\n       */\n      getReferring(object: IAnyStateTreeNode) {\n        const refs: ReferringNode[] = []\n        walk(getParent(self), node => {\n          if (isModelType(getType(node))) {\n            const members = getMembers(node)\n            for (const [key, value] of Object.entries(members.properties)) {\n              if (isReferenceType(value) && node[key] === object) {\n                refs.push({ node, key })\n              }\n            }\n          }\n        })\n        return refs\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      removeReferring(\n        referring: ReferringNode[],\n        track: BaseTrackConfig,\n        callbacks: ((arg: string) => void)[],\n        dereferenceTypeCount: Record<string, number>,\n      ) {\n        for (const { node } of referring) {\n          let dereferenced = false\n          try {\n            // If a view is referring to the track config, remove the track\n            // from the view\n            const type = 'open track(s)'\n            const view = getContainingView(node) as TrackViewModel\n            callbacks.push(() => {\n              view.hideTrack(track.trackId)\n            })\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          } catch (err1) {\n            // ignore\n          }\n\n          if (isSessionModelWithWidgets(self) && self.widgets.has(node.id)) {\n            // If a configuration editor widget has the track config\n            // open, close the widget\n            const type = 'configuration editor widget(s)'\n            if (isSessionModelWithWidgets(self)) {\n              callbacks.push(() => {\n                self.hideWidget(node)\n              })\n            }\n            dereferenced = true\n            if (!dereferenceTypeCount[type]) {\n              dereferenceTypeCount[type] = 0\n            }\n            dereferenceTypeCount[type] += 1\n          }\n          if (!dereferenced) {\n            throw new Error(\n              `Error when closing this connection, the following node is still referring to a track configuration: ${JSON.stringify(\n                getSnapshot(node),\n              )}`,\n            )\n          }\n        }\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages multiple views */\nexport type SessionWithReferenceManagementType = ReturnType<\n  typeof ReferenceManagementSessionMixin\n>\n\n/** Instance of a session with MST reference management (`getReferring()`, `removeReferring()`)  */\nexport type SessionWithReferenceManagement =\n  Instance<SessionWithReferenceManagementType>\n\n/** Type guard for SessionWithReferenceManagement */\nexport function isSessionWithReferenceManagement(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithReferenceManagement {\n  return (\n    isBaseSession(thing) &&\n    'getReferring' in thing &&\n    typeof thing.getReferring === 'function' &&\n    'removeReferring' in thing &&\n    typeof thing.removeReferring === 'function'\n  )\n}\n","import { lazy } from 'react'\n\nimport {\n  AppFocusMixin,\n  SessionAssembliesMixin,\n  TemporaryAssembliesMixin,\n} from '@jbrowse/app-core'\nimport { getConf, readConfObject } from '@jbrowse/core/configuration'\nimport SnackbarModel from '@jbrowse/core/ui/SnackbarModel'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport {\n  DialogQueueSessionMixin,\n  DrawerWidgetSessionMixin,\n  MultipleViewsSessionMixin,\n  ReferenceManagementSessionMixin,\n  SessionTracksManagerSessionMixin,\n  ThemeManagerSessionMixin,\n} from '@jbrowse/product-core'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport CopyIcon from '@mui/icons-material/FileCopy'\nimport InfoIcon from '@mui/icons-material/Info'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport { autorun } from 'mobx'\nimport {\n  addDisposer,\n  cast,\n  getParent,\n  getSnapshot,\n  types,\n} from 'mobx-state-tree'\n\nimport { WebSessionConnectionsMixin } from '../SessionConnections'\n\nimport type { Menu } from '@jbrowse/app-core'\nimport type { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type TextSearchManager from '@jbrowse/core/TextSearch/TextSearchManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type {\n  AnyConfiguration,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport type { BaseTrackConfig } from '@jbrowse/core/pluggableElementTypes'\nimport type { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\nimport type { AssemblyManager, JBrowsePlugin } from '@jbrowse/core/util/types'\nimport type { Instance, SnapshotIn } from 'mobx-state-tree'\n\n// lazies\nconst AboutDialog = lazy(() => import('./AboutDialog'))\n\ninterface Display {\n  displayId: string\n}\n\n/**\n * #stateModel BaseWebSession\n * used for \"web based\" products, including jbrowse-web and react-app\n * composed of\n * - [ReferenceManagementSessionMixin](../referencemanagementsessionmixin)\n * - [DrawerWidgetSessionMixin](../drawerwidgetsessionmixin)\n * - [DialogQueueSessionMixin](../dialogqueuesessionmixin)\n * - [ThemeManagerSessionMixin](../thememanagersessionmixin)\n * - [MultipleViewsSessionMixin](../multipleviewssessionmixin)\n * - [SessionTracksManagerSessionMixin](../sessiontracksmanagersessionmixin)\n * - [SessionAssembliesMixin](../sessionassembliesmixin)\n * - [TemporaryAssembliesMixin](../temporaryassembliesmixin)\n * - [WebSessionConnectionsMixin](../websessionconnectionsmixin)\n * - [AppFocusMixin](../appfocusmixin)\n */\nexport function BaseWebSession({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  const sessionModel = types\n    .compose(\n      'WebCoreSessionModel',\n      types.compose(\n        'WebCoreSessionModelGroupA',\n        ReferenceManagementSessionMixin(pluginManager),\n        DrawerWidgetSessionMixin(pluginManager),\n        DialogQueueSessionMixin(pluginManager),\n        ThemeManagerSessionMixin(pluginManager),\n        MultipleViewsSessionMixin(pluginManager),\n      ),\n      types.compose(\n        'WebCoreSessionModelGroupB',\n        SessionTracksManagerSessionMixin(pluginManager),\n        SessionAssembliesMixin(pluginManager, assemblyConfigSchema),\n        TemporaryAssembliesMixin(pluginManager, assemblyConfigSchema),\n        WebSessionConnectionsMixin(pluginManager),\n        AppFocusMixin(),\n        SnackbarModel(),\n      ),\n    )\n    .props({\n      /**\n       * #property\n       */\n      margin: 0,\n      /**\n       * #property\n       */\n      sessionPlugins: types.array(types.frozen()),\n    })\n    .volatile((/* self */) => ({\n      /**\n       * #volatile\n       */\n      sessionThemeName: localStorageGetItem('themeName') || 'default',\n      /**\n       * #volatile\n       * this is the current \"task\" that is being performed in the UI. this is\n       * usually an object of the form\n       *\n       * `{ taskName: \"configure\", target: thing_being_configured }`\n       */\n      task: undefined,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return [...self.sessionTracks, ...self.jbrowse.tracks]\n      },\n      /**\n       * #getter\n       */\n      get root() {\n        return getParent<any>(self)\n      },\n      /**\n       * #getter\n       * list of sessionAssemblies and jbrowse config assemblies, does not\n       * include temporaryAssemblies. basically the list to be displayed in a\n       * AssemblySelector dropdown\n       */\n      get assemblies(): Instance<BaseAssemblyConfigSchema[]> {\n        return [...self.jbrowse.assemblies, ...self.sessionAssemblies]\n      },\n      /**\n       * #getter\n       * list of config connections and session connections\n       */\n      get connections(): BaseConnectionConfigModel[] {\n        return [...self.jbrowse.connections, ...self.sessionConnections]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setName(str: string) {\n        self.name = str\n      },\n    }))\n\n    .views(self => ({\n      /**\n       * #getter\n       * list of sessionAssemblies and jbrowse config assemblies, does not\n       * include temporaryAssemblies. basically the list to be displayed in a\n       * AssemblySelector dropdown\n       */\n      get assemblyNames() {\n        return self.assemblies.map(f => readConfObject(f, 'name') as string)\n      },\n      /**\n       * #getter\n       */\n      get version() {\n        return self.root.version\n      },\n      /**\n       * #getter\n       */\n      get shareURL() {\n        return getConf(self.jbrowse, 'shareURL')\n      },\n      /**\n       * #getter\n       */\n      get textSearchManager(): TextSearchManager {\n        return self.root.textSearchManager\n      },\n      /**\n       * #getter\n       */\n      get assemblyManager(): AssemblyManager {\n        return self.root.assemblyManager\n      },\n      /**\n       * #getter\n       */\n      get savedSessionMetadata() {\n        return self.root.savedSessionMetadata\n      },\n      /**\n       * #getter\n       */\n      get previousAutosaveId() {\n        return self.root.previousAutosaveId\n      },\n\n      /**\n       * #getter\n       */\n      get history() {\n        return self.root.history\n      },\n\n      /**\n       * #method\n       */\n      renderProps() {\n        return {\n          theme: self.theme,\n          highResolutionScaling: getConf(self, 'highResolutionScaling'),\n        }\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addAssemblyConf(conf: AnyConfiguration) {\n        self.jbrowse.addAssemblyConf(conf)\n      },\n      /**\n       * #action\n       */\n      addSessionPlugin(plugin: JBrowsePlugin) {\n        if (self.sessionPlugins.some(p => p.name === plugin.name)) {\n          throw new Error('session plugin cannot be installed twice')\n        }\n        self.sessionPlugins.push(plugin)\n        self.root.setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      removeSessionPlugin(pluginDefinition: PluginDefinition) {\n        self.sessionPlugins = cast(\n          self.sessionPlugins.filter(\n            plugin =>\n              // @ts-expect-error\n              plugin.url !== pluginDefinition.url ||\n              // @ts-expect-error\n              plugin.umdUrl !== pluginDefinition.umdUrl ||\n              // @ts-expect-error\n              plugin.cjsUrl !== pluginDefinition.cjsUrl ||\n              // @ts-expect-error\n              plugin.esmUrl !== pluginDefinition.esmUrl,\n          ),\n        )\n        getParent<any>(self).setPluginsUpdated(true)\n      },\n\n      /**\n       * #action\n       */\n      addSavedSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return self.root.addSavedSession(sessionSnapshot)\n      },\n\n      /**\n       * #action\n       */\n      deleteSavedSession(id: string) {\n        return self.root.deleteSavedSession(id)\n      },\n\n      /**\n       * #action\n       */\n      favoriteSavedSession(id: string) {\n        return self.root.favoriteSavedSession(id)\n      },\n\n      /**\n       * #action\n       */\n      unfavoriteSavedSession(id: string) {\n        return self.root.unfavoriteSavedSession(id)\n      },\n      /**\n       * #action\n       */\n      renameCurrentSession(sessionName: string) {\n        return self.root.renameCurrentSession(sessionName)\n      },\n\n      /**\n       * #action\n       */\n      duplicateCurrentSession() {\n        return self.root.duplicateCurrentSession()\n      },\n      /**\n       * #action\n       */\n      activateSession(sessionName: string) {\n        return self.root.activateSession(sessionName)\n      },\n\n      /**\n       * #action\n       */\n      setDefaultSession() {\n        return self.root.setDefaultSession()\n      },\n\n      /**\n       * #action\n       */\n      saveSessionToLocalStorage() {\n        return self.root.saveSessionToLocalStorage()\n      },\n\n      /**\n       * #action\n       */\n      loadAutosaveSession() {\n        return self.root.loadAutosaveSession()\n      },\n\n      /**\n       * #action\n       */\n      setSession(sessionSnapshot: SnapshotIn<typeof self>) {\n        return self.root.setSession(sessionSnapshot)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      editTrackConfiguration(configuration: AnyConfigurationModel) {\n        const { adminMode, sessionTracks } = self\n        if (!adminMode && !sessionTracks.includes(configuration)) {\n          throw new Error(\"Can't edit the configuration of a non-session track\")\n        }\n        self.editConfiguration(configuration)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #method\n       */\n      getTrackActionMenuItems(config: BaseTrackConfig) {\n        const { adminMode, sessionTracks } = self\n        const canEdit =\n          adminMode || sessionTracks.find(t => t.trackId === config.trackId)\n\n        // disable if it is a reference sequence track\n        const isRefSeq = config.type === 'ReferenceSequenceTrack'\n        return [\n          {\n            label: 'About track',\n            priority: 1002,\n            onClick: () => {\n              self.queueDialog(handleClose => [\n                AboutDialog,\n                {\n                  config,\n                  handleClose,\n                },\n              ])\n            },\n            icon: InfoIcon,\n          },\n          {\n            label: 'Settings',\n            priority: 1001,\n            disabled: !canEdit,\n            icon: SettingsIcon,\n            onClick: () => {\n              self.editTrackConfiguration(config)\n            },\n          },\n          {\n            label: 'Delete track',\n            priority: 1000,\n            disabled: !canEdit || isRefSeq,\n            icon: DeleteIcon,\n            onClick: () => {\n              self.deleteTrackConf(config)\n            },\n          },\n          {\n            label: 'Copy track',\n            priority: 999,\n            disabled: isRefSeq,\n            onClick: () => {\n              const snap = structuredClone(getSnapshot(config)) as {\n                [key: string]: unknown\n                displays: Display[]\n              }\n              const now = Date.now()\n              snap.trackId += `-${now}`\n              for (const display of snap.displays) {\n                display.displayId += `-${now}`\n              }\n              // the -sessionTrack suffix to trackId is used as metadata for\n              // the track selector to store the track in a special category,\n              // and default category is also cleared\n              if (!self.adminMode) {\n                snap.trackId += '-sessionTrack'\n                snap.category = undefined\n              }\n              snap.name += ' (copy)'\n              self.addTrackConf(snap)\n            },\n            icon: CopyIcon,\n          },\n          { type: 'divider' },\n        ]\n      },\n\n      /**\n       * #method\n       */\n      menus(): Menu[] {\n        return self.root.menus()\n      },\n    }))\n    .actions(self => ({\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('drawerPosition', self.drawerPosition)\n            localStorageSetItem('themeName', self.themeName)\n          }),\n        )\n      },\n    }))\n\n  const extendedSessionModel = pluginManager.evaluateExtensionPoint(\n    'Core-extendSession',\n    sessionModel,\n  ) as typeof sessionModel\n\n  return types.snapshotProcessor(extendedSessionModel, {\n    // @ts-expect-error\n    preProcessor(snapshot) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      const { connectionInstances, ...rest } = snapshot || {}\n\n      // connectionInstances schema changed from object to an array, so any old\n      // connectionInstances as object is in snapshot, filter it out\n      // xref https://github.com/GMOD/jbrowse-components/issues/1903\n      return !Array.isArray(connectionInstances) ? rest : snapshot\n    },\n  })\n}\n","import { types } from 'mobx-state-tree'\n\nimport { isBaseSession } from './BaseSession'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { DialogComponentType } from '@jbrowse/core/util'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel DialogQueueSessionMixin\n */\nexport function DialogQueueSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model('DialogQueueSessionMixin', {})\n    .volatile(() => ({\n      queueOfDialogs: [] as [DialogComponentType, unknown][],\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get DialogComponent() {\n        return self.queueOfDialogs[0]?.[0]\n      },\n      /**\n       * #getter\n       */\n      get DialogProps() {\n        return self.queueOfDialogs[0]?.[1]\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      removeActiveDialog() {\n        self.queueOfDialogs = self.queueOfDialogs.slice(1)\n      },\n      /**\n       * #action\n       */\n      queueDialog(\n        cb: (doneCallback: () => void) => [DialogComponentType, unknown],\n      ) {\n        const [component, props] = cb(() => {\n          this.removeActiveDialog()\n        })\n        self.queueOfDialogs = [...self.queueOfDialogs, [component, props]]\n      },\n    }))\n}\n\nexport type SessionWithDialogsType = ReturnType<typeof DialogQueueSessionMixin>\nexport type SessionWithDialogs = Instance<SessionWithDialogsType>\n\nexport function isSessionWithDialogs(\n  session: IAnyStateTreeNode,\n): session is SessionWithDialogs {\n  return isBaseSession(session) && 'queueOfDialogs' in session\n}\n","import { getConf } from '@jbrowse/core/configuration'\nimport { createJBrowseTheme, defaultThemes } from '@jbrowse/core/ui'\nimport { localStorageGetItem, localStorageSetItem } from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport { addDisposer, types } from 'mobx-state-tree'\n\nimport type { BaseSession } from './BaseSession'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { ThemeOptions } from '@mui/material'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\ntype ThemeMap = Record<string, ThemeOptions>\n\n/**\n * #stateModel ThemeManagerSessionMixin\n */\nexport function ThemeManagerSessionMixin(_pluginManager: PluginManager) {\n  return types\n    .model({})\n    .volatile(() => ({\n      sessionThemeName: localStorageGetItem('themeName') || 'default',\n    }))\n    .views(s => ({\n      /**\n       * #method\n       */\n      allThemes(): ThemeMap {\n        const self = s as typeof s & BaseSession\n        const extraThemes = getConf(self.jbrowse, 'extraThemes')\n        return { ...defaultThemes, ...extraThemes }\n      },\n      /**\n       * #getter\n       */\n      get themeName() {\n        const { sessionThemeName } = s\n        const all = this.allThemes()\n        return all[sessionThemeName] ? sessionThemeName : 'default'\n      },\n      /**\n       * #getter\n       */\n      get theme() {\n        const self = s as typeof s & BaseSession\n        const configTheme = getConf(self.jbrowse, 'theme')\n        const all = this.allThemes()\n        return createJBrowseTheme(configTheme, all, this.themeName)\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setThemeName(name: string) {\n        self.sessionThemeName = name\n      },\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetItem('themeName', self.themeName)\n          }),\n        )\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that supports theming */\nexport type SessionWithThemesType = ReturnType<typeof ThemeManagerSessionMixin>\n\n/** Instance of a session that has theming support */\nexport type SessionWithThemes = Instance<SessionWithThemesType>\n\n/** Type guard for SessionWithThemes */\nexport function isSessionWithThemes(\n  session: IAnyStateTreeNode,\n): session is SessionWithThemes {\n  return 'theme' in session\n}\n","import { types } from 'mobx-state-tree'\n\nimport { isBaseSession } from './BaseSession'\nimport { TracksManagerSessionMixin } from './Tracks'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AnyConfiguration,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel SessionTracksManagerSessionMixin\n */\nexport function SessionTracksManagerSessionMixin(pluginManager: PluginManager) {\n  return TracksManagerSessionMixin(pluginManager)\n    .named('SessionTracksManagerSessionMixin')\n    .props({\n      /**\n       * #property\n       */\n      sessionTracks: types.array(\n        pluginManager.pluggableConfigSchemaType('track'),\n      ),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return [...self.sessionTracks, ...self.jbrowse.tracks]\n      },\n    }))\n    .actions(self => {\n      const {\n        addTrackConf: superAddTrackConf,\n        deleteTrackConf: superDeleteTrackConf,\n      } = self\n      return {\n        /**\n         * #action\n         */\n        addTrackConf(trackConf: AnyConfiguration) {\n          if (self.adminMode) {\n            return superAddTrackConf(trackConf)\n          }\n\n          const { trackId, type } = trackConf as {\n            type: string\n            trackId: string\n          }\n          if (!type) {\n            throw new Error(`unknown track type ${type}`)\n          }\n          const track = self.sessionTracks.find(t => t.trackId === trackId)\n          if (track) {\n            return track\n          }\n          const length = self.sessionTracks.push(trackConf)\n          return self.sessionTracks[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        deleteTrackConf(trackConf: AnyConfigurationModel) {\n          // try to delete it in the main config if in admin mode\n          const found = superDeleteTrackConf(trackConf)\n          if (found) {\n            return found\n          }\n          // if not found or not in admin mode, try to delete it in the\n          // sessionTracks\n          const { trackId } = trackConf\n          const idx = self.sessionTracks.findIndex(t => t.trackId === trackId)\n          if (idx === -1) {\n            return undefined\n          }\n          return self.sessionTracks.splice(idx, 1)\n        },\n      }\n    })\n}\n\n/** Session mixin MST type for a session that has `sessionTracks` */\nexport type SessionWithSessionTracksType = ReturnType<\n  typeof SessionTracksManagerSessionMixin\n>\n\n/** Instance of a session that has `sessionTracks` */\nexport type SessionWithSessionTracks = Instance<SessionWithSessionTracksType>\n\n/** Type guard for SessionWithSessionTracks */\nexport function isSessionWithSessionTracks(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithSessionTracks {\n  return isBaseSession(thing) && 'sessionTracks' in thing\n}\n","import { types } from 'mobx-state-tree'\n\nimport { BaseSessionModel, isBaseSession } from './BaseSession'\nimport { ReferenceManagementSessionMixin } from './ReferenceManagement'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type {\n  AnyConfiguration,\n  AnyConfigurationModel,\n} from '@jbrowse/core/configuration'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel TracksManagerSessionMixin\n * composed of\n * - BaseSessionModel\n * - ReferenceManagementSessionMixin\n */\nexport function TracksManagerSessionMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'TracksManagerSessionMixin',\n      BaseSessionModel(pluginManager),\n      ReferenceManagementSessionMixin(pluginManager),\n    )\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get tracks(): AnyConfigurationModel[] {\n        return self.jbrowse.tracks\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      addTrackConf(trackConf: AnyConfiguration) {\n        return self.jbrowse.addTrackConf(trackConf)\n      },\n\n      /**\n       * #action\n       */\n      deleteTrackConf(trackConf: AnyConfigurationModel) {\n        const callbacksToDereferenceTrack: (() => void)[] = []\n        const dereferenceTypeCount: Record<string, number> = {}\n        const referring = self.getReferring(trackConf)\n        self.removeReferring(\n          referring,\n          trackConf,\n          callbacksToDereferenceTrack,\n          dereferenceTypeCount,\n        )\n        for (const cb of callbacksToDereferenceTrack) {\n          cb()\n        }\n        if (self.adminMode) {\n          return self.jbrowse.deleteTrackConf(trackConf)\n        }\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that has tracks */\nexport type SessionWithTracksType = ReturnType<typeof TracksManagerSessionMixin>\n\n/** Instance of a session that has tracks */\nexport type SessionWithTracks = Instance<SessionWithTracksType>\n\n/** Type guard for SessionWithTracks */\nexport function isSessionWithTracks(\n  thing: IAnyStateTreeNode,\n): thing is SessionWithTracks {\n  return isBaseSession(thing) && 'tracks' in thing\n}\n","import { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type { AnyConfiguration } from '@jbrowse/core/configuration'\nimport type { BaseSession } from '@jbrowse/product-core'\n\n/**\n * #stateModel SessionAssembliesMixin\n * #category root\n */\nexport function SessionAssembliesMixin(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType: BaseAssemblyConfigSchema,\n) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      sessionAssemblies: types.array(assemblyConfigSchemasType),\n    })\n    .actions(s => {\n      const self = s as typeof s & BaseSession\n      return {\n        /**\n         * #action\n         */\n        addSessionAssembly(conf: AnyConfiguration) {\n          const asm = self.sessionAssemblies.find(f => f.name === conf.name)\n          if (asm) {\n            console.warn(`Assembly ${conf.name} already exists`)\n            return asm\n          }\n          const length = self.sessionAssemblies.push(conf)\n          return self.sessionAssemblies[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        addAssembly(conf: AnyConfiguration) {\n          if (self.adminMode) {\n            self.jbrowse.addAssemblyConf(conf)\n          } else {\n            this.addSessionAssembly(conf)\n          }\n        },\n\n        /**\n         * #action\n         */\n        removeAssembly(name: string) {\n          if (self.adminMode) {\n            self.jbrowse.removeAssemblyConf(name)\n          } else {\n            this.removeSessionAssembly(name)\n          }\n        },\n\n        /**\n         * #action\n         */\n        removeSessionAssembly(assemblyName: string) {\n          const elt = self.sessionAssemblies.find(a => a.name === assemblyName)\n          if (elt) {\n            self.sessionAssemblies.remove(elt)\n          }\n        },\n      }\n    })\n}\n","import { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfiguration } from '@jbrowse/core/configuration'\nimport type { BaseSession } from '@jbrowse/product-core'\n\n/**\n * #stateModel TemporaryAssembliesMixin\n * #category root\n */\nexport function TemporaryAssembliesMixin(\n  pluginManager: PluginManager,\n  assemblyConfigSchemasType = types.frozen(),\n) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      temporaryAssemblies: types.array(assemblyConfigSchemasType),\n    })\n\n    .actions(s => {\n      const self = s as typeof s & BaseSession\n      return {\n        /**\n         * #action\n         * used for read vs ref type assemblies.\n         */\n        addTemporaryAssembly(conf: AnyConfiguration) {\n          const asm = self.temporaryAssemblies.find(f => f.name === conf.name)\n          if (asm) {\n            console.warn(`Assembly ${conf.name} was already existing`)\n            return asm\n          }\n          const length = self.temporaryAssemblies.push(conf)\n          return self.temporaryAssemblies[length - 1]\n        },\n\n        /**\n         * #action\n         */\n        removeTemporaryAssembly(name: string) {\n          const elt = self.temporaryAssemblies.find(a => a.name === name)\n          if (elt) {\n            self.temporaryAssemblies.remove(elt)\n          }\n        },\n      }\n    })\n}\n","import { ConnectionManagementSessionMixin } from '@jbrowse/product-core'\nimport { types } from 'mobx-state-tree'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\nimport type {\n  BaseSession,\n  SessionWithSessionTracks,\n} from '@jbrowse/product-core'\n\n/**\n * #stateModel WebSessionConnectionsMixin\n * #category session\n */\nexport function WebSessionConnectionsMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      'SessionConnectionsManagement',\n      ConnectionManagementSessionMixin(pluginManager),\n      types.model({\n        /**\n         * #property\n         */\n        sessionConnections: types.array(\n          pluginManager.pluggableConfigSchemaType('connection'),\n        ),\n      }),\n    )\n    .actions(s => {\n      const self = s as typeof s & BaseSession & SessionWithSessionTracks\n      const superDeleteConnection = self.deleteConnection\n      const superAddConnectionConf = self.addConnectionConf\n      return {\n        /**\n         * #action\n         */\n        addConnectionConf(connectionConf: BaseConnectionConfigModel) {\n          if (self.adminMode) {\n            return superAddConnectionConf(connectionConf)\n          } else {\n            const { connectionId, type } = connectionConf\n            if (!type) {\n              throw new Error(`unknown connection type ${type}`)\n            }\n            const connection = self.sessionTracks.find(\n              c => c.connectionId === connectionId,\n            )\n            if (connection) {\n              return connection\n            } else {\n              const length = self.sessionConnections.push(connectionConf)\n              return self.sessionConnections[length - 1]\n            }\n          }\n        },\n\n        /**\n         * #action\n         */\n        deleteConnection(configuration: AnyConfigurationModel) {\n          if (self.adminMode) {\n            return superDeleteConnection(configuration)\n          } else {\n            const { connectionId } = configuration\n            const idx = self.sessionConnections.findIndex(\n              c => c.connectionId === connectionId,\n            )\n            return idx === -1\n              ? undefined\n              : self.sessionConnections.splice(idx, 1)\n          }\n        },\n      }\n    })\n}\n","import { types } from 'mobx-state-tree'\n\n/**\n * #stateModel AppFocusMixin\n * #category session\n */\nexport function AppFocusMixin() {\n  return types\n    .model({\n      /**\n       * #property\n       * used to keep track of which view is in focus\n       */\n      focusedViewId: types.maybe(types.string),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      setFocusedViewId(viewId: string) {\n        self.focusedViewId = viewId\n      },\n    }))\n}\n","import { BaseWebSession } from '@jbrowse/web-core'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type { AbstractSessionModel } from '@jbrowse/core/util/types'\nimport type { Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel JBrowseWebSessionModel\n * extends [BaseWebSession](../basewebsession)\n */\nexport default function sessionModelFactory({\n  pluginManager,\n  assemblyConfigSchema,\n}: {\n  pluginManager: PluginManager\n  assemblyConfigSchema: BaseAssemblyConfigSchema\n}) {\n  return BaseWebSession({ pluginManager, assemblyConfigSchema })\n}\n\nexport type WebSessionModelType = ReturnType<typeof sessionModelFactory>\nexport type WebSessionModel = Instance<WebSessionModelType>\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction z(x: Instance<WebSessionModelType>): AbstractSessionModel {\n  // this function's sole purpose is to get typescript to check\n  // that the session model implements all of AbstractSessionModel\n  return x\n}\n","import PluginManager from '@jbrowse/core/PluginManager'\nimport { doAnalytics } from '@jbrowse/core/util/analytics'\n\nimport corePlugins from './corePlugins'\nimport { loadHubSpec } from './loadHubSpec'\nimport { loadSessionSpec } from './loadSessionSpec'\nimport JBrowseRootModelFactory from './rootModel/rootModel'\nimport sessionModelFactory from './sessionModel'\n\nimport type { SessionLoaderModel } from './SessionLoader'\n\nexport function createPluginManager(\n  model: SessionLoaderModel,\n  reloadPluginManagerCallback: (\n    configSnapshot: Record<string, unknown>,\n    sessionSnapshot: Record<string, unknown>,\n  ) => void,\n) {\n  // it is ready when a session has loaded and when there is no config error\n  //\n  // Assuming that the query changes model.sessionError or\n  // model.sessionSnapshot or model.blankSession\n  const pluginManager = new PluginManager([\n    ...corePlugins.map(P => ({\n      plugin: new P(),\n      metadata: { isCore: true },\n    })),\n    ...(model.runtimePlugins ?? []).map(({ plugin: P, definition }) => ({\n      plugin: new P(),\n      definition,\n      metadata: {\n        // @ts-expect-error\n        url: definition.url,\n      },\n    })),\n    ...(model.sessionPlugins ?? []).map(({ plugin: P, definition }) => ({\n      plugin: new P(),\n      definition,\n      metadata: {\n        // @ts-expect-error\n        url: definition.url,\n      },\n    })),\n  ]).createPluggableElements()\n\n  const RootModel = JBrowseRootModelFactory({\n    pluginManager,\n    sessionModelFactory,\n    adminMode: !!model.adminKey,\n  })\n\n  if (model.configSnapshot) {\n    const rootModel = RootModel.create(\n      {\n        jbrowse: model.configSnapshot,\n        configPath: model.configPath,\n      },\n      { pluginManager },\n    )\n\n    rootModel.setReloadPluginManagerCallback(reloadPluginManagerCallback)\n\n    // @ts-expect-error\n    if (!model.configSnapshot.configuration?.rpc?.defaultDriver) {\n      rootModel.jbrowse.configuration.rpc.defaultDriver.set(\n        'WebWorkerRpcDriver',\n      )\n    }\n\n    let afterInitializedCb = () => {}\n\n    // in order: saves the previous autosave for recovery, tries to load the\n    // local session if session in query, or loads the default session\n    try {\n      const { sessionError, sessionSpec, sessionSnapshot, hubSpec } = model\n      if (sessionError) {\n        // eslint-disable-next-line @typescript-eslint/only-throw-error\n        throw sessionError\n      } else if (sessionSnapshot) {\n        rootModel.setSession(sessionSnapshot)\n      } else if (hubSpec) {\n        // @ts-expect-error\n        afterInitializedCb = () => loadHubSpec(hubSpec, pluginManager)\n      } else if (sessionSpec) {\n        // @ts-expect-error\n        afterInitializedCb = () => loadSessionSpec(sessionSpec, pluginManager)\n      } else {\n        rootModel.setDefaultSession()\n      }\n    } catch (e) {\n      rootModel.setDefaultSession()\n      const str = `${e}`\n      const m = str.replace('[mobx-state-tree] ', '').replace(/\\(.+/, '')\n      const r =\n        m.length > 1000 ? `${m.slice(0, 1000)}...see more in console` : m\n      const s = r.startsWith('Error:') ? r : `Error: ${r}`\n      rootModel.session?.notifyError(\n        `${s}. If you received this URL from another user, request that they send you a session generated with the \"Share\" button instead of copying and pasting their URL`,\n        model.sessionError,\n        model.sessionSnapshot,\n      )\n      console.error(e)\n    }\n\n    // send analytics\n    doAnalytics(rootModel, model.initialTimestamp, model.sessionQuery)\n\n    pluginManager.setRootModel(rootModel)\n    pluginManager.configure()\n    afterInitializedCb()\n    return pluginManager\n  } else {\n    return undefined\n  }\n}\n","import type PluginManager from '@jbrowse/core/PluginManager'\n\n// load a UCSC hub\nexport async function loadHubSpec(\n  {\n    hubURL,\n    // sessionTracks = [],\n  }: {\n    hubURL: string[]\n    sessionTracks: Record<string, unknown>[]\n  },\n  pluginManager: PluginManager,\n) {\n  const rootModel = pluginManager.rootModel!\n\n  try {\n    const res = await fetch(hubURL[0]!)\n    if (!res.ok) {\n      throw new Error(`HTTP ${res.status} fetching ${hubURL[0]}`)\n    }\n    const d = await res.text()\n    const sessionLabel = d\n      .split('\\n')\n      .find(d => d.startsWith('shortLabel'))\n      ?.replace('shortLabel', '')\n      .trim()\n\n    // @ts-expect-error\n    rootModel.setSession({\n      name: sessionLabel || hubURL[0],\n      sessionConnections: hubURL.map(r => ({\n        type: 'UCSCTrackHubConnection',\n        connectionId: r,\n        name: r,\n        hubTxtLocation: {\n          uri: r,\n          locationType: 'UriLocation',\n        },\n      })),\n    })\n    const { session } = rootModel\n    // @ts-expect-error\n    session.makeConnection(session.sessionConnections[0])\n  } catch (e) {\n    console.error(e)\n    rootModel.session?.notifyError(`${e}`, e)\n  }\n}\n","import type { ViewSpec } from './types'\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\n// use extension point named e.g. LaunchView-LinearGenomeView to initialize an\n// LGV session\nexport async function loadSessionSpec(\n  {\n    views,\n    sessionTracks = [],\n  }: {\n    views: ViewSpec[]\n    sessionTracks: Record<string, unknown>[]\n  },\n  pluginManager: PluginManager,\n) {\n  const rootModel = pluginManager.rootModel!\n\n  try {\n    // @ts-expect-error\n    rootModel.setSession({\n      name: `New session ${new Date().toLocaleString()}`,\n    })\n\n    for (const track of sessionTracks) {\n      // @ts-expect-error\n      rootModel.session.addTrackConf(track)\n    }\n\n    await Promise.all(\n      views.map(view =>\n        pluginManager.evaluateAsyncExtensionPoint(`LaunchView-${view.type}`, {\n          ...view,\n          session: rootModel.session,\n        }),\n      ),\n    )\n  } catch (e) {\n    console.error(e)\n    rootModel.session?.notifyError(`${e}`, e)\n  }\n}\n","import { readConfObject } from '../configuration'\nimport { isElectron } from '../util'\n\ntype AnalyticsObj = Record<string, any>\n\ninterface Track {\n  type: string\n}\n\nexport async function writeAWSAnalytics(\n  rootModel: any,\n  initialTimeStamp: number,\n  sessionQuery?: string | null,\n) {\n  try {\n    const url = 'https://analytics.jbrowse.org/api/v1'\n\n    const multiAssemblyTracks = rootModel.jbrowse.tracks.filter(\n      (track: any) => (readConfObject(track, 'assemblyNames') || []).length > 1,\n    ).length\n\n    const savedSessionCount = Object.keys(localStorage).filter(name =>\n      name.includes('localSaved-'),\n    ).length\n\n    const { jbrowse: config, session, version: ver } = rootModel\n    const { tracks, assemblies, plugins } = config\n\n    // stats to be recorded in db\n    const stats: AnalyticsObj = {\n      ver,\n      'plugins-count': plugins?.length || 0,\n      'plugin-names': plugins?.map((p: any) => p.name).join(','),\n      'assemblies-count': assemblies.length,\n      'tracks-count': tracks.length,\n      'session-tracks-count': session?.sessionTracks.length || 0,\n      'open-views': session?.views.length || 0,\n      'synteny-tracks-count': multiAssemblyTracks,\n      'saved-sessions-count': savedSessionCount,\n\n      // field if existing session param in query before autogenerated param\n      'existing-session-param-type': sessionQuery?.split('-')[0] || 'none',\n\n      // screen geometry\n      'scn-h': window.screen.height,\n      'scn-w': window.screen.width,\n\n      // window geometry\n      'win-h': window.innerHeight,\n      'win-w': window.innerWidth,\n\n      electron: isElectron,\n      loadTime: (Date.now() - initialTimeStamp) / 1000,\n      jb2: true,\n    }\n\n    // stringifies the track type counts, gets processed in lambda\n    // eslint-disable-next-line unicorn/no-array-for-each\n    tracks.forEach((track: Track) => {\n      const key = `track-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // stringifies the session track type counts, gets processed in lambda\n    // eslint-disable-next-line unicorn/no-array-for-each\n    session?.sessionTracks.forEach((track: Track) => {\n      const key = `sessionTrack-types-${track.type}`\n      stats[key] = stats[key] + 1 || 1\n    })\n\n    // put stats into a query string for get request\n    const qs = Object.keys(stats)\n      .map(key => `${key}=${stats[key]}`)\n      .join('&')\n\n    await fetch(`${url}?${qs}`)\n  } catch (e) {\n    console.error('Failed to write analytics to AWS.', e)\n  }\n}\n\nexport async function writeGAAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n) {\n  const jbrowseUser = 'UA-7115575-5'\n  const stats: AnalyticsObj = {\n    'tracks-count': rootModel.jbrowse.tracks.length, // this is all possible tracks\n    ver: rootModel.version,\n    electron: isElectron,\n    loadTime: Date.now() - initialTimestamp,\n    pluginNames:\n      rootModel.jbrowse.plugins?.map((plugin: any) => plugin.name) || '',\n  }\n\n  // create script\n  let analyticsScript =\n    \"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\"\n  analyticsScript +=\n    '(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),'\n  analyticsScript +=\n    'm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)'\n  analyticsScript +=\n    \"})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\"\n  analyticsScript += `ga('create', '${jbrowseUser}', 'auto', 'jbrowseTracker');`\n\n  const gaData: AnalyticsObj = {}\n  const googleDimensions = 'tracks-count ver electron loadTime pluginNames'\n\n  for (const [index, key] of googleDimensions.split(/\\s+/).entries()) {\n    gaData[`dimension${index + 1}`] = stats[key]\n  }\n\n  gaData.metric1 = Math.round(stats.loadTime)\n\n  analyticsScript += `ga('jbrowseTracker.send', 'pageview',${JSON.stringify(\n    gaData,\n  )});`\n\n  const analyticsScriptNode = document.createElement('script')\n  analyticsScriptNode.innerHTML = analyticsScript\n\n  document.getElementsByTagName('head')[0]!.append(analyticsScriptNode)\n}\n\nexport function doAnalytics(\n  rootModel: any,\n  initialTimestamp: number,\n  initialSessionQuery: string | null | undefined,\n) {\n  if (\n    rootModel &&\n    !readConfObject(rootModel.jbrowse.configuration, 'disableAnalytics')\n  ) {\n    // ok if these are unhandled\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    writeAWSAnalytics(rootModel, initialTimestamp, initialSessionQuery)\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    writeGAAnalytics(rootModel, initialTimestamp)\n  }\n}\n","import { Suspense, lazy, useEffect, useState } from 'react'\n\nimport { FatalErrorDialog } from '@jbrowse/core/ui'\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport { observer } from 'mobx-react'\nimport {\n  QueryParamProvider,\n  StringParam,\n  useQueryParam,\n} from 'use-query-params'\nimport { WindowHistoryAdapter } from 'use-query-params/adapters/window'\n\nimport '@fontsource/roboto'\n\nimport JBrowse from './JBrowse'\nimport Loading from './Loading'\nimport SessionLoader from '../SessionLoader'\nimport { createPluginManager } from '../createPluginManager'\nimport factoryReset from '../factoryReset'\n\nimport type { SessionLoaderModel } from '../SessionLoader'\nimport type PluginManager from '@jbrowse/core/PluginManager'\n\nconst SessionTriaged = lazy(() => import('./SessionTriaged'))\nconst StartScreenErrorMessage = lazy(() => import('./StartScreenErrorMessage'))\n\n// return value if defined, else convert null to undefined for use with\n// types.maybe\nfunction normalize<T>(param: T | null | undefined) {\n  return param === null ? undefined : param\n}\n\nexport function Loader({\n  initialTimestamp = Date.now(),\n}: {\n  initialTimestamp?: number\n}) {\n  const Str = StringParam\n\n  const [config] = useQueryParam('config', Str)\n  const [session] = useQueryParam('session', Str)\n  const [adminKey] = useQueryParam('adminKey', Str)\n  const [password, setPassword] = useQueryParam('password', Str)\n  const [loc, setLoc] = useQueryParam('loc', Str)\n  const [sessionTracks, setSessionTracks] = useQueryParam('sessionTracks', Str)\n  const [hubURL, setHubURL] = useQueryParam('hubURL', Str)\n  const [assembly, setAssembly] = useQueryParam('assembly', Str)\n  const [tracks, setTracks] = useQueryParam('tracks', Str)\n  const [highlight, setHighlight] = useQueryParam('highlight', Str)\n  const [nav, setNav] = useQueryParam('nav', Str)\n  const [tracklist, setTrackList] = useQueryParam('tracklist', Str)\n\n  const loader = SessionLoader.create({\n    configPath: normalize(config),\n    sessionQuery: normalize(session),\n    password: normalize(password),\n    adminKey: normalize(adminKey),\n    loc: normalize(loc),\n    assembly: normalize(assembly),\n    tracks: normalize(tracks),\n    sessionTracks: normalize(sessionTracks),\n    tracklist: JSON.parse(normalize(tracklist) || 'false'),\n    highlight: normalize(highlight),\n    nav: JSON.parse(normalize(nav) || 'true'),\n    hubURL: normalize(hubURL?.split(',')),\n    initialTimestamp,\n  })\n\n  useEffect(() => {\n    setLoc(undefined, 'replaceIn')\n    setTracks(undefined, 'replaceIn')\n    setAssembly(undefined, 'replaceIn')\n    setPassword(undefined, 'replaceIn')\n    setSessionTracks(undefined, 'replaceIn')\n    setHubURL(undefined, 'replaceIn')\n    setTrackList(undefined, 'replaceIn')\n    setNav(undefined, 'replaceIn')\n    setHighlight(undefined, 'replaceIn')\n  }, [\n    setAssembly,\n    setHighlight,\n    setLoc,\n    setNav,\n    setPassword,\n    setSessionTracks,\n    setHubURL,\n    setTrackList,\n    setTracks,\n  ])\n\n  return <Renderer loader={loader} />\n}\n\nconst Renderer = observer(function ({\n  loader: firstLoader,\n}: {\n  loader: SessionLoaderModel\n}) {\n  const [loader, setLoader] = useState(firstLoader)\n  const { configError, ready, sessionTriaged } = loader\n  const [pluginManager, setPluginManager] = useState<PluginManager>()\n  const [error, setError] = useState<unknown>()\n\n  useEffect(() => {\n    const reloadPluginManager = (\n      configSnapshot: Record<string, unknown>,\n      sessionSnapshot: Record<string, unknown>,\n    ) => {\n      const newLoader = SessionLoader.create({\n        configPath: loader.configPath,\n        sessionQuery: loader.sessionQuery,\n        password: loader.password,\n        adminKey: loader.adminKey,\n        loc: loader.loc,\n        assembly: loader.assembly,\n        tracks: loader.tracks,\n        sessionTracks: loader.sessionTracks,\n        tracklist: loader.tracklist,\n        highlight: loader.highlight,\n        nav: loader.nav,\n        hubURL: loader.hubURL,\n        initialTimestamp: Date.now(),\n        configSnapshot,\n        sessionSnapshot,\n      })\n      setLoader(newLoader)\n    }\n\n    try {\n      if (ready) {\n        setPluginManager(createPluginManager(loader, reloadPluginManager))\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }, [loader, ready])\n\n  const err = configError || error\n  if (err) {\n    return (\n      <Suspense fallback={null}>\n        <StartScreenErrorMessage error={err} />\n      </Suspense>\n    )\n  } else if (sessionTriaged) {\n    return <SessionTriaged loader={loader} sessionTriaged={sessionTriaged} />\n  } else if (pluginManager) {\n    return <JBrowse pluginManager={pluginManager} />\n  } else {\n    return <Loading />\n  }\n})\n\nfunction LoaderWrapper({ initialTimestamp }: { initialTimestamp: number }) {\n  return (\n    <ErrorBoundary\n      FallbackComponent={props => (\n        <FatalErrorDialog\n          {...props}\n          resetButtonText=\"Reset Session\"\n          onFactoryReset={factoryReset}\n        />\n      )}\n    >\n      <QueryParamProvider adapter={WindowHistoryAdapter}>\n        <Loader initialTimestamp={initialTimestamp} />\n      </QueryParamProvider>\n    </ErrorBoundary>\n  )\n}\n\nexport default LoaderWrapper\n","// vendored from quick-lru@6.1.1, didn't like being compiled as a 'pure-esm' nodejs dependency\n// the license is reproduced below https://github.com/sindresorhus/quick-lru/blob/main/license\n// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nexport default class QuickLRU extends Map {\n  constructor(options = {}) {\n    super()\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0')\n    }\n\n    // TODO: Use private class fields when ESLint supports them.\n    this.maxSize = options.maxSize\n    this.maxAge = options.maxAge || Number.POSITIVE_INFINITY\n    this.onEviction = options.onEviction\n    this.cache = new Map()\n    this.oldCache = new Map()\n    this._size = 0\n  }\n\n  // TODO: Use private class methods when targeting Node.js 16.\n  _emitEvictions(cache) {\n    if (typeof this.onEviction !== 'function') {\n      return\n    }\n\n    for (const [key, item] of cache) {\n      this.onEviction(key, item.value)\n    }\n  }\n\n  _deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.onEviction === 'function') {\n        this.onEviction(key, item.value)\n      }\n\n      return this.delete(key)\n    }\n\n    return false\n  }\n\n  _getOrDeleteIfExpired(key, item) {\n    const deleted = this._deleteIfExpired(key, item)\n    if (!deleted) {\n      return item.value\n    }\n  }\n\n  _getItemValue(key, item) {\n    return item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value\n  }\n\n  _peek(key, cache) {\n    const item = cache.get(key)\n\n    return this._getItemValue(key, item)\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value)\n    this._size++\n\n    if (this._size >= this.maxSize) {\n      this._size = 0\n      this._emitEvictions(this.oldCache)\n      this.oldCache = this.cache\n      this.cache = new Map()\n    }\n  }\n\n  _moveToRecent(key, item) {\n    this.oldCache.delete(key)\n    this._set(key, item)\n  }\n\n  *_entriesAscending() {\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (!deleted) {\n          yield item\n        }\n      }\n    }\n\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (!deleted) {\n        yield item\n      }\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      const item = this.cache.get(key)\n\n      return this._getItemValue(key, item)\n    }\n\n    if (this.oldCache.has(key)) {\n      const item = this.oldCache.get(key)\n      if (!this._deleteIfExpired(key, item)) {\n        this._moveToRecent(key, item)\n        return item.value\n      }\n    }\n  }\n\n  set(key, value, { maxAge = this.maxAge } = {}) {\n    const expiry =\n      typeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY\n        ? Date.now() + maxAge\n        : undefined\n    if (this.cache.has(key)) {\n      this.cache.set(key, {\n        value,\n        expiry,\n      })\n    } else {\n      this._set(key, { value, expiry })\n    }\n  }\n\n  has(key) {\n    if (this.cache.has(key)) {\n      return !this._deleteIfExpired(key, this.cache.get(key))\n    }\n\n    if (this.oldCache.has(key)) {\n      return !this._deleteIfExpired(key, this.oldCache.get(key))\n    }\n\n    return false\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this._peek(key, this.cache)\n    }\n\n    if (this.oldCache.has(key)) {\n      return this._peek(key, this.oldCache)\n    }\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key)\n    if (deleted) {\n      this._size--\n    }\n\n    return this.oldCache.delete(key) || deleted\n  }\n\n  clear() {\n    this.cache.clear()\n    this.oldCache.clear()\n    this._size = 0\n  }\n\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0')\n    }\n\n    const items = [...this._entriesAscending()]\n    const removeCount = items.length - newSize\n    if (removeCount < 0) {\n      this.cache = new Map(items)\n      this.oldCache = new Map()\n      this._size = items.length\n    } else {\n      if (removeCount > 0) {\n        this._emitEvictions(items.slice(0, removeCount))\n      }\n\n      this.oldCache = new Map(items.slice(removeCount))\n      this.cache = new Map()\n      this._size = 0\n    }\n\n    this.maxSize = newSize\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (!deleted) {\n        yield [key, value.value]\n      }\n    }\n\n    for (const item of this.oldCache) {\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (!deleted) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesDescending() {\n    let items = [...this.cache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      const deleted = this._deleteIfExpired(key, value)\n      if (!deleted) {\n        yield [key, value.value]\n      }\n    }\n\n    items = [...this.oldCache]\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i]\n      const [key, value] = item\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value)\n        if (!deleted) {\n          yield [key, value.value]\n        }\n      }\n    }\n  }\n\n  *entriesAscending() {\n    for (const [key, value] of this._entriesAscending()) {\n      yield [key, value.value]\n    }\n  }\n\n  get size() {\n    if (!this._size) {\n      return this.oldCache.size\n    }\n\n    let oldCacheSize = 0\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize++\n      }\n    }\n\n    return Math.min(this._size + oldCacheSize, this.maxSize)\n  }\n\n  entries() {\n    return this.entriesAscending()\n  }\n\n  forEach(callbackFunction, thisArgument = this) {\n    for (const [key, value] of this.entriesAscending()) {\n      callbackFunction.call(thisArgument, value, key, this)\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return JSON.stringify([...this.entriesAscending()])\n  }\n}\n","import { ElementId } from '@jbrowse/core/util/types/mst'\nimport { getParent, isStateTreeNode, types } from 'mobx-state-tree'\n\nimport type { BaseRootModelType } from '../RootModel/BaseRootModel'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { BaseAssemblyConfigSchema } from '@jbrowse/core/assemblyManager'\nimport type { AnyConfigurationSchemaType } from '@jbrowse/core/configuration'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel BaseSessionModel\n *\n * base session shared by all JBrowse products. Be careful what you include\n * here, everything will use it.\n */\nexport function BaseSessionModel<\n  ROOT_MODEL_TYPE extends BaseRootModelType,\n  JB_CONFIG_SCHEMA extends AnyConfigurationSchemaType,\n>(_pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      id: ElementId,\n      /**\n       * #property\n       */\n      name: types.string,\n      /**\n       * #property\n       */\n      margin: 0,\n    })\n    .volatile(() => ({\n      /**\n       * #volatile\n       * this is the globally \"selected\" object. can be anything. code that\n       * wants to deal with this should examine it to see what kind of thing it\n       * is.\n       */\n      selection: undefined as unknown,\n      /**\n       * #volatile\n       * this is the globally \"hovered\" object. can be anything. code that\n       * wants to deal with this should examine it to see what kind of thing it\n       * is.\n       */\n      hovered: undefined as unknown,\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get root() {\n        return getParent<ROOT_MODEL_TYPE>(self)\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get jbrowse() {\n        return self.root.jbrowse\n      },\n      /**\n       * #getter\n       */\n      get rpcManager() {\n        return self.root.rpcManager\n      },\n      /**\n       * #getter\n       */\n      get configuration(): Instance<JB_CONFIG_SCHEMA> {\n        return this.jbrowse.configuration\n      },\n      /**\n       * #getter\n       */\n      get adminMode() {\n        return self.root.adminMode\n      },\n\n      /**\n       * #getter\n       */\n      get textSearchManager() {\n        return self.root.textSearchManager\n      },\n    }))\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get assemblies(): Instance<BaseAssemblyConfigSchema>[] {\n        return self.jbrowse.assemblies\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       * set the global selection, i.e. the globally-selected object. can be a\n       * feature, a view, just about anything\n       */\n      setSelection(thing: unknown) {\n        self.selection = thing\n      },\n\n      /**\n       * #action\n       * clears the global selection\n       */\n      clearSelection() {\n        self.selection = undefined\n      },\n      /**\n       * #action\n       */\n      setHovered(thing: unknown) {\n        self.hovered = thing\n      },\n    }))\n}\n\n/** Session mixin MST type for the most basic session */\nexport type BaseSessionType = ReturnType<typeof BaseSessionModel>\n\n/** Instance of the most basic possible session */\nexport type BaseSession = Instance<BaseSessionType>\n\n/** Type guard for BaseSession */\nexport function isBaseSession(thing: IAnyStateTreeNode): thing is BaseSession {\n  return 'id' in thing && 'name' in thing && 'root' in thing\n}\n\n/** Type guard for whether a thing is JBrowse session */\nexport function isSession(thing: unknown): thing is BaseSession {\n  return isStateTreeNode(thing) && isBaseSession(thing)\n}\n","import { readConfObject } from '@jbrowse/core/configuration'\nimport { types } from 'mobx-state-tree'\n\nimport { isBaseSession } from './BaseSession'\n\nimport type { SessionWithReferenceManagementType } from './ReferenceManagement'\nimport type { BaseRootModelType } from '../RootModel/BaseRootModel'\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport type { BaseConnectionModel } from '@jbrowse/core/pluggableElementTypes/models/BaseConnectionModelFactory'\nimport type { BaseConnectionConfigModel } from '@jbrowse/core/pluggableElementTypes/models/baseConnectionConfig'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel ConnectionManagementSessionMixin\n */\nexport function ConnectionManagementSessionMixin(pluginManager: PluginManager) {\n  return types\n    .model({\n      /**\n       * #property\n       */\n      connectionInstances: types.array(\n        pluginManager.pluggableMstType(\n          'connection',\n          'stateModel',\n        ) as BaseConnectionModel,\n      ),\n    })\n    .views(self => ({\n      /**\n       * #getter\n       */\n      get connections(): BaseConnectionConfigModel[] {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.connections\n      },\n    }))\n    .actions(self => ({\n      /**\n       * #action\n       */\n      makeConnection(\n        configuration: AnyConfigurationModel,\n        initialSnapshot = {},\n      ) {\n        const type = configuration.type as string\n        if (!type) {\n          throw new Error('track configuration has no `type` listed')\n        }\n        const name = readConfObject(configuration, 'name')\n        const connectionType = pluginManager.getConnectionType(type)\n        if (!connectionType) {\n          throw new Error(`unknown connection type ${type}`)\n        }\n        const length = self.connectionInstances.push({\n          ...initialSnapshot,\n          name,\n          // @ts-expect-error unsure why ts doesn't like `type` here, but is\n          // needed\n          type,\n          configuration,\n        })\n        return self.connectionInstances[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      prepareToBreakConnection(configuration: AnyConfigurationModel) {\n        const root = self as typeof self &\n          Instance<SessionWithReferenceManagementType>\n        const callbacksToDeref: (() => void)[] = []\n        const derefTypeCount: Record<string, number> = {}\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (!connection) {\n          return undefined\n        }\n        for (const track of connection.tracks) {\n          const ref = root.getReferring(track)\n          root.removeReferring(ref, track, callbacksToDeref, derefTypeCount)\n        }\n        return [\n          () => {\n            for (const cb of callbacksToDeref) {\n              cb()\n            }\n            this.breakConnection(configuration)\n          },\n          derefTypeCount,\n        ]\n      },\n\n      /**\n       * #action\n       */\n      breakConnection(configuration: AnyConfigurationModel) {\n        const name = readConfObject(configuration, 'name')\n        const connection = self.connectionInstances.find(c => c.name === name)\n        if (!connection) {\n          throw new Error(`no connection found with name ${name}`)\n        }\n        self.connectionInstances.remove(connection)\n      },\n\n      /**\n       * #action\n       */\n      deleteConnection(configuration: AnyConfigurationModel) {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.deleteConnectionConf(configuration)\n      },\n\n      /**\n       * #action\n       */\n      addConnectionConf(connectionConf: AnyConfigurationModel) {\n        const { jbrowse } = self as typeof self & Instance<BaseRootModelType>\n        return jbrowse.addConnectionConf(connectionConf)\n      },\n\n      /**\n       * #action\n       */\n      clearConnections() {\n        self.connectionInstances.clear()\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that has connections */\nexport type SessionWithConnectionsType = ReturnType<\n  typeof ConnectionManagementSessionMixin\n>\n\n/** Instance of a session that has connections: `connectionInstances`,\n * `makeConnection()`, etc. */\nexport type SessionWithConnections = Instance<SessionWithConnectionsType>\n\n/** Type guard for SessionWithConnections */\nexport function isSessionWithConnections(\n  session: IAnyStateTreeNode,\n): session is SessionWithConnections {\n  return isBaseSession(session) && 'connectionInstances' in session\n}\n","import {\n  isCJSPluginDefinition,\n  isESMPluginDefinition,\n  isUMDPluginDefinition,\n} from '@jbrowse/core/PluginLoader'\nimport {\n  getChildType,\n  getPropertyMembers,\n  isArrayType,\n  isMapType,\n  isModelType,\n  isReferenceType,\n  isValidReference,\n} from 'mobx-state-tree'\n\nimport type { PluginDefinition } from '@jbrowse/core/PluginLoader'\nimport type {\n  IAnyStateTreeNode,\n  IAnyType,\n  Instance,\n  types,\n} from 'mobx-state-tree'\n\n/**\n * Pad the end of a base64 string with \"=\" to make it valid\n * @param b64 - unpadded b64 string\n */\nexport function b64PadSuffix(b64: string): string {\n  let num = 0\n  const mo = b64.length % 4\n  switch (mo) {\n    case 3:\n      num = 1\n      break\n    case 2:\n      num = 2\n      break\n    case 0:\n      num = 0\n      break\n    default:\n      throw new Error('base64 not a valid length')\n  }\n  return b64 + '='.repeat(num)\n}\n\n/**\n * Decode and inflate a url-safe base64 to a string\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param b64 - a base64 string to decode and inflate\n */\nexport async function fromUrlSafeB64(b64: string) {\n  const originalB64 = b64PadSuffix(\n    b64.replaceAll('-', '+').replaceAll('_', '/'),\n  )\n  const { toByteArray } = await import('base64-js')\n  const { inflate } = await import('pako')\n  const bytes = toByteArray(originalB64)\n  const inflated = inflate(bytes)\n  const decoder = new TextDecoder('utf8')\n  return decoder.decode(inflated)\n}\n\n/**\n * Compress and encode a string as url-safe base64\n * See {@link https://en.wikipedia.org/wiki/Base64#URL_applications}\n * @param str-  a string to compress and encode\n */\nexport async function toUrlSafeB64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  const { deflate } = await import('pako')\n  const { fromByteArray } = await import('base64-js')\n  const deflated = deflate(bytes)\n  const encoded = fromByteArray(deflated)\n  const pos = encoded.indexOf('=')\n  return pos > 0\n    ? encoded.slice(0, pos).replaceAll('+', '-').replaceAll('/', '_')\n    : encoded.replaceAll('+', '-').replaceAll('/', '_')\n}\n\ntype MSTArray = Instance<ReturnType<typeof types.array>>\ntype MSTMap = Instance<ReturnType<typeof types.map>>\n\n// attempts to remove undefined references from the given MST model. can only\n// actually remove them from arrays and maps. throws MST undefined ref error if\n// it encounters undefined refs in model properties\nexport function filterSessionInPlace(\n  node: IAnyStateTreeNode | undefined,\n  type: IAnyType,\n) {\n  // makes it work with session sharing\n  if (node === undefined) {\n    return\n  }\n  if (isArrayType(type)) {\n    const array = node as MSTArray\n    const childType = getChildType(node)\n    if (isReferenceType(childType)) {\n      // filter array elements\n      for (let i = 0; i < array.length; ) {\n        if (!isValidReference(() => array[i])) {\n          array.splice(i, 1)\n        } else {\n          i += 1\n        }\n      }\n    }\n    // eslint-disable-next-line unicorn/no-array-for-each\n    array.forEach(el => {\n      filterSessionInPlace(el, childType)\n    })\n  } else if (isMapType(type)) {\n    const map = node as MSTMap\n    const childType = getChildType(map)\n    if (isReferenceType(childType)) {\n      // filter the map members\n      for (const key in map.keys()) {\n        if (!isValidReference(() => map.get(key))) {\n          map.delete(key)\n        }\n      }\n    }\n    // eslint-disable-next-line unicorn/no-array-for-each\n    map.forEach(child => {\n      filterSessionInPlace(child, childType)\n    })\n  } else if (isModelType(type)) {\n    // iterate over children\n    const { properties } = getPropertyMembers(node)\n\n    // eslint-disable-next-line unicorn/no-array-for-each\n    Object.entries(properties).forEach(([pname, ptype]) => {\n      // @ts-ignore\n      filterSessionInPlace(node[pname], ptype)\n    })\n  }\n}\n\nexport function addRelativeUris(\n  config: Record<string, unknown> | null,\n  base: URL,\n) {\n  if (typeof config === 'object' && config !== null) {\n    for (const key of Object.keys(config)) {\n      if (typeof config[key] === 'object' && config[key] !== null) {\n        addRelativeUris(config[key] as Record<string, unknown>, base)\n      } else if (key === 'uri') {\n        config.baseUri = base.href\n      }\n    }\n  }\n}\n\nexport interface Root {\n  configuration?: Record<string, unknown>\n}\n\n// raw readConf alternative for before conf is initialized\nexport function readConf({ configuration }: Root, attr: string, def: string) {\n  return configuration?.[attr] || def\n}\n\nexport async function fetchPlugins() {\n  const response = await fetch('https://jbrowse.org/plugin-store/plugins.json')\n  if (!response.ok) {\n    throw new Error(\n      `HTTP ${response.status} ${response.statusText} fetching plugins`,\n    )\n  }\n  return response.json() as Promise<{ plugins: PluginDefinition[] }>\n}\n\nexport async function checkPlugins(pluginsToCheck: PluginDefinition[]) {\n  if (pluginsToCheck.length === 0) {\n    return true\n  }\n  const storePlugins = await fetchPlugins()\n  return pluginsToCheck.every(p => {\n    if (isUMDPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        pp =>\n          isUMDPluginDefinition(p) &&\n          (('url' in pp && 'url' in p && p.url === pp.url) ||\n            ('umdUrl' in pp && 'umdUrl' in p && p.umdUrl === pp.umdUrl)),\n      )\n    }\n    if (isESMPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        pp =>\n          // @ts-expect-error\n          isESMPluginDefinition(p) && 'esmUrl' in p && p.esmUrl === pp.esmUrl,\n      )\n    }\n    if (isCJSPluginDefinition(p)) {\n      return storePlugins.plugins.some(\n        // @ts-expect-error\n        pp => isCJSPluginDefinition(p) && p.cjsUrl === pp.cjsUrl,\n      )\n    }\n    return false\n  })\n}\n\nexport function removeAttr(obj: Record<string, unknown>, attr: string) {\n  for (const prop in obj) {\n    if (prop === attr) {\n      delete obj[prop]\n    } else if (typeof obj[prop] === 'object') {\n      removeAttr(obj[prop] as Record<string, unknown>, attr)\n    }\n  }\n  return obj\n}\n","export default async function factoryReset() {\n  // @ts-expect-error\n  window.location = window.location.pathname\n}\n","import OpenInNewIcon from '@mui/icons-material/OpenInNew'\nimport { Link } from '@mui/material'\n\nimport type { LinkProps } from '@mui/material'\n\nexport default function ExternalLink(props: LinkProps) {\n  const { children, ...rest } = props\n  return (\n    <Link {...rest} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children} <OpenInNewIcon fontSize=\"small\" />\n    </Link>\n  )\n}\n","import domLoadScript from 'load-script'\n\nimport Plugin from './Plugin'\nimport ReExports from './ReExports'\nimport { isElectron } from './util'\n\nimport type { PluginConstructor } from './Plugin'\n\nexport interface UMDLocPluginDefinition {\n  umdLoc: {\n    uri: string\n    baseUri?: string\n  }\n  name: string\n}\n\nexport interface UMDUrlPluginDefinition {\n  umdUrl: string\n  name: string\n}\n\nexport interface LegacyUMDPluginDefinition {\n  url: string\n  name: string\n}\n\ntype UMDPluginDefinition = UMDLocPluginDefinition | UMDUrlPluginDefinition\n\nexport function isUMDPluginDefinition(\n  def: PluginDefinition,\n): def is UMDPluginDefinition | LegacyUMDPluginDefinition {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ((def as UMDUrlPluginDefinition).umdUrl !== undefined ||\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      (def as LegacyUMDPluginDefinition).url !== undefined ||\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      (def as UMDLocPluginDefinition).umdLoc !== undefined) &&\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    (def as LegacyUMDPluginDefinition | UMDPluginDefinition).name !== undefined\n  )\n}\n\nexport interface ESMLocPluginDefinition {\n  esmLoc: {\n    uri: string\n    baseUri?: string\n  }\n}\nexport interface ESMUrlPluginDefinition {\n  esmUrl: string\n}\n\nexport type ESMPluginDefinition =\n  | ESMLocPluginDefinition\n  | ESMUrlPluginDefinition\n\nexport function isESMPluginDefinition(\n  def: PluginDefinition,\n): def is ESMPluginDefinition {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    (def as ESMUrlPluginDefinition).esmUrl !== undefined ||\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    (def as ESMLocPluginDefinition).esmLoc !== undefined\n  )\n}\n\nexport interface CJSPluginDefinition {\n  cjsUrl: string\n}\n\nfunction promisifiedLoadScript(src: string) {\n  return new Promise((resolve, reject) => {\n    domLoadScript(src, (err, script) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(script.src)\n      }\n    })\n  })\n}\n\nasync function loadScript(scriptUrl: string) {\n  if (!isInWebWorker()) {\n    return promisifiedLoadScript(scriptUrl)\n  }\n\n  // @ts-expect-error\n  if (globalThis.importScripts) {\n    // @ts-expect-error\n    await globalThis.importScripts(scriptUrl)\n    return\n  }\n  throw new Error(\n    'cannot figure out how to load external JS scripts in this environment',\n  )\n}\n\nexport function isCJSPluginDefinition(\n  def: PluginDefinition,\n): def is CJSPluginDefinition {\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  return (def as CJSPluginDefinition).cjsUrl !== undefined\n}\n\nexport type PluginDefinition =\n  | UMDUrlPluginDefinition\n  | UMDLocPluginDefinition\n  | LegacyUMDPluginDefinition\n  | ESMLocPluginDefinition\n  | ESMUrlPluginDefinition\n  | CJSPluginDefinition\n\nexport interface PluginRecord {\n  plugin: PluginConstructor\n  definition: PluginDefinition\n}\n\nexport interface LoadedPlugin {\n  default: PluginConstructor\n}\n\nexport function pluginDescriptionString(d: PluginDefinition) {\n  if (isUMDPluginDefinition(d)) {\n    return `UMD plugin ${d.name}`\n  } else if (isESMPluginDefinition(d)) {\n    return `ESM plugin ${\n      (d as ESMUrlPluginDefinition).esmUrl ||\n      (d as ESMLocPluginDefinition).esmLoc.uri\n    }`\n  } else if (isCJSPluginDefinition(d)) {\n    return `CJS plugin ${d.cjsUrl}`\n  } else {\n    return 'unknown plugin'\n  }\n}\nexport function pluginUrl(d: PluginDefinition) {\n  if (isUMDPluginDefinition(d)) {\n    // @ts-expect-error\n    return d.url ?? d.umdLoc?.uri ?? d.umdUrl\n  } else if (isESMPluginDefinition(d)) {\n    // @ts-expect-error\n    return d.esmUrl ?? d.esmUri ?? d.esmLoc?.uri\n  } else if (isCJSPluginDefinition(d)) {\n    // @ts-expect-error\n    return d.cjsUrl || d.cjsLoc.uri\n  } else {\n    return 'unknown url'\n  }\n}\n\nfunction isInWebWorker() {\n  return Boolean('WorkerGlobalScope' in globalThis)\n}\n\nexport default class PluginLoader {\n  definitions: PluginDefinition[] = []\n\n  fetchESM?: (url: string) => Promise<LoadedPlugin>\n  fetchCJS?: (url: string) => Promise<LoadedPlugin>\n\n  constructor(\n    defs: PluginDefinition[] = [],\n    args?: {\n      fetchESM?: (url: string) => Promise<LoadedPlugin>\n      fetchCJS?: (url: string) => Promise<LoadedPlugin>\n    },\n  ) {\n    this.fetchESM = args?.fetchESM\n    this.fetchCJS = args?.fetchCJS\n    this.definitions = JSON.parse(JSON.stringify(defs))\n  }\n\n  async loadCJSPlugin(def: CJSPluginDefinition, baseUri?: string) {\n    const parsedUrl = new URL(def.cjsUrl, baseUri)\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `Cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    if (!this.fetchCJS) {\n      throw new Error('No fetchCJS callback provided')\n    }\n\n    return this.fetchCJS(parsedUrl.href)\n  }\n\n  async loadESMPlugin(def: ESMPluginDefinition, baseUri?: string) {\n    const parsedUrl =\n      'esmUrl' in def\n        ? new URL(def.esmUrl, baseUri)\n        : new URL(def.esmLoc.uri, def.esmLoc.baseUri)\n\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n\n    if (!this.fetchESM) {\n      throw new Error('No ESM fetcher installed')\n    }\n    const plugin = await this.fetchESM(parsedUrl.href)\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!plugin) {\n      throw new Error(`Could not load ESM plugin: ${parsedUrl}`)\n    }\n    return plugin\n  }\n\n  async loadUMDPlugin(\n    def: UMDPluginDefinition | LegacyUMDPluginDefinition,\n    baseUri?: string,\n  ) {\n    const parsedUrl =\n      'url' in def\n        ? new URL(def.url, baseUri)\n        : 'umdUrl' in def\n          ? new URL(def.umdUrl, baseUri)\n          : new URL(def.umdLoc.uri, def.umdLoc.baseUri)\n\n    if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {\n      throw new Error(\n        `cannot load plugins using protocol \"${parsedUrl.protocol}\"`,\n      )\n    }\n    const moduleName = def.name\n    const umdName = `JBrowsePlugin${moduleName}`\n    if (typeof jest === 'undefined') {\n      await loadScript(parsedUrl.href)\n    } else {\n      // @ts-expect-error\n      globalThis[umdName] = { default: Plugin }\n    }\n\n    // @ts-expect-error\n    const plugin = globalThis[umdName] as\n      | { default: PluginConstructor }\n      | undefined\n    if (!plugin) {\n      throw new Error(\n        `Failed to load UMD bundle for ${moduleName}, ${umdName} is undefined`,\n      )\n    }\n    return plugin\n  }\n\n  async loadPlugin(def: PluginDefinition, baseUri?: string) {\n    let plugin: LoadedPlugin\n    if (isElectron && isCJSPluginDefinition(def)) {\n      plugin = await this.loadCJSPlugin(def, baseUri)\n    } else if (isESMPluginDefinition(def)) {\n      plugin = await this.loadESMPlugin(def, baseUri)\n    } else if (isUMDPluginDefinition(def)) {\n      plugin = await this.loadUMDPlugin(def, baseUri)\n    } else if (!isElectron && isCJSPluginDefinition(def)) {\n      throw new Error(\n        `CommonJS plugin found, but not in a NodeJS environment: ${JSON.stringify(\n          def,\n        )}`,\n      )\n    } else {\n      throw new Error(`Could not determine plugin type: ${JSON.stringify(def)}`)\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (!plugin.default) {\n      throw new Error(\n        `${pluginDescriptionString(\n          def,\n        )} does not have a default export, cannot load`,\n      )\n    }\n    return plugin.default\n  }\n\n  installGlobalReExports(target: WindowOrWorkerGlobalScope) {\n    // @ts-expect-error\n    target.JBrowseExports = Object.fromEntries(\n      Object.entries(ReExports).map(([moduleName, module]) => {\n        return [moduleName, module]\n      }),\n    )\n    return this\n  }\n\n  async load(baseUri?: string) {\n    return Promise.all(\n      this.definitions.map(async definition => ({\n        plugin: await this.loadPlugin(definition, baseUri),\n        definition,\n      })),\n    )\n  }\n}\n","import { useEffect, useRef, useState } from 'react'\n\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  horizontalHandle: {\n    cursor: 'row-resize',\n    width: '100%',\n  },\n  verticalHandle: {\n    cursor: 'col-resize',\n    height: '100%',\n  },\n  flexbox_verticalHandle: {\n    cursor: 'col-resize',\n    alignSelf: 'stretch', // the height: 100% is actually unable to function inside flexbox\n  },\n  flexbox_horizontalHandle: {\n    cursor: 'row-resize',\n    alignSelf: 'stretch', // similar to above\n  },\n})\n\nfunction ResizeHandle({\n  onDrag,\n  vertical = false,\n  flexbox = false,\n  className: originalClassName,\n  onMouseDown,\n  ...props\n}: {\n  onDrag: (\n    lastFrameDistance: number,\n    totalDistance: number,\n  ) => number | undefined\n  onMouseDown?: (event: React.MouseEvent) => void\n  vertical?: boolean\n  flexbox?: boolean\n  className?: string\n  [props: string]: unknown\n}) {\n  const [mouseDragging, setMouseDragging] = useState(false)\n  const initialPosition = useRef(0)\n  const prevPos = useRef(0)\n  const { classes, cx } = useStyles()\n\n  useEffect(() => {\n    function mouseMove(event: MouseEvent) {\n      event.preventDefault()\n      const pos = vertical ? event.clientX : event.clientY\n      const totalDistance = initialPosition.current - pos\n      const lastFrameDistance = pos - prevPos.current\n      prevPos.current = pos\n      onDrag(lastFrameDistance, totalDistance)\n    }\n\n    function mouseUp() {\n      setMouseDragging(false)\n    }\n    if (mouseDragging) {\n      window.addEventListener('mousemove', mouseMove, true)\n      window.addEventListener('mouseup', mouseUp, true)\n      return () => {\n        window.removeEventListener('mousemove', mouseMove, true)\n        window.removeEventListener('mouseup', mouseUp, true)\n      }\n    }\n    return () => {}\n  }, [mouseDragging, onDrag, vertical])\n\n  let className: string\n  if (flexbox) {\n    className = vertical\n      ? classes.flexbox_verticalHandle\n      : classes.flexbox_horizontalHandle\n  } else if (vertical) {\n    className = classes.verticalHandle\n  } else {\n    className = classes.horizontalHandle\n  }\n\n  return (\n    <div\n      data-resizer=\"true\"\n      onMouseDown={event => {\n        event.preventDefault()\n        const pos = vertical ? event.clientX : event.clientY\n        initialPosition.current = pos\n        prevPos.current = pos\n        setMouseDragging(true)\n        onMouseDown?.(event)\n      }}\n      className={cx(className, originalClassName)}\n      {...props}\n    />\n  )\n}\n\nexport default ResizeHandle\n","import { useEffect, useState } from 'react'\n\nimport { MenuItem, TextField } from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport { useLocalStorage } from '../util'\n\nimport type { AbstractSessionModel } from '../util'\nimport type { InputProps as IIP, TextFieldProps as TFP } from '@mui/material'\n\nconst useStyles = makeStyles()({\n  importFormEntry: {\n    minWidth: 180,\n  },\n})\n\nconst AssemblySelector = observer(function ({\n  session,\n  onChange,\n  label = 'Assembly',\n  selected,\n  InputProps,\n  TextFieldProps,\n  localStorageKey,\n  helperText = 'Select assembly to view',\n}: {\n  session: AbstractSessionModel\n  label?: string\n  helperText?: string\n  onChange: (arg: string) => void\n  selected?: string\n  localStorageKey?: string\n  InputProps?: IIP\n  TextFieldProps?: TFP\n}) {\n  const { classes } = useStyles()\n  const { assemblyNames, assemblyManager } = session\n\n  // constructs a localstorage key based on host/path/config to help\n  // remember. non-config assists usage with e.g. embedded apps\n  const config = new URLSearchParams(window.location.search).get('config')\n  const [lastSelected, setLastSelected] =\n    typeof jest === 'undefined' && localStorageKey\n      ? useLocalStorage(\n          `lastAssembly-${[\n            window.location.host + window.location.pathname,\n            config,\n            localStorageKey,\n          ].join('-')}`,\n          selected,\n        )\n      : useState(selected)\n\n  const selection = assemblyNames.includes(lastSelected || '')\n    ? lastSelected\n    : selected\n\n  useEffect(() => {\n    if (selection && selection !== selected) {\n      onChange(selection)\n    }\n  }, [selection, onChange, selected])\n\n  const error = assemblyNames.length ? '' : 'No configured assemblies'\n  return (\n    <TextField\n      select\n      data-testid=\"assembly-selector-textfield\"\n      label={label}\n      variant=\"outlined\"\n      helperText={error || helperText}\n      value={selection || ''}\n      onChange={event => {\n        setLastSelected(event.target.value)\n      }}\n      error={!!error}\n      disabled={!!error}\n      className={classes.importFormEntry}\n      {...TextFieldProps}\n      slotProps={{\n        input: InputProps,\n        htmlInput: {\n          'data-testid': 'assembly-selector',\n        },\n      }}\n    >\n      {assemblyNames.map(name => (\n        <MenuItem key={name} value={name}>\n          {assemblyManager.get(name)?.displayName || name}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n})\n\nexport default AssemblySelector\n","import { useCallback, useEffect, useState } from 'react'\n\n// others\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport {\n  Box,\n  FormGroup,\n  FormHelperText,\n  InputLabel,\n  Menu,\n  MenuItem,\n  ToggleButton,\n  ToggleButtonGroup,\n  Tooltip,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\n\nimport LocalFileChooser from './LocalFileChooser'\nimport UrlChooser from './UrlChooser'\nimport { notEmpty, useLocalStorage } from '../../util'\nimport { isAppRootModel, isUriLocation } from '../../util/types'\n\n// local types\nimport type { BaseInternetAccountModel } from '../../pluggableElementTypes'\nimport type { AbstractRootModel, FileLocation } from '../../util/types'\nimport type { ToggleButtonProps } from '@mui/material'\n\nconst NUM_SHOWN = 2\n\nfunction ToggleButtonWithTooltip(props: ToggleButtonProps) {\n  const { title, children, ...other } = props\n  return (\n    <Tooltip title={title || ''}>\n      <ToggleButton {...other}>{children}</ToggleButton>\n    </Tooltip>\n  )\n}\n\nfunction shorten(str: string, len: number) {\n  if (typeof str === 'string' && str.length > len) {\n    return `${str.slice(0, Math.max(0, len))}…`\n  }\n  return str\n}\n\nfunction Inline({ children }: { children: React.ReactNode }) {\n  return <div style={{ display: 'flex', gap: 4 }}>{children}</div>\n}\n\nfunction Box2({ children }: { children: React.ReactNode }) {\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Box>{children}</Box>\n    </Box>\n  )\n}\n\nfunction Input(props: {\n  toggleButtonValue: string\n  selectedAccount?: BaseInternetAccountModel\n  inline?: boolean\n  setLocation: (arg: FileLocation) => void\n}) {\n  const { setLocation, inline, toggleButtonValue, selectedAccount } = props\n  return (\n    <>\n      {selectedAccount?.SelectorComponent ? (\n        <selectedAccount.SelectorComponent\n          {...props}\n          setLocation={setLocation}\n        />\n      ) : toggleButtonValue === 'url' ? (\n        <UrlChooser\n          {...props}\n          setLocation={setLocation}\n          label={selectedAccount?.selectorLabel}\n          style={inline ? { margin: 0 } : undefined}\n        />\n      ) : toggleButtonValue === 'file' ? (\n        <LocalFileChooser {...props} />\n      ) : null}\n    </>\n  )\n}\n\nconst FileSelector = observer(function (props: {\n  location?: FileLocation\n  name?: string\n  description?: string\n  inline?: boolean\n  rootModel?: AbstractRootModel\n  setLocation: (param: FileLocation) => void\n  setName?: (str: string) => void\n}) {\n  const { inline, location, name, description, rootModel, setLocation } = props\n  const fileOrUrl = !location || isUriLocation(location) ? 'url' : 'file'\n  const [toggleButtonValue, setToggleButtonValue] = useState(\n    location && 'internetAccountId' in location && location.internetAccountId\n      ? location.internetAccountId\n      : fileOrUrl,\n  )\n  const accounts = isAppRootModel(rootModel)\n    ? rootModel.internetAccounts.filter(\n        f => f.type !== 'HTTPBasicInternetAccount',\n      )\n    : []\n\n  const [recentlyUsedInternetAccounts, setRecentlyUsedInternetAccounts] =\n    useLocalStorage('fileSelector-recentlyUsedInternetAccounts', [] as string[])\n\n  const map = Object.fromEntries(accounts.map(a => [a.internetAccountId, a]))\n  const arr = [...new Set(accounts.map(s => s.internetAccountId))].sort(\n    (a, b) =>\n      recentlyUsedInternetAccounts.indexOf(a) -\n      recentlyUsedInternetAccounts.indexOf(b),\n  )\n  const shownAccounts = arr.slice(0, NUM_SHOWN)\n  const hiddenAccounts = arr.slice(NUM_SHOWN)\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  const selectedAccount = map[toggleButtonValue]\n\n  const setLocationWithAccount = useCallback(\n    (location: FileLocation) => {\n      setLocation({\n        ...location,\n        ...(selectedAccount && isUriLocation(location)\n          ? { internetAccountId: selectedAccount.internetAccountId }\n          : {}),\n      })\n    },\n    [setLocation, selectedAccount],\n  )\n\n  useEffect(() => {\n    // if you swap account selection after inputting url\n    if (\n      selectedAccount &&\n      isUriLocation(location) &&\n      location.internetAccountId !== selectedAccount.internetAccountId\n    ) {\n      setLocationWithAccount(location)\n    }\n  }, [location, selectedAccount, setLocationWithAccount])\n\n  const Wrapper = inline ? Inline : Box2\n\n  return (\n    <>\n      <Box display=\"flex\">\n        <InputLabel shrink>{name}</InputLabel>\n      </Box>\n      <FormGroup>\n        <Wrapper>\n          <ToggleButtonGroup\n            value={toggleButtonValue}\n            exclusive\n            size=\"small\"\n            onChange={(_event, newState) => {\n              setRecentlyUsedInternetAccounts([\n                ...new Set(\n                  [newState, ...recentlyUsedInternetAccounts].filter(notEmpty),\n                ),\n              ])\n              if (newState) {\n                setToggleButtonValue(newState)\n              }\n              if (isUriLocation(location)) {\n                setLocationWithAccount(location)\n              }\n            }}\n            aria-label=\"file, url, or account picker\"\n          >\n            {new URLSearchParams(window.location.search).get(\n              'adminKey',\n            ) ? null : (\n              <ToggleButton size=\"small\" value=\"file\" aria-label=\"local file\">\n                File\n              </ToggleButton>\n            )}\n            <ToggleButton size=\"small\" value=\"url\" aria-label=\"url\">\n              URL\n            </ToggleButton>\n            {shownAccounts.map(id => {\n              const { internetAccountId, name, toggleContents } = map[id]!\n              return (\n                <ToggleButtonWithTooltip\n                  key={id}\n                  value={internetAccountId}\n                  title={name}\n                >\n                  {typeof toggleContents === 'string'\n                    ? shorten(toggleContents, 5)\n                    : toggleContents || shorten(name, 5)}\n                </ToggleButtonWithTooltip>\n              )\n            })}\n            {hiddenAccounts.length > 0 ? (\n              // @ts-expect-error\n              <ToggleButton\n                onClick={event => {\n                  setAnchorEl(event.target as HTMLElement)\n                }}\n                selected={false}\n              >\n                More\n                <ArrowDropDownIcon />\n              </ToggleButton>\n            ) : null}\n          </ToggleButtonGroup>\n          {inline ? (\n            <Input\n              {...props}\n              toggleButtonValue={toggleButtonValue}\n              selectedAccount={selectedAccount}\n              setLocation={setLocationWithAccount}\n            />\n          ) : null}\n        </Wrapper>\n        {!inline ? (\n          <Input\n            {...props}\n            toggleButtonValue={toggleButtonValue}\n            selectedAccount={selectedAccount}\n            setLocation={setLocationWithAccount}\n          />\n        ) : null}\n      </FormGroup>\n      <FormHelperText>{description}</FormHelperText>\n      {anchorEl ? (\n        <Menu\n          open\n          anchorEl={anchorEl}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          transformOrigin={{ vertical: 'top', horizontal: 'center' }}\n          onClose={() => {\n            setAnchorEl(null)\n          }}\n        >\n          {hiddenAccounts.map(id => {\n            const { internetAccountId, name } = map[id]!\n            return (\n              <MenuItem\n                key={id}\n                value={internetAccountId}\n                onClick={() => {\n                  setRecentlyUsedInternetAccounts([\n                    ...new Set(\n                      [\n                        internetAccountId,\n                        ...recentlyUsedInternetAccounts,\n                      ].filter(notEmpty),\n                    ),\n                  ])\n\n                  setToggleButtonValue(internetAccountId)\n                  setAnchorEl(null)\n                }}\n              >\n                {name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      ) : null}\n    </>\n  )\n})\n\nexport default FileSelector\n","import { useEffect, useRef, useState } from 'react'\n\nimport { drawImageOntoCanvasContext } from '../util/offscreenCanvasPonyfill'\n\nfunction PrerenderedCanvas(props: {\n  width: number\n  height: number\n  highResolutionScaling?: number\n  style?: any\n  imageData?: any\n  showSoftClip?: boolean\n  blockKey?: string\n}) {\n  const {\n    width,\n    height,\n    highResolutionScaling = 1,\n    style = {},\n    imageData,\n    blockKey,\n    showSoftClip,\n  } = props\n  const [done, setDone] = useState(false)\n\n  const featureCanvas = useRef<HTMLCanvasElement>(null)\n\n  useEffect(() => {\n    if (!imageData) {\n      return\n    }\n    const canvas = featureCanvas.current\n    if (!canvas) {\n      return\n    }\n    const context = canvas.getContext('2d')\n    if (!context) {\n      return\n    }\n    drawImageOntoCanvasContext(imageData, context)\n    setDone(true)\n  }, [imageData])\n\n  return (\n    <canvas\n      data-testid={[\n        'prerendered_canvas',\n        showSoftClip ? 'softclipped' : '',\n        blockKey,\n        done ? 'done' : '',\n      ]\n        .filter(f => !!f)\n        .join('_')}\n      ref={featureCanvas}\n      width={width * highResolutionScaling}\n      height={height * highResolutionScaling}\n      style={{ width, height, ...style }}\n    />\n  )\n}\n\nexport default PrerenderedCanvas\n","export * from './theme'\nexport { LogoFull, Logomark } from './Logo'\nexport { default as AssemblySelector } from './AssemblySelector'\nexport { default as CascadingMenu } from './CascadingMenu'\nexport { default as CascadingMenuButton } from './CascadingMenuButton'\nexport { default as Dialog } from './Dialog'\nexport { default as EditableTypography } from './EditableTypography'\nexport { default as ErrorMessage } from './ErrorMessage'\nexport { default as FatalErrorDialog } from './FatalErrorDialog'\nexport { default as FileSelector } from './FileSelector'\nexport { default as LoadingEllipses } from './LoadingEllipses'\nexport { default as Menu } from './Menu'\nexport { default as PrerenderedCanvas } from './PrerenderedCanvas'\nexport { default as ResizeHandle } from './ResizeHandle'\nexport { default as ExternalLink } from './ExternalLink'\nexport { default as SanitizedHTML } from './SanitizedHTML'\nexport { default as BaseTooltip } from './BaseTooltip'\nexport * from './Menu'\nexport const VIEW_HEADER_HEIGHT = 28\n","import { createTheme } from '@mui/material'\nimport { blue, green, grey, orange, red } from '@mui/material/colors'\nimport deepmerge from 'deepmerge'\n\nimport type { ThemeOptions } from '@mui/material'\nimport type {\n  PaletteAugmentColorOptions,\n  PaletteColor,\n  PaletteColorOptions,\n} from '@mui/material/styles/createPalette'\n\ntype MaybePaletteColor = PaletteColor | undefined\ntype Frames = [\n  null,\n  MaybePaletteColor,\n  MaybePaletteColor,\n  MaybePaletteColor,\n  MaybePaletteColor,\n  MaybePaletteColor,\n  MaybePaletteColor,\n]\ndeclare module '@mui/material/styles/createPalette' {\n  interface Palette {\n    tertiary: PaletteColor\n    quaternary: PaletteColor\n    highlight: PaletteColor\n    stopCodon: string\n    startCodon: string\n    insertion: string\n    softclip: string\n    skip: string\n    hardclip: string\n    deletion: string\n    bases: {\n      A: PaletteColor\n      C: PaletteColor\n      G: PaletteColor\n      T: PaletteColor\n    }\n    frames: Frames\n    framesCDS: Frames\n  }\n  interface PaletteOptions {\n    tertiary?: PaletteColorOptions\n    quaternary?: PaletteColorOptions\n    highlight?: PaletteColorOptions\n    stopCodon?: string\n    startCodon?: string\n    hardclip?: string\n    softclip?: string\n    insertion?: string\n    skip?: string\n    deletion?: string\n    bases?: {\n      A?: PaletteColorOptions\n      C?: PaletteColorOptions\n      G?: PaletteColorOptions\n      T?: PaletteColorOptions\n    }\n    framesCDS?: Frames\n    frames?: Frames\n  }\n}\n\nconst refTheme = createTheme()\nconst midnight = refTheme.palette.augmentColor({ color: { main: '#0D233F' } })\nconst grape = refTheme.palette.augmentColor({ color: { main: '#721E63' } })\nconst forest = refTheme.palette.augmentColor({ color: { main: '#135560' } })\nconst mandarin = refTheme.palette.augmentColor({ color: { main: '#FFB11D' } })\nconst lightgrey = refTheme.palette.augmentColor({ color: { main: '#aaa' } })\nconst bases = {\n  A: refTheme.palette.augmentColor({ color: green }),\n  C: refTheme.palette.augmentColor({ color: blue }),\n  G: refTheme.palette.augmentColor({ color: orange }),\n  T: refTheme.palette.augmentColor({ color: red }),\n}\nconst framesCDS = [\n  null,\n  refTheme.palette.augmentColor({ color: { main: '#FF8080' } }),\n  refTheme.palette.augmentColor({ color: { main: '#80FF80' } }),\n  refTheme.palette.augmentColor({ color: { main: '#8080FF' } }),\n  refTheme.palette.augmentColor({ color: { main: '#8080FF' } }),\n  refTheme.palette.augmentColor({ color: { main: '#80FF80' } }),\n  refTheme.palette.augmentColor({ color: { main: '#FF8080' } }),\n] as Frames\nconst frames = [\n  null,\n  refTheme.palette.augmentColor({ color: { main: '#8f8f8f' } }),\n  refTheme.palette.augmentColor({ color: { main: '#adadad' } }),\n  refTheme.palette.augmentColor({ color: { main: '#d8d8d8' } }),\n  refTheme.palette.augmentColor({ color: { main: '#d8d8d8' } }),\n  refTheme.palette.augmentColor({ color: { main: '#adadad' } }),\n  refTheme.palette.augmentColor({ color: { main: '#8f8f8f' } }),\n] as Frames\nconst stopCodon = '#e22'\nconst startCodon = '#3e3'\nconst insertion = '#800080'\nconst deletion = '#808080'\nconst hardclip = '#f00'\nconst softclip = '#00f'\nconst skip = '#97b8c9'\n\nconst defaults = {\n  primary: midnight,\n  secondary: grape,\n  tertiary: forest,\n  quaternary: mandarin,\n  highlight: mandarin,\n  stopCodon,\n  startCodon,\n  insertion,\n  deletion,\n  softclip,\n  hardclip,\n  bases,\n  frames,\n  framesCDS,\n  skip,\n}\n\nfunction stockTheme() {\n  return {\n    palette: {\n      ...defaults,\n      mode: undefined,\n    },\n    components: {\n      MuiLink: {\n        styleOverrides: {\n          // the default link color uses theme.palette.primary.main which is\n          // very bad with dark mode+midnight primary\n          root: ({ theme }) => ({\n            color: theme.palette.tertiary.main,\n          }),\n        },\n      },\n    },\n  } satisfies ThemeOptions\n}\n\nfunction getDefaultTheme() {\n  return {\n    ...stockTheme(),\n    name: 'Default (from config)',\n  }\n}\n\nfunction getLightStockTheme() {\n  return {\n    ...stockTheme(),\n    name: 'Light (stock)',\n  }\n}\n\nfunction getDarkStockTheme() {\n  return {\n    name: 'Dark (stock)',\n    palette: {\n      ...defaults,\n      mode: 'dark',\n    },\n    components: {\n      MuiAppBar: {\n        defaultProps: {\n          enableColorOnDark: true,\n        },\n        styleOverrides: {\n          root: ({ theme }) => theme.palette.primary.main,\n        },\n      },\n    },\n  } satisfies ThemeOptions & { name: string }\n}\n\nfunction getDarkMinimalTheme() {\n  return {\n    name: 'Dark (minimal)',\n    palette: {\n      ...defaults,\n      mode: 'dark' as const,\n      primary: { main: grey[700] },\n      secondary: { main: grey[800] },\n      tertiary: refTheme.palette.augmentColor({ color: { main: grey[900] } }),\n    },\n  } satisfies ThemeOptions & { name: string }\n}\n\nfunction getMinimalTheme() {\n  return {\n    name: 'Light (minimal)',\n    palette: {\n      ...defaults,\n      primary: { main: grey[900] },\n      secondary: { main: grey[800] },\n      tertiary: refTheme.palette.augmentColor({ color: { main: grey[900] } }),\n    },\n  } satisfies ThemeOptions & { name: string }\n}\n\nexport const defaultThemes = {\n  default: getDefaultTheme(),\n  lightStock: getLightStockTheme(),\n  lightMinimal: getMinimalTheme(),\n  darkMinimal: getDarkMinimalTheme(),\n  darkStock: getDarkStockTheme(),\n} as ThemeMap\n\nfunction overwriteArrayMerge(_: unknown, sourceArray: unknown[]) {\n  return sourceArray\n}\n\nexport function createJBrowseBaseTheme(theme?: ThemeOptions): ThemeOptions {\n  const themeP: ThemeOptions = {\n    palette: theme?.palette,\n    typography: {\n      fontSize: 12,\n    },\n    spacing: 4,\n    components: {\n      MuiTooltip: {\n        styleOverrides: {\n          tooltip: {\n            fontSize: 12,\n          },\n        },\n      },\n      MuiButton: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n        styleOverrides: {\n          // the default button, especially when not using variant=contained,\n          // uses theme.palette.primary.main for text which is very bad with\n          // dark mode+midnight primary\n          //\n          // keeps text secondary for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          root: ({ theme }) =>\n            theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.primary,\n                }\n              : undefined,\n        },\n      },\n      MuiAccordion: {\n        defaultProps: {\n          disableGutters: true,\n          slotProps: {\n            transition: {\n              timeout: 150,\n              unmountOnExit: true,\n            },\n          },\n        },\n      },\n      MuiFilledInput: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiFormControl: {\n        defaultProps: {\n          margin: 'dense' as const,\n          size: 'small' as const,\n        },\n      },\n      MuiFormHelperText: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n\n      MuiIconButton: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiInputBase: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiAutocomplete: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiInputLabel: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiToolbar: {\n        defaultProps: {\n          variant: 'dense' as const,\n        },\n      },\n      MuiListItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n      MuiOutlinedInput: {\n        defaultProps: {\n          margin: 'dense' as const,\n        },\n      },\n      MuiFab: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n        styleOverrides: {\n          secondary: {\n            // @ts-expect-error\n            backgroundColor: theme?.palette?.quaternary?.main,\n          },\n        },\n      },\n      MuiTable: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n      MuiPopover: {\n        defaultProps: {\n          transitionDuration: 0,\n        },\n      },\n      MuiMenu: {\n        defaultProps: {\n          transitionDuration: 0,\n        },\n      },\n      MuiMenuItem: {\n        defaultProps: {\n          dense: true,\n        },\n      },\n\n      MuiTextField: {\n        defaultProps: {\n          margin: 'dense' as const,\n          variant: 'standard' as const,\n        },\n      },\n      MuiLink: {\n        styleOverrides: {\n          // the default link color uses theme.palette.primary.main which is\n          // very bad with dark mode+midnight primary\n          root: ({ theme }) => ({\n            color: theme.palette.text.secondary,\n          }),\n        },\n      },\n      MuiCheckbox: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast xref\n          // https://stackoverflow.com/a/72546130/2129219\n          root: ({ theme }) =>\n            theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-checked': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined,\n        },\n      },\n      MuiRadio: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          root: ({ theme }) =>\n            theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-checked': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined,\n        },\n      },\n      MuiFormLabel: {\n        styleOverrides: {\n          // the default checkbox-when-checked color uses\n          // theme.palette.primary.main which is very bad with dark\n          // mode+midnight primary\n          //\n          // keeps the forest-green checkbox by default but for darkmode, uses\n          // a text-like coloring to ensure contrast\n          // xref https://stackoverflow.com/a/72546130/2129219\n          //\n\n          root: ({ theme }) =>\n            theme.palette.mode === 'dark'\n              ? {\n                  color: theme.palette.text.secondary,\n                  '&.Mui-focused': {\n                    color: theme.palette.text.secondary,\n                  },\n                }\n              : undefined,\n        },\n      },\n      MuiAccordionSummary: {\n        styleOverrides: {\n          root: {\n            // @ts-expect-error\n            backgroundColor: theme?.palette?.tertiary?.main,\n          },\n          content: {\n            // @ts-expect-error\n            color: theme?.palette?.tertiary?.contrastText,\n          },\n        },\n      },\n      MuiToggleButtonGroup: {\n        defaultProps: {\n          size: 'small' as const,\n        },\n      },\n    },\n  }\n  return deepmerge(themeP, theme || {}, { arrayMerge: overwriteArrayMerge })\n}\n\ntype ThemeMap = Record<string, ThemeOptions>\n\nexport function createJBrowseTheme(\n  configTheme: ThemeOptions = {},\n  themes = defaultThemes,\n  themeName = 'default',\n) {\n  return createTheme(\n    createJBrowseBaseTheme(\n      themeName === 'default'\n        ? deepmerge(themes.default!, augmentThemeColors(configTheme), {\n            arrayMerge: overwriteArrayMerge,\n          })\n        : addMissingColors(themes[themeName]),\n    ),\n  )\n}\n\n// MUI by default allows strings like '#f00' for primary and secondary and\n// augments them to have light and dark variants but not for anything else, so\n// we augment them here\nfunction augmentThemeColors(theme: ThemeOptions = {}) {\n  for (const entry of [\n    'primary',\n    'secondary',\n    'tertiary',\n    'quaternary',\n    'highlight',\n  ] as const) {\n    if (theme.palette?.[entry]) {\n      theme = deepmerge(theme, {\n        palette: {\n          [entry]: refTheme.palette.augmentColor(\n            'color' in theme.palette[entry]\n              ? (theme.palette[entry] as PaletteAugmentColorOptions)\n              : {\n                  color: theme.palette[entry],\n                },\n          ),\n        },\n      })\n    }\n  }\n  return theme\n}\n\n// adds missing colors to users theme\nfunction addMissingColors(theme: ThemeOptions = {}) {\n  const { palette } = theme\n  return augmentThemeColors(\n    deepmerge(theme, {\n      palette: {\n        quaternary: palette?.quaternary || lightgrey,\n        tertiary: palette?.tertiary || lightgrey,\n        highlight: palette?.highlight || mandarin,\n        insertion: palette?.insertion || insertion,\n        softclip: palette?.softclip || softclip,\n        skip: palette?.skip || skip,\n        hardclip: palette?.hardclip || hardclip,\n        deletion: palette?.deletion || deletion,\n        startCodon: palette?.startCodon || startCodon,\n        stopCodon: palette?.stopCodon || stopCodon,\n      },\n    }),\n  )\n}\n","import {\n  localStorageGetBoolean,\n  localStorageSetBoolean,\n} from '@jbrowse/core/util'\nimport { autorun } from 'mobx'\nimport { addDisposer, cast, types } from 'mobx-state-tree'\n\nimport { BaseSessionModel, isBaseSession } from './BaseSession'\nimport { DrawerWidgetSessionMixin } from './DrawerWidgets'\n\nimport type PluginManager from '@jbrowse/core/PluginManager'\nimport type { IBaseViewModel } from '@jbrowse/core/pluggableElementTypes'\nimport type { IAnyStateTreeNode, Instance } from 'mobx-state-tree'\n\n/**\n * #stateModel MultipleViewsSessionMixin\n * composed of\n * - [BaseSessionModel](../basesessionmodel)\n * - [DrawerWidgetSessionMixin](../drawerwidgetsessionmixin)\n */\nexport function MultipleViewsSessionMixin(pluginManager: PluginManager) {\n  return types\n    .compose(\n      BaseSessionModel(pluginManager),\n      DrawerWidgetSessionMixin(pluginManager),\n    )\n    .props({\n      /**\n       * #property\n       */\n      views: types.array(pluginManager.pluggableMstType('view', 'stateModel')),\n      /**\n       * #property\n       */\n      stickyViewHeaders: types.optional(types.boolean, () =>\n        localStorageGetBoolean('stickyViewHeaders', true),\n      ),\n    })\n    .actions(self => ({\n      /**\n       * #action\n       */\n      moveViewDown(id: string) {\n        const idx = self.views.findIndex(v => v.id === id)\n        if (idx !== -1 && idx < self.views.length - 1) {\n          self.views.splice(idx, 2, self.views[idx + 1], self.views[idx])\n        }\n      },\n      /**\n       * #action\n       */\n      moveViewUp(id: string) {\n        const idx = self.views.findIndex(view => view.id === id)\n        if (idx > 0) {\n          self.views.splice(idx - 1, 2, self.views[idx], self.views[idx - 1])\n        }\n      },\n      /**\n       * #action\n       */\n      moveViewToTop(id: string) {\n        const idx = self.views.findIndex(view => view.id === id)\n        self.views = cast([\n          self.views[idx],\n          ...self.views.filter(view => view.id !== id),\n        ])\n      },\n\n      /**\n       * #action\n       */\n      moveViewToBottom(id: string) {\n        const idx = self.views.findIndex(view => view.id === id)\n        self.views = cast([\n          ...self.views.filter(view => view.id !== id),\n          self.views[idx],\n        ])\n      },\n\n      /**\n       * #action\n       */\n      addView(typeName: string, initialState = {}) {\n        const typeDefinition = pluginManager.getElementType('view', typeName)\n        if (!typeDefinition) {\n          throw new Error(`unknown view type ${typeName}`)\n        }\n\n        const length = self.views.push({\n          ...initialState,\n          type: typeName,\n        })\n        return self.views[length - 1]\n      },\n\n      /**\n       * #action\n       */\n      removeView(view: IBaseViewModel) {\n        for (const [, widget] of self.activeWidgets) {\n          if (widget.view && widget.view.id === view.id) {\n            self.hideWidget(widget)\n          }\n        }\n        self.views.remove(view)\n      },\n\n      /**\n       * #action\n       */\n      setStickyViewHeaders(sticky: boolean) {\n        self.stickyViewHeaders = sticky\n      },\n\n      afterAttach() {\n        addDisposer(\n          self,\n          autorun(() => {\n            localStorageSetBoolean('stickyViewHeaders', self.stickyViewHeaders)\n          }),\n        )\n      },\n    }))\n}\n\n/** Session mixin MST type for a session that manages multiple views */\nexport type SessionWithMultipleViewsType = ReturnType<\n  typeof MultipleViewsSessionMixin\n>\n\n/** Instance of a session with multiple views */\nexport type SessionWithMultipleViews = Instance<SessionWithMultipleViewsType>\n\n/** Type guard for SessionWithMultipleViews */\nexport function isSessionWithMultipleViews(\n  session: IAnyStateTreeNode,\n): session is SessionWithMultipleViews {\n  return isBaseSession(session) && 'views' in session\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-function-type */\nimport type React from 'react'\nimport { createContext, useContext, useMemo } from 'react'\n\nimport ChevronRight from '@mui/icons-material/ChevronRight'\nimport {\n  Divider,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Menu,\n  MenuItem,\n} from '@mui/material'\nimport HoverMenu from 'material-ui-popup-state/HoverMenu'\nimport {\n  bindFocus,\n  bindHover,\n  bindMenu,\n  usePopupState,\n} from 'material-ui-popup-state/hooks'\n\nimport { MenuItemEndDecoration } from './Menu'\n\nimport type { MenuItem as JBMenuItem } from './Menu'\nimport type { PopoverOrigin, SvgIconProps } from '@mui/material'\nimport type { PopupState } from 'material-ui-popup-state/hooks'\n\nconst CascadingContext = createContext({\n  parentPopupState: null,\n  rootPopupState: null,\n} as { parentPopupState: PopupState | null; rootPopupState: PopupState | null })\n\nfunction CascadingMenuItem({\n  onClick,\n  closeAfterItemClick,\n  ...props\n}: {\n  closeAfterItemClick: boolean\n  onClick?: Function\n  disabled?: boolean\n  children: React.ReactNode\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  if (!rootPopupState) {\n    throw new Error('must be used inside a CascadingMenu')\n  }\n\n  return (\n    <MenuItem\n      {...props}\n      onClick={event => {\n        if (closeAfterItemClick) {\n          rootPopupState.close()\n        }\n        onClick?.(event)\n      }}\n    />\n  )\n}\n\nfunction CascadingSubmenu({\n  title,\n  Icon,\n  inset,\n  popupId,\n  ...props\n}: {\n  children: React.ReactNode\n  title: React.ReactNode\n  onMenuItemClick: Function\n  Icon: React.ComponentType<SvgIconProps> | undefined\n\n  inset: boolean\n  menuItems: JBMenuItem[]\n  popupId: string\n}) {\n  const { parentPopupState } = useContext(CascadingContext)\n  const popupState = usePopupState({\n    popupId,\n    variant: 'popover',\n    parentPopupState,\n  })\n  return (\n    <>\n      <MenuItem {...bindHover(popupState)} {...bindFocus(popupState)}>\n        {Icon ? (\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n        ) : null}\n        <ListItemText primary={title} inset={inset} />\n        <ChevronRight />\n      </MenuItem>\n      <CascadingSubmenuHover\n        {...props}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n        popupState={popupState}\n      />\n    </>\n  )\n}\n\nfunction CascadingSubmenuHover({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  classes,\n  ...props\n}: {\n  classes?: Record<string, string>\n  popupState: PopupState\n  anchorOrigin: PopoverOrigin\n  transformOrigin: PopoverOrigin\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  const context = useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <HoverMenu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction CascadingMenu({\n  popupState,\n  onMenuItemClick,\n  menuItems,\n  ...props\n}: {\n  popupState: PopupState\n  onMenuItemClick: Function\n  menuItems: JBMenuItem[]\n}) {\n  const { rootPopupState } = useContext(CascadingContext)\n  const context = useMemo(\n    () => ({\n      rootPopupState: rootPopupState || popupState,\n      parentPopupState: popupState,\n    }),\n    [rootPopupState, popupState],\n  )\n\n  return (\n    <CascadingContext.Provider value={context}>\n      <Menu {...props} {...bindMenu(popupState)} />\n    </CascadingContext.Provider>\n  )\n}\n\nfunction EndDecoration({ item }: { item: JBMenuItem }) {\n  if ('subMenu' in item) {\n    return <MenuItemEndDecoration type=\"subMenu\" />\n  } else if (item.type === 'checkbox' || item.type === 'radio') {\n    return (\n      <MenuItemEndDecoration\n        type={item.type}\n        checked={item.checked}\n        disabled={item.disabled}\n      />\n    )\n  }\n  return null\n}\n\nfunction CascadingMenuList({\n  onMenuItemClick,\n  closeAfterItemClick,\n  menuItems,\n  ...props\n}: {\n  menuItems: JBMenuItem[]\n  closeAfterItemClick: boolean\n  onMenuItemClick: Function\n}) {\n  function handleClick(callback: Function) {\n    return (event: React.MouseEvent<HTMLLIElement>) => {\n      onMenuItemClick(event, callback)\n    }\n  }\n\n  const hasIcon = menuItems.some(m => 'icon' in m && m.icon)\n  return (\n    <>\n      {menuItems\n        .sort((a, b) => (b.priority || 0) - (a.priority || 0))\n        .map((item, idx) => {\n          return 'subMenu' in item ? (\n            <CascadingSubmenu\n              key={`subMenu-${item.label}-${idx}`}\n              popupId={`subMenu-${item.label}`}\n              title={item.label}\n              Icon={item.icon}\n              inset={hasIcon && !item.icon}\n              onMenuItemClick={onMenuItemClick}\n              menuItems={item.subMenu}\n            >\n              <CascadingMenuList\n                {...props}\n                closeAfterItemClick={closeAfterItemClick}\n                onMenuItemClick={onMenuItemClick}\n                menuItems={item.subMenu}\n              />\n            </CascadingSubmenu>\n          ) : item.type === 'divider' ? (\n            <Divider\n              key={`divider-${JSON.stringify(item)}-${idx}`}\n              component=\"li\"\n            />\n          ) : item.type === 'subHeader' ? (\n            <ListSubheader key={`subHeader-${item.label}-${idx}`}>\n              {item.label}\n            </ListSubheader>\n          ) : (\n            <CascadingMenuItem\n              key={`${item.label}-${idx}`}\n              closeAfterItemClick={closeAfterItemClick}\n              onClick={\n                'onClick' in item ? handleClick(item.onClick) : undefined\n              }\n              disabled={Boolean(item.disabled)}\n            >\n              {item.icon ? (\n                <ListItemIcon>\n                  <item.icon />\n                </ListItemIcon>\n              ) : null}{' '}\n              <ListItemText\n                primary={item.label}\n                secondary={item.subLabel}\n                inset={hasIcon && !item.icon}\n              />\n              <div style={{ flexGrow: 1, minWidth: 10 }} />\n              <EndDecoration item={item} />\n            </CascadingMenuItem>\n          )\n        })}\n    </>\n  )\n}\n\nfunction CascadingMenuChildren(props: {\n  onMenuItemClick: Function\n  closeAfterItemClick?: boolean\n  menuItems: JBMenuItem[]\n  popupState: PopupState\n}) {\n  const { closeAfterItemClick = true, ...rest } = props\n  return (\n    <CascadingMenu {...rest}>\n      <CascadingMenuList {...rest} closeAfterItemClick={closeAfterItemClick} />\n    </CascadingMenu>\n  )\n}\n\nexport default CascadingMenuChildren\n","import { forwardRef, useEffect, useState } from 'react'\n\nimport useMeasure from '@jbrowse/core/util/useMeasure'\nimport { InputBase, Typography, useTheme } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\nimport type { TypographyProps } from '@mui/material'\n\ntype Variant = TypographyProps['variant']\n\ntype EditableTypographyClassKey =\n  | 'input'\n  | 'inputBase'\n  | 'inputRoot'\n  | 'inputFocused'\n\nconst useStyles = makeStyles()(theme => ({\n  input: {},\n  inputBase: {},\n  typography: {\n    top: 6,\n    left: 2,\n    position: 'absolute',\n    whiteSpace: 'nowrap',\n    visibility: 'hidden',\n  },\n  inputRoot: {\n    padding: theme.spacing(0.5),\n  },\n  inputFocused: {\n    borderStyle: 'solid',\n    borderWidth: 2,\n  },\n}))\n\ninterface Props {\n  value: string\n  setValue: (value: string) => void\n  variant: Variant\n  classes?: Partial<Record<EditableTypographyClassKey, string>>\n}\n\n// using forwardRef so that MUI Tooltip can wrap this component\nconst EditableTypography = forwardRef<HTMLDivElement, Props>(\n  function EditableTypography2(props, ref) {\n    const { value, setValue, variant, ...other } = props\n    const [ref2, { width }] = useMeasure()\n    const [editedValue, setEditedValue] = useState<string>()\n    const [inputNode, setInputNode] = useState<HTMLInputElement | null>(null)\n    const [blur, setBlur] = useState(false)\n\n    useEffect(() => {\n      if (blur) {\n        inputNode?.blur()\n        setBlur(false)\n      }\n    }, [blur, inputNode])\n\n    // possibly tss-react does not understand the passing of props to\n    // useStyles, but it appears to work\n    // @ts-expect-error\n    const { classes } = useStyles(props, { props })\n    const theme = useTheme()\n\n    const val = editedValue === undefined ? value : editedValue\n\n    return (\n      <div {...other} ref={ref}>\n        <div style={{ position: 'relative' }}>\n          <Typography\n            ref={ref2}\n            component=\"span\"\n            variant={variant}\n            className={classes.typography}\n          >\n            {val}\n          </Typography>\n        </div>\n        <InputBase\n          inputRef={node => {\n            setInputNode(node)\n          }}\n          className={classes.inputBase}\n          inputProps={{\n            style: {\n              width,\n              ...(variant && variant !== 'inherit'\n                ? theme.typography[variant]\n                : {}),\n            },\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputRoot,\n            focused: classes.inputFocused,\n          }}\n          value={val}\n          onChange={event => {\n            setEditedValue(event.target.value)\n          }}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              inputNode?.blur()\n            } else if (event.key === 'Escape') {\n              setEditedValue(undefined)\n              setBlur(true)\n            }\n          }}\n          onBlur={() => {\n            setValue(editedValue || value || '')\n            setEditedValue(undefined)\n          }}\n        />\n      </div>\n    )\n  },\n)\n\nexport default EditableTypography\n","import SvgIcon from '@mui/material/SvgIcon'\n\nimport type { SvgIconProps } from '@mui/material/SvgIcon'\n\n// Icons below come from https://material.io/resources/icons/?icon=line_style&style=baseline\nexport function ContentCopy(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\" />\n    </SvgIcon>\n  )\n}\n\n// https://materialdesignicons.com/ text-search icon\nexport function Indexing(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19.31 18.9L22.39 22L21 23.39L17.88 20.32C17.19 20.75 16.37 21 15.5 21C13 21 11 19 11 16.5C11 14 13 12 15.5 12C18 12 20 14 20 16.5C20 17.38 19.75 18.21 19.31 18.9M15.5 19C16.88 19 18 17.88 18 16.5C18 15.12 16.88 14 15.5 14C14.12 14 13 15.12 13 16.5C13 17.88 14.12 19 15.5 19M21 4V6H3V4H21M3 16V14H9V16H3M3 11V9H21V11H18.97C17.96 10.37 16.77 10 15.5 10C14.23 10 13.04 10.37 12.03 11H3Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentCut(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,3L13,9L15,11L22,4V3M12,12.5A0.5,0.5 0 0,1 11.5,12A0.5,0.5 0 0,1 12,11.5A0.5,0.5 0 0,1 12.5,12A0.5,0.5 0 0,1 12,12.5M6,20A2,2 0 0,1 4,18C4,16.89 4.9,16 6,16A2,2 0 0,1 8,18C8,19.11 7.1,20 6,20M6,8A2,2 0 0,1 4,6C4,4.89 4.9,4 6,4A2,2 0 0,1 8,6C8,7.11 7.1,8 6,8M9.64,7.64C9.87,7.14 10,6.59 10,6A4,4 0 0,0 6,2A4,4 0 0,0 2,6A4,4 0 0,0 6,10C6.59,10 7.14,9.87 7.64,9.64L10,12L7.64,14.36C7.14,14.13 6.59,14 6,14A4,4 0 0,0 2,18A4,4 0 0,0 6,22A4,4 0 0,0 10,18C10,17.41 9.87,16.86 9.64,16.36L12,14L19,21H22V20L9.64,7.64Z\" />\n    </SvgIcon>\n  )\n}\n\nexport function ContentPaste(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M19,20H5V4H7V7H17V4H19M12,2A1,1 0 0,1 13,3A1,1 0 0,1 12,4A1,1 0 0,1 11,3A1,1 0 0,1 12,2M19,2H14.82C14.4,0.84 13.3,0 12,0C10.7,0 9.6,0.84 9.18,2H5A2,2 0 0,0 3,4V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V4A2,2 0 0,0 19,2Z\" />\n    </SvgIcon>\n  )\n}\n\n//  format-list-checkbox from https://materialdesignicons.com/\nexport function TrackSelector(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M21 19v-2H8v2h13m0-6v-2H8v2h13M8 7h13V5H8v2M4 5v2h2V5H4M3 5a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V5m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2m1 6v2h2v-2H4m-1 0a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2z\" />\n    </SvgIcon>\n  )\n}\n\n//  content-save-edit from https://materialdesignicons.com/\nexport function SaveAs(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M10,19L10.14,18.86C8.9,18.5 8,17.36 8,16A3,3 0 0,1 11,13C12.36,13 13.5,13.9 13.86,15.14L20,9V7L16,3H4C2.89,3 2,3.9 2,5V19A2,2 0 0,0 4,21H10V19M4,5H14V9H4V5M20.04,12.13C19.9,12.13 19.76,12.19 19.65,12.3L18.65,13.3L20.7,15.35L21.7,14.35C21.92,14.14 21.92,13.79 21.7,13.58L20.42,12.3C20.31,12.19 20.18,12.13 20.04,12.13M18.07,13.88L12,19.94V22H14.06L20.12,15.93L18.07,13.88Z\"\n      />\n    </SvgIcon>\n  )\n}\n\n//  content-save from https://materialdesignicons.com/\nexport function Save(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M15,9H5V5H15M12,19A3,3 0 0,1 9,16A3,3 0 0,1 12,13A3,3 0 0,1 15,16A3,3 0 0,1 12,19M17,3H5C3.89,3 3,3.9 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V7L17,3Z\"\n      />\n    </SvgIcon>\n  )\n}\n\n//  dna from https://materialdesignicons.com/\nexport function DNA(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M4,2H6V4C6,5.44 6.68,6.61 7.88,7.78C8.74,8.61 9.89,9.41 11.09,10.2L9.26,11.39C8.27,10.72 7.31,10 6.5,9.21C5.07,7.82 4,6.1 4,4V2M18,2H20V4C20,6.1 18.93,7.82 17.5,9.21C16.09,10.59 14.29,11.73 12.54,12.84C10.79,13.96 9.09,15.05 7.88,16.22C6.68,17.39 6,18.56 6,20V22H4V20C4,17.9 5.07,16.18 6.5,14.79C7.91,13.41 9.71,12.27 11.46,11.16C13.21,10.04 14.91,8.95 16.12,7.78C17.32,6.61 18,5.44 18,4V2M14.74,12.61C15.73,13.28 16.69,14 17.5,14.79C18.93,16.18 20,17.9 20,20V22H18V20C18,18.56 17.32,17.39 16.12,16.22C15.26,15.39 14.11,14.59 12.91,13.8L14.74,12.61M7,3H17V4L16.94,4.5H7.06L7,4V3M7.68,6H16.32C16.08,6.34 15.8,6.69 15.42,7.06L14.91,7.5H9.07L8.58,7.06C8.2,6.69 7.92,6.34 7.68,6M9.09,16.5H14.93L15.42,16.94C15.8,17.31 16.08,17.66 16.32,18H7.68C7.92,17.66 8.2,17.31 8.58,16.94L9.09,16.5M7.06,19.5H16.94L17,20V21H7V20L7.06,19.5Z\"\n      />\n    </SvgIcon>\n  )\n}\n\nexport function Cable(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M20 5V4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1h-1v4c0 .55.45 1 1 1h1v7c0 1.1-.9 2-2 2s-2-.9-2-2V7c0-2.21-1.79-4-4-4S5 4.79 5 7v7H4c-.55 0-1 .45-1 1v4h1v1c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1h1v-4c0-.55-.45-1-1-1H7V7c0-1.1.9-2 2-2s2 .9 2 2v10c0 2.21 1.79 4 4 4s4-1.79 4-4v-7h1c.55 0 1-.45 1-1V5h-1z\" />\n    </SvgIcon>\n  )\n}\n","import { getParent, isRoot } from 'mobx-state-tree'\n\nimport { getEnv, getSession, objectHash } from './index'\nimport { readConfObject } from '../configuration'\n\nimport type { FileLocation, PreFileLocation } from './types'\nimport type { AnyConfigurationModel } from '../configuration'\nimport type { IAnyStateTreeNode } from 'mobx-state-tree'\n\n/* utility functions for use by track models and so forth */\n\nexport function getTrackAssemblyNames(\n  track: IAnyStateTreeNode & { configuration: AnyConfigurationModel },\n) {\n  return getConfAssemblyNames(track.configuration)\n}\n\nexport function getConfAssemblyNames(conf: AnyConfigurationModel) {\n  const trackAssemblyNames = readConfObject(conf, 'assemblyNames') as\n    | string[]\n    | undefined\n  if (!trackAssemblyNames) {\n    // Check if it's an assembly sequence track\n    const parent = getParent<any>(conf)\n    if ('sequence' in parent) {\n      return [readConfObject(parent, 'name') as string]\n    } else {\n      throw new Error('unknown assembly names')\n    }\n  }\n  return trackAssemblyNames\n}\n\n/**\n * return the rpcSessionId of the highest parent node in the tree that has an\n * rpcSessionId */\n\nexport function getRpcSessionId(thisNode: IAnyStateTreeNode) {\n  interface NodeWithRpcSessionId extends IAnyStateTreeNode {\n    rpcSessionId: string\n  }\n  let highestRpcSessionId: string | undefined\n\n  for (let node = thisNode; !isRoot(node); node = getParent<any>(node)) {\n    if ('rpcSessionId' in node) {\n      highestRpcSessionId = (node as NodeWithRpcSessionId).rpcSessionId\n    }\n  }\n  if (!highestRpcSessionId) {\n    throw new Error(\n      'getRpcSessionId failed, no parent node in the state tree has an `rpcSessionId` attribute',\n    )\n  }\n  return highestRpcSessionId\n}\n\n/**\n * given an MST node, get the renderprops of the first parent container that\n * has renderProps\n * @param node -\n * @returns renderprops, or empty object if none found\n */\nexport function getParentRenderProps(node: IAnyStateTreeNode) {\n  for (\n    let currentNode = getParent<any>(node);\n    !isRoot(currentNode);\n    currentNode = getParent<any>(currentNode)\n  ) {\n    if ('renderProps' in currentNode) {\n      return currentNode.renderProps()\n    }\n  }\n\n  return {}\n}\n\nexport const UNKNOWN = 'UNKNOWN'\nexport const UNSUPPORTED = 'UNSUPPORTED'\n\nlet blobMap: Record<string, File> = {}\n\n// get a specific blob\nexport function getBlob(id: string) {\n  return blobMap[id]\n}\n\n// used to export entire context to webworker\nexport function getBlobMap() {\n  return blobMap\n}\n\n// TODO:IS THIS BAD?\n// used in new contexts like webworkers\nexport function setBlobMap(map: Record<string, File>) {\n  blobMap = map\n}\n\nlet counter = 0\n\n// blob files are stored in a global map. the blobId is based on a combination\n// of timestamp plus counter to be unique across sessions and fast repeated\n// calls\nexport function storeBlobLocation(location: PreFileLocation) {\n  if ('blob' in location) {\n    const blobId = `b${+Date.now()}-${counter++}`\n    blobMap[blobId] = location.blob\n    return { name: location.blob.name, blobId, locationType: 'BlobLocation' }\n  }\n  return location\n}\n\n/**\n * creates a new location from the provided location including the appropriate\n * suffix and location type\n *\n * @param location - the FileLocation\n * @param suffix - the file suffix (e.g. .bam)\n * @returns the constructed location object from the provided parameters\n */\nexport function makeIndex(location: FileLocation, suffix: string) {\n  if ('uri' in location) {\n    return {\n      uri: location.uri + suffix,\n      locationType: 'UriLocation',\n    }\n  } else if ('localPath' in location) {\n    return {\n      localPath: location.localPath + suffix,\n      locationType: 'LocalPathLocation',\n    }\n  } else {\n    return location\n  }\n}\n\n/**\n * constructs a potential index file (with suffix) from the provided file name\n *\n * @param name - the name of the index file\n * @param typeA - one option of a potential two file suffix (e.g. CSI, BAI)\n * @param typeB - the second option of a potential two file suffix (e.g. CSI, BAI)\n * @returns a likely name of the index file for a given filename\n */\nexport function makeIndexType(\n  name: string | undefined,\n  typeA: string,\n  typeB: string,\n) {\n  return name?.toUpperCase().endsWith(typeA) ? typeA : typeB\n}\n\nexport interface AdapterConfig {\n  type: string\n  [key: string]: unknown\n}\n\nexport type AdapterGuesser = (\n  file: FileLocation,\n  index?: FileLocation,\n  adapterHint?: string,\n) => AdapterConfig | undefined\n\nexport type TrackTypeGuesser = (adapterName: string) => string | undefined\n\nexport function getFileName(track: FileLocation) {\n  const uri = 'uri' in track ? track.uri : undefined\n  const localPath = 'localPath' in track ? track.localPath : undefined\n  const blob = 'blobId' in track ? track : undefined\n  return (\n    blob?.name ||\n    uri?.slice(uri.lastIndexOf('/') + 1) ||\n    localPath?.slice(localPath.replace(/\\\\/g, '/').lastIndexOf('/') + 1) ||\n    ''\n  )\n}\n\nexport function guessAdapter(\n  file: FileLocation,\n  index: FileLocation | undefined,\n  adapterHint?: string,\n  model?: IAnyStateTreeNode,\n) {\n  if (model) {\n    const { pluginManager } = getEnv(model)\n    const adapterGuesser = pluginManager.evaluateExtensionPoint(\n      'Core-guessAdapterForLocation',\n      (\n        _file: FileLocation,\n        _index?: FileLocation,\n        _adapterHint?: string,\n      ): AdapterConfig | undefined => {\n        return undefined\n      },\n    ) as AdapterGuesser\n\n    const adapter = adapterGuesser(file, index, adapterHint)\n    if (adapter) {\n      return adapter\n    }\n  }\n\n  return {\n    type: UNKNOWN,\n  }\n}\n\nexport function guessTrackType(\n  adapterType: string,\n  model?: IAnyStateTreeNode,\n): string {\n  if (model) {\n    const session = getSession(model)\n\n    const trackTypeGuesser = getEnv(\n      session,\n    ).pluginManager.evaluateExtensionPoint(\n      'Core-guessTrackTypeForLocation',\n      (_adapterName: string): AdapterConfig | undefined => {\n        return undefined\n      },\n    ) as TrackTypeGuesser\n\n    const trackType = trackTypeGuesser(adapterType)\n    if (trackType) {\n      return trackType\n    }\n  }\n  return 'FeatureTrack'\n}\n\nexport function generateUnsupportedTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories: string[] | undefined,\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unsupported)`,\n    description: `Support not yet implemented for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n\nexport function generateUnknownTrackConf(\n  trackName: string,\n  trackUrl: string,\n  categories?: string[],\n) {\n  const conf = {\n    type: 'FeatureTrack',\n    name: `${trackName} (Unknown)`,\n    description: `Could not determine track type for \"${trackUrl}\"`,\n    category: categories,\n    trackId: '',\n  }\n  conf.trackId = objectHash(conf)\n  return conf\n}\n\nexport function getTrackName(\n  conf: AnyConfigurationModel,\n  session: { assemblies: AnyConfigurationModel[] },\n) {\n  const trackName = readConfObject(conf, 'name') as string\n  if (!trackName && readConfObject(conf, 'type') === 'ReferenceSequenceTrack') {\n    const asm = session.assemblies.find(a => a.sequence === conf)\n    return asm\n      ? `Reference sequence (${\n          readConfObject(asm, 'displayName') || readConfObject(asm, 'name')\n        })`\n      : 'Reference sequence'\n  }\n  return trackName\n}\n","import { isValidElement } from 'react'\n\nimport { ErrorBoundary } from '@jbrowse/core/ui/ErrorBoundary'\nimport CloseIcon from '@mui/icons-material/Close'\nimport {\n  Dialog as MUIDialog,\n  DialogTitle,\n  Divider,\n  IconButton,\n  ScopedCssBaseline,\n  ThemeProvider,\n  createTheme,\n  useTheme,\n} from '@mui/material'\nimport { observer } from 'mobx-react'\nimport { makeStyles } from 'tss-react/mui'\n\nimport ErrorMessage from './ErrorMessage'\nimport SanitizedHTML from './SanitizedHTML'\n\nimport type { DialogProps } from '@mui/material'\n\nconst useStyles = makeStyles()(theme => ({\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  errorBox: {\n    width: 800,\n    margin: 40,\n  },\n}))\n\nfunction DialogError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <div className={classes.errorBox}>\n      <ErrorMessage error={error} />\n    </div>\n  )\n}\n\ninterface Props extends DialogProps {\n  header?: React.ReactNode\n  titleNode?: React.ReactNode\n}\n\nconst Dialog = observer(function (props: Props) {\n  const { classes } = useStyles()\n  const { titleNode, ...rest } = props\n  const { title, header, children, onClose } = rest\n  const theme = useTheme()\n\n  return (\n    <MUIDialog {...rest}>\n      <ScopedCssBaseline>\n        {isValidElement(header) ? (\n          header\n        ) : (\n          <DialogTitle>\n            {titleNode || <SanitizedHTML html={title || ''} />}\n            {onClose ? (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  // @ts-expect-error\n                  onClose()\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            ) : null}\n          </DialogTitle>\n        )}\n        <Divider />\n\n        <ErrorBoundary FallbackComponent={DialogError}>\n          <ThemeProvider\n            theme={createTheme(theme, {\n              components: {\n                MuiInputBase: {\n                  styleOverrides: {\n                    input: {\n                      // xref https://github.com/GMOD/jbrowse-components/pull/3666\n                      boxSizing: 'content-box!important' as 'content-box',\n                    },\n                  },\n                },\n              },\n            })}\n          >\n            {children}\n          </ThemeProvider>\n        </ErrorBoundary>\n      </ScopedCssBaseline>\n    </MUIDialog>\n  )\n})\n\nexport default Dialog\n","import type React from 'react'\nimport { useEffect, useRef, useState } from 'react'\n\nimport { unzip } from '@gmod/bgzf-filehandle'\nimport useMeasure from '@jbrowse/core/util/useMeasure'\nimport {\n  getEnv as getEnvMST,\n  getParent,\n  getSnapshot,\n  hasParent,\n  isAlive,\n  isStateTreeNode,\n} from 'mobx-state-tree'\nimport { flushSync } from 'react-dom'\nimport { createRoot } from 'react-dom/client'\n\nimport { colord } from './colord'\nimport { checkStopToken } from './stopToken'\nimport {\n  isDisplayModel,\n  isSessionModel,\n  isTrackModel,\n  isUriLocation,\n  isViewModel,\n} from './types'\n\nimport type PluginManager from '../PluginManager'\nimport type { BaseBlock } from './blockTypes'\nimport type { Feature } from './simpleFeature'\nimport type { AssemblyManager, Region, TypeTestedByPredicate } from './types'\nimport type { Region as MUIRegion } from './types/mst'\nimport type { BaseOptions } from '../data_adapters/BaseAdapter'\nimport type { GenericFilehandle } from 'generic-filehandle2'\nimport type {\n  IAnyStateTreeNode,\n  IStateTreeNode,\n  Instance,\n} from 'mobx-state-tree'\n\nexport * from './types'\nexport * from './when'\nexport * from './range'\nexport * from './dedupe'\n\nexport * from './offscreenCanvasPonyfill'\nexport * from './offscreenCanvasUtils'\n\nexport function useDebounce<T>(value: T, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handle = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n    return () => {\n      clearTimeout(handle)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n\n// used in ViewContainer files to get the width\nexport function useWidthSetter(\n  view: { setWidth: (arg: number) => void },\n  padding: string,\n) {\n  const [ref, { width }] = useMeasure()\n  useEffect(() => {\n    if (width && isAlive(view)) {\n      // sets after a requestAnimationFrame\n      // https://stackoverflow.com/a/58701523/2129219\n      // avoids ResizeObserver loop error being shown during development\n      requestAnimationFrame(() => {\n        view.setWidth(width - Number.parseInt(padding, 10) * 2)\n      })\n    }\n  }, [padding, view, width])\n  return ref\n}\n\ntype Timer = ReturnType<typeof setTimeout>\n\n// https://stackoverflow.com/questions/56283920/\nexport function useDebouncedCallback<T>(\n  callback: (...args: T[]) => void,\n  wait = 400,\n) {\n  // track args & timeout handle between calls\n  const argsRef = useRef<T[]>(null)\n  const timeout = useRef<Timer>(null)\n\n  // make sure our timeout gets cleared if our consuming component gets\n  // unmounted\n  useEffect(() => {\n    if (timeout.current) {\n      clearTimeout(timeout.current)\n    }\n  }, [])\n\n  return function debouncedCallback(...args: T[]) {\n    // capture latest args\n    argsRef.current = args\n\n    // clear debounce timer\n    if (timeout.current) {\n      clearTimeout(timeout.current)\n    }\n\n    // start waiting again\n    timeout.current = setTimeout(() => {\n      if (argsRef.current) {\n        callback(...argsRef.current)\n      }\n    }, wait)\n  }\n}\n\n/**\n * find the first node in the hierarchy that matches the given predicate\n */\nexport function findParentThat(\n  node: IAnyStateTreeNode,\n  predicate: (thing: IAnyStateTreeNode) => boolean,\n) {\n  if (!hasParent(node)) {\n    throw new Error('node does not have parent')\n  }\n  let currentNode: IAnyStateTreeNode | undefined = getParent<any>(node)\n  while (currentNode && isAlive(currentNode)) {\n    if (predicate(currentNode)) {\n      return currentNode\n    }\n    if (hasParent(currentNode)) {\n      currentNode = getParent<any>(currentNode)\n    } else {\n      break\n    }\n  }\n  throw new Error('no matching node found')\n}\n\ninterface Animation {\n  lastPosition: number\n  lastTime?: number\n  lastVelocity?: number\n}\n\n// based on https://github.com/react-spring/react-spring/blob/cd5548a987383b8023efd620f3726a981f9e18ea/src/animated/FrameLoop.ts\nexport function springAnimate(\n  fromValue: number,\n  toValue: number,\n  setValue: (value: number) => void,\n  onFinish = () => {},\n  precision = 0,\n  tension = 400,\n  friction = 20,\n  clamp = true,\n) {\n  const mass = 1\n  if (!precision) {\n    precision = Math.abs(toValue - fromValue) / 1000\n  }\n\n  let animationFrameId: number\n\n  function update(animation: Animation) {\n    const time = Date.now()\n    let position = animation.lastPosition\n    let lastTime = animation.lastTime || time\n    let velocity = animation.lastVelocity || 0\n    // If we lost a lot of frames just jump to the end.\n    if (time > lastTime + 64) {\n      lastTime = time\n    }\n    // http://gafferongames.com/game-physics/fix-your-timestep/\n    const numSteps = Math.floor(time - lastTime)\n    for (let i = 0; i < numSteps; ++i) {\n      const force = -tension * (position - toValue)\n      const damping = -friction * velocity\n      const acceleration = (force + damping) / mass\n      velocity += (acceleration * 1) / 1000\n      position += (velocity * 1) / 1000\n    }\n    const isVelocity = Math.abs(velocity) <= precision\n    const isDisplacement =\n      tension !== 0 ? Math.abs(toValue - position) <= precision : true\n    const isOvershooting =\n      clamp && tension !== 0\n        ? fromValue < toValue\n          ? position > toValue\n          : position < toValue\n        : false\n    const endOfAnimation = isOvershooting || (isVelocity && isDisplacement)\n    if (endOfAnimation) {\n      setValue(toValue)\n      onFinish()\n    } else {\n      setValue(position)\n      animationFrameId = requestAnimationFrame(() => {\n        update({\n          lastPosition: position,\n          lastTime: time,\n          lastVelocity: velocity,\n        })\n      })\n    }\n  }\n\n  return [\n    () => {\n      update({ lastPosition: fromValue })\n    },\n    () => {\n      cancelAnimationFrame(animationFrameId)\n    },\n  ]\n}\n\n/**\n * find the first node in the hierarchy that matches the given 'is' typescript\n * type guard predicate\n */\nexport function findParentThatIs<T extends (a: IAnyStateTreeNode) => boolean>(\n  node: IAnyStateTreeNode,\n  predicate: T,\n): TypeTestedByPredicate<T> {\n  return findParentThat(node, predicate)\n}\n\n/**\n * get the current JBrowse session model, starting at any node in the state\n * tree\n */\nexport function getSession(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isSessionModel)\n  } catch (e) {\n    throw new Error('no session model found!')\n  }\n}\n\n/**\n * get the state model of the view in the state tree that contains the given\n * node\n */\nexport function getContainingView(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isViewModel)\n  } catch (e) {\n    throw new Error('no containing view found')\n  }\n}\n\n/**\n * get the state model of the view in the state tree that contains the given\n * node\n */\nexport function getContainingTrack(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isTrackModel)\n  } catch (e) {\n    throw new Error('no containing track found')\n  }\n}\n\n/**\n * get the state model of the display in the state tree that contains the given\n * node\n */\nexport function getContainingDisplay(node: IAnyStateTreeNode) {\n  try {\n    return findParentThatIs(node, isDisplayModel)\n  } catch (e) {\n    throw new Error('no containing display found')\n  }\n}\n\n/**\n * Assemble a 1-based \"locString\" from an interbase genomic location\n * @param region - Region\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 })\n * // ↳ '{hg19}chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1' })\n * // ↳ 'chr1'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0 })\n * // ↳ 'chr1:1..'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', end: 100 })\n * // ↳ 'chr1:1..100'\n * ```\n * @example\n * ```ts\n * assembleLocString({ refName: 'chr1', start: 0, end: 1 })\n * // ↳ 'chr1:1'\n * ```\n */\nexport function assembleLocString(region: ParsedLocString) {\n  return assembleLocStringFast(region, toLocale)\n}\n\n// same as assembleLocString above, but does not perform toLocaleString which\n// can slow down the speed of block calculations which use assembleLocString\n// for block.key\nexport function assembleLocStringFast(\n  region: ParsedLocString,\n  cb = (n: number): string | number => n,\n) {\n  const { assemblyName, refName, start, end, reversed } = region\n  const assemblyNameString = assemblyName ? `{${assemblyName}}` : ''\n  let startString: string\n  if (start !== undefined) {\n    startString = `:${cb(start + 1)}`\n  } else if (end !== undefined) {\n    startString = ':1'\n  } else {\n    startString = ''\n  }\n  let endString: string\n  if (end !== undefined) {\n    endString = start !== undefined && start + 1 === end ? '' : `..${cb(end)}`\n  } else {\n    endString = start !== undefined ? '..' : ''\n  }\n  let rev = ''\n  if (reversed) {\n    rev = '[rev]'\n  }\n  return `${assemblyNameString}${refName}${startString}${endString}${rev}`\n}\n\nexport interface ParsedLocString {\n  assemblyName?: string\n  refName: string\n  start?: number\n  end?: number\n  reversed?: boolean\n}\n\nexport function parseLocStringOneBased(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n): ParsedLocString {\n  if (!locString) {\n    throw new Error('no location string provided, could not parse')\n  }\n  let reversed = false\n  if (locString.endsWith('[rev]')) {\n    reversed = true\n    locString = locString.replace(/\\[rev]$/, '')\n  }\n  // remove any whitespace\n  locString = locString.replace(/\\s/, '')\n  // refNames can have colons, refer to\n  // https://samtools.github.io/hts-specs/SAMv1.pdf Appendix A\n  const assemblyMatch = /({(.+)})?(.+)/.exec(locString)\n  if (!assemblyMatch) {\n    throw new Error(`invalid location string: \"${locString}\"`)\n  }\n  const [, , assemblyName2, location2] = assemblyMatch\n  const assemblyName = assemblyName2!\n  const location = location2!\n  if (!assemblyName && location.startsWith('{}')) {\n    throw new Error(`no assembly name was provided in location \"${location}\"`)\n  }\n  const lastColonIdx = location.lastIndexOf(':')\n  if (lastColonIdx === -1) {\n    if (isValidRefName(location, assemblyName)) {\n      return {\n        assemblyName,\n        refName: location,\n        reversed,\n      }\n    }\n    throw new Error(`Unknown reference sequence \"${location}\"`)\n  }\n  const prefix = location.slice(0, lastColonIdx)\n  const suffix = location.slice(lastColonIdx + 1)\n  if (\n    isValidRefName(prefix, assemblyName) &&\n    isValidRefName(location, assemblyName)\n  ) {\n    throw new Error(`ambiguous location string: \"${locString}\"`)\n  } else if (isValidRefName(prefix, assemblyName)) {\n    if (suffix) {\n      // see if it's a range\n      const rangeMatch =\n        /^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)(-?(\\d+|\\d{1,3}(,\\d{3})*))$/.exec(\n          suffix,\n        )\n      // see if it's a single point\n      const singleMatch = /^(-?(\\d+|\\d{1,3}(,\\d{3})*))(\\.\\.|-)?$/.exec(suffix)\n      if (rangeMatch) {\n        const [, start, , , , end] = rangeMatch\n        if (start !== undefined && end !== undefined) {\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replaceAll(',', ''),\n            end: +end.replaceAll(',', ''),\n            reversed,\n          }\n        }\n      } else if (singleMatch) {\n        const [, start, , , separator] = singleMatch\n        if (start !== undefined) {\n          if (separator) {\n            // indefinite end\n            return {\n              assemblyName,\n              refName: prefix,\n              start: +start.replaceAll(',', ''),\n              reversed,\n            }\n          }\n          return {\n            assemblyName,\n            refName: prefix,\n            start: +start.replaceAll(',', ''),\n            end: +start.replaceAll(',', ''),\n            reversed,\n          }\n        }\n      } else {\n        throw new Error(\n          `could not parse range \"${suffix}\" on location \"${locString}\"`,\n        )\n      }\n    } else {\n      return {\n        assemblyName,\n        refName: prefix,\n        reversed,\n      }\n    }\n  } else if (isValidRefName(location, assemblyName)) {\n    return {\n      assemblyName,\n      refName: location,\n      reversed,\n    }\n  }\n  throw new Error(`unknown reference sequence name in location \"${locString}\"`)\n}\n\n/**\n * Parse a 1-based location string into an interbase genomic location\n * @param locString - Location string\n * @param isValidRefName - Function that checks if a refName exists in the set\n * of all known refNames, or in the set of refNames for an assembly if\n * assemblyName is given\n * @example\n * ```ts\n * parseLocString('chr1:1..100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1-100', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString(`{hg19}chr1:1..100`, isValidRefName)\n * // ↳ { assemblyName: 'hg19', refName: 'chr1', start: 0, end: 100 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1', isValidRefName)\n * // ↳ { refName: 'chr1' }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0, end: 1 }\n * ```\n * @example\n * ```ts\n * parseLocString('chr1:1..', isValidRefName)\n * // ↳ { refName: 'chr1', start: 0}\n * ```\n */\nexport function parseLocString(\n  locString: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const parsed = parseLocStringOneBased(locString, isValidRefName)\n  if (typeof parsed.start === 'number') {\n    parsed.start -= 1\n  }\n  return parsed\n}\n\nexport function compareLocs(locA: ParsedLocString, locB: ParsedLocString) {\n  const assemblyComp =\n    locA.assemblyName || locB.assemblyName\n      ? (locA.assemblyName || '').localeCompare(locB.assemblyName || '')\n      : 0\n  if (assemblyComp) {\n    return assemblyComp\n  }\n\n  const refComp =\n    locA.refName || locB.refName\n      ? (locA.refName || '').localeCompare(locB.refName || '')\n      : 0\n  if (refComp) {\n    return refComp\n  }\n\n  if (locA.start !== undefined && locB.start !== undefined) {\n    const startComp = locA.start - locB.start\n    if (startComp) {\n      return startComp\n    }\n  }\n  if (locA.end !== undefined && locB.end !== undefined) {\n    const endComp = locA.end - locB.end\n    if (endComp) {\n      return endComp\n    }\n  }\n  return 0\n}\n\nexport function compareLocStrings(\n  a: string,\n  b: string,\n  isValidRefName: (refName: string, assemblyName?: string) => boolean,\n) {\n  const locA = parseLocString(a, isValidRefName)\n  const locB = parseLocString(b, isValidRefName)\n  return compareLocs(locA, locB)\n}\n\n/**\n * Ensure that a number is at least min and at most max.\n *\n * @param num -\n * @param min -\n * @param  max -\n */\nexport function clamp(num: number, min: number, max: number) {\n  if (num < min) {\n    return min\n  }\n  if (num > max) {\n    return max\n  }\n  return num\n}\n\nfunction roundToNearestPointOne(num: number) {\n  return Math.round(num * 10) / 10\n}\n\n/**\n * @param bp -\n * @param region -\n * @param bpPerPx -\n */\nexport function bpToPx(\n  bp: number,\n  {\n    reversed,\n    end = 0,\n    start = 0,\n  }: { start?: number; end?: number; reversed?: boolean },\n  bpPerPx: number,\n) {\n  return roundToNearestPointOne((reversed ? end - bp : bp - start) / bpPerPx)\n}\n\nconst oneEightyOverPi = 180 / Math.PI\nconst piOverOneEighty = Math.PI / 180\nexport function radToDeg(radians: number) {\n  return (radians * oneEightyOverPi) % 360\n}\nexport function degToRad(degrees: number) {\n  return (degrees * piOverOneEighty) % (2 * Math.PI)\n}\n\n/**\n * @returns [x, y]\n */\nexport function polarToCartesian(rho: number, theta: number) {\n  return [rho * Math.cos(theta), rho * Math.sin(theta)] as [number, number]\n}\n\n/**\n * @param x - the x\n * @param y - the y\n * @returns [rho, theta]\n */\nexport function cartesianToPolar(x: number, y: number) {\n  const rho = Math.sqrt(x * x + y * y)\n  const theta = Math.atan(y / x)\n  return [rho, theta] as [number, number]\n}\ninterface MinimalRegion {\n  start: number\n  end: number\n  reversed?: boolean\n}\n\nexport function featureSpanPx(\n  feature: Feature,\n  region: MinimalRegion,\n  bpPerPx: number,\n) {\n  return bpSpanPx(feature.get('start'), feature.get('end'), region, bpPerPx)\n}\n\nexport function bpSpanPx(\n  leftBp: number,\n  rightBp: number,\n  region: MinimalRegion,\n  bpPerPx: number,\n) {\n  const start = bpToPx(leftBp, region, bpPerPx)\n  const end = bpToPx(rightBp, region, bpPerPx)\n  return region.reversed ? ([end, start] as const) : ([start, end] as const)\n}\n\n// do an array map of an iterable\nexport function iterMap<T, U>(\n  iter: Iterable<T>,\n  func: (arg: T) => U,\n  sizeHint?: number,\n) {\n  const results = Array.from<U>({ length: sizeHint || 0 })\n  let counter = 0\n  for (const item of iter) {\n    results[counter] = func(item)\n    counter += 1\n  }\n  return results\n}\n\n/**\n * Returns the index of the last element in the array where predicate is true,\n * and -1 otherwise. Based on https://stackoverflow.com/a/53187807\n *\n * @param array - The source array to search in\n *\n * @param predicate - find calls predicate once for each element of the array, in\n * descending order, until it finds one where predicate returns true.\n *\n * @returns findLastIndex returns element index where predicate is true.\n * Otherwise, findLastIndex returns -1.\n */\nexport function findLastIndex<T>(\n  array: T[],\n  predicate: (value: T, index: number, obj: T[]) => boolean,\n) {\n  let l = array.length\n  while (l--) {\n    if (predicate(array[l]!, l, array)) {\n      return l\n    }\n  }\n  return -1\n}\n\nexport function findLast<T>(\n  array: T[],\n  predicate: (value: T, index: number, obj: T[]) => boolean,\n) {\n  let l = array.length\n  while (l--) {\n    if (predicate(array[l]!, l, array)) {\n      return array[l]\n    }\n  }\n  return undefined\n}\n\nexport function renameRegionIfNeeded(\n  refNameMap: Record<string, string> | undefined,\n  region: Region | Instance<typeof MUIRegion>,\n): Region & { originalRefName?: string } {\n  if (isStateTreeNode(region) && !isAlive(region)) {\n    return region\n  }\n\n  if (refNameMap?.[region.refName]) {\n    // clone the region so we don't modify it\n    region = isStateTreeNode(region)\n      ? { ...getSnapshot(region) }\n      : { ...region }\n\n    // modify it directly in the container\n    const newRef = refNameMap[region.refName]\n    if (newRef) {\n      return { ...region, refName: newRef, originalRefName: region.refName }\n    }\n  }\n  return region\n}\n\nexport async function renameRegionsIfNeeded<\n  ARGTYPE extends {\n    assemblyName?: string\n    regions?: Region[]\n    stopToken?: string\n    adapterConfig: Record<string, unknown>\n    sessionId: string\n    statusCallback?: (arg: string) => void\n  },\n>(assemblyManager: AssemblyManager, args: ARGTYPE) {\n  const { regions = [], adapterConfig } = args\n  if (!args.sessionId) {\n    throw new Error('sessionId is required')\n  }\n\n  const assemblyNames = regions.map(region => region.assemblyName)\n  const assemblyMaps = Object.fromEntries(\n    await Promise.all(\n      [...new Set(assemblyNames)].map(async assemblyName => {\n        return [\n          assemblyName,\n          await assemblyManager.getRefNameMapForAdapter(\n            adapterConfig,\n            assemblyName,\n            args,\n          ),\n        ]\n      }),\n    ),\n  )\n\n  return {\n    ...args,\n    regions: regions.map((region, i) =>\n      // note: uses assemblyNames defined above since region could be dead now\n      renameRegionIfNeeded(assemblyMaps[assemblyNames[i]!], region),\n    ),\n  }\n}\n\nexport function minmax(a: number, b: number) {\n  return [Math.min(a, b), Math.max(a, b)] as const\n}\n\nexport function shorten(name: string, max = 70, short = 30) {\n  return name.length > max\n    ? `${name.slice(0, short)}...${name.slice(-short)}`\n    : name\n}\n\nexport function shorten2(name: string, max = 70) {\n  return name.length > max ? `${name.slice(0, max)}...` : name\n}\n\nexport function stringify(\n  {\n    refName,\n    coord,\n    assemblyName,\n    oob,\n  }: {\n    assemblyName?: string\n    coord: number\n    refName?: string\n    oob?: boolean\n  },\n  useAssemblyName?: boolean,\n) {\n  return [\n    assemblyName && useAssemblyName ? `{${assemblyName}}` : '',\n    refName\n      ? `${shorten(refName)}:${toLocale(coord)}${oob ? ' (out of bounds)' : ''}`\n      : '',\n  ].join('')\n}\n\n// this is recommended in a later comment in\n// https://github.com/electron/electron/issues/2288 for detecting electron in a\n// renderer process, which is the one that has node enabled for us\n//\n// const isElectron = process.versions.electron\n// const i2 = process.versions.hasOwnProperty('electron')\nexport const isElectron = /electron/i.test(\n  typeof navigator !== 'undefined' ? navigator.userAgent : '',\n)\n\n// from bioperl: tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/\n// generated with:\n// perl -MJSON -E '@l = split \"\",\"acgtrymkswhbvdnxACGTRYMKSWHBVDNX\"; print to_json({ map { my $in = $_; tr/acgtrymkswhbvdnxACGTRYMKSWHBVDNX/tgcayrkmswdvbhnxTGCAYRKMSWDVBHNX/; $in => $_ } @l})'\nexport const complementTable = {\n  S: 'S',\n  w: 'w',\n  T: 'A',\n  r: 'y',\n  a: 't',\n  N: 'N',\n  K: 'M',\n  x: 'x',\n  d: 'h',\n  Y: 'R',\n  V: 'B',\n  y: 'r',\n  M: 'K',\n  h: 'd',\n  k: 'm',\n  C: 'G',\n  g: 'c',\n  t: 'a',\n  A: 'T',\n  n: 'n',\n  W: 'W',\n  X: 'X',\n  m: 'k',\n  v: 'b',\n  B: 'V',\n  s: 's',\n  H: 'D',\n  c: 'g',\n  D: 'H',\n  b: 'v',\n  R: 'Y',\n  G: 'C',\n} as Record<string, string>\n\nexport function revcom(str: string) {\n  let revcomped = ''\n  for (let i = str.length - 1; i >= 0; i--) {\n    revcomped += complementTable[str[i]!] ?? str[i]\n  }\n  return revcomped\n}\n\nexport function reverse(str: string) {\n  let reversed = ''\n  for (let i = str.length - 1; i >= 0; i--) {\n    reversed += str[i]!\n  }\n  return reversed\n}\n\nexport function complement(str: string) {\n  let comp = ''\n\n  for (const element of str) {\n    comp += complementTable[element] ?? element\n  }\n  return comp\n}\n\n// requires immediate execution in jest environment, because (hypothesis) it\n// otherwise listens for prerendered_canvas but reads empty pixels, and doesn't\n// get the contents of the canvas\nexport const rIC =\n  typeof jest === 'undefined'\n    ? // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      typeof window !== 'undefined' && window.requestIdleCallback\n      ? window.requestIdleCallback\n      : (cb: () => void) =>\n          setTimeout(() => {\n            cb()\n          }, 1)\n    : (cb: () => void) => {\n        cb()\n      }\n\n// prettier-ignore\nconst widths = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2796875,0.2765625,0.3546875,0.5546875,0.5546875,0.8890625,0.665625,0.190625,0.3328125,0.3328125,0.3890625,0.5828125,0.2765625,0.3328125,0.2765625,0.3015625,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.5546875,0.2765625,0.2765625,0.584375,0.5828125,0.584375,0.5546875,1.0140625,0.665625,0.665625,0.721875,0.721875,0.665625,0.609375,0.7765625,0.721875,0.2765625,0.5,0.665625,0.5546875,0.8328125,0.721875,0.7765625,0.665625,0.7765625,0.721875,0.665625,0.609375,0.721875,0.665625,0.94375,0.665625,0.665625,0.609375,0.2765625,0.3546875,0.2765625,0.4765625,0.5546875,0.3328125,0.5546875,0.5546875,0.5,0.5546875,0.5546875,0.2765625,0.5546875,0.5546875,0.221875,0.240625,0.5,0.221875,0.8328125,0.5546875,0.5546875,0.5546875,0.5546875,0.3328125,0.5,0.2765625,0.5546875,0.5,0.721875,0.5,0.5,0.5,0.3546875,0.259375,0.353125,0.5890625]\n\n// xref https://gist.github.com/tophtucker/62f93a4658387bb61e4510c37e2e97cf\nexport function measureText(str: unknown, fontSize = 10) {\n  const avg = 0.5279276315789471\n  const s = String(str)\n  let total = 0\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i)\n    total += widths[code] ?? avg\n  }\n  return total * fontSize\n}\n\nexport type Frame = 1 | 2 | 3 | -1 | -2 | -3\n\nexport function getFrame(\n  start: number,\n  end: number,\n  strand: 1 | -1,\n  phase: 0 | 1 | 2,\n): Frame {\n  return strand === 1\n    ? ((((start + phase) % 3) + 1) as 1 | 2 | 3)\n    : ((-1 * ((end - phase) % 3) - 1) as -1 | -2 | -3)\n}\n\nexport const defaultStarts = ['ATG']\nexport const defaultStops = ['TAA', 'TAG', 'TGA']\nexport const defaultCodonTable = {\n  TCA: 'S',\n  TCC: 'S',\n  TCG: 'S',\n  TCT: 'S',\n  TTC: 'F',\n  TTT: 'F',\n  TTA: 'L',\n  TTG: 'L',\n  TAC: 'Y',\n  TAT: 'Y',\n  TAA: '*',\n  TAG: '*',\n  TGC: 'C',\n  TGT: 'C',\n  TGA: '*',\n  TGG: 'W',\n  CTA: 'L',\n  CTC: 'L',\n  CTG: 'L',\n  CTT: 'L',\n  CCA: 'P',\n  CCC: 'P',\n  CCG: 'P',\n  CCT: 'P',\n  CAC: 'H',\n  CAT: 'H',\n  CAA: 'Q',\n  CAG: 'Q',\n  CGA: 'R',\n  CGC: 'R',\n  CGG: 'R',\n  CGT: 'R',\n  ATA: 'I',\n  ATC: 'I',\n  ATT: 'I',\n  ATG: 'M',\n  ACA: 'T',\n  ACC: 'T',\n  ACG: 'T',\n  ACT: 'T',\n  AAC: 'N',\n  AAT: 'N',\n  AAA: 'K',\n  AAG: 'K',\n  AGC: 'S',\n  AGT: 'S',\n  AGA: 'R',\n  AGG: 'R',\n  GTA: 'V',\n  GTC: 'V',\n  GTG: 'V',\n  GTT: 'V',\n  GCA: 'A',\n  GCC: 'A',\n  GCG: 'A',\n  GCT: 'A',\n  GAC: 'D',\n  GAT: 'D',\n  GAA: 'E',\n  GAG: 'E',\n  GGA: 'G',\n  GGC: 'G',\n  GGG: 'G',\n  GGT: 'G',\n}\n\n/**\n * take CodonTable above and generate larger codon table that includes all\n * permutations of upper and lower case nucleotides\n */\nexport function generateCodonTable(table: any) {\n  const tempCodonTable: Record<string, string> = {}\n  for (const codon of Object.keys(table)) {\n    const aa = table[codon]\n    const nucs: string[][] = []\n    for (let i = 0; i < 3; i++) {\n      const nuc = codon.charAt(i)\n      nucs[i] = []\n      nucs[i]![0] = nuc.toUpperCase()\n      nucs[i]![1] = nuc.toLowerCase()\n    }\n    for (let i = 0; i < 2; i++) {\n      const n0 = nucs[0]![i]!\n      for (let j = 0; j < 2; j++) {\n        const n1 = nucs[1]![j]!\n        for (let k = 0; k < 2; k++) {\n          const n2 = nucs[2]![k]!\n          const triplet = n0 + n1 + n2\n          tempCodonTable[triplet] = aa\n        }\n      }\n    }\n  }\n  return tempCodonTable\n}\n\n// call statusCallback with current status and clear when finished\nexport async function updateStatus<U>(\n  msg: string,\n  cb: (arg: string) => void,\n  fn: () => U | Promise<U>,\n) {\n  cb(msg)\n  const res = await fn()\n  cb('')\n  return res\n}\n\n// call statusCallback with current status and clear when finished, and check\n// stopToken afterwards\nexport async function updateStatus2<U>(\n  msg: string,\n  cb: (arg: string) => void,\n  stopToken: string | undefined,\n  fn: () => U | Promise<U>,\n) {\n  cb(msg)\n  const res = await fn()\n  checkStopToken(stopToken)\n  cb('')\n  return res\n}\n\nexport function hashCode(str: string) {\n  let hash = 0\n  if (str.length === 0) {\n    return hash\n  }\n  for (let i = 0; i < str.length; i++) {\n    const chr = str.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0 // Convert to 32bit integer\n  }\n  return hash\n}\n\nexport function objectHash(obj: Record<string, any>) {\n  return `${hashCode(JSON.stringify(obj))}`\n}\n\ninterface VirtualOffset {\n  blockPosition: number\n}\ninterface Block {\n  minv: VirtualOffset\n  maxv: VirtualOffset\n}\n\nexport async function bytesForRegions(\n  regions: Region[],\n  index: {\n    blocksForRange: (\n      ref: string,\n      start: number,\n      end: number,\n    ) => Promise<Block[]>\n  },\n) {\n  const blockResults = await Promise.all(\n    regions.map(r => index.blocksForRange(r.refName, r.start, r.end)),\n  )\n\n  return blockResults\n    .flat()\n    .map(block => ({\n      start: block.minv.blockPosition,\n      end: block.maxv.blockPosition + 65535,\n    }))\n    .reduce((a, b) => a + b.end - b.start, 0)\n}\n\nexport interface ViewSnap {\n  bpPerPx: number\n  interRegionPaddingWidth: number\n  minimumBlockWidth: number\n  width: number\n  offsetPx: number\n  staticBlocks: { contentBlocks: BaseBlock[]; blocks: BaseBlock[] }\n  displayedRegions: (IStateTreeNode & {\n    start: number\n    end: number\n    refName: string\n    reversed?: boolean\n    assemblyName: string\n  })[]\n}\n\n// supported adapter types by text indexer ensure that this matches the method\n// found in @jbrowse/text-indexing/util\nexport function isSupportedIndexingAdapter(type = '') {\n  return [\n    'Gff3TabixAdapter',\n    'VcfTabixAdapter',\n    'Gff3Adapter',\n    'VcfAdapter',\n  ].includes(type)\n}\n\nexport function getBpDisplayStr(total: number) {\n  if (Math.floor(total / 1_000_000) > 0) {\n    return `${r(total / 1_000_000)}Mbp`\n  } else if (Math.floor(total / 1_000) > 0) {\n    return `${r(total / 1_000)}Kbp`\n  } else {\n    return `${Math.floor(total)}bp`\n  }\n}\n\nfunction r(s: number) {\n  return toLocale(Number.parseFloat(s.toPrecision(3)))\n}\nexport function getProgressDisplayStr(current: number, total: number) {\n  if (Math.floor(total / 1_000_000) > 0) {\n    return `${r(current / 1_000_000)}/${r(total / 1_000_000)}Mb`\n  } else if (Math.floor(total / 1_000) > 0) {\n    return `${r(current / 1_000)}/${r(total / 1_000)}Kb`\n  } else {\n    return `${r(current)}/${r(total)}}bytes`\n  }\n}\n\nexport function toLocale(n: number) {\n  return n.toLocaleString('en-US')\n}\n\nexport function getTickDisplayStr(totalBp: number, bpPerPx: number) {\n  return Math.floor(bpPerPx / 1_000) > 0\n    ? `${toLocale(Number.parseFloat((totalBp / 1_000_000).toFixed(2)))}M`\n    : toLocale(Math.floor(totalBp))\n}\n\nexport function getViewParams(model: IAnyStateTreeNode, exportSVG?: boolean) {\n  // @ts-expect-error\n  const { dynamicBlocks, staticBlocks, offsetPx } = getContainingView(model)\n  const b = dynamicBlocks?.contentBlocks[0] || {}\n  const staticblock = staticBlocks?.contentBlocks[0] || {}\n  const staticblock1 = staticBlocks?.contentBlocks[1] || {}\n  return {\n    offsetPx: exportSVG ? 0 : offsetPx - staticblock.offsetPx,\n    offsetPx1: exportSVG ? 0 : offsetPx - staticblock1.offsetPx,\n    start: b.start as number,\n    end: b.end as number,\n  }\n}\n\nexport function getLayoutId({\n  sessionId,\n  layoutId,\n}: {\n  sessionId: string\n  layoutId: string\n}) {\n  return `${sessionId}-${layoutId}`\n}\n\n// Hook from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.error(error)\n      return initialValue\n    }\n  })\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore =\n        // eslint-disable-next-line unicorn/no-instanceof-builtins\n        value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      if (typeof window !== 'undefined') {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore))\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return [storedValue, setValue] as const\n}\n\nexport function getUriLink(value: { uri: string; baseUri?: string }) {\n  const { uri, baseUri = '' } = value\n  let href: string\n  try {\n    href = new URL(uri, baseUri).href\n  } catch (e) {\n    href = uri\n  }\n  return href\n}\n\nexport function getStr(obj: unknown) {\n  return isObject(obj)\n    ? isUriLocation(obj)\n      ? getUriLink(obj)\n      : JSON.stringify(obj)\n    : String(obj)\n}\n\n// tries to measure grid width without HTML tags included\nexport function coarseStripHTML(s: string) {\n  return s.replaceAll(/(<([^>]+)>)/gi, '')\n}\n\n// based on autolink-js, license MIT\n// https://github.com/bryanwoods/autolink-js/blob/1418049970152c56ced73d43dcc62d80b320fb71/autolink.js#L9\nexport function linkify(s: string) {\n  const pattern =\n    /(^|[\\s\\n]|<[A-Za-z]*\\/?>)((?:https?|ftp):\\/\\/[-A-Z0-9+\\u0026\\u2019@#/%?=()~_|!:,.;]*[-A-Z0-9+\\u0026@#/%=~()_|])/gi\n  return s.replaceAll(pattern, '$1<a href=\\'$2\\' target=\"_blank\">$2</a>')\n}\n\n// heuristic measurement for a column of a @mui/x-data-grid, pass in\n// values from a column\nexport function measureGridWidth(\n  elements: unknown[],\n  args?: {\n    minWidth?: number\n    fontSize?: number\n    maxWidth?: number\n    padding?: number\n    stripHTML?: boolean\n  },\n) {\n  const {\n    padding = 30,\n    minWidth = 80,\n    fontSize = 12,\n    maxWidth = 1000,\n    stripHTML = false,\n  } = args || {}\n  return max(\n    elements\n      .map(element => getStr(element))\n      .map(str => (stripHTML ? coarseStripHTML(str) : str))\n      .map(str => measureText(str, fontSize))\n      .map(n => Math.min(Math.max(n + padding, minWidth), maxWidth)),\n  )\n}\n\nexport function getEnv(obj: any) {\n  return getEnvMST<{ pluginManager: PluginManager }>(obj)\n}\n\nexport function localStorageGetItem(item: string) {\n  return typeof localStorage !== 'undefined'\n    ? localStorage.getItem(item)\n    : undefined\n}\n\nexport function localStorageSetItem(str: string, item: string) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage.setItem(str, item)\n  }\n}\n\nexport function max(arr: Iterable<number>, init = Number.NEGATIVE_INFINITY) {\n  let max = init\n  for (const entry of arr) {\n    max = Math.max(entry, max)\n  }\n  return max\n}\n\nexport function min(arr: Iterable<number>, init = Number.POSITIVE_INFINITY) {\n  let min = init\n  for (const entry of arr) {\n    min = Math.min(entry, min)\n  }\n  return min\n}\n\nexport function sum(arr: Iterable<number>) {\n  let sum = 0\n  for (const entry of arr) {\n    sum += entry\n  }\n  return sum\n}\n\nexport function avg(arr: number[]) {\n  return sum(arr) / arr.length\n}\n\nexport function groupBy<T>(array: Iterable<T>, predicate: (v: T) => string) {\n  const result = {} as Record<string, T[]>\n  for (const value of array) {\n    const t = predicate(value)\n    if (!result[t]) {\n      result[t] = []\n    }\n    result[t].push(value)\n  }\n  return result\n}\n\nexport function notEmpty<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== undefined\n}\n\nexport function mergeIntervals<T extends { start: number; end: number }>(\n  intervals: T[],\n  w = 5000,\n) {\n  // test if there are at least 2 intervals\n  if (intervals.length <= 1) {\n    return intervals\n  }\n\n  const stack = [] as T[]\n  let top = null\n\n  // sort the intervals based on their start values\n  intervals = intervals.sort((a, b) => a.start - b.start)\n\n  // push the 1st interval into the stack\n  stack.push(intervals[0]!)\n\n  // start from the next interval and merge if needed\n  for (let i = 1; i < intervals.length; i++) {\n    // get the top element\n    top = stack.at(-1)!\n\n    // if the current interval doesn't overlap with the\n    // stack top element, push it to the stack\n    if (top.end + w < intervals[i]!.start - w) {\n      stack.push(intervals[i]!)\n    }\n    // otherwise update the end value of the top element\n    // if end of current interval is higher\n    else if (top.end < intervals[i]!.end) {\n      top.end = Math.max(top.end, intervals[i]!.end)\n      stack.pop()\n      stack.push(top)\n    }\n  }\n\n  return stack\n}\n\nexport interface BasicFeature {\n  end: number\n  start: number\n  refName: string\n}\n\n// returns new array non-overlapping features\nexport function gatherOverlaps<T extends BasicFeature>(regions: T[], w = 5000) {\n  const memo = {} as Record<string, T[]>\n  for (const x of regions) {\n    if (!memo[x.refName]) {\n      memo[x.refName] = []\n    }\n    memo[x.refName]!.push(x)\n  }\n\n  return Object.values(memo).flatMap(group =>\n    mergeIntervals(\n      group.sort((a, b) => a.start - b.start),\n      w,\n    ),\n  )\n}\n\nexport function stripAlpha(str: string) {\n  return colord(str).alpha(1).toHex()\n}\n\nexport function getStrokeProps(str: string) {\n  const c = colord(str)\n  return {\n    strokeOpacity: c.alpha(),\n    stroke: c.alpha(1).toHex(),\n  }\n}\n\nexport function getFillProps(str: string) {\n  const c = colord(str)\n  return {\n    fillOpacity: c.alpha(),\n    fill: c.alpha(1).toHex(),\n  }\n}\n\n// https://react.dev/reference/react-dom/server/renderToString#removing-rendertostring-from-the-client-code\nexport function renderToStaticMarkup(node: React.ReactElement) {\n  const div = document.createElement('div')\n  flushSync(() => {\n    createRoot(div).render(node)\n  })\n  return div.innerHTML.replaceAll(/\\brgba\\((.+?),[^,]+?\\)/g, 'rgb($1)')\n}\n\nexport function isGzip(buf: Uint8Array) {\n  return buf[0] === 31 && buf[1] === 139 && buf[2] === 8\n}\n\nexport async function fetchAndMaybeUnzip(\n  loc: GenericFilehandle,\n  opts: BaseOptions = {},\n) {\n  const { statusCallback = () => {} } = opts\n  const buf = await updateStatus(\n    'Downloading file',\n    statusCallback,\n    () => loc.readFile(opts) as Promise<Uint8Array>,\n  )\n  return isGzip(buf)\n    ? await updateStatus('Unzipping', statusCallback, () => unzip(buf))\n    : buf\n}\n\nexport async function fetchAndMaybeUnzipText(\n  loc: GenericFilehandle,\n  opts?: BaseOptions,\n) {\n  const buffer = await fetchAndMaybeUnzip(loc, opts)\n  // 512MB  max chrome string length is 512MB\n  if (buffer.length > 536_870_888) {\n    throw new Error('Data exceeds maximum string length (512MB)')\n  }\n  return new TextDecoder('utf8', { fatal: true }).decode(buffer)\n}\n\n// MIT https://github.com/inspect-js/is-object\nexport function isObject(\n  x: unknown,\n): x is Record<string | symbol | number, unknown> {\n  return typeof x === 'object' && x !== null\n}\n\nexport function localStorageGetNumber(key: string, defaultVal: number) {\n  return +(localStorageGetItem(key) ?? defaultVal)\n}\n\nexport function localStorageGetBoolean(key: string, defaultVal: boolean) {\n  return Boolean(\n    JSON.parse(localStorageGetItem(key) || JSON.stringify(defaultVal)),\n  )\n}\n\nexport function localStorageSetBoolean(key: string, value: boolean) {\n  localStorageSetItem(key, JSON.stringify(value))\n}\n\nexport function forEachWithStopTokenCheck<T>(\n  iter: Iterable<T>,\n  stopToken: string | undefined,\n  arg: (arg: T, idx: number) => void,\n  durationMs = 400,\n) {\n  let start = performance.now()\n  let i = 0\n  for (const t of iter) {\n    if (performance.now() - start > durationMs) {\n      checkStopToken(stopToken)\n      start = performance.now()\n    }\n    arg(t, i++)\n  }\n}\n\nexport function testAdapter(\n  fileName: string,\n  regex: RegExp,\n  adapterHint: string | undefined,\n  expected: string,\n) {\n  return (regex.test(fileName) && !adapterHint) || adapterHint === expected\n}\n\nexport {\n  type Feature,\n  type SimpleFeatureSerialized,\n  type SimpleFeatureSerializedNoId,\n  default as SimpleFeature,\n  isFeature,\n} from './simpleFeature'\n\nexport { blobToDataURL } from './blobToDataURL'\nexport { makeAbortableReaction } from './makeAbortableReaction'\nexport * from './aborting'\n"],"names":["useStyles","makeStyles","paper","position","overflowY","overflowX","minWidth","minHeight","maxWidth","maxHeight","top","left","outline","menuItemEndDecoration","padding","margin","height","MenuItemEndDecoration","props","classes","type","checked","disabled","icon","_jsx","ArrowRightIcon","color","undefined","CheckBoxIcon","CheckBoxOutlineBlankIcon","RadioButtonCheckedIcon","RadioButtonUncheckedIcon","className","children","checkIfValid","m","MenuPage","forwardRef","ref","subMenuAnchorEl","setSubMenuAnchorEl","useState","openSubMenuIdx","setOpenSubMenuIdx","isSubMenuOpen","setIsSubMenuOpen","selectedMenuItemIdx","setSelectedMenuItemIdx","setPosition","paperRef","useRef","menuItems","onMenuItemClick","open","onClose","anchorEl","useEffect","shouldSubMenuBeOpen","Boolean","timer","setTimeout","clearTimeout","rect","getBoundingClientRect","width","hasIcon","some","menuItem","menuItemStyle","ListContents","_jsxs","_Fragment","MenuList","autoFocusItem","dense","sort","a","b","priority","map","idx","Divider","component","JSON","stringify","ListSubheader","label","endDecoration","Icon","ListItemIcon","onClick","callback","event","MUIMenuItem","style","selected","onMouseMove","e","currentTarget","document","activeElement","focus","onKeyDown","key","currentIdx","findLastIndex","slice","findPreviousValidIdx","findIndex","findNextValidIdx","ListItemText","primary","secondary","subLabel","inset","id","String","subMenu","Grow","in","transformOrigin","Paper","elevation","other","Popover","anchorOrigin","vertical","horizontal","ElementId","types","optional","identifier","nanoid","NoAssemblyRegion","model","refName","string","start","number","end","reversed","boolean","actions","self","setRefName","newRefName","Region","compose","assemblyName","LocalPathLocation","locationType","literal","localPath","BlobLocation","name","blobId","UriLocationRaw","uri","baseUri","maybe","internetAccountId","internetAccountPreAuthorization","internetAccountType","authInfo","frozen","UriLocation","snapshotProcessor","postProcessor","snap","rest","FileLocation","union","preProcessor","blob","theme","tooltip","pointerEvents","backgroundColor","alpha","palette","grey","borderRadius","shape","common","white","fontFamily","typography","fontSize","lineHeight","Math","round","value","wordWrap","BaseTooltip","clientPoint","clientPointCoords","placement","useTheme","popperTheme","components","MuiPopper","refs","floatingStyles","context","useFloating","strategy","middleware","offset","useClientPoint","getFloatingProps","useInteractions","Portal","container","defaultProps","setFloating","zIndex","visibility","transform","added","full","RegExp","tag","join","SanitizedHTML","html","pre","linkify","str","test","escapeHTML","dompurify","addHook","node","tagName","setAttribute","dangerouslySetInnerHTML","__html","sanitize","AssemblyManager","lazy","DataManagementPlugin","Plugin","exports","install","pluginManager","UCSCTrackHubConnectionF","AddTrackWidgetF","HierarchicalTrackSelectorWidgetF","AddConnectionWidgetF","PluginStoreWidgetF","configure","_pluginManager","encrypt","async","text","password","toString","decrypt","AES","Utf8","getErrorMsg","err","parse","message","shareSessionToDynamo","session","url","referer","sess","toUrlSafeB64","window","btoa","crypto","getRandomValues","Uint8Array","length","fromCharCode","replaceAll","encryptedSession","data","FormData","append","Date","now","response","fetch","method","mode","body","ok","Error","json","readSessionFromDynamo","baseUrl","sessionQueryParam","signal","sessionId","split","encodeURIComponent","observer","closeAfterItemClick","stopPropagation","setOpen","onClickExtra","popupState","usePopupState","popupId","variant","onTouchStart","rest2","bindTrigger","isOpen","IconButton","CascadingMenu","bindPopover","_","minDrawerWidth","DrawerWidgetSessionMixin","widgetStateModelType","pluggableMstType","drawerPosition","localStorageGetItem","drawerWidth","refinement","integer","widgets","activeWidgets","safeReference","minimized","views","visibleWidget","isAlive","values","size","setDrawerPosition","arg","localStorage","setItem","updateDrawerWidth","newDrawerWidth","resizeDrawer","distance","oldDrawerWidth","this","addWidget","typeName","initialState","conf","getElementType","configuration","set","get","showWidget","widget","has","delete","hasWidget","hideWidget","minimizeWidgetDrawer","showWidgetDrawer","hideAllWidgets","clear","editConfiguration","isConfigurationModel","editor","target","afterAttach","addDisposer","autorun","localStorageSetItem","getColors","midnight","forrest","grape","mandarin","gray","Logomark","viewBox","LogoFull","Text","colors","fill","d","dots","display","content","textAlign","animation","keyframes","LoadingEllipses","cx","Typography","ErrorMessageStackTraceDialog","bg","background","divider","border","iconFloat","float","marginLeft","ErrorButtons","error","onReset","showStack","setShowStack","Tooltip","title","ReportIcon","RefreshIcon","Suspense","fallback","str2","indexOf","str3","snapshotError","trim","findStr","match","exec","match2","parseError","RedErrorMessageBox","SnackbarContents","snackbarMessages","latestMessage","at","_event","reason","popSnackbarMessage","contents","bottom","spacing","right","Fab","LaunchIcon","logoPath","readConfObject","src","alt","buttonRoot","contrastText","action","hoverOpacity","menuTitle","handleClose","Button","root","ArrowDropDown","Menu","current","grow","flexGrow","inputBase","inputRoot","light","inputFocused","borderColor","main","HeaderButtons","menus","Toolbar","menu","DropDownMenu","arrow","EditableTypography","setValue","newName","renameCurrentSession","AppLogo","DialogComponent","DialogProps","input","paddingBottom","paddingTop","ViewContainerTitle","view","assemblyManager","getSession","displayName","assemblyNames","r","val","setDisplayName","IconButtonProps","IconProps","MenuIcon","KeyboardDoubleArrowUpIcon","moveViewToTop","KeyboardArrowUpIcon","moveViewUp","KeyboardArrowDownIcon","moveViewDown","KeyboardDoubleArrowDownIcon","moveViewToBottom","viewHeader","VIEW_HEADER_HEIGHT","viewTitle","alignItems","ViewButtons","onMinimize","AddIcon","MinimizeIcon","CloseIcon","scrollRef","stickyViewHeaders","isSessionWithMultipleViews","jest","scrollIntoView","block","ViewMenu","focusedViewId","KeyboardArrowRightIcon","getEnv","viewType","getViewType","ReactComponent","viewContainer","overflow","focusedView","unfocusedView","dark","useWidthSetter","handleSelectView","Element","contains","setFocusedViewId","addEventListener","removeEventListener","backgroundColorClassName","viewContainerClassName","ViewHeader","removeView","setMinimized","ViewWrapper","ViewLauncher","viewsContainer","gridRow","ViewContainer","DrawerWidget","colorScheme","appContainer","gridColumn","gridTemplateRows","appBar","LazyDrawerWidget","App","drawerVisible","grid","gridTemplateColumns","filter","f","DialogQueue","AppBar","AppToolbar","ViewsContainer","AppFab","Snackbar","undoIdx","targetPath","volatile","history","notTrackingUndo","canUndo","canRedo","targetStore","snapshotDisposer","skipNextUndoState","stopTrackingUndo","resumeTrackingUndo","addUndoState","todos","splice","push","shift","beforeDestroy","initialize","resolvePath","onSnapshot","func","timeout","args","debounce","snapshot","getSnapshot","undo","applySnapshot","redo","isCloneable","thing","LazyWorker","constructor","driver","getWorker","workerP","makeWorker","catch","BaseRpcDriver","lastWorkerAssignment","workerAssignments","Map","maxPingTime","workerCheckFrequency","config","filterArgs","Array","isArray","t","isStateTreeNode","File","Object","fromEntries","entries","k","v","remoteAbort","functionName","stopTokenId","worker","call","rpcDriverClassName","createWorkerPool","hardwareConcurrency","mainThread","canDetect","navigator","detectHardwareConcurrency","workerCount","clamp","max","workers","i","getWorkerPool","workerPool","res","workerNumber","workerAssignment","options","TypeError","unextendedWorker","evaluateExtensionPoint","rpcMethod","getRpcMethodType","serializedArgs","serializeArguments","filteredAndSerializedArgs","statusCallback","deserializeReturn","DummyHandle","destroy","_functionName","_filteredArgs","_options","MainThreadRpcDriver","super","pm","funcName","result","execute","WebWorkerHandle","Rpc","Client","terminate","opts","channel","listener","on","off","WebWorkerRpcDriver","workerBootConfiguration","makeWorkerInstance","instance","userAgent","console","log","Promise","resolve","reject","postMessage","deserializeError","ConfigurationSchema","description","defaultValue","explicitlyTyped","baseConfiguration","BaseRpcDriverConfigSchema","defaultDriver","drivers","MainThreadRpcDriverConfigSchema","WebWorkerRpcDriverConfigSchema","addDriverConfig","configName","configSnapshot","RpcManager","static","rpcConfigSchema","mainConfiguration","backendConfigurations","driverObjects","getDriver","backendName","backendConfiguration","newDriver","plugins","runtimePluginDefinitions","windowHref","location","href","getDriverForCall","_sessionId","rpcDriverName","appendMenu","menuName","insertMenu","appendToMenu","find","insertInMenu","insertPosition","appendToSubMenu","menuPath","topMenu","pathSoFar","sm","mi","insertInSubMenu","shareDiv","paddingLeft","shareButton","ShareDialog","startIcon","ShareIcon","adminKey","useQueryParam","StringParam","adminServer","configPath","setSessionId","rootModel","jbrowse","s","JBrowseRootModel","JBrowseSession","headers","status","notify","ThemeProvider","CssBaseline","ShareButton","sessionQuery","loc","sessionTracks","assembly","tracks","tracklist","highlight","nav","initialTimestamp","hubURL","array","sessionSnapshot","sessionTriaged","sessionSpec","hubSpec","blankSession","runtimePlugins","sessionPlugins","sessionError","configError","bc1","BroadcastChannel","bc2","isSharedSession","startsWith","isSpecSession","isHubSession","isJb1StyleSession","isEncodedSession","isJsonSession","isLocalSession","ready","isSessionLoaded","pluginsLoaded","isConfigLoaded","sessionTracksParsed","setSessionQuery","setConfigError","setSessionError","setRuntimePlugins","setSessionPlugins","setConfigSnapshot","setBlankSession","flag","setSessionTriaged","setSessionSnapshot","fetchPlugins","pluginLoader","PluginLoader","fetchESM","import","installGlobalReExports","load","fetchSessionPlugins","loadSession","userAcceptedConfirmation","checkPlugins","origin","fetchConfig","path","__jbrowseConfigPath","openLocation","__jbrowseCacheBuster","random","readFile","configUri","URL","addRelativeUris","hostname","configPlugins","setUpConfig","fetchSessionStorageSession","sessionStr","sessionStorage","getItem","query","replace","sessionSnap","onmessage","msg","checkExistingSession","fetchSharedSession","decryptedSession","readConf","fromUrlSafeB64","decodeEncodedUrlSession","decodeSessionSpec","decodeJb1StyleSession","decodeHubSpec","decodeJsonUrlSession","afterCreate","refNameRegex","refNameColors","checkRefName","assemblyFactory","assemblyConfigType","adapterLoads","AbortablePromiseCache","cache","QuickLRU","maxSize","_stopToken","adapterConf","adapterConfig","when","regions","refNameAliases","refNames","rpcManager","stopToken","loadRefNameMap","refNameMap","getCanonicalRefName","forwardMap","reverseMap","canonicalName","adapterName","loadingP","volatileRegions","lowerCaseRefNameAliases","cytobands","getConf","initialized","aliases","hasName","allAliases","includes","allRefNames","keys","lowerCaseRefNames","allRefNamesWithLowerCase","Set","getParent","region","getRefNameColor","isValidRefName","setLoaded","setRegions","setRefNameAliases","setCytobands","setError","lowerCaseAliases","setLoadingP","p","loadPre","refNameAliasesAdapterConf","adapter","cytobandAdapterConf","sequenceAdapterConf","sequence","getAdapterType","getAdapterClass","getRegions","getAssemblyRegions","adapterRegionsWithAssembly","refNameAliasCollection","getRefNameAliases","override","alias","toLowerCase","getCytobands","getAdapterMapEntry","adapterConfigCacheKey","getRefNameMapForAdapter","getReverseRefNameMapForAdapter","getData","Worker","resolveIdentifier","SetDefaultSession","PreferencesDialog","RootModel","sessionModelFactory","adminMode","assemblyConfigSchema","getTrackType","configSchema","pluggableConfigSchemaType","preProcessSnapshot","explicitIdentifier","assemblyConfigSchemaFactory","jbrowseModelType","rpc","highResolutionScaling","formatDetails","feature","contextVariable","subfeatures","depth","maxDepth","formatAbout","hideUris","shareURL","disableAnalytics","hierarchical","trackNames","categories","defaultCollapsed","categoryNames","topLevelCategories","subCategories","extraThemes","pluginConfigurationSchemas","assemblies","internetAccounts","aggregateTextSearchAdapters","connections","defaultSession","preConfiguredSessions","JBrowseConfigF","addAssemblyConf","trackId","removeAssemblyConf","toRemove","remove","addTrackConf","trackConf","addConnectionConf","connectionConf","deleteConnectionConf","elt","conn","deleteTrackConf","addPlugin","pluginDefinition","setPluginsUpdated","removePlugin","cast","plugin","umdUrl","cjsUrl","esmUrl","setDefaultSessionConf","sessionConf","newDefault","toJS","addInternetAccountConf","internetAccountConf","deleteInternetAccountConf","JBrowseModelF","removeAttr","structuredClone","jbrowseWebFactory","sessionModelType","sessionPath","assemblyNameMap","obj","asmName","assemblyNamesList","assemblyList","asm","sessionAssemblies","temporaryAssemblies","waitForAssembly","reaction","assemblyConfs","removeAssembly","addAssembly","fireImmediately","textSearchManager","TextSearchManager","setSession","setDefaultSession","setSessionPath","BaseRootModelFactory","initializeInternetAccount","internetAccountConfig","initialSnapshot","getInternetAccountType","createEphemeralInternetAccount","hostUri","internetAccountSplit","domains","internetAccount","stateModel","create","findAppropriateInternetAccount","selectedId","selectedAccount","account","handlesLocation","InternetAccountsRootModelMixin","TimeTraveller","ctrlKey","metaKey","shiftKey","code","toUpperCase","mutableMenuActions","setMenus","newMenus","sessionDB","version","pluginsUpdated","savedSessionMetadata","reloadPluginManagerCallback","_configSnapshot","_sessionSnapshot","setSavedSessionMetadata","sessions","fetchSessionMetadata","ret","getAll","createdAt","setSessionDB","openDB","upgrade","db","createObjectStore","put","favorite","notifyError","delay","savingFailed","oldSession","filterSessionInPlace","getType","setReloadPluginManagerCallback","toLocaleString","activateSession","favoriteSavedSession","unfavoriteSavedSession","deleteSavedSession","sessionName","favs","processMutableMenuActions","PublishIcon","GetAppIcon","saveAs","Blob","FileCopyIcon","formatDistanceToNow","addSuffix","StarIcon","FolderOpenIcon","StorageIcon","Cable","queueDialog","UndoIcon","RedoIcon","ExtensionIcon","DNA","SettingsIcon","ReferenceManagementSessionMixin","getReferring","object","walk","isModelType","members","getMembers","properties","isReferenceType","removeReferring","referring","track","callbacks","dereferenceTypeCount","dereferenced","getContainingView","hideTrack","err1","isSessionModelWithWidgets","AboutDialog","BaseWebSession","sessionModel","queueOfDialogs","removeActiveDialog","cb","sessionThemeName","allThemes","defaultThemes","themeName","configTheme","all","createJBrowseTheme","setThemeName","MultipleViewsSessionMixin","BaseSessionModel","callbacksToDereferenceTrack","TracksManagerSessionMixin","named","superAddTrackConf","superDeleteTrackConf","found","SessionTracksManagerSessionMixin","assemblyConfigSchemasType","addSessionAssembly","warn","removeSessionAssembly","addTemporaryAssembly","removeTemporaryAssembly","TemporaryAssembliesMixin","ConnectionManagementSessionMixin","sessionConnections","superDeleteConnection","deleteConnection","superAddConnectionConf","connectionId","connection","c","WebSessionConnectionsMixin","viewId","observable","snackbarMessageSet","level","pushSnackbarMessage","removeSnackbarMessage","errorMessage","extra","Report","pop","element","task","setName","previousAutosaveId","renderProps","addSessionPlugin","removeSessionPlugin","addSavedSession","duplicateCurrentSession","saveSessionToLocalStorage","loadAutosaveSession","editTrackConfiguration","getTrackActionMenuItems","canEdit","isRefSeq","InfoIcon","DeleteIcon","displays","displayId","category","CopyIcon","extendedSessionModel","connectionInstances","createPluginManager","PluginManager","corePlugins","P","metadata","isCore","definition","createPluggableElements","JBrowseRootModelFactory","afterInitializedCb","sessionLabel","hubTxtLocation","makeConnection","loadHubSpec","evaluateAsyncExtensionPoint","loadSessionSpec","initialSessionQuery","initialTimeStamp","multiAssemblyTracks","savedSessionCount","ver","stats","screen","innerHeight","innerWidth","electron","isElectron","loadTime","jb2","forEach","qs","writeAWSAnalytics","pluginNames","analyticsScript","gaData","index","metric1","analyticsScriptNode","createElement","innerHTML","getElementsByTagName","writeGAAnalytics","doAnalytics","setRootModel","SessionTriaged","StartScreenErrorMessage","normalize","param","Loader","Str","setPassword","setLoc","setSessionTracks","setHubURL","setAssembly","setTracks","setHighlight","setNav","setTrackList","loader","SessionLoader","Renderer","firstLoader","setLoader","setPluginManager","reloadPluginManager","newLoader","JBrowse","Loading","ErrorBoundary","FallbackComponent","FatalErrorDialog","resetButtonText","onFactoryReset","factoryReset","QueryParamProvider","WindowHistoryAdapter","maxAge","Number","POSITIVE_INFINITY","onEviction","oldCache","_size","_emitEvictions","item","_deleteIfExpired","expiry","_getOrDeleteIfExpired","_getItemValue","_peek","_set","_moveToRecent","_entriesAscending","peek","deleted","resize","newSize","items","removeCount","Symbol","iterator","entriesDescending","entriesAscending","oldCacheSize","min","callbackFunction","thisArgument","toStringTag","selection","hovered","setSelection","clearSelection","setHovered","isBaseSession","getConnectionType","prepareToBreakConnection","callbacksToDeref","derefTypeCount","breakConnection","clearConnections","isSessionWithConnections","b64","originalB64","num","repeat","b64PadSuffix","toByteArray","inflate","inflated","TextDecoder","decode","bytes","TextEncoder","encode","deflate","fromByteArray","encoded","pos","isArrayType","childType","getChildType","isValidReference","el","isMapType","child","getPropertyMembers","pname","ptype","base","attr","def","pluginsToCheck","storePlugins","statusText","every","isUMDPluginDefinition","pp","isESMPluginDefinition","isCJSPluginDefinition","prop","pathname","ExternalLink","Link","rel","OpenInNewIcon","umdLoc","esmLoc","pluginDescriptionString","pluginUrl","esmUri","cjsLoc","definitions","defs","fetchCJS","loadCJSPlugin","parsedUrl","protocol","loadESMPlugin","loadUMDPlugin","moduleName","umdName","scriptUrl","globalThis","domLoadScript","script","importScripts","loadScript","default","loadPlugin","JBrowseExports","ReExports","module","horizontalHandle","cursor","verticalHandle","flexbox_verticalHandle","alignSelf","flexbox_horizontalHandle","onDrag","flexbox","originalClassName","onMouseDown","mouseDragging","setMouseDragging","initialPosition","prevPos","mouseMove","preventDefault","clientX","clientY","totalDistance","lastFrameDistance","mouseUp","importFormEntry","onChange","InputProps","TextFieldProps","localStorageKey","helperText","URLSearchParams","search","lastSelected","setLastSelected","useLocalStorage","host","TextField","select","slotProps","htmlInput","MenuItem","ToggleButtonWithTooltip","ToggleButton","shorten","len","Inline","gap","Box2","Box","flexDirection","Input","setLocation","inline","toggleButtonValue","SelectorComponent","UrlChooser","selectorLabel","LocalFileChooser","fileOrUrl","isUriLocation","setToggleButtonValue","accounts","isAppRootModel","recentlyUsedInternetAccounts","setRecentlyUsedInternetAccounts","arr","shownAccounts","hiddenAccounts","setAnchorEl","setLocationWithAccount","useCallback","Wrapper","InputLabel","shrink","FormGroup","ToggleButtonGroup","exclusive","newState","notEmpty","toggleContents","ArrowDropDownIcon","FormHelperText","imageData","blockKey","showSoftClip","done","setDone","featureCanvas","canvas","getContext","drawImageOntoCanvasContext","refTheme","createTheme","augmentColor","forest","lightgrey","bases","A","green","C","blue","G","orange","T","red","framesCDS","frames","stopCodon","startCodon","insertion","deletion","hardclip","softclip","skip","defaults","tertiary","quaternary","stockTheme","MuiLink","styleOverrides","lightStock","lightMinimal","darkMinimal","darkStock","MuiAppBar","enableColorOnDark","overwriteArrayMerge","sourceArray","createJBrowseBaseTheme","themeP","MuiTooltip","MuiButton","MuiAccordion","disableGutters","transition","unmountOnExit","MuiFilledInput","MuiFormControl","MuiFormHelperText","MuiIconButton","MuiInputBase","MuiAutocomplete","MuiInputLabel","MuiToolbar","MuiListItem","MuiOutlinedInput","MuiFab","MuiTable","MuiPopover","transitionDuration","MuiMenu","MuiMenuItem","MuiTextField","MuiCheckbox","MuiRadio","MuiFormLabel","MuiAccordionSummary","MuiToggleButtonGroup","deepmerge","arrayMerge","themes","augmentThemeColors","addMissingColors","entry","localStorageGetBoolean","addView","setStickyViewHeaders","sticky","localStorageSetBoolean","CascadingContext","createContext","parentPopupState","rootPopupState","CascadingMenuItem","useContext","close","CascadingSubmenu","bindHover","bindFocus","ChevronRight","CascadingSubmenuHover","useMemo","Provider","HoverMenu","bindMenu","EndDecoration","CascadingMenuList","whiteSpace","borderStyle","borderWidth","ref2","useMeasure","editedValue","setEditedValue","inputNode","setInputNode","blur","setBlur","InputBase","inputRef","inputProps","focused","onBlur","ContentCopy","SvgIcon","Indexing","TrackSelector","getTrackAssemblyNames","getConfAssemblyNames","trackAssemblyNames","parent","getRpcSessionId","thisNode","highestRpcSessionId","isRoot","rpcSessionId","getParentRenderProps","currentNode","UNKNOWN","UNSUPPORTED","blobMap","getBlob","getBlobMap","setBlobMap","counter","storeBlobLocation","makeIndex","suffix","makeIndexType","typeA","typeB","endsWith","getFileName","lastIndexOf","guessAdapter","file","adapterHint","_file","_index","_adapterHint","adapterGuesser","guessTrackType","adapterType","trackType","_adapterName","trackTypeGuesser","generateUnsupportedTrackConf","trackName","trackUrl","objectHash","generateUnknownTrackConf","getTrackName","closeButton","errorBox","DialogError","ErrorMessage","titleNode","header","MUIDialog","ScopedCssBaseline","isValidElement","DialogTitle","boxSizing","useDebounce","debouncedValue","setDebouncedValue","handle","requestAnimationFrame","setWidth","parseInt","useDebouncedCallback","wait","argsRef","findParentThat","predicate","hasParent","springAnimate","fromValue","toValue","onFinish","precision","tension","friction","animationFrameId","update","time","lastPosition","lastTime","velocity","lastVelocity","numSteps","floor","isVelocity","abs","isDisplacement","cancelAnimationFrame","findParentThatIs","isSessionModel","isViewModel","getContainingTrack","isTrackModel","getContainingDisplay","isDisplayModel","assembleLocString","assembleLocStringFast","toLocale","n","assemblyNameString","startString","endString","rev","parseLocStringOneBased","locString","assemblyMatch","assemblyName2","location2","lastColonIdx","prefix","rangeMatch","singleMatch","separator","parseLocString","parsed","compareLocs","locA","locB","assemblyComp","localeCompare","refComp","startComp","endComp","compareLocStrings","bpToPx","bp","bpPerPx","oneEightyOverPi","PI","piOverOneEighty","radToDeg","radians","degToRad","degrees","polarToCartesian","rho","theta","cos","sin","cartesianToPolar","x","y","sqrt","atan","featureSpanPx","bpSpanPx","leftBp","rightBp","iterMap","iter","sizeHint","results","from","l","findLast","renameRegionIfNeeded","newRef","originalRefName","renameRegionsIfNeeded","assemblyMaps","minmax","short","shorten2","coord","oob","useAssemblyName","complementTable","S","w","N","K","Y","V","M","h","g","W","X","B","H","D","R","revcom","revcomped","reverse","complement","comp","rIC","requestIdleCallback","widths","measureText","total","charCodeAt","getFrame","strand","phase","defaultStarts","defaultStops","defaultCodonTable","TCA","TCC","TCG","TCT","TTC","TTT","TTA","TTG","TAC","TAT","TAA","TAG","TGC","TGT","TGA","TGG","CTA","CTC","CTG","CTT","CCA","CCC","CCG","CCT","CAC","CAT","CAA","CAG","CGA","CGC","CGG","CGT","ATA","ATC","ATT","ATG","ACA","ACC","ACG","ACT","AAC","AAT","AAA","AAG","AGC","AGT","AGA","AGG","GTA","GTC","GTG","GTT","GCA","GCC","GCG","GCT","GAC","GAT","GAA","GAG","GGA","GGC","GGG","GGT","generateCodonTable","table","tempCodonTable","codon","aa","nucs","nuc","charAt","n0","j","n1","updateStatus","fn","updateStatus2","checkStopToken","hashCode","hash","bytesForRegions","blockResults","blocksForRange","flat","minv","blockPosition","maxv","reduce","isSupportedIndexingAdapter","getBpDisplayStr","parseFloat","toPrecision","getProgressDisplayStr","getTickDisplayStr","totalBp","toFixed","getViewParams","exportSVG","dynamicBlocks","staticBlocks","offsetPx","contentBlocks","staticblock","staticblock1","offsetPx1","getLayoutId","layoutId","initialValue","storedValue","setStoredValue","valueToStore","Function","getUriLink","getStr","isObject","coarseStripHTML","measureGridWidth","elements","stripHTML","getEnvMST","init","NEGATIVE_INFINITY","sum","avg","groupBy","mergeIntervals","intervals","stack","gatherOverlaps","memo","flatMap","group","stripAlpha","colord","toHex","getStrokeProps","strokeOpacity","stroke","getFillProps","fillOpacity","renderToStaticMarkup","div","flushSync","createRoot","render","isGzip","buf","fetchAndMaybeUnzip","unzip","fetchAndMaybeUnzipText","buffer","fatal","localStorageGetNumber","defaultVal","forEachWithStopTokenCheck","durationMs","performance","testAdapter","fileName","regex","expected"],"sourceRoot":""}