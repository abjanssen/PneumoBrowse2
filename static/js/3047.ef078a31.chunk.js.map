{"version":3,"file":"static/js/3047.ef078a31.chunk.js","mappings":"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","sources":["../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/components/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyDisplay/drawSynteny.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGBackground.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGLinearGenomeView.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/svgcomponents/SVGLinearSyntenyView.tsx"],"sourcesContent":["import React from 'react'\nimport {\n  assembleLocString,\n  doesIntersect2,\n  getSession,\n  isSessionModelWithWidgets,\n  Feature,\n  getContainingTrack,\n  getContainingView,\n} from '@jbrowse/core/util'\n\n// locals\nimport { getId, MAX_COLOR_RANGE } from '../drawSynteny'\nimport { LinearSyntenyDisplayModel } from '../model'\n\ninterface Pos {\n  offsetPx: number\n}\n\nexport interface ClickCoord {\n  clientX: number\n  clientY: number\n  feature: { f: Feature }\n}\n\ninterface FeatPos {\n  p11: Pos\n  p12: Pos\n  p21: Pos\n  p22: Pos\n  f: Feature\n  cigar: string[]\n}\n\nexport function drawMatchSimple({\n  feature,\n  ctx,\n  offsets,\n  level,\n  cb,\n  height,\n  drawCurves,\n  oobLimit,\n  viewWidth,\n  hideTiny,\n}: {\n  feature: FeatPos\n  ctx: CanvasRenderingContext2D\n  offsets: number[]\n  level: number\n  oobLimit: number\n  viewWidth: number\n  cb: (ctx: CanvasRenderingContext2D) => void\n  height: number\n  drawCurves?: boolean\n  hideTiny?: boolean\n}) {\n  const { p11, p12, p21, p22 } = feature\n\n  const x11 = p11.offsetPx - offsets[level]!\n  const x12 = p12.offsetPx - offsets[level]!\n  const x21 = p21.offsetPx - offsets[level + 1]!\n  const x22 = p22.offsetPx - offsets[level + 1]!\n\n  const l1 = Math.abs(x12 - x11)\n  const l2 = Math.abs(x22 - x21)\n  const y1 = 0\n  const y2 = height\n  const mid = (y2 - y1) / 2\n  const minX = Math.min(x21, x22)\n  const maxX = Math.max(x21, x22)\n\n  if (!doesIntersect2(minX, maxX, -oobLimit, viewWidth + oobLimit)) {\n    return\n  }\n\n  // drawing a line if the results are thin: drawing a line results in much\n  // less pixellation than filling in a thin polygon\n  if (l1 <= 1 && l2 <= 1) {\n    // hideTiny can be used to avoid drawing mouseover for thin lines in this\n    // case\n    if (!hideTiny) {\n      ctx.beginPath()\n      ctx.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx.lineTo(x21, y2)\n      }\n      ctx.stroke()\n    }\n  } else {\n    draw(ctx, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n    cb(ctx)\n  }\n}\n\nexport function draw(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n  drawCurves?: boolean,\n) {\n  if (drawCurves) {\n    drawBezierBox(ctx, x1, x2, y1, x3, x4, y2, mid)\n  } else {\n    drawBox(ctx, x1, x2, y1, x3, x4, y2)\n  }\n}\n\nexport function drawBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n) {\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.lineTo(x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.closePath()\n}\n\nexport function drawBezierBox(\n  ctx: CanvasRenderingContext2D,\n  x1: number,\n  x2: number,\n  y1: number,\n  x3: number,\n  x4: number,\n  y2: number,\n  mid: number,\n) {\n  const len1 = Math.abs(x1 - x2)\n  const len2 = Math.abs(x1 - x2)\n\n  // heuristic to not draw hourglass inversions with bezier curves when they\n  // are thin and far apart because it results in areas that are not drawn well\n  // demo https://codesandbox.io/s/fast-glitter-q3b1or?file=/src/index.js\n  if (len1 < 5 && len2 < 5 && x2 < x1 && Math.abs(x1 - x3) > 100) {\n    const tmp = x1\n    x1 = x2\n    x2 = tmp\n  }\n  ctx.beginPath()\n  ctx.moveTo(x1, y1)\n  ctx.lineTo(x2, y1)\n  ctx.bezierCurveTo(x2, mid, x3, mid, x3, y2)\n  ctx.lineTo(x4, y2)\n  ctx.bezierCurveTo(x4, mid, x1, mid, x1, y1)\n  ctx.closePath()\n}\n\nexport function onSynClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n) {\n  const view = getContainingView(model)\n  const track = getContainingTrack(model)\n  const {\n    featPositions,\n    numFeats,\n    clickMapCanvas: ref1,\n    cigarClickMapCanvas: ref2,\n    level,\n  } = model\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const x = event.clientX - rect.left\n  const y = event.clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const feat = featPositions[id]\n  if (feat) {\n    const { f } = feat\n    model.setClickId(f.id())\n    const session = getSession(model)\n    if (isSessionModelWithWidgets(session)) {\n      session.showWidget(\n        session.addWidget('SyntenyFeatureWidget', 'syntenyFeature', {\n          view,\n          track,\n          featureData: f.toJSON(),\n          level,\n        }),\n      )\n    }\n  }\n  return feat\n}\n\nexport function onSynContextClick(\n  event: React.MouseEvent,\n  model: LinearSyntenyDisplayModel,\n  setAnchorEl: (arg: ClickCoord) => void,\n) {\n  event.preventDefault()\n  const ref1 = model.clickMapCanvas\n  const ref2 = model.cigarClickMapCanvas\n  if (!ref1 || !ref2) {\n    return\n  }\n  const rect = ref1.getBoundingClientRect()\n  const ctx1 = ref1.getContext('2d')\n  const ctx2 = ref2.getContext('2d')\n  if (!ctx1 || !ctx2) {\n    return\n  }\n  const { clientX, clientY } = event\n  const x = clientX - rect.left\n  const y = clientY - rect.top\n  const [r1, g1, b1] = ctx1.getImageData(x, y, 1, 1).data\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / model.numFeats)\n  const id = getId(r1!, g1!, b1!, unitMultiplier)\n  const f = model.featPositions[id]\n  if (f) {\n    model.setClickId(f.f.id())\n    setAnchorEl({ clientX, clientY, feature: f })\n  }\n}\n\nexport function getTooltip({\n  feature,\n  cigarOp,\n  cigarOpLen,\n}: {\n  feature: Feature\n  cigarOp?: string\n  cigarOpLen?: string\n}) {\n  // @ts-expect-error\n  const f1 = feature.toJSON() as {\n    refName: string\n    start: number\n    end: number\n    strand?: number\n    assemblyName: string\n    identity?: number\n    name?: string\n    mate: {\n      start: number\n      end: number\n      refName: string\n      name: string\n    }\n  }\n  const f2 = f1.mate\n  const l1 = f1.end - f1.start\n  const l2 = f2.end - f2.start\n  const identity = f1.identity\n  const n1 = f1.name\n  const n2 = f2.name\n  return [\n    `Loc1: ${assembleLocString(f1)}`,\n    `Loc2: ${assembleLocString(f2)}`,\n    `Inverted: ${f1.strand === -1}`,\n    `Query len: ${l1.toLocaleString('en-US')}`,\n    `Target len: ${l2.toLocaleString('en-US')}`,\n    identity ? `Identity: ${identity.toPrecision(2)}` : '',\n    cigarOp ? `CIGAR operator: ${cigarOp}${cigarOpLen}` : '',\n    n1 ? `Name 1: ${n1}` : '',\n    n2 ? `Name 1: ${n2}` : '',\n  ]\n    .filter(f => !!f)\n    .join('<br/>')\n}\n","import { doesIntersect2, getContainingView } from '@jbrowse/core/util'\n// locals\nimport { LinearSyntenyViewModel } from '../LinearSyntenyView/model'\nimport { LinearSyntenyDisplayModel } from './model'\nimport { draw, drawMatchSimple } from './components/util'\n\nexport const MAX_COLOR_RANGE = 255 * 255 * 255 // max color range\n\nfunction makeColor(idx: number) {\n  const r = Math.floor(idx / (255 * 255)) % 255\n  const g = Math.floor(idx / 255) % 255\n  const b = idx % 255\n  return `rgb(${r},${g},${b})`\n}\n\nconst colorMap = {\n  I: '#ff03',\n  N: '#0a03',\n  D: '#00f3',\n  X: 'brown',\n  M: '#f003',\n  '=': '#f003',\n}\n\nconst lineLimit = 3\n\nconst oobLimit = 1600\n\nexport function getId(r: number, g: number, b: number, unitMultiplier: number) {\n  return Math.floor((r * 255 * 255 + g * 255 + b - 1) / unitMultiplier)\n}\n\nexport function drawRef(\n  model: LinearSyntenyDisplayModel,\n  ctx1: CanvasRenderingContext2D,\n  ctx3?: CanvasRenderingContext2D,\n) {\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const drawCIGAR = view.drawCIGAR\n  const { level, height, featPositions } = model\n  const width = view.width\n  const bpPerPxs = view.views.map(v => v.bpPerPx)\n\n  if (ctx3) {\n    ctx3.imageSmoothingEnabled = false\n  }\n\n  ctx1.beginPath()\n  const offsets = view.views.map(v => v.offsetPx)\n  const unitMultiplier = Math.floor(MAX_COLOR_RANGE / featPositions.length)\n\n  // this loop is optimized to draw many thin lines with a single ctx.stroke\n  // call, a separate loop below draws larger boxes\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22 } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    // drawing a line if the results are thin results in much less pixellation\n    // than filling in a thin polygon\n    if (\n      l1 <= lineLimit &&\n      l2 <= lineLimit &&\n      x21 < width + oobLimit &&\n      x21 > -oobLimit\n    ) {\n      ctx1.moveTo(x11, y1)\n      if (drawCurves) {\n        ctx1.bezierCurveTo(x11, mid, x21, mid, x21, y2)\n      } else {\n        ctx1.lineTo(x21, y2)\n      }\n    }\n  }\n  ctx1.stroke()\n\n  // this loop only draws small lines as a polyline, the polyline calls\n  // ctx.stroke once is much more efficient than calling stroke() many times\n  ctx1.fillStyle = colorMap.M\n  ctx1.strokeStyle = colorMap.M\n  for (const { p11, p12, p21, p22, f, cigar } of featPositions) {\n    const x11 = p11.offsetPx - offsets[level]!\n    const x12 = p12.offsetPx - offsets[level]!\n    const x21 = p21.offsetPx - offsets[level + 1]!\n    const x22 = p22.offsetPx - offsets[level + 1]!\n    const l1 = Math.abs(x12 - x11)\n    const l2 = Math.abs(x22 - x21)\n    const minX = Math.min(x21, x22)\n    const maxX = Math.max(x21, x22)\n    const y1 = 0\n    const y2 = height\n    const mid = (y2 - y1) / 2\n\n    if (\n      !(l1 <= lineLimit && l2 <= lineLimit) &&\n      doesIntersect2(minX, maxX, -oobLimit, view.width + oobLimit)\n    ) {\n      const s1 = f.get('strand')\n      const k1 = s1 === -1 ? x12 : x11\n      const k2 = s1 === -1 ? x11 : x12\n\n      // rev1/rev2 flip the direction of the CIGAR drawing in horizontally flipped\n      // modes. somewhat heuristically determined, but tested for\n      const rev1 = k1 < k2 ? 1 : -1\n      const rev2 = (x21 < x22 ? 1 : -1) * s1\n\n      // cx1/cx2 are the current x positions on top and bottom rows\n      let cx1 = k1\n      let cx2 = s1 === -1 ? x22 : x21\n      if (cigar.length && drawCIGAR) {\n        // continuingFlag skips drawing commands on very small CIGAR features\n        let continuingFlag = false\n\n        // px1/px2 are the previous x positions on the top and bottom rows\n        let px1 = 0\n        let px2 = 0\n        const unitMultiplier2 = Math.floor(MAX_COLOR_RANGE / cigar.length)\n        for (let j = 0; j < cigar.length; j += 2) {\n          const idx = j * unitMultiplier2 + 1\n\n          const len = +cigar[j]!\n          const op = cigar[j + 1] as keyof typeof colorMap\n\n          if (!continuingFlag) {\n            px1 = cx1\n            px2 = cx2\n          }\n\n          const d1 = len / bpPerPxs[level]!\n          const d2 = len / bpPerPxs[level + 1]!\n\n          if (op === 'M' || op === '=' || op === 'X') {\n            cx1 += d1 * rev1\n            cx2 += d2 * rev2\n          } else if (op === 'D' || op === 'N') {\n            cx1 += d1 * rev1\n          }\n          // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n          else if (op === 'I') {\n            cx2 += d2 * rev2\n          }\n\n          // check that we are even drawing in view here, e.g. that all\n          // points are not all less than 0 or greater than width\n          if (\n            !(\n              Math.max(px1, px2, cx1, cx2) < 0 ||\n              Math.min(px1, px2, cx1, cx2) > width\n            )\n          ) {\n            // if it is a small feature and not the last element of the\n            // CIGAR (which could skip rendering it entire if we did turn\n            // it on), then turn on continuing flag\n            const isNotLast = j < cigar.length - 2\n            if (\n              Math.abs(cx1 - px1) <= 1 &&\n              Math.abs(cx2 - px2) <= 1 &&\n              isNotLast\n            ) {\n              continuingFlag = true\n            } else {\n              // allow rendering the dominant color when using continuing\n              // flag if the last element of continuing was a large\n              // feature, else just use match\n              ctx1.fillStyle =\n                colorMap[(continuingFlag && d1 > 1) || d2 > 1 ? op : 'M']\n              continuingFlag = false\n\n              draw(ctx1, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n              ctx1.fill()\n              if (ctx3) {\n                ctx3.fillStyle = makeColor(idx)\n                draw(ctx3, px1, cx1, y1, cx2, px2, y2, mid, drawCurves)\n                ctx3.fill()\n              }\n            }\n          }\n        }\n      } else {\n        draw(ctx1, x11, x12, y1, x22, x21, y2, mid, drawCurves)\n        ctx1.fill()\n      }\n    }\n  }\n\n  // draw click map\n  const ctx2 = model.clickMapCanvas?.getContext('2d')\n  if (!ctx2) {\n    return\n  }\n  ctx2.imageSmoothingEnabled = false\n  ctx2.clearRect(0, 0, width, height)\n  for (let i = 0; i < featPositions.length; i++) {\n    const feature = featPositions[i]!\n    const idx = i * unitMultiplier + 1\n    ctx2.fillStyle = makeColor(idx)\n\n    // too many click map false positives with colored stroked lines\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature,\n      ctx: ctx2,\n      drawCurves,\n      level,\n      offsets,\n      oobLimit,\n      viewWidth: view.width,\n      hideTiny: true,\n      height,\n    })\n  }\n}\n\nexport function drawMouseoverSynteny(model: LinearSyntenyDisplayModel) {\n  const { level, clickId, mouseoverId } = model\n  const highResolutionScaling = 1\n  const view = getContainingView(model) as LinearSyntenyViewModel\n  const drawCurves = view.drawCurves\n  const height = model.height\n  const width = view.width\n  const ctx = model.mouseoverCanvas?.getContext('2d')\n  const offsets = view.views.map(v => v.offsetPx)\n\n  if (!ctx) {\n    return\n  }\n  ctx.resetTransform()\n  ctx.scale(highResolutionScaling, highResolutionScaling)\n  ctx.clearRect(0, 0, width, height)\n  ctx.strokeStyle = 'rgba(0, 0, 0, 0.9)'\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.1)'\n  const feature1 = model.featMap[mouseoverId || '']\n  if (feature1) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.fill()\n      },\n      feature: feature1,\n      level,\n      ctx,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n  const feature2 = model.featMap[clickId || '']\n  if (feature2) {\n    drawMatchSimple({\n      cb: ctx => {\n        ctx.stroke()\n      },\n      feature: feature2,\n      ctx,\n      level,\n      oobLimit,\n      viewWidth: view.width,\n      drawCurves,\n      offsets,\n      height,\n    })\n  }\n}\n","import React from 'react'\nimport { useTheme } from '@mui/material'\nimport { stripAlpha } from '@jbrowse/core/util'\n\nexport default function SVGBackground({\n  width,\n  height,\n  shift,\n}: {\n  width: number\n  height: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <rect\n      width={width + shift * 2}\n      height={height}\n      fill={stripAlpha(theme.palette.background.default)}\n    />\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@mui/material'\nimport { getFillProps } from '@jbrowse/core/util'\nimport {\n  SVGTracks,\n  SVGRuler,\n  LinearGenomeViewModel,\n} from '@jbrowse/plugin-linear-genome-view'\n\nexport default function SVGLinearGenomeView({\n  trackLabelOffset,\n  fontSize,\n  textHeight,\n  trackLabels,\n  view,\n  displayResults,\n  rulerHeight,\n  shift,\n}: {\n  textHeight: number\n  trackLabels: string\n  trackLabelOffset: number\n  fontSize: number\n  view: LinearGenomeViewModel\n\n  displayResults: any\n  rulerHeight: number\n  shift: number\n}) {\n  const theme = useTheme()\n  return (\n    <g transform={`translate(${shift} ${fontSize})`}>\n      <g transform={`translate(${trackLabelOffset})`}>\n        <text\n          x={0}\n          fontSize={fontSize}\n          {...getFillProps(theme.palette.text.primary)}\n        >\n          {view.assemblyNames.join(', ')}\n        </text>\n        <SVGRuler model={displayResults.view} fontSize={fontSize} />\n      </g>\n      <g transform={`translate(0 ${rulerHeight + fontSize})`}>\n        <SVGTracks\n          textHeight={textHeight}\n          trackLabels={trackLabels}\n          fontSize={fontSize}\n          model={displayResults.view}\n          displayResults={displayResults.data}\n          trackLabelOffset={trackLabelOffset}\n        />\n      </g>\n    </g>\n  )\n}\n","import React from 'react'\nimport { ThemeProvider } from '@mui/material'\nimport { getRoot } from 'mobx-state-tree'\nimport { when } from 'mobx'\nimport {\n  getSession,\n  getSerializedSvg,\n  max,\n  measureText,\n  ReactRendering,\n  renderToAbstractCanvas,\n  renderToStaticMarkup,\n  sum,\n} from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { createJBrowseTheme } from '@jbrowse/core/ui'\nimport { totalHeight } from '@jbrowse/plugin-linear-genome-view'\n\n// locals\nimport SVGBackground from './SVGBackground'\nimport SVGLinearGenomeView from './SVGLinearGenomeView'\nimport { ExportSvgOptions, LinearSyntenyViewModel } from '../model'\nimport { drawRef } from '../../LinearSyntenyDisplay/drawSynteny'\n\n// render LGV to SVG\nexport async function renderToSvg(\n  model: LinearSyntenyViewModel,\n  opts: ExportSvgOptions,\n) {\n  await when(() => model.initialized)\n  const {\n    textHeight = 18,\n    rulerHeight = 30,\n    fontSize = 13,\n    trackLabels = 'offset',\n    Wrapper = ({ children }) => children,\n    themeName = 'default',\n  } = opts\n  const session = getSession(model)\n  const themeVar = session.allThemes?.()[themeName]\n  const { width, views, levels } = model\n  const shift = 50\n  const offset = rulerHeight\n\n  const { createRootFn } = getRoot<any>(model)\n  const heights = views.map(\n    v => totalHeight(v.tracks, textHeight, trackLabels) + offset,\n  )\n  const totalHeightSvg = sum(heights) + sum(levels.map(l => l.height)) + 100\n\n  const displayResults = await Promise.all(\n    views.map(\n      async view =>\n        ({\n          view,\n          data: await Promise.all(\n            view.tracks.map(async track => {\n              const d = track.displays[0]\n              await when(() => (d.ready !== undefined ? d.ready : true))\n              return {\n                track,\n                result: await d.renderSvg({ ...opts, theme: themeVar }),\n              }\n            }),\n          ),\n        }) as const,\n    ),\n  )\n\n  const renderings = await Promise.all(\n    levels.map(\n      async level =>\n        await Promise.all(\n          level.tracks.map(async track => {\n            const d = track.displays[0]\n            await when(() => (d.ready !== undefined ? d.ready : true))\n            const r = await renderToAbstractCanvas(\n              width,\n              level.height,\n              { exportSVG: opts },\n              ctx => {\n                drawRef(d, ctx)\n                return undefined\n              },\n            )\n\n            if ('imageData' in r) {\n              throw new Error('found a canvas in svg export, probably a bug')\n            } else if ('canvasRecordedData' in r) {\n              return {\n                html: await getSerializedSvg({\n                  ...r,\n                  width,\n                  height: level.height,\n                }),\n              }\n            } else {\n              return r\n            }\n          }),\n        ),\n    ),\n  )\n\n  const trackLabelMaxLen =\n    max(\n      views.flatMap(view =>\n        view.tracks.map(track =>\n          measureText(getTrackName(track.configuration, session), fontSize),\n        ),\n      ),\n      0,\n    ) + 40\n  const trackLabelOffset = trackLabels === 'left' ? trackLabelMaxLen : 0\n  const w = width + trackLabelOffset\n  const theme = createJBrowseTheme(themeVar)\n  const RenderList = [\n    <SVGLinearGenomeView\n      rulerHeight={rulerHeight}\n      trackLabelOffset={trackLabelOffset}\n      shift={shift}\n      textHeight={textHeight}\n      trackLabels={trackLabels}\n      displayResults={displayResults[0]}\n      key={views[0]!.id}\n      view={views[0]!}\n      fontSize={fontSize}\n    />,\n  ] as React.ReactNode[]\n  let currOffset = heights[0]! + fontSize + rulerHeight\n  for (let i = 1; i < views.length; i++) {\n    const view = views[i]!\n    const level = levels[i - 1]!\n    const rendering = renderings[i - 1]\n    const height = heights[i]!\n    const levelHeight = level.height || 0\n    RenderList.push(\n      <g key={view.id} transform={`translate(0 ${currOffset})`}>\n        {levelHeight ? (\n          <defs>\n            <clipPath id={`synclip-${i}`}>\n              <rect x={0} y={0} width={width} height={levelHeight} />\n            </clipPath>\n          </defs>\n        ) : null}\n        <g\n          transform={`translate(${shift + trackLabelOffset} ${fontSize})`}\n          clipPath={`url(#synclip-${i})`}\n        >\n          {rendering?.map((r, i) => (\n            /* biome-ignore lint/suspicious/noArrayIndexKey: */\n            <ReactRendering key={i} rendering={r} />\n          ))}\n        </g>\n        <g transform={`translate(0 ${levelHeight})`}>\n          <SVGLinearGenomeView\n            rulerHeight={rulerHeight}\n            shift={shift}\n            trackLabelOffset={trackLabelOffset}\n            textHeight={textHeight}\n            trackLabels={trackLabels}\n            displayResults={displayResults[i]}\n            key={view.id}\n            view={view}\n            fontSize={fontSize}\n          />\n        </g>\n      </g>,\n    )\n    currOffset += height + fontSize + rulerHeight + levelHeight\n  }\n\n  // the xlink namespace is used for rendering <image> tag\n  return renderToStaticMarkup(\n    <ThemeProvider theme={theme}>\n      <Wrapper>\n        <svg\n          width={width}\n          height={totalHeightSvg}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox={[0, 0, w + shift * 2, totalHeightSvg].toString()}\n        >\n          <SVGBackground width={w} height={totalHeightSvg} shift={shift} />\n          {RenderList}\n        </svg>\n      </Wrapper>\n    </ThemeProvider>,\n    createRootFn,\n  )\n}\n"],"names":["drawMatchSimple","feature","ctx","offsets","level","cb","height","drawCurves","oobLimit","viewWidth","hideTiny","p11","p12","p21","p22","x11","offsetPx","x12","x21","x22","l1","Math","abs","l2","y2","mid","minX","min","maxX","max","doesIntersect2","beginPath","moveTo","bezierCurveTo","lineTo","stroke","draw","x1","x2","y1","x3","x4","len1","len2","tmp","closePath","drawBezierBox","drawBox","onSynClick","event","model","view","getContainingView","track","getContainingTrack","featPositions","numFeats","clickMapCanvas","ref1","cigarClickMapCanvas","ref2","rect","getBoundingClientRect","ctx1","getContext","ctx2","x","clientX","left","y","clientY","top","r1","g1","b1","getImageData","data","unitMultiplier","floor","MAX_COLOR_RANGE","feat","getId","f","setClickId","id","session","getSession","isSessionModelWithWidgets","showWidget","addWidget","featureData","toJSON","onSynContextClick","setAnchorEl","preventDefault","getTooltip","cigarOp","cigarOpLen","f1","f2","mate","end","start","identity","n1","name","n2","assembleLocString","strand","toLocaleString","toPrecision","filter","join","makeColor","idx","colorMap","I","N","D","X","M","lineLimit","r","g","b","drawRef","ctx3","drawCIGAR","width","bpPerPxs","views","map","v","bpPerPx","imageSmoothingEnabled","length","fillStyle","strokeStyle","cigar","s1","get","k1","rev1","rev2","cx1","cx2","continuingFlag","px1","px2","unitMultiplier2","j","len","op","d1","d2","isNotLast","fill","clearRect","i","drawMouseoverSynteny","clickId","mouseoverId","mouseoverCanvas","resetTransform","scale","feature1","featMap","feature2","SVGBackground","shift","theme","useTheme","React","stripAlpha","palette","background","default","SVGLinearGenomeView","trackLabelOffset","fontSize","textHeight","trackLabels","displayResults","rulerHeight","transform","_extends","getFillProps","text","primary","assemblyNames","SVGRuler","SVGTracks","async","renderToSvg","opts","when","initialized","Wrapper","children","themeName","themeVar","allThemes","levels","offset","createRootFn","getRoot","heights","totalHeight","tracks","totalHeightSvg","sum","l","Promise","all","d","displays","undefined","ready","result","renderSvg","renderings","renderToAbstractCanvas","exportSVG","Error","html","getSerializedSvg","trackLabelMaxLen","flatMap","measureText","getTrackName","configuration","w","createJBrowseTheme","RenderList","key","currOffset","rendering","levelHeight","push","clipPath","ReactRendering","renderToStaticMarkup","ThemeProvider","xmlns","xmlnsXlink","viewBox","toString"],"sourceRoot":""}