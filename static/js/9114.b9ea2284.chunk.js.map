{"version":3,"file":"static/js/9114.b9ea2284.chunk.js","mappings":"2NASA,MAAMA,GAAiCC,EAAAA,EAAAA,OACrC,IAAM,kCAEFC,GAAkCD,EAAAA,EAAAA,OACtC,IAAM,iCAGO,SAASE,GAAwC,MAC9DC,EAAK,QACLC,IAKA,MAAMC,GAAUC,EAAAA,EAAAA,YAAWH,GACrBI,EAAK,CACTC,SAAUJ,EAAQI,SAClBC,QAASL,EAAQK,QACjBC,MAAON,EAAQM,MACfC,IAAKP,EAAQO,IACbC,OAAQR,EAAQQ,QAEZC,EAAK,CACTL,SAAU,GAAGJ,EAAQU,UACrBL,QAASL,EAAQW,SACjBL,MAAON,EAAQY,SACfL,IAAMP,EAAQY,SAAsB,EACpCJ,OAAQR,EAAQQ,QAElB,OACEK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAF,SAAC,uBACZC,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGX,EAAGE,QAAQ,KAAEY,EAAAA,EAAAA,UAASd,EAAGG,OAAO,OAAQG,EAAGJ,QAAQ,KACnDY,EAAAA,EAAAA,UAASR,EAAGH,OAAQ,KACrBS,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACNrB,EAAQsB,aAAYC,GAAe,CACjC7B,EACA,CACE6B,cACAvB,UACAD,QAAS,IAAIyB,EAAAA,cAAc,IAAKtB,EAAIuB,KAAMjB,IAC1CkB,KAAM5B,EAAM4B,KACZC,aAAc7B,EAAM4B,KAAKE,iBAAiB,GAAGD,gBAE/C,EACFd,SACH,iBAEO,KACRC,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHC,KAAK,IACLC,QAASC,IACPA,EAAMC,iBACNrB,EAAQsB,aAAYC,GAAe,CACjC3B,EACA,CACE2B,cACAvB,UACAD,QAAS,IAAIyB,EAAAA,cAAc,IAAKtB,EAAIuB,KAAMjB,IAC1CkB,KAAM5B,EAAM4B,KACZC,aAAc7B,EAAM4B,KAAKE,iBAAiB,GAAGD,gBAE/C,EACFd,SACH,wBAOX,CC7Ee,SAASgB,EAAeC,GAIrC,MAAM,MAAEhC,EAAK,QAAEC,GAAY+B,EACrB9B,GAAUC,EAAAA,EAAAA,YAAWH,IACrB,cAAEiC,IAAkBC,EAAAA,EAAAA,QAAOhC,GACjC,IAAIiC,GAAuB,EAE3B,IACEA,IAAyBF,EAAcG,YAAY,sBACrD,CAAE,MAAOC,GACP,CAEF,OAAOF,GACLnB,EAAAA,EAAAA,KAACsB,EAAAA,QAAQ,IAAKN,EAAOO,MAAM,oBAAmBxB,UAC5CC,EAAAA,EAAAA,KAACjB,EAAuC,CACtCC,MAAOA,EACPC,QAASA,MAGX,IACN,C","sources":["../../../plugins/alignments/src/AlignmentsFeatureDetail/LaunchPairedEndBreakpointSplitViewPanel.tsx","../../../plugins/alignments/src/AlignmentsFeatureDetail/LinkedPairedAlignments.tsx"],"sourcesContent":["import { lazy } from 'react'\n\nimport { SimpleFeature, getSession, toLocale } from '@jbrowse/core/util'\nimport { Link, Typography } from '@mui/material'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\n// lazies\nconst BreakendMultiLevelOptionDialog = lazy(\n  () => import('./BreakendMultiLevelOptionDialog'),\n)\nconst BreakendSingleLevelOptionDialog = lazy(\n  () => import('./BreakendSingleLevelOptionDialog'),\n)\n\nexport default function LaunchPairedEndBreakpointSplitViewPanel({\n  model,\n  feature,\n}: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const session = getSession(model)\n  const f1 = {\n    uniqueId: feature.uniqueId,\n    refName: feature.refName,\n    start: feature.start,\n    end: feature.end,\n    strand: feature.strand,\n  }\n  const f2 = {\n    uniqueId: `${feature.id}-mate`,\n    refName: feature.next_ref as string,\n    start: feature.next_pos as number,\n    end: (feature.next_pos as number) + 1,\n    strand: feature.strand as number,\n  }\n  return (\n    <div>\n      <Typography>Launch split view</Typography>\n      <ul>\n        <li>\n          {f1.refName}:{toLocale(f1.start)} -&gt; {f2.refName}:\n          {toLocale(f2.start)}{' '}\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              session.queueDialog(handleClose => [\n                BreakendMultiLevelOptionDialog,\n                {\n                  handleClose,\n                  session,\n                  feature: new SimpleFeature({ ...f1, mate: f2 }),\n                  view: model.view,\n                  assemblyName: model.view.displayedRegions[0].assemblyName,\n                },\n              ])\n            }}\n          >\n            (top/bottom)\n          </Link>{' '}\n          <Link\n            href=\"#\"\n            onClick={event => {\n              event.preventDefault()\n              session.queueDialog(handleClose => [\n                BreakendSingleLevelOptionDialog,\n                {\n                  handleClose,\n                  session,\n                  feature: new SimpleFeature({ ...f1, mate: f2 }),\n                  view: model.view,\n                  assemblyName: model.view.displayedRegions[0].assemblyName,\n                },\n              ])\n            }}\n          >\n            (single row)\n          </Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n","import BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard'\nimport { getEnv, getSession } from '@jbrowse/core/util'\n\nimport LaunchPairedEndBreakpointSplitViewPanel from './LaunchPairedEndBreakpointSplitViewPanel'\n\nimport type { AlignmentFeatureWidgetModel } from './stateModelFactory'\nimport type { SimpleFeatureSerialized } from '@jbrowse/core/util'\n\nexport default function SuppAlignments(props: {\n  model: AlignmentFeatureWidgetModel\n  feature: SimpleFeatureSerialized\n}) {\n  const { model, feature } = props\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  let hasBreakendSplitView = false\n\n  try {\n    hasBreakendSplitView = !!pluginManager.getViewType('BreakpointSplitView')\n  } catch (e) {\n    // ignore\n  }\n  return hasBreakendSplitView ? (\n    <BaseCard {...props} title=\"Paired alignments\">\n      <LaunchPairedEndBreakpointSplitViewPanel\n        model={model}\n        feature={feature}\n      />\n    </BaseCard>\n  ) : null\n}\n"],"names":["BreakendMultiLevelOptionDialog","lazy","BreakendSingleLevelOptionDialog","LaunchPairedEndBreakpointSplitViewPanel","model","feature","session","getSession","f1","uniqueId","refName","start","end","strand","f2","id","next_ref","next_pos","_jsxs","children","_jsx","Typography","toLocale","Link","href","onClick","event","preventDefault","queueDialog","handleClose","SimpleFeature","mate","view","assemblyName","displayedRegions","SuppAlignments","props","pluginManager","getEnv","hasBreakendSplitView","getViewType","e","BaseCard","title"],"sourceRoot":""}