{"version":3,"file":"static/js/9589.9087e0ea.chunk.js","mappings":"gPAYA,MAAMA,GAAYC,E,SAAAA,KAAAA,CAAa,CAC7BC,KAAM,CACJC,MAAO,OA4DX,GAxD2BC,EAAAA,EAAAA,WAAS,SAAUC,GAO5C,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,QAAEG,GAAYR,KACd,UAAES,EAAY,IAAOH,GACpBI,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,GAAGH,KAElC,OACEI,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAAST,EAAaU,MAAM,kBACvCJ,EAAAA,cAACK,EAAAA,EAAa,CAACC,UAAWX,EAAQN,MAChCW,EAAAA,cAACO,EAAAA,EAAU,KAAC,4GAIZP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAOZ,EACPa,WAAS,EACTC,SAAUC,IACRd,EAAOc,EAAMC,OAAOJ,MAAM,EAE5BK,YAAY,gCAEdd,EAAAA,cAACe,EAAAA,EAAa,KACZf,EAAAA,cAACgB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLT,WAAS,EACTU,QAASA,KACP3B,EAAM4B,aACI,KAARxB,GAAeyB,OAAOC,OAAO1B,QAAc2B,GAAN3B,GAEvCH,GAAa,GAEhB,UAGDM,EAAAA,cAACgB,EAAAA,EAAM,CACLC,QAAQ,YACRC,MAAM,YACNE,QAASA,KACP1B,GAAa,GAEhB,YAOX,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SetMaxHeightDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\n\nconst useStyles = makeStyles()({\n  root: {\n    width: 500,\n  },\n})\n\nconst SetMaxHeightDialog = observer(function (props: {\n  model: {\n    maxHeight?: number\n    setMaxHeight: (arg?: number) => void\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const { classes } = useStyles()\n  const { maxHeight = '' } = model\n  const [max, setMax] = useState(`${maxHeight}`)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set max height\">\n      <DialogContent className={classes.root}>\n        <Typography>\n          Set max height for the track. For example, you can increase this if\n          the layout says &quot;Max height reached&quot;\n        </Typography>\n        <TextField\n          value={max}\n          autoFocus\n          onChange={event => {\n            setMax(event.target.value)\n          }}\n          placeholder=\"Enter max height for layout\"\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setMaxHeight(\n                max !== '' && !Number.isNaN(+max) ? +max : undefined,\n              )\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\nexport default SetMaxHeightDialog\n"],"names":["useStyles","makeStyles","root","width","observer","props","model","handleClose","classes","maxHeight","max","setMax","useState","React","Dialog","open","onClose","title","DialogContent","className","Typography","TextField","value","autoFocus","onChange","event","target","placeholder","DialogActions","Button","variant","color","type","onClick","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}