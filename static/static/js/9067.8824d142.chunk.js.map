{"version":3,"file":"static/js/9067.8824d142.chunk.js","mappings":"uUAkBe,SAASA,GAAmB,cACzCC,EACAC,aAAcC,EAAe,MAC7BC,EAAK,YACLC,IAOA,MAAMC,GAAUC,EAAAA,EAAAA,YAAWH,IACrB,cAAEI,IAAkBC,EAAAA,EAAAA,QAAOH,IAC3B,gBAAEI,GAAoBJ,EACtBJ,EACJC,GAAmBC,EAAMO,iBAAiB,GAAIT,aAE1CU,EAAWF,EAAgBG,IAAIX,GACrC,IAAKU,EACH,MAAM,IAAIE,MAAM,YAAYZ,eAE9B,IAAKU,EAASG,QACZ,MAAM,IAAID,MAAM,YAAYZ,wBA6B9B,OACEc,EAAAA,cAACC,EAAAA,EAAc,CAACC,UAAWC,EAAAA,GACzBH,EAAAA,cAACI,EAAAA,EAAK,KACJJ,EAAAA,cAACK,EAAAA,EAAS,KACRL,EAAAA,cAACM,EAAAA,EAAQ,KACPN,EAAAA,cAACO,EAAAA,EAAS,KAAC,QACXP,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,SAAQ,YACzBR,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,SAAQ,SACzBR,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,YAGrBR,EAAAA,cAACS,EAAAA,EAAS,KACPxB,EAAcyB,KAAIC,GACjBX,EAAAA,cAACM,EAAAA,EAAQ,CAACM,IAAKD,EAAOE,SACpBb,EAAAA,cAACO,EAAAA,EAAS,CAACL,UAAU,KAAKY,MAAM,OAC7BH,EAAOI,YAEVf,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,SAASG,EAAOK,eACjChB,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,SA5C7B,SAAsBS,GACpB,GAAIA,EAAS,CACX,MAAMC,EAAS1B,EAAc2B,0BAA0B,SACjDC,GAAgBC,EAAAA,EAAAA,mBAAkBH,GAAQI,EAAAA,EAAAA,SAAQlC,GAAQ6B,GAChE,OAAOG,GAAeG,MAAMC,OAAS,EACvC,CACA,MAAO,EACT,CAsCeC,CAAad,EAAOe,eAAiB,OAExC1B,EAAAA,cAACO,EAAAA,EAAS,CAACC,MAAM,SACfR,EAAAA,cAAC2B,EAAAA,EAAM,CACLC,QAASC,UACP,UA1ClBA,eAA2BC,GACzB,IACE,MAAMC,EAAYnC,GAAUG,SAASiC,MACnCC,GAAUH,IAAaG,EAAOC,UAE5BH,GACF3C,EAAM+C,oBAAoB,CAACJ,IAG3B3C,EAAMgD,wBAEAhD,EAAMiD,eAAeP,EAAU5C,EAEzC,CAAE,MAAOoD,GACPC,QAAQC,KAAKF,GACbhD,EAAQmD,OAAO,GAAGH,IAAK,UACzB,CACF,CA0B0BI,CAEJ/B,EAAOK,eAAiBL,EAAOI,YAEjC,MAAM4B,EAAgBhC,EAAOe,aACzBiB,GACFvD,EAAMwD,UAAUD,EAEpB,CAAE,MAAOL,GACPC,QAAQM,MAAMP,GACdhD,EAAQwD,YAAY,GAAGR,IAAKA,EAC9B,CACAjD,GAAa,EAEf0D,MAAM,UACNC,QAAQ,aACT,YAUjB,CC1Ge,SAASC,GAAoB,MAC1C7D,EAAK,aACLF,EAAY,YACZgE,EAAW,cACXjE,EAAa,YACbI,IAQA,OACEW,EAAAA,cAACmD,EAAAA,OAAM,CAACC,MAAI,EAACC,SAAS,KAAKC,QAASjE,EAAakE,MAAM,kBACrDvD,EAAAA,cAACwD,EAAAA,EAAa,KACVvE,GAAewE,OAKfzD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC0D,EAAAA,EAAU,KAAC,uBACU1D,EAAAA,cAAA,SAAIkD,IAE1BlD,EAAAA,cAAChB,EAAkB,CACjBI,MAAOA,EACPC,YAAaA,EACbH,aAAcA,EACdD,cAAeA,KAZnBe,EAAAA,cAAC0D,EAAAA,EAAU,KAAC,wBACW1D,EAAAA,cAAA,SAAIkD,KAgB/BlD,EAAAA,cAAC2D,EAAAA,EAAO,MACR3D,EAAAA,cAAC4D,EAAAA,EAAa,KACZ5D,EAAAA,cAAC2B,EAAAA,EAAM,CACLC,QAASA,KACPvC,GAAa,EAEf0D,MAAM,WACP,WAMT,C,wICjDA,MAUMc,GAAY,QAAO,QAAS,CAChCtC,KAAM,WACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAWE,cAAgBH,EAAOG,aAAa,GAPtD,EASf,QAAU,EACXC,YACI,CACJC,QAAS,QACTC,MAAO,OACPC,eAAgB,WAChBC,cAAe,EACf,YAAa,IACRJ,EAAMK,WAAWC,MACpBC,QAASP,EAAMQ,QAAQ,GACvB9B,OAAQsB,EAAMS,MAAQT,GAAOU,QAAQC,KAAKC,UAC1CC,UAAW,OACXC,YAAa,UAEfC,SAAU,CAAC,CACTpB,MAAO,EACLE,gBACIA,EAAWE,aACjBiB,MAAO,CACLb,eAAgB,mBAIhBc,EAAmB,QAiFzB,EAhF2B,cAAiB,SAAeC,EAASC,GAClE,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,cAEF,UACJkE,EAAS,UACTvF,EAAYoF,EAAgB,QAC5BV,EAAU,SAAQ,KAClBc,EAAO,SAAQ,aACftB,GAAe,KACZuB,GACD3B,EACEE,EAAa,IACdF,EACH9D,YACA0E,UACAc,OACAtB,gBAEIwB,EA/DkB1B,KACxB,MAAM,QACJ0B,EAAO,aACPxB,GACEF,EACE2B,EAAQ,CACZ1B,KAAM,CAAC,OAAQC,GAAgB,iBAEjC,OAAO,OAAeyB,EAAO,IAAsBD,EAAQ,EAuD3CE,CAAkB5B,GAC5B6B,EAAQ,WAAc,KAAM,CAChCnB,UACAc,OACAtB,kBACE,CAACQ,EAASc,EAAMtB,IACpB,OAAoB,SAAK,IAAa4B,SAAU,CAC9CxE,MAAOuE,EACPE,UAAuB,SAAKpC,EAAW,CACrCqC,GAAIhG,EACJiG,KAAMjG,IAAcoF,EAAmB,KAAO,QAC9CE,IAAKA,EACLC,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9BvB,WAAYA,KACTyB,KAGT,G,mCCjFA,Q,QAJkC,e,mCCElC,Q,QAJsC,e,qECH/B,SAASS,EAAqBtC,GACnC,OAAO,QAAqB,WAAYA,EAC1C,CACA,MACA,GADqB,OAAuB,WAAY,CAAC,OAAQ,gB,6HCMjE,MASMuC,GAAgB,QAAO,QAAS,CACpC9E,KAAM,eACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,IAAWA,EAAOE,MAHzB,CAInB,CACDG,QAAS,oBAELgC,EAAY,CAChBtD,QAAS,QAELsC,EAAmB,QAuDzB,EAtD+B,cAAiB,SAAmBC,EAASC,GAC1E,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,kBAEF,UACJkE,EAAS,UACTvF,EAAYoF,KACTK,GACD3B,EACEE,EAAa,IACdF,EACH9D,aAEI0F,EAlCkB1B,KACxB,MAAM,QACJ0B,GACE1B,EAIJ,OAAO,OAHO,CACZC,KAAM,CAAC,SAEoB,IAA0ByB,EAAQ,EA2B/CE,CAAkB5B,GAClC,OAAoB,SAAK,IAAiB8B,SAAU,CAClDxE,MAAO8E,EACPL,UAAuB,SAAKI,EAAe,CACzCZ,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9BS,GAAIhG,EACJsF,IAAKA,EACLW,KAAMjG,IAAcoF,EAAmB,KAAO,WAC9CpB,WAAYA,KACTyB,KAGT,G,qECvDO,SAASY,EAAyBzC,GACvC,OAAO,QAAqB,eAAgBA,EAC9C,CACA,MACA,GADyB,OAAuB,eAAgB,CAAC,Q,uKCUjE,MAcM0C,GAAgB,QAAO,KAAM,CACjCjF,KAAM,eACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAOC,EAAWlB,SAAUiB,EAAO,QAAO,OAAWC,EAAWwB,SAAiC,WAAvBxB,EAAWU,SAAwBX,EAAO,WAAU,OAAWC,EAAWU,YAAkC,YAArBV,EAAW1D,OAAuByD,EAAO,SAAQ,OAAWC,EAAW1D,UAAW0D,EAAWE,cAAgBH,EAAOG,aAAa,GAPrS,EASnB,QAAU,EACXC,YACI,IACDA,EAAMK,WAAWC,MACpBL,QAAS,aACTmC,cAAe,UAGfC,aAAcrC,EAAMS,KAAO,aAAaT,EAAMS,KAAKC,QAAQxE,UAAUoG,SAAW,kBACrD,UAAvBtC,EAAMU,QAAQ6B,MAAmB,QAAQ,QAAMvC,EAAMU,QAAQ8B,QAAS,GAAI,MAAQ,SAAO,QAAMxC,EAAMU,QAAQ8B,QAAS,GAAI,OAC9H3B,UAAW,OACXN,QAAS,GACTQ,SAAU,CAAC,CACTpB,MAAO,CACLhB,QAAS,QAEXqC,MAAO,CACLtC,OAAQsB,EAAMS,MAAQT,GAAOU,QAAQC,KAAK8B,QAC1CC,WAAY1C,EAAMK,WAAWsC,QAAQ,IACrCC,WAAY5C,EAAMK,WAAWwC,mBAE9B,CACDlD,MAAO,CACLhB,QAAS,QAEXqC,MAAO,CACLtC,OAAQsB,EAAMS,MAAQT,GAAOU,QAAQC,KAAK8B,UAE3C,CACD9C,MAAO,CACLhB,QAAS,UAEXqC,MAAO,CACLtC,OAAQsB,EAAMS,MAAQT,GAAOU,QAAQC,KAAKC,UAC1C8B,WAAY1C,EAAMK,WAAWsC,QAAQ,IACrCG,SAAU9C,EAAMK,WAAWsC,QAAQ,MAEpC,CACDhD,MAAO,CACL0B,KAAM,SAERL,MAAO,CACLT,QAAS,WACT,CAAC,KAAK,IAAiBwC,mBAAoB,CACzC7C,MAAO,GAEPK,QAAS,gBACT,QAAS,CACPA,QAAS,MAId,CACDZ,MAAO,CACLY,QAAS,YAEXS,MAAO,CACLd,MAAO,GAEPK,QAAS,cAEV,CACDZ,MAAO,CACLY,QAAS,QAEXS,MAAO,CACLT,QAAS,IAEV,CACDZ,MAAO,CACLxD,MAAO,QAET6E,MAAO,CACLH,UAAW,SAEZ,CACDlB,MAAO,CACLxD,MAAO,UAET6E,MAAO,CACLH,UAAW,WAEZ,CACDlB,MAAO,CACLxD,MAAO,SAET6E,MAAO,CACLH,UAAW,QACXmC,cAAe,gBAEhB,CACDrD,MAAO,CACLxD,MAAO,WAET6E,MAAO,CACLH,UAAW,YAEZ,CACDlB,MAAO,EACLE,gBACIA,EAAWE,aACjBiB,MAAO,CACLiC,SAAU,SACVC,IAAK,EACLC,OAAQ,EACRC,iBAAkBpD,EAAMS,MAAQT,GAAOU,QAAQ2C,WAAWC,gBA8HhE,EArH+B,cAAiB,SAAmBpC,EAASC,GAC1E,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,kBAEF,MACJf,EAAQ,UAAS,UACjBiF,EACAvF,UAAW0H,EACXhD,QAASiD,EACT/G,MAAOgH,EACPpC,KAAMqC,EAAQ,cACdC,EACAhF,QAASiF,KACNtC,GACD3B,EACE+B,EAAQ,aAAiB,KACzBO,EAAY,aAAiB,KAC7B4B,EAAa5B,GAAmC,SAAtBA,EAAUtD,QAC1C,IAAI9C,EAEFA,EADE0H,IAGUM,EAAa,KAAO,MAElC,IAAIpH,EAAQgH,EAGM,OAAd5H,EACFY,OAAQqH,GACErH,GAASoH,IACnBpH,EAAQ,OAEV,MAAMkC,EAAUiF,GAAe3B,GAAaA,EAAUtD,QAChDkB,EAAa,IACdF,EACHxD,QACAN,YACA0E,QAASiD,IAAgB9B,GAASA,EAAMnB,QAAUmB,EAAMnB,QAAU,UAClEc,KAAMqC,IAAahC,GAASA,EAAML,KAAOK,EAAML,KAAO,UACtDsC,gBACA5D,aAA0B,SAAZpB,GAAsB+C,GAASA,EAAM3B,aACnDpB,WAEI4C,EArLkB1B,KACxB,MAAM,QACJ0B,EAAO,QACP5C,EAAO,MACPxC,EAAK,QACLoE,EAAO,KACPc,EAAI,aACJtB,GACEF,EACE2B,EAAQ,CACZ1B,KAAM,CAAC,OAAQnB,EAASoB,GAAgB,eAA0B,YAAV5D,GAAuB,SAAQ,OAAWA,KAAsB,WAAZoE,GAAwB,WAAU,OAAWA,KAAY,QAAO,OAAWc,OAEzL,OAAO,OAAeG,EAAO,IAA0BD,EAAQ,EAyK/CE,CAAkB5B,GAClC,IAAIkE,EAAW,KAIf,OAHIJ,IACFI,EAA6B,QAAlBJ,EAA0B,YAAc,eAEjC,SAAKxB,EAAe,CACtCN,GAAIhG,EACJsF,IAAKA,EACLC,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9B,YAAa2C,EACbtH,MAAOA,EACPoD,WAAYA,KACTyB,GAEP,G,qEChNO,SAAS0C,EAAyBvE,GACvC,OAAO,QAAqB,eAAgBA,EAC9C,CACA,MACA,GADyB,OAAuB,eAAgB,CAAC,OAAQ,OAAQ,OAAQ,SAAU,YAAa,aAAc,kBAAmB,cAAe,YAAa,cAAe,aAAc,eAAgB,gB,kHCK1N,MASMwE,GAAqB,QAAO,MAAO,CACvC/G,KAAM,oBACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,IAAWA,EAAOE,MAHpB,CAIxB,CACDI,MAAO,OACPgE,UAAW,SAoDb,EAlDoC,cAAiB,SAAwBhD,EAASC,GACpF,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,uBAEF,UACJkE,EAAS,UACTvF,EAAY,SACTyF,GACD3B,EACEE,EAAa,IACdF,EACH9D,aAEI0F,EA/BkB1B,KACxB,MAAM,QACJ0B,GACE1B,EAIJ,OAAO,OAHO,CACZC,KAAM,CAAC,SAEoB,IAA+ByB,EAAQ,EAwBpDE,CAAkB5B,GAClC,OAAoB,SAAKoE,EAAoB,CAC3C9C,IAAKA,EACLU,GAAIhG,EACJuF,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9BvB,WAAYA,KACTyB,GAEP,G,qEC/CO,SAAS6C,EAA8B1E,GAC5C,OAAO,QAAqB,oBAAqBA,EACnD,CACA,MACA,GAD8B,OAAuB,oBAAqB,CAAC,Q,6HCM3E,MASM2E,GAAgB,QAAO,QAAS,CACpClH,KAAM,eACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,IAAWA,EAAOE,MAHzB,CAInB,CACDG,QAAS,uBAELgC,EAAY,CAChBtD,QAAS,QAELsC,EAAmB,QAuDzB,EAtD+B,cAAiB,SAAmBC,EAASC,GAC1E,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,kBAEF,UACJkE,EAAS,UACTvF,EAAYoF,KACTK,GACD3B,EACEE,EAAa,IACdF,EACH9D,aAEI0F,EAlCkB1B,KACxB,MAAM,QACJ0B,GACE1B,EAIJ,OAAO,OAHO,CACZC,KAAM,CAAC,SAEoB,IAA0ByB,EAAQ,EA2B/CE,CAAkB5B,GAClC,OAAoB,SAAK,IAAiB8B,SAAU,CAClDxE,MAAO8E,EACPL,UAAuB,SAAKwC,EAAe,CACzCvC,GAAIhG,EACJuF,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9BD,IAAKA,EACLW,KAAMjG,IAAcoF,EAAmB,KAAO,WAC9CpB,WAAYA,KACTyB,KAGT,G,qECvDO,SAAS+C,EAAyB5E,GACvC,OAAO,QAAqB,eAAgBA,EAC9C,CACA,MACA,GADyB,OAAuB,eAAgB,CAAC,Q,iJCQjE,MAaM6E,GAAe,QAAO,KAAM,CAChCpH,KAAM,cACNuC,KAAM,OACNC,kBAAmB,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMD,EAAW0E,MAAQ3E,EAAO2E,KAAM1E,EAAW2E,QAAU5E,EAAO4E,OAAO,GAPvE,EASlB,QAAU,EACXxE,YACI,CACJtB,MAAO,UACPuB,QAAS,YACTmC,cAAe,SAEfqC,QAAS,EACT,CAAC,KAAK,IAAgBC,eAAgB,CACpCtB,iBAAkBpD,EAAMS,MAAQT,GAAOU,QAAQiE,OAAOD,OAExD,CAAC,KAAK,IAAgBE,YAAa,CACjCxB,gBAAiBpD,EAAMS,KAAO,QAAQT,EAAMS,KAAKC,QAAQ+B,QAAQoC,iBAAiB7E,EAAMS,KAAKC,QAAQiE,OAAOG,oBAAqB,QAAM9E,EAAMU,QAAQ+B,QAAQsC,KAAM/E,EAAMU,QAAQiE,OAAOG,iBACxL,UAAW,CACT1B,gBAAiBpD,EAAMS,KAAO,QAAQT,EAAMS,KAAKC,QAAQ+B,QAAQoC,sBAAsB7E,EAAMS,KAAKC,QAAQiE,OAAOG,qBAAqB9E,EAAMS,KAAKC,QAAQiE,OAAOK,kBAAmB,QAAMhF,EAAMU,QAAQ+B,QAAQsC,KAAM/E,EAAMU,QAAQiE,OAAOG,gBAAkB9E,EAAMU,QAAQiE,OAAOK,qBAIjR/D,EAAmB,KAyEzB,EApE8B,cAAiB,SAAkBC,EAASC,GACxE,MAAMxB,GAAQ,OAAgB,CAC5BA,MAAOuB,EACPhE,KAAM,iBAEF,UACJkE,EAAS,UACTvF,EAAYoF,EAAgB,MAC5ByD,GAAQ,EAAK,SACbE,GAAW,KACRtD,GACD3B,EACEsC,EAAY,aAAiB,KAC7BpC,EAAa,IACdF,EACH9D,YACA6I,QACAE,WACAL,KAAMtC,GAAmC,SAAtBA,EAAUtD,QAC7B6F,OAAQvC,GAAmC,WAAtBA,EAAUtD,SAE3B4C,EAlEkB1B,KACxB,MAAM,QACJ0B,EAAO,SACPqD,EAAQ,MACRF,EAAK,KACLH,EAAI,OACJC,GACE3E,EACE2B,EAAQ,CACZ1B,KAAM,CAAC,OAAQ8E,GAAY,WAAYF,GAAS,QAASH,GAAQ,OAAQC,GAAU,WAErF,OAAO,OAAehD,EAAO,IAAyBD,EAAQ,EAuD9CE,CAAkB5B,GAClC,OAAoB,SAAKyE,EAAc,CACrCzC,GAAIhG,EACJsF,IAAKA,EACLC,WAAW,OAAKG,EAAQzB,KAAMsB,GAC9BU,KAAMjG,IAAcoF,EAAmB,KAAO,MAC9CpB,WAAYA,KACTyB,GAEP,G,qECtFO,SAAS2D,EAAwBxF,GACtC,OAAO,QAAqB,cAAeA,EAC7C,CACA,MACA,GADwB,OAAuB,cAAe,CAAC,OAAQ,WAAY,QAAS,OAAQ,U","sources":["../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsTable.tsx","../../../plugins/linear-genome-view/src/LinearGenomeView/components/SearchResultsDialog.tsx","../../../node_modules/@mui/material/Table/Table.js","../../../node_modules/@mui/material/Table/TableContext.js","../../../node_modules/@mui/material/Table/Tablelvl2Context.js","../../../node_modules/@mui/material/Table/tableClasses.js","../../../node_modules/@mui/material/TableBody/TableBody.js","../../../node_modules/@mui/material/TableBody/tableBodyClasses.js","../../../node_modules/@mui/material/TableCell/TableCell.js","../../../node_modules/@mui/material/TableCell/tableCellClasses.js","../../../node_modules/@mui/material/TableContainer/TableContainer.js","../../../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../../../node_modules/@mui/material/TableHead/TableHead.js","../../../node_modules/@mui/material/TableHead/tableHeadClasses.js","../../../node_modules/@mui/material/TableRow/TableRow.js","../../../node_modules/@mui/material/TableRow/tableRowClasses.js"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree'\nimport { getEnv, getSession } from '@jbrowse/core/util'\n\n// locals\nimport { LinearGenomeViewModel } from '../..'\n\nexport default function SearchResultsTable({\n  searchResults,\n  assemblyName: optAssemblyName,\n  model,\n  handleClose,\n}: {\n  searchResults: BaseResult[]\n  assemblyName?: string\n  model: LinearGenomeViewModel\n  handleClose: () => void\n}) {\n  const session = getSession(model)\n  const { pluginManager } = getEnv(session)\n  const { assemblyManager } = session\n  const assemblyName =\n    optAssemblyName || model.displayedRegions[0]!.assemblyName\n\n  const assembly = assemblyManager.get(assemblyName)\n  if (!assembly) {\n    throw new Error(`assembly ${assemblyName} not found`)\n  }\n  if (!assembly.regions) {\n    throw new Error(`assembly ${assemblyName} regions not loaded`)\n  }\n\n  function getTrackName(trackId: string | undefined) {\n    if (trackId) {\n      const schema = pluginManager.pluggableConfigSchemaType('track')\n      const configuration = resolveIdentifier(schema, getRoot(model), trackId)\n      return configuration?.name?.value || ''\n    }\n    return ''\n  }\n  async function handleClick(location: string) {\n    try {\n      const newRegion = assembly?.regions?.find(\n        region => location === region.refName,\n      )\n      if (newRegion) {\n        model.setDisplayedRegions([newRegion])\n        // we use showAllRegions after setDisplayedRegions to make the entire\n        // region visible, xref #1703\n        model.showAllRegions()\n      } else {\n        await model.navToLocString(location, assemblyName)\n      }\n    } catch (e) {\n      console.warn(e)\n      session.notify(`${e}`, 'warning')\n    }\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Location</TableCell>\n            <TableCell align=\"right\">Track</TableCell>\n            <TableCell align=\"right\" />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {searchResults.map(result => (\n            <TableRow key={result.getId()}>\n              <TableCell component=\"th\" scope=\"row\">\n                {result.getLabel()}\n              </TableCell>\n              <TableCell align=\"right\">{result.getLocation()}</TableCell>\n              <TableCell align=\"right\">\n                {getTrackName(result.getTrackId()) || 'N/A'}\n              </TableCell>\n              <TableCell align=\"right\">\n                <Button\n                  onClick={async () => {\n                    try {\n                      await handleClick(\n                        // label is used if it is a refName, it has no location\n                        result.getLocation() || result.getLabel(),\n                      )\n                      const resultTrackId = result.getTrackId()\n                      if (resultTrackId) {\n                        model.showTrack(resultTrackId)\n                      }\n                    } catch (e) {\n                      console.error(e)\n                      session.notifyError(`${e}`, e)\n                    }\n                    handleClose()\n                  }}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Go\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n","import React from 'react'\nimport { Dialog } from '@jbrowse/core/ui'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  Divider,\n  Typography,\n} from '@mui/material'\n\nimport { LinearGenomeViewModel } from '../..'\nimport BaseResult from '@jbrowse/core/TextSearch/BaseResults'\nimport SearchResultsTable from './SearchResultsTable'\n\nexport default function SearchResultsDialog({\n  model,\n  assemblyName,\n  searchQuery,\n  searchResults,\n  handleClose,\n}: {\n  model: LinearGenomeViewModel\n  assemblyName?: string\n  searchQuery: string\n  searchResults?: BaseResult[]\n  handleClose: () => void\n}) {\n  return (\n    <Dialog open maxWidth=\"xl\" onClose={handleClose} title=\"Search results\">\n      <DialogContent>\n        {!searchResults?.length ? (\n          <Typography>\n            No results found for <b>{searchQuery}</b>\n          </Typography>\n        ) : (\n          <>\n            <Typography>\n              Showing results for <b>{searchQuery}</b>\n            </Typography>\n            <SearchResultsTable\n              model={model}\n              handleClose={handleClose}\n              assemblyName={assemblyName}\n              searchResults={searchResults}\n            />\n          </>\n        )}\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"primary\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from \"./TableContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableUtilityClass } from \"./tableClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': {\n    ...theme.typography.body2,\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      borderCollapse: 'separate'\n    }\n  }]\n})));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    padding = 'normal',\n    size = 'medium',\n    stickyHeader = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    padding,\n    size,\n    stickyHeader\n  };\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, {\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableBodyUtilityClass } from \"./tableBodyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, {\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableContainerUtilityClass } from \"./tableContainerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, {\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getTableHeadUtilityClass } from \"./tableHeadClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, {\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState,\n      ...other\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableRowClasses, { getTableRowUtilityClass } from \"./tableRowClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    selected,\n    hover,\n    head,\n    footer\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', hover && 'hover', head && 'head', footer && 'footer']\n  };\n  return composeClasses(slots, getTableRowUtilityClass, classes);\n};\nconst TableRowRoot = styled('tr', {\n  name: 'MuiTableRow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.head && styles.head, ownerState.footer && styles.footer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: 'inherit',\n  display: 'table-row',\n  verticalAlign: 'middle',\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  [`&.${tableRowClasses.hover}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${tableRowClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n    }\n  }\n})));\nconst defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\nconst TableRow = /*#__PURE__*/React.forwardRef(function TableRow(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableRow'\n  });\n  const {\n    className,\n    component = defaultComponent,\n    hover = false,\n    selected = false,\n    ...other\n  } = props;\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const ownerState = {\n    ...props,\n    component,\n    hover,\n    selected,\n    head: tablelvl2 && tablelvl2.variant === 'head',\n    footer: tablelvl2 && tablelvl2.variant === 'footer'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableRowRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    role: component === defaultComponent ? null : 'row',\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Should be valid `<tr>` children such as `TableCell`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the table row will shade on hover.\n   * @default false\n   */\n  hover: PropTypes.bool,\n  /**\n   * If `true`, the table row will have the selected shading.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableRow;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableRowUtilityClass(slot) {\n  return generateUtilityClass('MuiTableRow', slot);\n}\nconst tableRowClasses = generateUtilityClasses('MuiTableRow', ['root', 'selected', 'hover', 'head', 'footer']);\nexport default tableRowClasses;"],"names":["SearchResultsTable","searchResults","assemblyName","optAssemblyName","model","handleClose","session","getSession","pluginManager","getEnv","assemblyManager","displayedRegions","assembly","get","Error","regions","React","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","result","key","getId","scope","getLabel","getLocation","trackId","schema","pluggableConfigSchemaType","configuration","resolveIdentifier","getRoot","name","value","getTrackName","getTrackId","Button","onClick","async","location","newRegion","find","region","refName","setDisplayedRegions","showAllRegions","navToLocString","e","console","warn","notify","handleClick","resultTrackId","showTrack","error","notifyError","color","variant","SearchResultsDialog","searchQuery","Dialog","open","maxWidth","onClose","title","DialogContent","length","Typography","Divider","DialogActions","TableRoot","slot","overridesResolver","props","styles","ownerState","root","stickyHeader","theme","display","width","borderCollapse","borderSpacing","typography","body2","padding","spacing","vars","palette","text","secondary","textAlign","captionSide","variants","style","defaultComponent","inProps","ref","className","size","other","classes","slots","useUtilityClasses","table","Provider","children","as","role","getTableUtilityClass","TableBodyRoot","tablelvl2","getTableBodyUtilityClass","TableCellRoot","verticalAlign","borderBottom","border","mode","divider","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","fontSize","paddingCheckbox","flexDirection","position","top","zIndex","backgroundColor","background","default","componentProp","paddingProp","scopeProp","sizeProp","sortDirection","variantProp","isHeadCell","undefined","ariaSort","getTableCellUtilityClass","TableContainerRoot","overflowX","getTableContainerUtilityClass","TableHeadRoot","getTableHeadUtilityClass","TableRowRoot","head","footer","outline","hover","action","selected","mainChannel","selectedOpacity","main","hoverOpacity","getTableRowUtilityClass"],"sourceRoot":""}