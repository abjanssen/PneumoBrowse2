{"version":3,"file":"static/js/7389.c98e4f72.chunk.js","mappings":"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","sources":["../../../plugins/menus/src/ImportSessionWidget/components/ImportError.tsx","../../../plugins/menus/src/ImportSessionWidget/components/ImportSessionWidget.tsx"],"sourcesContent":["import React from 'react'\nimport { Paper, Typography } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ErrorIcon from '@mui/icons-material/Error'\n\nconst useStyles = makeStyles()(theme => ({\n  error: {\n    margin: theme.spacing(2),\n  },\n  errorHeader: {\n    background: theme.palette.error.light,\n    color: theme.palette.error.contrastText,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  errorMessage: {\n    padding: theme.spacing(2),\n  },\n}))\n\nexport default function ImportError({ error }: { error: unknown }) {\n  const { classes } = useStyles()\n  return (\n    <Paper className={classes.error}>\n      <div className={classes.errorHeader}>\n        <ErrorIcon color=\"inherit\" fontSize=\"large\" />\n        <div>\n          <Typography variant=\"h6\" color=\"inherit\" align=\"center\">\n            Import error\n          </Typography>\n        </div>\n      </div>\n      <Typography className={classes.errorMessage}>{`${error}`}</Typography>\n    </Paper>\n  )\n}\n","import React, { useState } from 'react'\nimport { IAnyStateTreeNode } from 'mobx-state-tree'\nimport { Button, Paper, Typography, alpha } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { useDropzone } from 'react-dropzone'\n\n// icons\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload'\n\n// locals\nimport ImportError from './ImportError'\n\nconst MAX_FILE_SIZE = 512 * 1024 ** 2 // 512 MiB\n\nfunction styledBy(property: string, mapping: Record<string, string>) {\n  return (props: Record<string, string>) => mapping[props[property]!]\n}\n\n// @ts-expect-error\nconst useStyles = makeStyles()(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  dropZone: {\n    textAlign: 'center',\n    margin: theme.spacing(2),\n    padding: theme.spacing(2),\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: styledBy('isDragActive', {\n      true: theme.palette.secondary.light,\n      false: theme.palette.divider,\n    }),\n    borderStyle: 'dashed',\n    backgroundColor: styledBy('isDragActive', {\n      true: alpha(\n        theme.palette.text.primary,\n        theme.palette.action.hoverOpacity,\n      ),\n      false: theme.palette.background.default,\n    }),\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    '&:focus': {\n      borderColor: theme.palette.secondary.light,\n    },\n  },\n  uploadIcon: {\n    color: theme.palette.text.secondary,\n  },\n}))\n\nconst ImportSessionWidget = observer(function ({\n  model,\n}: {\n  model: IAnyStateTreeNode\n}) {\n  const [error, setError] = useState<unknown>()\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    // @ts-expect-error\n    accept: 'application/json',\n    maxSize: MAX_FILE_SIZE,\n    multiple: false,\n    onDrop: async (acceptedFiles, rejectedFiles) => {\n      try {\n        if (rejectedFiles.length > 0) {\n          throw new Error(rejectedFiles[0]!.errors.map(e => `${e}`).join(', '))\n        }\n        const sessionText = await acceptedFiles[0]!.text()\n        getSession(model).setSession?.(JSON.parse(sessionText).session)\n      } catch (e) {\n        console.error(e)\n        setError(e)\n      }\n    },\n  })\n\n  // @ts-expect-error\n\n  const { classes } = useStyles({ isDragActive }) as any\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <div {...getRootProps({ className: classes.dropZone })}>\n          <input {...getInputProps()} />\n          <CloudUploadIcon className={classes.uploadIcon} fontSize=\"large\" />\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body1\">\n            Drag and drop files here\n          </Typography>\n          <Typography color=\"textSecondary\" align=\"center\" variant=\"body2\">\n            or\n          </Typography>\n          <Button color=\"primary\" variant=\"contained\">\n            Browse Files\n          </Button>\n        </div>\n      </Paper>\n      {error ? <ImportError error={error} /> : null}\n    </div>\n  )\n})\n\nexport default ImportSessionWidget\n"],"names":["useStyles","makeStyles","theme","error","margin","spacing","errorHeader","background","palette","light","color","contrastText","padding","textAlign","errorMessage","ImportError","classes","React","Paper","className","ErrorIcon","fontSize","Typography","variant","align","styledBy","property","mapping","props","root","paper","display","flexDirection","dropZone","borderWidth","borderRadius","borderColor","true","secondary","false","divider","borderStyle","backgroundColor","alpha","text","primary","action","hoverOpacity","default","outline","transition","uploadIcon","observer","model","setError","useState","getRootProps","getInputProps","isDragActive","useDropzone","accept","maxSize","multiple","onDrop","async","acceptedFiles","rejectedFiles","length","Error","errors","map","e","join","sessionText","getSession","setSession","JSON","parse","session","console","CloudUploadIcon","Button"],"sourceRoot":""}