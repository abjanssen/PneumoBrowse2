{"version":3,"file":"static/js/2697.0382c551.chunk.js","mappings":"gPAWA,MA6DA,GA7DwBA,EAAAA,EAAAA,WAAS,SAAUC,GAMzC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACxBG,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,IACzBC,EAAW,wBAAwBC,KAAKJ,GAC9C,OACEK,EAAAA,cAACC,EAAAA,OAAM,CAACC,MAAI,EAACC,QAAST,EAAaU,MAAM,eACvCJ,EAAAA,cAACK,EAAAA,EAAa,KACZL,EAAAA,cAACM,EAAAA,EAAU,KAAC,0BACZN,EAAAA,cAACM,EAAAA,EAAU,CAACC,MAAM,iBAAgB,uDAGlCP,EAAAA,cAACQ,EAAAA,EAAS,CACRC,MAAOd,EACPe,SAAUC,IACRf,EAAOe,EAAMC,OAAOH,MAAM,EAE5BI,YAAY,iBACZC,MAAsB,IAAfnB,EAAIoB,SAAiBjB,EAC5BkB,WAA2B,IAAfrB,EAAIoB,QAAiBjB,EAA+B,GAApB,kBAC5CmB,aAAa,MACb,cAAY,gBACZC,UAAW,CACTC,UAAW,CACTC,UAAW,EACX,cAAe,0BAIrBpB,EAAAA,cAACqB,EAAAA,EAAa,KACZrB,EAAAA,cAACsB,EAAAA,EAAM,CACLC,QAAQ,YACRhB,MAAM,UACNiB,KAAK,SACLC,WAAS,EACTC,QAASA,KACPjC,EAAMkC,YAAY,MAAOhC,GACzBD,GAAa,GAEhB,UAGDM,EAAAA,cAACsB,EAAAA,EAAM,CACLC,QAAQ,YACRhB,MAAM,YACNmB,QAASA,KACPhC,GAAa,GAEhB,YAOX,G","sources":["../../../plugins/alignments/src/LinearPileupDisplay/components/SortByTagDialog.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\n\nconst SortByTagDialog = observer(function (props: {\n  model: {\n    setSortedBy: (arg: string, arg2: string) => void\n  }\n  handleClose: () => void\n}) {\n  const { model, handleClose } = props\n  const [tag, setTag] = useState('')\n  const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag)\n  return (\n    <Dialog open onClose={handleClose} title=\"Sort by tag\">\n      <DialogContent>\n        <Typography>Set the tag to sort by</Typography>\n        <Typography color=\"textSecondary\">\n          Examples: HP for haplotype, RG for read group, etc.\n        </Typography>\n        <TextField\n          value={tag}\n          onChange={event => {\n            setTag(event.target.value)\n          }}\n          placeholder=\"Enter tag name\"\n          error={tag.length === 2 && !validTag}\n          helperText={tag.length === 2 && !validTag ? 'Not a valid tag' : ''}\n          autoComplete=\"off\"\n          data-testid=\"sort-tag-name\"\n          slotProps={{\n            htmlInput: {\n              maxLength: 2,\n              'data-testid': 'sort-tag-name-input',\n            },\n          }}\n        />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            autoFocus\n            onClick={() => {\n              model.setSortedBy('tag', tag)\n              handleClose()\n            }}\n          >\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nexport default SortByTagDialog\n"],"names":["observer","props","model","handleClose","tag","setTag","useState","validTag","exec","React","Dialog","open","onClose","title","DialogContent","Typography","color","TextField","value","onChange","event","target","placeholder","error","length","helperText","autoComplete","slotProps","htmlInput","maxLength","DialogActions","Button","variant","type","autoFocus","onClick","setSortedBy"],"sourceRoot":""}