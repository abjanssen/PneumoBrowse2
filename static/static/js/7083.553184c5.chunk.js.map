{"version":3,"file":"static/js/7083.553184c5.chunk.js","mappings":"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","sources":["../../../packages/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard.tsx","../../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js"],"sourcesContent":["import React from 'react'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\n\n// icons\nimport ExpandMore from '@mui/icons-material/ExpandMore'\n\nimport { BaseCardProps } from '../types'\n\nconst useStyles = makeStyles()(theme => ({\n  expansionPanelDetails: {\n    display: 'block',\n    padding: theme.spacing(1),\n  },\n  icon: {\n    color: theme.palette.tertiary.contrastText || '#fff',\n  },\n}))\n\nexport default function BaseCard({\n  children,\n  title,\n  defaultExpanded = true,\n}: BaseCardProps) {\n  const { classes } = useStyles()\n  return (\n    <Accordion defaultExpanded={defaultExpanded}>\n      <AccordionSummary expandIcon={<ExpandMore className={classes.icon} />}>\n        <Typography variant=\"button\">{title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails className={classes.expansionPanelDetails}>\n        {children}\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('div', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;"],"names":["useStyles","makeStyles","theme","expansionPanelDetails","display","padding","spacing","icon","color","palette","tertiary","contrastText","BaseCard","children","title","defaultExpanded","classes","React","Accordion","AccordionSummary","expandIcon","ExpandMore","className","Typography","variant","AccordionDetails","d","AccordionDetailsRoot","name","slot","overridesResolver","props","styles","root","inProps","ref","other","ownerState","useUtilityClasses","getAccordionDetailsUtilityClass","getAccordionSummaryUtilityClass","generateUtilityClass","generateUtilityClasses","AccordionSummaryRoot","styled","ButtonBase","memoTheme","transition","duration","transitions","shortest","minHeight","create","focusVisible","backgroundColor","vars","action","focus","disabled","opacity","disabledOpacity","cursor","variants","disableGutters","style","expanded","AccordionSummaryContent","content","flexGrow","margin","AccordionSummaryExpandIconWrapper","expandIconWrapper","active","transform","focusVisibleClassName","onClick","toggle","AccordionContext","A","slots","composeClasses","focusRipple","disableRipple","component","clsx","event"],"sourceRoot":""}