{"version":3,"file":"static/js/3106.99b21af9.chunk.js","mappings":"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","sources":["../../../plugins/wiggle/src/LinearWiggleDisplay/components/SetColorDialog.tsx","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  Radio,\n  Typography,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { ColorPicker } from '@jbrowse/core/ui/ColorPicker'\n\nconst SetColorDialog = observer(function SetColorDialog({\n  model,\n  handleClose,\n}: {\n  model: {\n    color?: string\n    posColor?: string\n    negColor?: string\n    setColor: (arg?: string) => void\n    setPosColor: (arg?: string) => void\n    setNegColor: (arg?: string) => void\n  }\n  handleClose: () => void\n}) {\n  const [posneg, setPosNeg] = useState(false)\n\n  return (\n    <Dialog open onClose={handleClose} title=\"Set color\">\n      <DialogContent>\n        <Typography>\n          Select either an overall color, or the positive/negative colors. Note\n          that density renderers only work properly with positive/negative\n          colors\n        </Typography>\n        <FormControlLabel\n          checked={!posneg}\n          onClick={() => {\n            setPosNeg(false)\n          }}\n          control={<Radio />}\n          label=\"Overall color\"\n        />\n        <FormControlLabel\n          checked={posneg}\n          onClick={() => {\n            setPosNeg(true)\n          }}\n          control={<Radio />}\n          label=\"Positive/negative color\"\n        />\n\n        {posneg ? (\n          <>\n            <Typography>Positive color</Typography>\n            <ColorPicker\n              color={model.posColor || 'black'}\n              onChange={event => {\n                model.setPosColor(event)\n                model.setColor(undefined)\n              }}\n            />\n            <Typography>Negative color</Typography>\n\n            <ColorPicker\n              color={model.negColor || 'black'}\n              onChange={event => {\n                model.setNegColor(event)\n                model.setColor(undefined)\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <Typography>Overall color</Typography>\n            <ColorPicker\n              color={model.color || 'black'}\n              onChange={event => {\n                model.setColor(event)\n              }}\n            />\n          </>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.setPosColor(undefined)\n            model.setNegColor(undefined)\n            model.setColor(undefined)\n          }}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Restore default\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={() => {\n            handleClose()\n          }}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SetColorDialog\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, {\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: defaultIcon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: defaultCheckedIcon.props.fontSize ?? size\n    }),\n    disabled: disabled,\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["observer","model","handleClose","posneg","setPosNeg","useState","React","Dialog","open","onClose","title","DialogContent","Typography","FormControlLabel","checked","onClick","control","Radio","label","ColorPicker","color","posColor","onChange","event","setPosColor","setColor","undefined","negColor","setNegColor","DialogActions","Button","variant","type","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","theme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","props","style","easeOut","classes","fontSize","ownerState","className","root","children","background","dot","RadioRoot","SwitchBase","prop","name","slot","overridesResolver","styles","size","capitalize","vars","palette","text","secondary","radioClasses","disabled","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","Object","entries","filter","createSimplePaletteValueFilter","map","mainChannel","main","defaultCheckedIcon","defaultIcon","inProps","ref","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","other","muiFormControl","useFormControl","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","value","String","clsx","getRadioUtilityClass"],"sourceRoot":""}