{"version":3,"file":"static/js/3550.e425cd36.chunk.js","mappings":"uSAoBA,MAAMA,GAAYC,EAAAA,EAAAA,KAAAA,EAAaC,IAAS,CACtCC,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,KAETC,cAAe,CACbD,MAAO,QAETE,KAAM,CACJC,QAAS,OAIb,SAASC,EAAWC,GAClB,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAcF,GAGrB,CAEA,SAASG,GAAa,SAAEC,IACtB,OACEH,EAAAA,cAAA,WACEA,EAAAA,cAACI,EAAAA,EAAW,KAAED,GAGpB,CAEA,MA6FA,GA7FsCE,EAAAA,EAAAA,WAAS,UAAU,YACvDC,EAAW,MACXC,IAKA,MAAM,QAAEC,GAAYpB,KACd,aAAEqB,GAAiBF,GAClBG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,GAAGL,EAAMG,aAC3CG,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,GAAGL,EAAMM,YAC5CE,GAAiBC,OAAOC,OAAOP,GAC/BQ,GAAiBF,OAAOC,OAAOJ,GACrC,OACEb,EAAAA,cAACmB,EAAAA,OAAM,CACLC,SAAS,KACTC,MAAI,EACJC,QAASA,KACPhB,GAAa,EAEfiB,MAAM,6BAENvB,EAAAA,cAACwB,EAAAA,EAAa,CAACC,UAAWjB,EAAQb,eAChCK,EAAAA,cAACF,EAAU,CACT4B,MAAM,yDACND,UAAWjB,EAAQjB,QACnBoC,MAAOjB,EACPkB,WAAab,EAAiC,GAAjB,eAC7Bc,OAAQd,EACRe,SAAUC,IACRpB,EAAYoB,EAAMC,OAAOL,MAAM,IAGnC3B,EAAAA,cAACF,EAAU,CACT4B,MAAM,uDACND,UAAWjB,EAAQjB,QACnBoC,MAAOd,EACPe,WAAaV,EAAiC,GAAjB,eAC7BW,OAAQX,EACRY,SAAUC,IACRjB,EAAYiB,EAAMC,OAAOL,MAAM,IAGnC3B,EAAAA,cAACE,EAAY,KACXF,EAAAA,cAACiC,EAAAA,EAAS,KAAC,2BACXjC,EAAAA,cAACkC,EAAAA,EAAU,CACTP,MAAOlB,EAAe,MAAQ,YAC9BqB,SAAUK,IACR5B,EAAM6B,gBAAmC,QAAnBD,EAAEH,OAAOL,MAAgB,GAGjD3B,EAAAA,cAACqC,EAAAA,EAAgB,CACfV,MAAM,MACNW,QAAStC,EAAAA,cAACuC,EAAAA,EAAK,CAACd,UAAWjB,EAAQZ,KAAM4C,KAAK,UAC9Cd,MAAM,kDAER1B,EAAAA,cAACqC,EAAAA,EAAgB,CACfV,MAAM,YACNW,QAAStC,EAAAA,cAACuC,EAAAA,EAAK,CAACd,UAAWjB,EAAQZ,KAAM4C,KAAK,UAC9Cd,MAAM,qDAMd1B,EAAAA,cAACyC,EAAAA,EAAa,KACZzC,EAAAA,cAAC0C,EAAAA,EAAM,CACLC,QAASA,KACPpC,EAAMI,aAAaD,GACnBH,EAAMO,aAAaD,GACnBP,GAAa,EAEfsC,UAAW7B,IAAkBG,EAC7B2B,MAAM,UACNC,QAAQ,aACT,UAGD9C,EAAAA,cAAC0C,EAAAA,EAAM,CACLC,QAASA,KACPrC,GAAa,EAEfuC,MAAM,YACNE,WAAS,EACTD,QAAQ,aACT,WAMT,G,iHCnIA,SAAe,EAAAE,EAAA,IAA2B,SAAK,OAAQ,CACrDC,EAAG,iIACD,wBCFJ,GAAe,EAAAD,EAAA,IAA2B,SAAK,OAAQ,CACrDC,EAAG,gLACD,sB,qCCDJ,MAAMC,GAAsB,EAAAC,EAAA,IAAO,OAAQ,CACzCC,kBAAmBC,EAAA,GADO,CAEzB,CACDC,SAAU,WACVC,QAAS,SAELC,GAA4B,EAAAL,EAAA,IAAOM,EAAP,CAAiC,CAEjEC,UAAW,aAEPC,GAAqB,EAAAR,EAAA,IAAOS,EAAP,EAA+B,EAAAC,EAAA,IAAU,EAClEvE,YACI,CACJwE,KAAM,EACNR,SAAU,WACVI,UAAW,WACXK,WAAYzE,EAAM0E,YAAYC,OAAO,YAAa,CAChDC,OAAQ5E,EAAM0E,YAAYE,OAAOC,OACjCC,SAAU9E,EAAM0E,YAAYI,SAASC,WAEvCC,SAAU,CAAC,CACTvE,MAAO,CACLwE,SAAS,GAEXC,MAAO,CACLd,UAAW,WACXK,WAAYzE,EAAM0E,YAAYC,OAAO,YAAa,CAChDC,OAAQ5E,EAAM0E,YAAYE,OAAOO,QACjCL,SAAU9E,EAAM0E,YAAYI,SAASC,mBAgD7C,EAvCA,SAAyBtE,GACvB,MAAM,QACJwE,GAAU,EAAK,QACf/D,EAAU,CAAC,EAAC,SACZkE,GACE3E,EACE4E,EAAa,IACd5E,EACHwE,WAEF,OAAoB,UAAMrB,EAAqB,CAC7CzB,UAAWjB,EAAQZ,KACnB+E,WAAYA,EACZxE,SAAU,EAAc,SAAKqD,EAA2B,CACtDkB,SAAUA,EACVjD,UAAWjB,EAAQoE,WACnBD,WAAYA,KACG,SAAKhB,EAAoB,CACxCe,SAAUA,EACVjD,UAAWjB,EAAQqE,IACnBF,WAAYA,MAGlB,E,+ECjDA,MAcMG,GAAY,EAAA3B,EAAA,IAAO4B,EAAA,EAAY,CACnC3B,kBAAmB4B,IAAQ,EAAA3B,EAAA,GAAsB2B,IAAkB,YAATA,EAC1DC,KAAM,WACNC,KAAM,OACNC,kBAAmB,CAACpF,EAAOqF,KACzB,MAAM,WACJT,GACE5E,EACJ,MAAO,CAACqF,EAAOxF,KAA0B,WAApB+E,EAAWnC,MAAqB4C,EAAO,QAAO,EAAAC,EAAA,GAAWV,EAAWnC,SAAU4C,EAAO,SAAQ,EAAAC,EAAA,GAAWV,EAAW9B,UAAU,GARpI,EAUf,EAAAgB,EAAA,IAAU,EACXvE,YACI,CACJuD,OAAQvD,EAAMgG,MAAQhG,GAAOiG,QAAQC,KAAKC,UAC1C,CAAC,KAAKC,EAAA,EAAa9C,YAAa,CAC9BC,OAAQvD,EAAMgG,MAAQhG,GAAOiG,QAAQI,OAAO/C,UAE9C0B,SAAU,CAAC,CACTvE,MAAO,CACL8C,MAAO,UACPD,UAAU,EACVgD,eAAe,GAEjBpB,MAAO,CACL,UAAW,CACTqB,gBAAiBvG,EAAMgG,KAAO,QAAQhG,EAAMgG,KAAKC,QAAQI,OAAOG,mBAAmBxG,EAAMgG,KAAKC,QAAQI,OAAOI,iBAAkB,QAAMzG,EAAMiG,QAAQI,OAAOK,OAAQ1G,EAAMiG,QAAQI,OAAOI,oBAGvLE,OAAOC,QAAQ5G,EAAMiG,SAASY,QAAO,EAAAC,EAAA,MAAkCC,KAAI,EAAExD,MAAW,CAC5F9C,MAAO,CACL8C,QACAD,UAAU,EACVgD,eAAe,GAEjBpB,MAAO,CACL,UAAW,CACTqB,gBAAiBvG,EAAMgG,KAAO,QAAQhG,EAAMgG,KAAKC,QAAQ1C,GAAOyD,iBAAiBhH,EAAMgG,KAAKC,QAAQI,OAAOI,iBAAkB,QAAMzG,EAAMiG,QAAQ1C,GAAO0D,KAAMjH,EAAMiG,QAAQI,OAAOI,uBAGjLE,OAAOC,QAAQ5G,EAAMiG,SAASY,QAAO,EAAAC,EAAA,MAAkCC,KAAI,EAAExD,MAAW,CAC9F9C,MAAO,CACL8C,QACAD,UAAU,GAEZ4B,MAAO,CACL,CAAC,KAAKkB,EAAA,EAAanB,WAAY,CAC7B1B,OAAQvD,EAAMgG,MAAQhG,GAAOiG,QAAQ1C,GAAO0D,WAG7C,CAEHxG,MAAO,CACL6F,eAAe,GAEjBpB,MAAO,CAEL,UAAW,CACT,uBAAwB,CACtBqB,gBAAiB,wBAcrBW,GAAkC,SAAK,EAAiB,CAC5DjC,SAAS,IAELkC,GAA2B,SAAK,EAAiB,CAAC,GAyJxD,EAxJ2B,cAAiB,SAAeC,EAASC,GAClE,MAAM5G,GAAQ,OAAgB,CAC5BA,MAAO2G,EACPzB,KAAM,cAGNV,QAASqC,EAAW,YACpBC,EAAcL,EAAkB,MAChC3D,EAAQ,UAAS,KACjBiE,EAAOL,EACPxB,KAAM8B,EACNjF,SAAUkF,EAAY,KACtBxE,EAAO,SAAQ,UACff,EACAmB,SAAUqE,EAAY,cACtBrB,GAAgB,KACbsB,GACDnH,EACEoH,GAAiB,EAAAC,EAAA,KACvB,IAAIxE,EAAWqE,EACXE,QACsB,IAAbvE,IACTA,EAAWuE,EAAevE,UAG9BA,KAAa,EACb,MAAM+B,EAAa,IACd5E,EACH6C,WACAgD,gBACA/C,QACAL,QAEIhC,EA3HkBmE,KACxB,MAAM,QACJnE,EAAO,MACPqC,EAAK,KACLL,GACEmC,EACE0C,EAAQ,CACZzH,KAAM,CAAC,OAAQ,SAAQ,EAAAyF,EAAA,GAAWxC,KAAmB,WAATL,GAAqB,QAAO,EAAA6C,EAAA,GAAW7C,OAErF,MAAO,IACFhC,MACA,EAAA8G,EAAA,GAAeD,EAAO,IAAsB7G,GAChD,EA+Ge+G,CAAkB5C,GAC5B6C,GAAa,EAAAC,EAAA,KACnB,IAAIlD,EAAUqC,EACd,MAAM9E,GAAW,EAAA4F,EAAA,GAAsBV,EAAcQ,GAAcA,EAAW1F,UAC9E,IAAImD,EAAO8B,EAjDb,IAAwBY,EAAGC,EA0DzB,OARIJ,SACqB,IAAZjD,IAnDSoD,EAoDOH,EAAW7F,MAApC4C,EAnDa,iBADQqD,EAoDsB7H,EAAM4B,QAnDlB,OAANiG,EACpBD,IAAMC,EAIRC,OAAOF,KAAOE,OAAOD,SAgDN,IAAT3C,IACTA,EAAOuC,EAAWvC,QAGF,SAAKH,EAAW,CAClCgD,KAAM,QACNhB,KAAmB,eAAmBA,EAAM,CAC1CpC,SAAU+B,EAAY1G,MAAM2E,UAAYlC,IAE1CqE,YAA0B,eAAmBA,EAAa,CACxDnC,SAAU8B,EAAmBzG,MAAM2E,UAAYlC,IAEjDI,SAAUA,EACV+B,WAAYA,EACZnE,QAASA,EACTyE,KAAMA,EACNV,QAASA,EACTzC,SAAUA,EACV6E,IAAKA,EACLlF,WAAW,EAAAsG,EAAA,GAAKvH,EAAQZ,KAAM6B,MAC3ByF,GAEP,G,qEC7KO,SAASc,EAAqB9C,GACnC,OAAO,QAAqB,WAAYA,EAC1C,CACA,MACA,GADqB,OAAuB,WAAY,CAAC,OAAQ,UAAW,WAAY,eAAgB,iBAAkB,a,oJCQ1H,MAoGA,EAzFgC,cAAiB,SAAoBnF,EAAO4G,GAC1E,MAAM,QAGJsB,EAAO,SACP9H,EAAQ,UACRsB,EAAS,aACTyG,EACAjD,KAAM8B,EAAQ,SACdjF,EACAH,MAAOwG,KACJjB,GACDnH,EACEqI,EAAU,SAAa,MACvB5H,EAzBkBT,KACxB,MAAM,QACJS,EAAO,IACP6H,EAAG,MACHxG,GACE9B,EACEsH,EAAQ,CACZzH,KAAM,CAAC,OAAQyI,GAAO,MAAOxG,GAAS,UAExC,OAAO,OAAewF,EAAO,IAA2B7G,EAAQ,EAgBhD+G,CAAkBxH,IAC3B4B,EAAO2G,IAAiB,OAAc,CAC3CC,WAAYJ,EACZK,QAASN,EACTjD,KAAM,eAER,sBAA0BgD,GAAS,KAAM,CACvCQ,MAAO,KACL,IAAIC,EAAQN,EAAQO,QAAQC,cAAc,gCACrCF,IACHA,EAAQN,EAAQO,QAAQC,cAAc,yBAEpCF,GACFA,EAAMD,OACR,KAEA,IACJ,MAAMI,GAAY,OAAWlC,EAAKyB,GAC5BnD,GAAO,OAAM8B,GACb+B,EAAe,WAAc,KAAM,CACvC7D,OACA,QAAAnD,CAASC,GACPuG,EAAcvG,EAAMC,OAAOL,OACvBG,GACFA,EAASC,EAAOA,EAAMC,OAAOL,MAEjC,EACAA,WACE,CAACsD,EAAMnD,EAAUwG,EAAe3G,IACpC,OAAoB,SAAK,IAAkBoH,SAAU,CACnDpH,MAAOmH,EACP3I,UAAuB,SAAK,IAAW,CACrC6I,KAAM,aACNrC,IAAKkC,EACLpH,WAAW,OAAKjB,EAAQZ,KAAM6B,MAC3ByF,EACH/G,SAAUA,KAGhB,G,mCCrEA,Q,QAJuC,mBAAoB8I,E,qECFpD,SAASC,EAA0BhE,GACxC,OAAO,QAAqB,gBAAiBA,EAC/C,CACA,MACA,GAD0B,OAAuB,gBAAiB,CAAC,OAAQ,MAAO,S,4DCDnE,SAASuC,IACtB,OAAO,aAAiB,IAC1B,C","sources":["../../../packages/core/BaseFeatureWidget/SequenceFeatureDetails/dialogs/SettingsDialog.tsx","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  TextFieldProps,\n} from '@mui/material'\nimport { Dialog } from '@jbrowse/core/ui'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { SequenceFeatureDetailsModel } from '../model'\n\nconst useStyles = makeStyles()(theme => ({\n  formElt: {\n    margin: theme.spacing(3),\n    width: 400,\n  },\n  dialogContent: {\n    width: '80em',\n  },\n  root: {\n    padding: 4,\n  },\n}))\n\nfunction TextField2(props: TextFieldProps) {\n  return (\n    <div>\n      <TextField {...props} />\n    </div>\n  )\n}\n\nfunction FormControl2({ children }: { children: React.ReactNode }) {\n  return (\n    <div>\n      <FormControl>{children}</FormControl>\n    </div>\n  )\n}\n\nconst SequenceFeatureSettingsDialog = observer(function ({\n  handleClose,\n  model,\n}: {\n  handleClose: () => void\n  model: SequenceFeatureDetailsModel\n}) {\n  const { classes } = useStyles()\n  const { upperCaseCDS } = model\n  const [intronBp, setIntronBp] = useState(`${model.intronBp}`)\n  const [upDownBp, setUpDownBp] = useState(`${model.upDownBp}`)\n  const intronBpValid = !Number.isNaN(+intronBp)\n  const upDownBpValid = !Number.isNaN(+upDownBp)\n  return (\n    <Dialog\n      maxWidth=\"xl\"\n      open\n      onClose={() => {\n        handleClose()\n      }}\n      title=\"Feature sequence settings\"\n    >\n      <DialogContent className={classes.dialogContent}>\n        <TextField2\n          label=\"Number of intronic bases around splice site to display\"\n          className={classes.formElt}\n          value={intronBp}\n          helperText={!intronBpValid ? 'Not a number' : ''}\n          error={!intronBpValid}\n          onChange={event => {\n            setIntronBp(event.target.value)\n          }}\n        />\n        <TextField2\n          label=\"Number of bases up/down stream of feature to display\"\n          className={classes.formElt}\n          value={upDownBp}\n          helperText={!upDownBpValid ? 'Not a number' : ''}\n          error={!upDownBpValid}\n          onChange={event => {\n            setUpDownBp(event.target.value)\n          }}\n        />\n        <FormControl2>\n          <FormLabel>Sequence capitalization</FormLabel>\n          <RadioGroup\n            value={upperCaseCDS ? 'cds' : 'unchanged'}\n            onChange={e => {\n              model.setUpperCaseCDS(e.target.value === 'cds')\n            }}\n          >\n            <FormControlLabel\n              value=\"cds\"\n              control={<Radio className={classes.root} size=\"small\" />}\n              label=\"Capitalize CDS and lower case everything else\"\n            />\n            <FormControlLabel\n              value=\"unchanged\"\n              control={<Radio className={classes.root} size=\"small\" />}\n              label=\"Capitalization from reference genome sequence\"\n            />\n          </RadioGroup>\n        </FormControl2>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            model.setIntronBp(+intronBp)\n            model.setUpDownBp(+upDownBp)\n            handleClose()\n          }}\n          disabled={!intronBpValid || !upDownBpValid}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={() => {\n            handleClose()\n          }}\n          color=\"secondary\"\n          autoFocus\n          variant=\"contained\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n\nexport default SequenceFeatureSettingsDialog\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, {\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: defaultIcon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: defaultCheckedIcon.props.fontSize ?? size\n    }),\n    disabled: disabled,\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}"],"names":["useStyles","makeStyles","theme","formElt","margin","spacing","width","dialogContent","root","padding","TextField2","props","React","TextField","FormControl2","children","FormControl","observer","handleClose","model","classes","upperCaseCDS","intronBp","setIntronBp","useState","upDownBp","setUpDownBp","intronBpValid","Number","isNaN","upDownBpValid","Dialog","maxWidth","open","onClose","title","DialogContent","className","label","value","helperText","error","onChange","event","target","FormLabel","RadioGroup","e","setUpperCaseCDS","FormControlLabel","control","Radio","size","DialogActions","Button","onClick","disabled","color","variant","autoFocus","createSvgIcon","d","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","position","display","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","checked","style","easeOut","fontSize","ownerState","background","dot","RadioRoot","SwitchBase","prop","name","slot","overridesResolver","styles","capitalize","vars","palette","text","secondary","radioClasses","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","Object","entries","filter","createSimplePaletteValueFilter","map","mainChannel","main","defaultCheckedIcon","defaultIcon","inProps","ref","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","other","muiFormControl","useFormControl","slots","composeClasses","useUtilityClasses","radioGroup","useRadioGroup","createChainedFunction","a","b","String","type","clsx","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","row","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role","undefined","getRadioGroupUtilityClass"],"sourceRoot":""}