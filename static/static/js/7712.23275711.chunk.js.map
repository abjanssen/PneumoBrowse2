{"version":3,"file":"static/js/7712.23275711.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/icons-material/esm/ArrowForwardIos.js","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/AddCustomTrack.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/util.ts","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/TrackSelector.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/TrackSelectorUtil.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/Spacer.tsx","../../../plugins/linear-comparative-view/src/LinearSyntenyView/components/ImportForm/LinearSyntenyImportForm.tsx","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/Container/Container.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@mui/material/Radio/RadioButtonIcon.js","../../../node_modules/@mui/material/Radio/Radio.js","../../../node_modules/@mui/material/Radio/radioClasses.js","../../../node_modules/@mui/material/RadioGroup/RadioGroup.js","../../../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../../../node_modules/@mui/material/RadioGroup/radioGroupClasses.js","../../../node_modules/@mui/material/RadioGroup/useRadioGroup.js","../../../node_modules/@mui/system/esm/styled/styled.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z\"\n}), 'ArrowForwardIos');","import React, { useState, useEffect } from 'react'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport {\n  FormControlLabel,\n  Grid,\n  Paper,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material'\nimport { ErrorMessage, FileSelector } from '@jbrowse/core/ui'\nimport { FileLocation } from '@jbrowse/core/util/types'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { basename, extName, getName, stripGz } from './util'\n\nfunction getAdapter({\n  radioOption,\n  assembly1,\n  assembly2,\n  fileLocation,\n  indexFileLocation,\n  bed1Location,\n  bed2Location,\n}: {\n  radioOption: string\n  assembly1: string\n  assembly2: string\n  fileLocation?: FileLocation\n  indexFileLocation?: FileLocation\n  bed1Location?: FileLocation\n  bed2Location?: FileLocation\n}) {\n  if (radioOption === '.paf') {\n    return {\n      type: 'PAFAdapter',\n      pafLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.out') {\n    return {\n      type: 'MashMapAdapter',\n      outLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.delta') {\n    return {\n      type: 'DeltaAdapter',\n      deltaLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.chain') {\n    return {\n      type: 'ChainAdapter',\n      chainLocation: fileLocation,\n      queryAssembly: assembly1,\n      targetAssembly: assembly2,\n    }\n  } else if (radioOption === '.anchors') {\n    return {\n      type: 'MCScanAnchorsAdapter',\n      mcscanAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.anchors.simple') {\n    return {\n      type: 'MCScanSimpleAnchorsAdapter',\n      mcscanSimpleAnchorsLocation: fileLocation,\n      bed1Location,\n      bed2Location,\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else if (radioOption === '.pif.gz') {\n    return {\n      type: 'PairwiseIndexedPAFAdapter',\n      pifGzLocation: fileLocation,\n      index: { location: indexFileLocation },\n      assemblyNames: [assembly1, assembly2],\n    }\n  } else {\n    throw new Error(\n      `Unknown to detect type ${radioOption} from filename (select radio button to clarify)`,\n    )\n  }\n}\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nconst ImportCustomTrack = observer(function ({\n  assembly1,\n  assembly2,\n  setUserOpenedSyntenyTrack,\n}: {\n  assembly1: string\n  assembly2: string\n  setUserOpenedSyntenyTrack: (arg: Conf) => void\n}) {\n  const [bed2Location, setBed2Location] = useState<FileLocation>()\n  const [bed1Location, setBed1Location] = useState<FileLocation>()\n  const [fileLocation, setFileLocation] = useState<FileLocation>()\n  const [indexFileLocation, setIndexFileLocation] = useState<FileLocation>()\n  const [value, setValue] = useState('')\n  const [error, setError] = useState<unknown>()\n  const fileName = getName(fileLocation)\n\n  const radioOption = value || (fileName ? extName(stripGz(fileName)) : '')\n\n  useEffect(() => {\n    try {\n      if (fileLocation) {\n        const fn = fileName ? basename(fileName) : 'MyTrack'\n        const trackId = `${fn}-${Date.now()}`\n        setError(undefined)\n\n        setUserOpenedSyntenyTrack({\n          trackId,\n          name: fn,\n          assemblyNames: [assembly2, assembly1],\n          type: 'SyntenyTrack',\n          adapter: getAdapter({\n            radioOption,\n            assembly1,\n            assembly2,\n            fileLocation,\n            indexFileLocation,\n            bed1Location,\n            bed2Location,\n          }),\n        })\n      }\n    } catch (e) {\n      console.error(e)\n      setError(e)\n    }\n  }, [\n    fileName,\n    assembly1,\n    assembly2,\n    bed1Location,\n    bed2Location,\n    fileLocation,\n    indexFileLocation,\n    radioOption,\n    setUserOpenedSyntenyTrack,\n  ])\n  return (\n    <Paper style={{ padding: 12 }}>\n      {error ? <ErrorMessage error={error} /> : null}\n      <Typography style={{ textAlign: 'center' }}>\n        Add a .paf, .out (MashMap), .delta (Mummer), .chain, .anchors or\n        .anchors.simple (MCScan) file to view. These file types can also be\n        gzipped. The first assembly should be the query sequence (e.g. left\n        column of the PAF) and the second assembly should be the target sequence\n        (e.g. right column of the PAF)\n      </Typography>\n      <RadioGroup\n        value={radioOption}\n        onChange={event => {\n          setValue(event.target.value)\n        }}\n      >\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <FormControlLabel value=\".paf\" control={<Radio />} label=\".paf\" />\n          </Grid>\n          <Grid item>\n            <FormControlLabel value=\".out\" control={<Radio />} label=\".out\" />\n          </Grid>\n\n          <Grid item>\n            <FormControlLabel\n              value=\".delta\"\n              control={<Radio />}\n              label=\".delta\"\n            />\n          </Grid>\n          <Grid item>\n            <FormControlLabel\n              value=\".chain\"\n              control={<Radio />}\n              label=\".chain\"\n            />\n          </Grid>\n          <Grid item>\n            <FormControlLabel\n              value=\".anchors\"\n              control={<Radio />}\n              label=\".anchors\"\n            />\n          </Grid>\n          <Grid item>\n            <FormControlLabel\n              value=\".anchors.simple\"\n              control={<Radio />}\n              label=\".anchors.simple\"\n            />\n          </Grid>\n          <Grid item>\n            <FormControlLabel\n              value=\".pif.gz\"\n              control={<Radio />}\n              label=\".pif.gz\"\n            />\n          </Grid>\n        </Grid>\n      </RadioGroup>\n      <Grid container justifyContent=\"center\">\n        <Grid item>\n          {value === '.anchors' || value === '.anchors.simple' ? (\n            <div>\n              <div style={{ margin: 20 }}>\n                Open the {value} and .bed files for both genome assemblies from\n                the MCScan (Python version) pipeline{' '}\n                <a href=\"https://github.com/tanghaibao/jcvi/wiki/MCscan-(Python-version)\">\n                  (more info)\n                </a>\n              </div>\n              <div style={{ display: 'flex' }}>\n                <div>\n                  <FileSelector\n                    name=\".anchors file\"\n                    description=\"\"\n                    location={fileLocation}\n                    setLocation={loc => {\n                      setFileLocation(loc)\n                    }}\n                  />\n                </div>\n                <div>\n                  <FileSelector\n                    name=\"genome 1 .bed (left column of anchors file)\"\n                    description=\"\"\n                    location={bed1Location}\n                    setLocation={loc => {\n                      setBed1Location(loc)\n                    }}\n                  />\n                </div>\n                <div>\n                  <FileSelector\n                    name=\"genome 2 .bed (right column of anchors file)\"\n                    description=\"\"\n                    location={bed2Location}\n                    setLocation={loc => {\n                      setBed2Location(loc)\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          ) : value === '.pif.gz' ? (\n            <div style={{ display: 'flex' }}>\n              <div>\n                <FileSelector\n                  name={`${value} location`}\n                  description=\"\"\n                  location={fileLocation}\n                  setLocation={loc => {\n                    setFileLocation(loc)\n                  }}\n                />\n              </div>\n              <div>\n                <FileSelector\n                  name={`${value} index location`}\n                  description=\"\"\n                  location={indexFileLocation}\n                  setLocation={loc => {\n                    setIndexFileLocation(loc)\n                  }}\n                />\n              </div>\n            </div>\n          ) : (\n            <FileSelector\n              name={value ? `${value} location` : ''}\n              description=\"\"\n              location={fileLocation}\n              setLocation={loc => {\n                setFileLocation(loc)\n              }}\n            />\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n})\n\nexport default ImportCustomTrack\n","export function getName(\n  sessionTrackData?: { uri: string } | { localPath: string } | { name: string },\n) {\n  return sessionTrackData\n    ? // @ts-expect-error\n      sessionTrackData.uri ||\n        // @ts-expect-error\n        sessionTrackData.localPath ||\n        // @ts-expect-error\n        sessionTrackData.name\n    : undefined\n}\n\nexport function stripGz(fileName: string) {\n  return fileName.endsWith('.gz') ? fileName.slice(0, -3) : fileName\n}\n\nexport function basename(str: string) {\n  return str.split('#')[0]!.split('?')[0]!.split('/').pop()\n}\n\nexport function extName(str: string) {\n  const r = str.split('.').pop()\n  return r ? `.${r}` : ''\n}\n","import React, { useState, useEffect } from 'react'\nimport { Select, MenuItem, Paper, Typography } from '@mui/material'\nimport { getSession } from '@jbrowse/core/util'\nimport { getTrackName } from '@jbrowse/core/util/tracks'\nimport { ErrorMessage } from '@jbrowse/core/ui'\nimport {\n  AnyConfigurationModel,\n  readConfObject,\n} from '@jbrowse/core/configuration'\nimport { observer } from 'mobx-react'\n\n// locals\nimport { LinearSyntenyViewModel } from '../../model'\n\nconst ImportSyntenyTrackSelector = observer(function ({\n  model,\n  assembly1,\n  assembly2,\n  preConfiguredSyntenyTrack,\n  setPreConfiguredSyntenyTrack,\n}: {\n  model: LinearSyntenyViewModel\n  assembly1: string\n  assembly2: string\n  preConfiguredSyntenyTrack: string | undefined\n  setPreConfiguredSyntenyTrack: (arg: string) => void\n}) {\n  const session = getSession(model)\n  const { tracks = [], sessionTracks = [] } = session\n  const allTracks = [...tracks, ...sessionTracks] as AnyConfigurationModel[]\n  const filteredTracks = allTracks.filter(track => {\n    const assemblyNames = readConfObject(track, 'assemblyNames')\n    return (\n      assemblyNames.includes(assembly1) &&\n      assemblyNames.includes(assembly2) &&\n      track.type.includes('Synteny')\n    )\n  })\n  const resetTrack = filteredTracks[0]?.trackId || ''\n  const [value, setValue] = useState(resetTrack)\n\n  useEffect(() => {\n    // sets track data in a useEffect because the initial load is needed as\n    // well as onChange's to the select box\n    if (value !== preConfiguredSyntenyTrack) {\n      setPreConfiguredSyntenyTrack(value)\n    }\n  }, [value, preConfiguredSyntenyTrack, setPreConfiguredSyntenyTrack])\n  return (\n    <Paper style={{ padding: 12 }}>\n      <Typography>\n        Select a track from the select box below, the track will be shown when\n        you hit \"Launch\".\n      </Typography>\n\n      {filteredTracks.length ? (\n        <Select\n          value={value}\n          onChange={event => {\n            setValue(event.target.value)\n          }}\n        >\n          {filteredTracks.map(track => (\n            <MenuItem key={track.trackId} value={track.trackId}>\n              {getTrackName(track, session)}\n            </MenuItem>\n          ))}\n        </Select>\n      ) : (\n        <ErrorMessage\n          error={`No synteny tracks found for ${assembly1},${assembly2}`}\n        />\n      )}\n    </Paper>\n  )\n})\n\nexport default ImportSyntenyTrackSelector\n","import React, { useState, useEffect } from 'react'\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\n\n// locals\nimport { LinearSyntenyViewModel } from '../../model'\nimport ImportCustomTrack from './AddCustomTrack'\nimport ImportSyntenyTrackSelector from './TrackSelector'\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\n\nexport default function TrackSelector({\n  model,\n  assembly1,\n  assembly2,\n  preConfiguredSyntenyTrack,\n  setPreConfiguredSyntenyTrack,\n  setUserOpenedSyntenyTrack,\n}: {\n  model: LinearSyntenyViewModel\n  assembly1: string\n  assembly2: string\n  preConfiguredSyntenyTrack: string | undefined\n  setUserOpenedSyntenyTrack: (arg: Conf) => void\n  setPreConfiguredSyntenyTrack: (arg?: string) => void\n}) {\n  const [choice, setChoice] = useState('tracklist')\n\n  useEffect(() => {\n    if (choice === 'none') {\n      setPreConfiguredSyntenyTrack(undefined)\n      setUserOpenedSyntenyTrack(undefined)\n    }\n  }, [choice, setPreConfiguredSyntenyTrack, setUserOpenedSyntenyTrack])\n  return (\n    <div>\n      <FormControl>\n        <RadioGroup\n          row\n          value={choice}\n          onChange={event => {\n            setChoice(event.target.value)\n          }}\n          aria-labelledby=\"group-label\"\n        >\n          <FormControlLabel value=\"none\" control={<Radio />} label=\"None\" />\n          <FormControlLabel\n            value=\"tracklist\"\n            control={<Radio />}\n            label=\"Existing track\"\n          />\n          <FormControlLabel\n            value=\"custom\"\n            control={<Radio />}\n            label=\"New track\"\n          />\n        </RadioGroup>\n      </FormControl>\n      {choice === 'custom' ? (\n        <ImportCustomTrack\n          setUserOpenedSyntenyTrack={setUserOpenedSyntenyTrack}\n          assembly2={assembly2}\n          assembly1={assembly1}\n        />\n      ) : null}\n      {choice === 'tracklist' ? (\n        <ImportSyntenyTrackSelector\n          key={`${assembly1}-${assembly2}`}\n          model={model}\n          assembly1={assembly1}\n          assembly2={assembly2}\n          preConfiguredSyntenyTrack={preConfiguredSyntenyTrack}\n          setPreConfiguredSyntenyTrack={setPreConfiguredSyntenyTrack}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Spacer() {\n  return <div style={{ flexGrow: 1 }} />\n}\n","import React, { useState } from 'react'\nimport { Button, Container, IconButton } from '@mui/material'\nimport { makeStyles } from 'tss-react/mui'\nimport { observer } from 'mobx-react'\nimport { AnyConfigurationModel } from '@jbrowse/core/configuration'\nimport { SnapshotIn } from 'mobx-state-tree'\nimport {\n  getSession,\n  isSessionWithAddTracks,\n  notEmpty,\n} from '@jbrowse/core/util'\nimport { ErrorMessage, AssemblySelector } from '@jbrowse/core/ui'\n// icons\nimport CloseIcon from '@mui/icons-material/Close'\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos'\n// locals\nimport { LinearSyntenyViewModel } from '../../model'\nimport TrackSelector from './TrackSelectorUtil'\nimport Spacer from './Spacer'\n\nconst useStyles = makeStyles()(theme => ({\n  importFormContainer: {\n    padding: theme.spacing(4),\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  rel: {\n    position: 'relative',\n  },\n  synbutton: {\n    position: 'absolute',\n    top: 30,\n  },\n  flex: {\n    display: 'flex',\n  },\n  mb: {\n    marginBottom: 10,\n  },\n  bg: {\n    background: theme.palette.divider,\n  },\n  fixedWidth: {\n    width: 700,\n  },\n}))\n\ntype Conf = SnapshotIn<AnyConfigurationModel>\ntype MaybeConf = Conf | undefined\ntype MaybeString = string | undefined\n\nconst LinearSyntenyViewImportForm = observer(function ({\n  model,\n}: {\n  model: LinearSyntenyViewModel\n}) {\n  const { classes, cx } = useStyles()\n  const session = getSession(model)\n  const { assemblyNames } = session\n  const defaultAssemblyName = assemblyNames[0] || ''\n  const [selectedRow, setSelectedRow] = useState(0)\n  const [selectedAssemblyNames, setSelectedAssemblyNames] = useState([\n    defaultAssemblyName,\n    defaultAssemblyName,\n  ])\n  const [error, setError] = useState<unknown>()\n  const [userOpenedSyntenyTracksToShow, setUserOpenedSyntenyTracksToShow] =\n    useState<MaybeConf[]>([])\n  const [\n    preConfiguredSyntenyTracksToShow,\n    setPreConfiguredSyntenyTracksToShow,\n  ] = useState<MaybeString[]>([])\n\n  return (\n    <Container className={classes.importFormContainer}>\n      {error ? <ErrorMessage error={error} /> : null}\n      <div className={classes.flex}>\n        <Spacer />\n        <div>\n          <div className={classes.mb}>\n            Select assemblies for linear synteny view\n          </div>\n          {selectedAssemblyNames.map((assemblyName, idx) => (\n            <div key={`${assemblyName}-${idx}`} className={classes.rel}>\n              <span>Row {idx + 1}: </span>\n\n              <IconButton\n                disabled={selectedAssemblyNames.length <= 2}\n                onClick={() => {\n                  setSelectedAssemblyNames(\n                    selectedAssemblyNames\n                      .map((asm, idx2) => (idx2 === idx ? undefined : asm))\n                      .filter(notEmpty),\n                  )\n                  setPreConfiguredSyntenyTracksToShow(\n                    preConfiguredSyntenyTracksToShow\n                      .map((asm, idx2) => (idx2 === idx ? undefined : asm))\n                      .filter(notEmpty),\n                  )\n                  setUserOpenedSyntenyTracksToShow(\n                    userOpenedSyntenyTracksToShow\n                      .map((asm, idx2) => (idx2 === idx ? undefined : asm))\n                      .filter(notEmpty),\n                  )\n                  if (selectedRow >= selectedAssemblyNames.length - 2) {\n                    setSelectedRow(0)\n                  }\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n              <AssemblySelector\n                helperText=\"\"\n                selected={assemblyName}\n                onChange={newAssembly => {\n                  setSelectedAssemblyNames(\n                    selectedAssemblyNames.map((asm, idx2) =>\n                      idx2 === idx ? newAssembly : asm,\n                    ),\n                  )\n                }}\n                session={session}\n              />\n              {idx !== selectedAssemblyNames.length - 1 ? (\n                <IconButton\n                  className={cx(\n                    classes.synbutton,\n                    idx === selectedRow ? classes.bg : undefined,\n                  )}\n                  onClick={() => {\n                    setSelectedRow(idx)\n                  }}\n                >\n                  <ArrowForwardIosIcon />\n                </IconButton>\n              ) : null}\n            </div>\n          ))}\n          <div>\n            <Button\n              className={classes.button}\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => {\n                setSelectedAssemblyNames([\n                  ...selectedAssemblyNames,\n                  defaultAssemblyName,\n                ])\n              }}\n            >\n              Add row\n            </Button>\n            <Button\n              className={classes.button}\n              onClick={() => {\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                ;(async () => {\n                  try {\n                    setError(undefined)\n                    await doSubmit({\n                      userOpenedSyntenyTracksToShow,\n                      preConfiguredSyntenyTracksToShow,\n                      selectedAssemblyNames,\n                      model,\n                    })\n                  } catch (e) {\n                    console.error(e)\n                    setError(e)\n                  }\n                })()\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Launch\n            </Button>\n          </div>\n        </div>\n\n        <Spacer />\n        <div className={classes.fixedWidth}>\n          <div>\n            Synteny dataset to display between row {selectedRow + 1} and{' '}\n            {selectedRow + 2}\n          </div>\n          <TrackSelector\n            model={model}\n            preConfiguredSyntenyTrack={\n              preConfiguredSyntenyTracksToShow[selectedRow]\n            }\n            assembly1={selectedAssemblyNames[selectedRow]!}\n            assembly2={selectedAssemblyNames[selectedRow + 1]!}\n            setPreConfiguredSyntenyTrack={arg => {\n              const clone = [...preConfiguredSyntenyTracksToShow]\n              clone[selectedRow] = arg\n              setPreConfiguredSyntenyTracksToShow(clone)\n            }}\n            setUserOpenedSyntenyTrack={arg => {\n              const clone = [...userOpenedSyntenyTracksToShow]\n              clone[selectedRow] = arg\n              setUserOpenedSyntenyTracksToShow(clone)\n            }}\n          />\n        </div>\n      </div>\n      <Spacer />\n    </Container>\n  )\n})\n\nasync function doSubmit({\n  selectedAssemblyNames,\n  model,\n  preConfiguredSyntenyTracksToShow,\n  userOpenedSyntenyTracksToShow,\n}: {\n  selectedAssemblyNames: string[]\n  model: LinearSyntenyViewModel\n  userOpenedSyntenyTracksToShow: Conf[]\n  preConfiguredSyntenyTracksToShow: (string | undefined)[]\n}) {\n  const session = getSession(model)\n  const { assemblyManager } = session\n\n  model.setViews(\n    await Promise.all(\n      selectedAssemblyNames.map(async assemblyName => {\n        const asm = await assemblyManager.waitForAssembly(assemblyName)\n        if (!asm) {\n          throw new Error(`Assembly \"${assemblyName}\" failed to load`)\n        }\n        return {\n          type: 'LinearGenomeView' as const,\n          bpPerPx: 1,\n          offsetPx: 0,\n          hideHeader: true,\n          displayedRegions: asm.regions,\n        }\n      }),\n    ),\n  )\n  for (const view of model.views) {\n    view.setWidth(model.width)\n    view.showAllRegions()\n  }\n  if (!isSessionWithAddTracks(session)) {\n    session.notify(\"Can't add tracks\", 'warning')\n  } else {\n    userOpenedSyntenyTracksToShow.map((f, idx) => {\n      if (f) {\n        session.addTrackConf(f)\n        model.toggleTrack(f.trackId, idx)\n      }\n    })\n  }\n  preConfiguredSyntenyTracksToShow.map((f, idx) => {\n    if (f) {\n      model.showTrack(f, idx)\n    }\n  })\n}\n\nexport default LinearSyntenyViewImportForm\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from \"../internal/svg-icons/RadioButtonUnchecked.js\";\nimport RadioButtonCheckedIcon from \"../internal/svg-icons/RadioButtonChecked.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(memoTheme(({\n  theme\n}) => ({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  }),\n  variants: [{\n    props: {\n      checked: true\n    },\n    style: {\n      transform: 'scale(1)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.shortest\n      })\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = {\n    ...props,\n    checked\n  };\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport RadioButtonIcon from \"./RadioButtonIcon.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createChainedFunction from \"../utils/createChainedFunction.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport useRadioGroup from \"../RadioGroup/useRadioGroup.js\";\nimport radioClasses, { getRadioUtilityClass } from \"./radioClasses.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return {\n    ...classes,\n    ...composeClasses(slots, getRadioUtilityClass, classes)\n  };\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.size !== 'medium' && styles[`size${capitalize(ownerState.size)}`], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  },\n  variants: [{\n    props: {\n      color: 'default',\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disabled: false\n    },\n    style: {\n      [`&.${radioClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n    checked: checkedProp,\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon = defaultIcon,\n    name: nameProp,\n    onChange: onChangeProp,\n    size = 'medium',\n    className,\n    disabled: disabledProp,\n    disableRipple = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  disabled ??= false;\n  const ownerState = {\n    ...props,\n    disabled,\n    disableRipple,\n    color,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, {\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: defaultIcon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: defaultCheckedIcon.props.fontSize ?? size\n    }),\n    disabled: disabled,\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormGroup from \"../FormGroup/index.js\";\nimport { getRadioGroupUtilityClass } from \"./radioGroupClasses.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nimport useId from \"../utils/useId.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = props => {\n  const {\n    classes,\n    row,\n    error\n  } = props;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getRadioGroupUtilityClass, classes);\n};\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n    // private\n    // eslint-disable-next-line react/prop-types\n    actions,\n    children,\n    className,\n    defaultValue,\n    name: nameProp,\n    onChange,\n    value: valueProp,\n    ...other\n  } = props;\n  const rootRef = React.useRef(null);\n  const classes = useUtilityClasses(props);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, {\n      role: \"radiogroup\",\n      ref: handleRef,\n      className: clsx(classes.root, className),\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getRadioGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiRadioGroup', slot);\n}\nconst radioGroupClasses = generateUtilityClasses('MuiRadioGroup', ['root', 'row', 'error']);\nexport default radioGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from \"./RadioGroupContext.js\";\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;"],"names":["createSvgIcon","d","getAdapter","radioOption","assembly1","assembly2","fileLocation","indexFileLocation","bed1Location","bed2Location","type","pafLocation","queryAssembly","targetAssembly","outLocation","deltaLocation","chainLocation","mcscanAnchorsLocation","assemblyNames","mcscanSimpleAnchorsLocation","pifGzLocation","index","location","Error","observer","setUserOpenedSyntenyTrack","setBed2Location","useState","setBed1Location","setFileLocation","setIndexFileLocation","value","setValue","error","setError","fileName","sessionTrackData","uri","localPath","name","undefined","str","r","split","pop","extName","endsWith","slice","stripGz","useEffect","fn","trackId","Date","now","adapter","e","console","React","Paper","style","padding","ErrorMessage","Typography","textAlign","RadioGroup","onChange","event","target","Grid","container","justifyContent","item","FormControlLabel","control","Radio","label","margin","href","display","FileSelector","description","setLocation","loc","model","preConfiguredSyntenyTrack","setPreConfiguredSyntenyTrack","session","getSession","tracks","sessionTracks","filteredTracks","filter","track","readConfObject","includes","resetTrack","length","Select","map","MenuItem","key","getTrackName","TrackSelector","choice","setChoice","FormControl","row","ImportCustomTrack","ImportSyntenyTrackSelector","Spacer","flexGrow","useStyles","makeStyles","theme","importFormContainer","spacing","button","rel","position","synbutton","top","flex","mb","marginBottom","bg","background","palette","divider","fixedWidth","width","classes","cx","defaultAssemblyName","selectedRow","setSelectedRow","selectedAssemblyNames","setSelectedAssemblyNames","userOpenedSyntenyTracksToShow","setUserOpenedSyntenyTracksToShow","preConfiguredSyntenyTracksToShow","setPreConfiguredSyntenyTracksToShow","Container","className","assemblyName","idx","IconButton","disabled","onClick","asm","idx2","notEmpty","CloseIcon","AssemblySelector","helperText","selected","newAssembly","ArrowForwardIosIcon","Button","variant","color","async","assemblyManager","setViews","Promise","all","waitForAssembly","bpPerPx","offsetPx","hideHeader","displayedRegions","regions","view","views","setWidth","showAllRegions","isSessionWithAddTracks","f","addTrackConf","toggleTrack","notify","showTrack","doSubmit","arg","clone","defaultTheme","createTheme","defaultCreateStyledComponent","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemeProps","options","createStyledComponent","componentName","ContainerRoot","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","Math","max","xs","ref","component","classesProp","other","slots","composeClasses","generateUtilityClass","useUtilityClasses","as","clsx","createContainer","RadioButtonIconRoot","styled","shouldForwardProp","rootShouldForwardProp","RadioButtonIconBackground","RadioButtonUnchecked","transform","RadioButtonIconDot","RadioButtonChecked","memoTheme","left","transition","transitions","create","easing","easeIn","duration","shortest","variants","checked","easeOut","fontSize","children","dot","RadioRoot","SwitchBase","prop","size","vars","text","secondary","radioClasses","action","disableRipple","backgroundColor","activeChannel","hoverOpacity","active","entries","createSimplePaletteValueFilter","mainChannel","main","defaultCheckedIcon","defaultIcon","checkedProp","checkedIcon","icon","nameProp","onChangeProp","disabledProp","muiFormControl","useFormControl","radioGroup","useRadioGroup","createChainedFunction","a","b","getRadioUtilityClass","actions","defaultValue","valueProp","rootRef","setValueState","controlled","default","focus","input","current","querySelector","handleRef","contextValue","Provider","role","getRadioGroupUtilityClass"],"sourceRoot":""}