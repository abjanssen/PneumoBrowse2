{"version":3,"file":"static/js/3175.af2c93a5.chunk.js","mappings":"iLAMe,MAAMA,UACXC,EAAAA,YAGR,uBAAMC,GACJ,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,oCAAZH,EAAIG,IACxB,MAAO,GAET,MAAMC,EAAWH,KAAKC,QAAQ,uBAE9B,aADsBG,EAAAA,EAAAA,cAAaL,EAAKC,KAAKK,eAAeC,SAAS,SAElEC,MAAM,cACNC,MAAM,GACNC,QAAOC,KAAOA,EAAEC,SAChBC,KAAIC,GAAOA,EAAIN,MAAM,QACrBK,KAAIE,IAAQ,CACXC,QAASD,EAAK,IACdE,QAAS,CAACF,EAAK,GAAIA,EAAK,IAAIL,QAAQC,KAAqBA,IACzDP,eAEDM,QAAOC,KAAOA,EAAEK,SACrB,CAEA,mBAAME,GAAiB,E","sources":["../../../plugins/config/src/NcbiSequenceReportAliasAdapter/NcbiSequenceReportAliasAdapter.ts"],"sourcesContent":["import {\n  BaseRefNameAliasAdapter,\n  BaseAdapter,\n} from '@jbrowse/core/data_adapters/BaseAdapter'\nimport { openLocation } from '@jbrowse/core/util/io'\n\nexport default class NcbiSequenceReportAliasAdapter\n  extends BaseAdapter\n  implements BaseRefNameAliasAdapter\n{\n  async getRefNameAliases() {\n    const loc = this.getConf('location')\n    if (loc.uri === '' || loc.uri === '/path/to/my/sequence_report.tsv') {\n      return []\n    }\n    const override = this.getConf('useUcscNameOverride')\n    const results = await openLocation(loc, this.pluginManager).readFile('utf8')\n    return results\n      .split(/\\n|\\r\\n|\\r/)\n      .slice(1)\n      .filter(f => !!f.trim())\n      .map(row => row.split('\\t'))\n      .map(cols => ({\n        refName: cols[12]!,\n        aliases: [cols[9], cols[6]].filter((f): f is string => !!f),\n        override,\n      }))\n      .filter(f => !!f.refName)\n  }\n\n  async freeResources() {}\n}\n"],"names":["NcbiSequenceReportAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","override","openLocation","pluginManager","readFile","split","slice","filter","f","trim","map","row","cols","refName","aliases","freeResources"],"sourceRoot":""}